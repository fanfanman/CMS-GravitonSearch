 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1439152134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.184078 +/- 0.00293041 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 0.184078 @ 95%CL (1 toyMC)
median expected limit: r < 0.184078 @ 95%CL (1 toyMC)
   68% expected band : 0.184078 < r < 0.184078
   95% expected band : 0.184078 < r < 0.184078
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 136710474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.241383 +/- 0.00196053 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 0.241383 @ 95%CL (1 toyMC)
median expected limit: r < 0.241383 @ 95%CL (1 toyMC)
   68% expected band : 0.241383 < r < 0.241383
   95% expected band : 0.241383 < r < 0.241383
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1866205117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.202589 +/- 0.00372826 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 0.202589 @ 95%CL (1 toyMC)
median expected limit: r < 0.202589 @ 95%CL (1 toyMC)
   68% expected band : 0.202589 < r < 0.202589
   95% expected band : 0.202589 < r < 0.202589
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -137770198
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.293869 +/- 0.00206735 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.293869 @ 95%CL (1 toyMC)
median expected limit: r < 0.293869 @ 95%CL (1 toyMC)
   68% expected band : 0.293869 < r < 0.293869
   95% expected band : 0.293869 < r < 0.293869
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1644706647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.546943 +/- 0.00235576 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 0.546943 @ 95%CL (1 toyMC)
median expected limit: r < 0.546943 @ 95%CL (1 toyMC)
   68% expected band : 0.546943 < r < 0.546943
   95% expected band : 0.546943 < r < 0.546943
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -832523649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.270302 +/- 0.00270789 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 0.270302 @ 95%CL (1 toyMC)
median expected limit: r < 0.270302 @ 95%CL (1 toyMC)
   68% expected band : 0.270302 < r < 0.270302
   95% expected band : 0.270302 < r < 0.270302
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 64368445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.333901 +/- 0.00270448 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.333901 @ 95%CL (1 toyMC)
median expected limit: r < 0.333901 @ 95%CL (1 toyMC)
   68% expected band : 0.333901 < r < 0.333901
   95% expected band : 0.333901 < r < 0.333901
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1705498913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.408059 +/- 0.00243386 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.408059 @ 95%CL (1 toyMC)
median expected limit: r < 0.408059 @ 95%CL (1 toyMC)
   68% expected band : 0.408059 < r < 0.408059
   95% expected band : 0.408059 < r < 0.408059
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1159684286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.209507 +/- 0.00366991 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.209507 @ 95%CL (1 toyMC)
median expected limit: r < 0.209507 @ 95%CL (1 toyMC)
   68% expected band : 0.209507 < r < 0.209507
   95% expected band : 0.209507 < r < 0.209507
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 538121763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.236303 +/- 0.00239835 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.236303 @ 95%CL (1 toyMC)
median expected limit: r < 0.236303 @ 95%CL (1 toyMC)
   68% expected band : 0.236303 < r < 0.236303
   95% expected band : 0.236303 < r < 0.236303
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -356193913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.218774 +/- 0.00258792 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.218774 @ 95%CL (1 toyMC)
median expected limit: r < 0.218774 @ 95%CL (1 toyMC)
   68% expected band : 0.218774 < r < 0.218774
   95% expected band : 0.218774 < r < 0.218774
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1041231181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.235011 +/- 0.00273814 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.235011 @ 95%CL (1 toyMC)
median expected limit: r < 0.235011 @ 95%CL (1 toyMC)
   68% expected band : 0.235011 < r < 0.235011
   95% expected band : 0.235011 < r < 0.235011
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1377294279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.27223 +/- 0.00280342 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.27223 @ 95%CL (1 toyMC)
median expected limit: r < 0.27223 @ 95%CL (1 toyMC)
   68% expected band : 0.27223 < r < 0.27223
   95% expected band : 0.27223 < r < 0.27223
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -336524652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.318896 +/- 0.00245227 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.318896 @ 95%CL (1 toyMC)
median expected limit: r < 0.318896 @ 95%CL (1 toyMC)
   68% expected band : 0.318896 < r < 0.318896
   95% expected band : 0.318896 < r < 0.318896
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1694761945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.211803 +/- 0.00201493 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.211803 @ 95%CL (1 toyMC)
median expected limit: r < 0.211803 @ 95%CL (1 toyMC)
   68% expected band : 0.211803 < r < 0.211803
   95% expected band : 0.211803 < r < 0.211803
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2952528
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.236269 +/- 0.00310796 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.236269 @ 95%CL (1 toyMC)
median expected limit: r < 0.236269 @ 95%CL (1 toyMC)
   68% expected band : 0.236269 < r < 0.236269
   95% expected band : 0.236269 < r < 0.236269
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1800499530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.268472 +/- 0.00296485 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.268472 @ 95%CL (1 toyMC)
median expected limit: r < 0.268472 @ 95%CL (1 toyMC)
   68% expected band : 0.268472 < r < 0.268472
   95% expected band : 0.268472 < r < 0.268472
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 953116866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.313932 +/- 0.00210935 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.313932 @ 95%CL (1 toyMC)
median expected limit: r < 0.313932 @ 95%CL (1 toyMC)
   68% expected band : 0.313932 < r < 0.313932
   95% expected band : 0.313932 < r < 0.313932
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1240283618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.241236 +/- 0.00246651 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.241236 @ 95%CL (1 toyMC)
median expected limit: r < 0.241236 @ 95%CL (1 toyMC)
   68% expected band : 0.241236 < r < 0.241236
   95% expected band : 0.241236 < r < 0.241236
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1447903544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.304687 +/- 0.00205727 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.304687 @ 95%CL (1 toyMC)
median expected limit: r < 0.304687 @ 95%CL (1 toyMC)
   68% expected band : 0.304687 < r < 0.304687
   95% expected band : 0.304687 < r < 0.304687
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -493805719
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.290998 +/- 0.00244327 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.290998 @ 95%CL (1 toyMC)
median expected limit: r < 0.290998 @ 95%CL (1 toyMC)
   68% expected band : 0.290998 < r < 0.290998
   95% expected band : 0.290998 < r < 0.290998
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2036451655
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.177197 +/- 0.00331328 @ 95% CL (99 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 0.177197 @ 95%CL (1 toyMC)
median expected limit: r < 0.177197 @ 95%CL (1 toyMC)
   68% expected band : 0.177197 < r < 0.177197
   95% expected band : 0.177197 < r < 0.177197
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -120929181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.521054 +/- 0.0020074 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.521054 @ 95%CL (1 toyMC)
median expected limit: r < 0.521054 @ 95%CL (1 toyMC)
   68% expected band : 0.521054 < r < 0.521054
   95% expected band : 0.521054 < r < 0.521054
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -33916064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.26008 +/- 0.00278734 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.26008 @ 95%CL (1 toyMC)
median expected limit: r < 0.26008 @ 95%CL (1 toyMC)
   68% expected band : 0.26008 < r < 0.26008
   95% expected band : 0.26008 < r < 0.26008
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -962340424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.342041 +/- 0.00237542 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.342041 @ 95%CL (1 toyMC)
median expected limit: r < 0.342041 @ 95%CL (1 toyMC)
   68% expected band : 0.342041 < r < 0.342041
   95% expected band : 0.342041 < r < 0.342041
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1325299023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.302831 +/- 0.00248672 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.302831 @ 95%CL (1 toyMC)
median expected limit: r < 0.302831 @ 95%CL (1 toyMC)
   68% expected band : 0.302831 < r < 0.302831
   95% expected band : 0.302831 < r < 0.302831
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1136960980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.323044 +/- 0.00217719 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.323044 @ 95%CL (1 toyMC)
median expected limit: r < 0.323044 @ 95%CL (1 toyMC)
   68% expected band : 0.323044 < r < 0.323044
   95% expected band : 0.323044 < r < 0.323044
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1335576318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.195532 +/- 0.00343639 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.195532 @ 95%CL (1 toyMC)
median expected limit: r < 0.195532 @ 95%CL (1 toyMC)
   68% expected band : 0.195532 < r < 0.195532
   95% expected band : 0.195532 < r < 0.195532
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1521658039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.305629 +/- 0.00172953 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.305629 @ 95%CL (1 toyMC)
median expected limit: r < 0.305629 @ 95%CL (1 toyMC)
   68% expected band : 0.305629 < r < 0.305629
   95% expected band : 0.305629 < r < 0.305629
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1927987691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.367395 +/- 0.00201285 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.367395 @ 95%CL (1 toyMC)
median expected limit: r < 0.367395 @ 95%CL (1 toyMC)
   68% expected band : 0.367395 < r < 0.367395
   95% expected band : 0.367395 < r < 0.367395
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 188989974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.179829 +/- 0.00287767 @ 95% CL (99 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.179829 @ 95%CL (1 toyMC)
median expected limit: r < 0.179829 @ 95%CL (1 toyMC)
   68% expected band : 0.179829 < r < 0.179829
   95% expected band : 0.179829 < r < 0.179829
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1338404127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.24945 +/- 0.00255286 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.24945 @ 95%CL (1 toyMC)
median expected limit: r < 0.24945 @ 95%CL (1 toyMC)
   68% expected band : 0.24945 < r < 0.24945
   95% expected band : 0.24945 < r < 0.24945
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -5663854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.183277 +/- 0.00310731 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.183277 @ 95%CL (1 toyMC)
median expected limit: r < 0.183277 @ 95%CL (1 toyMC)
   68% expected band : 0.183277 < r < 0.183277
   95% expected band : 0.183277 < r < 0.183277
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 610059668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.290502 +/- 0.00213157 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.290502 @ 95%CL (1 toyMC)
median expected limit: r < 0.290502 @ 95%CL (1 toyMC)
   68% expected band : 0.290502 < r < 0.290502
   95% expected band : 0.290502 < r < 0.290502
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 667765337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.333261 +/- 0.00186084 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.333261 @ 95%CL (1 toyMC)
median expected limit: r < 0.333261 @ 95%CL (1 toyMC)
   68% expected band : 0.333261 < r < 0.333261
   95% expected band : 0.333261 < r < 0.333261
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2103914423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.477933 +/- 0.00259992 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.477933 @ 95%CL (1 toyMC)
median expected limit: r < 0.477933 @ 95%CL (1 toyMC)
   68% expected band : 0.477933 < r < 0.477933
   95% expected band : 0.477933 < r < 0.477933
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -217255382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.370822 +/- 0.00225806 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.370822 @ 95%CL (1 toyMC)
median expected limit: r < 0.370822 @ 95%CL (1 toyMC)
   68% expected band : 0.370822 < r < 0.370822
   95% expected band : 0.370822 < r < 0.370822
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1438931848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.200303 +/- 0.00262201 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.200303 @ 95%CL (1 toyMC)
median expected limit: r < 0.200303 @ 95%CL (1 toyMC)
   68% expected band : 0.200303 < r < 0.200303
   95% expected band : 0.200303 < r < 0.200303
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -804873647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.206326 +/- 0.00270246 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.206326 @ 95%CL (1 toyMC)
median expected limit: r < 0.206326 @ 95%CL (1 toyMC)
   68% expected band : 0.206326 < r < 0.206326
   95% expected band : 0.206326 < r < 0.206326
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 910902362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.243709 +/- 0.0023746 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.243709 @ 95%CL (1 toyMC)
median expected limit: r < 0.243709 @ 95%CL (1 toyMC)
   68% expected band : 0.243709 < r < 0.243709
   95% expected band : 0.243709 < r < 0.243709
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1213750660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.222428 +/- 0.00318786 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.222428 @ 95%CL (1 toyMC)
median expected limit: r < 0.222428 @ 95%CL (1 toyMC)
   68% expected band : 0.222428 < r < 0.222428
   95% expected band : 0.222428 < r < 0.222428
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1690636847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.298873 +/- 0.00176828 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.298873 @ 95%CL (1 toyMC)
median expected limit: r < 0.298873 @ 95%CL (1 toyMC)
   68% expected band : 0.298873 < r < 0.298873
   95% expected band : 0.298873 < r < 0.298873
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2121637175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.259718 +/- 0.00268484 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.259718 @ 95%CL (1 toyMC)
median expected limit: r < 0.259718 @ 95%CL (1 toyMC)
   68% expected band : 0.259718 < r < 0.259718
   95% expected band : 0.259718 < r < 0.259718
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1227942065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.40197 +/- 0.00200158 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.40197 @ 95%CL (1 toyMC)
median expected limit: r < 0.40197 @ 95%CL (1 toyMC)
   68% expected band : 0.40197 < r < 0.40197
   95% expected band : 0.40197 < r < 0.40197
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -396741761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.182101 +/- 0.00406115 @ 95% CL (96 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 0.182101 @ 95%CL (1 toyMC)
median expected limit: r < 0.182101 @ 95%CL (1 toyMC)
   68% expected band : 0.182101 < r < 0.182101
   95% expected band : 0.182101 < r < 0.182101
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1870834710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.432691 +/- 0.00230563 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.432691 @ 95%CL (1 toyMC)
median expected limit: r < 0.432691 @ 95%CL (1 toyMC)
   68% expected band : 0.432691 < r < 0.432691
   95% expected band : 0.432691 < r < 0.432691
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 501520540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.396204 +/- 0.00216676 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.396204 @ 95%CL (1 toyMC)
median expected limit: r < 0.396204 @ 95%CL (1 toyMC)
   68% expected band : 0.396204 < r < 0.396204
   95% expected band : 0.396204 < r < 0.396204
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1846408342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.216847 +/- 0.00342125 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.216847 @ 95%CL (1 toyMC)
median expected limit: r < 0.216847 @ 95%CL (1 toyMC)
   68% expected band : 0.216847 < r < 0.216847
   95% expected band : 0.216847 < r < 0.216847
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1312056796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.297074 +/- 0.00234229 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.297074 @ 95%CL (1 toyMC)
median expected limit: r < 0.297074 @ 95%CL (1 toyMC)
   68% expected band : 0.297074 < r < 0.297074
   95% expected band : 0.297074 < r < 0.297074
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2098926344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.413655 +/- 0.00229836 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.413655 @ 95%CL (1 toyMC)
median expected limit: r < 0.413655 @ 95%CL (1 toyMC)
   68% expected band : 0.413655 < r < 0.413655
   95% expected band : 0.413655 < r < 0.413655
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -377361296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.311735 +/- 0.0029258 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.311735 @ 95%CL (1 toyMC)
median expected limit: r < 0.311735 @ 95%CL (1 toyMC)
   68% expected band : 0.311735 < r < 0.311735
   95% expected band : 0.311735 < r < 0.311735
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 618550203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.406284 +/- 0.00238126 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.406284 @ 95%CL (1 toyMC)
median expected limit: r < 0.406284 @ 95%CL (1 toyMC)
   68% expected band : 0.406284 < r < 0.406284
   95% expected band : 0.406284 < r < 0.406284
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 714571163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.473622 +/- 0.00200867 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.473622 @ 95%CL (1 toyMC)
median expected limit: r < 0.473622 @ 95%CL (1 toyMC)
   68% expected band : 0.473622 < r < 0.473622
   95% expected band : 0.473622 < r < 0.473622
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -641352859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.182673 +/- 0.00324874 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.182673 @ 95%CL (1 toyMC)
median expected limit: r < 0.182673 @ 95%CL (1 toyMC)
   68% expected band : 0.182673 < r < 0.182673
   95% expected band : 0.182673 < r < 0.182673
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -216509862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.362808 +/- 0.00226487 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.362808 @ 95%CL (1 toyMC)
median expected limit: r < 0.362808 @ 95%CL (1 toyMC)
   68% expected band : 0.362808 < r < 0.362808
   95% expected band : 0.362808 < r < 0.362808
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -357293995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.441436 +/- 0.00262145 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.441436 @ 95%CL (1 toyMC)
median expected limit: r < 0.441436 @ 95%CL (1 toyMC)
   68% expected band : 0.441436 < r < 0.441436
   95% expected band : 0.441436 < r < 0.441436
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1045104104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203804 +/- 0.00241399 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.203804 @ 95%CL (1 toyMC)
median expected limit: r < 0.203804 @ 95%CL (1 toyMC)
   68% expected band : 0.203804 < r < 0.203804
   95% expected band : 0.203804 < r < 0.203804
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -532275793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.348395 +/- 0.00236902 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.348395 @ 95%CL (1 toyMC)
median expected limit: r < 0.348395 @ 95%CL (1 toyMC)
   68% expected band : 0.348395 < r < 0.348395
   95% expected band : 0.348395 < r < 0.348395
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -560078278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.173104 +/- 0.00378999 @ 95% CL (98 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 0.173104 @ 95%CL (1 toyMC)
median expected limit: r < 0.173104 @ 95%CL (1 toyMC)
   68% expected band : 0.173104 < r < 0.173104
   95% expected band : 0.173104 < r < 0.173104
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 645287502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.268355 +/- 0.00260031 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.268355 @ 95%CL (1 toyMC)
median expected limit: r < 0.268355 @ 95%CL (1 toyMC)
   68% expected band : 0.268355 < r < 0.268355
   95% expected band : 0.268355 < r < 0.268355
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 978457440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.428633 +/- 0.00194652 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.428633 @ 95%CL (1 toyMC)
median expected limit: r < 0.428633 @ 95%CL (1 toyMC)
   68% expected band : 0.428633 < r < 0.428633
   95% expected band : 0.428633 < r < 0.428633
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1598082080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.221764 +/- 0.00243602 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.221764 @ 95%CL (1 toyMC)
median expected limit: r < 0.221764 @ 95%CL (1 toyMC)
   68% expected band : 0.221764 < r < 0.221764
   95% expected band : 0.221764 < r < 0.221764
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1078710040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.209978 +/- 0.00327147 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.209978 @ 95%CL (1 toyMC)
median expected limit: r < 0.209978 @ 95%CL (1 toyMC)
   68% expected band : 0.209978 < r < 0.209978
   95% expected band : 0.209978 < r < 0.209978
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1458701360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.25215 +/- 0.00178307 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.25215 @ 95%CL (1 toyMC)
median expected limit: r < 0.25215 @ 95%CL (1 toyMC)
   68% expected band : 0.25215 < r < 0.25215
   95% expected band : 0.25215 < r < 0.25215
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1374533109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.195474 +/- 0.00299946 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.195474 @ 95%CL (1 toyMC)
median expected limit: r < 0.195474 @ 95%CL (1 toyMC)
   68% expected band : 0.195474 < r < 0.195474
   95% expected band : 0.195474 < r < 0.195474
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 495708964
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.289937 +/- 0.00175106 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.289937 @ 95%CL (1 toyMC)
median expected limit: r < 0.289937 @ 95%CL (1 toyMC)
   68% expected band : 0.289937 < r < 0.289937
   95% expected band : 0.289937 < r < 0.289937
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2086406672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.298199 +/- 0.00263043 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.298199 @ 95%CL (1 toyMC)
median expected limit: r < 0.298199 @ 95%CL (1 toyMC)
   68% expected band : 0.298199 < r < 0.298199
   95% expected band : 0.298199 < r < 0.298199
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 788083646
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.231634 +/- 0.00259053 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.231634 @ 95%CL (1 toyMC)
median expected limit: r < 0.231634 @ 95%CL (1 toyMC)
   68% expected band : 0.231634 < r < 0.231634
   95% expected band : 0.231634 < r < 0.231634
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -657022127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.24666 +/- 0.00252968 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.24666 @ 95%CL (1 toyMC)
median expected limit: r < 0.24666 @ 95%CL (1 toyMC)
   68% expected band : 0.24666 < r < 0.24666
   95% expected band : 0.24666 < r < 0.24666
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -227338674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.222973 +/- 0.00246086 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.222973 @ 95%CL (1 toyMC)
median expected limit: r < 0.222973 @ 95%CL (1 toyMC)
   68% expected band : 0.222973 < r < 0.222973
   95% expected band : 0.222973 < r < 0.222973
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1250033958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.363098 +/- 0.00247148 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.363098 @ 95%CL (1 toyMC)
median expected limit: r < 0.363098 @ 95%CL (1 toyMC)
   68% expected band : 0.363098 < r < 0.363098
   95% expected band : 0.363098 < r < 0.363098
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -640652457
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.261847 +/- 0.00274473 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.261847 @ 95%CL (1 toyMC)
median expected limit: r < 0.261847 @ 95%CL (1 toyMC)
   68% expected band : 0.261847 < r < 0.261847
   95% expected band : 0.261847 < r < 0.261847
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1248334734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.19457 +/- 0.00320796 @ 95% CL (99 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 0.19457 @ 95%CL (1 toyMC)
median expected limit: r < 0.19457 @ 95%CL (1 toyMC)
   68% expected band : 0.19457 < r < 0.19457
   95% expected band : 0.19457 < r < 0.19457
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1034398975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.317677 +/- 0.00243664 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.317677 @ 95%CL (1 toyMC)
median expected limit: r < 0.317677 @ 95%CL (1 toyMC)
   68% expected band : 0.317677 < r < 0.317677
   95% expected band : 0.317677 < r < 0.317677
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1555801453
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.317837 +/- 0.0026717 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.317837 @ 95%CL (1 toyMC)
median expected limit: r < 0.317837 @ 95%CL (1 toyMC)
   68% expected band : 0.317837 < r < 0.317837
   95% expected band : 0.317837 < r < 0.317837
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -873789645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.335611 +/- 0.00197441 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.335611 @ 95%CL (1 toyMC)
median expected limit: r < 0.335611 @ 95%CL (1 toyMC)
   68% expected band : 0.335611 < r < 0.335611
   95% expected band : 0.335611 < r < 0.335611
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -777259518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.216214 +/- 0.00372743 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.216214 @ 95%CL (1 toyMC)
median expected limit: r < 0.216214 @ 95%CL (1 toyMC)
   68% expected band : 0.216214 < r < 0.216214
   95% expected band : 0.216214 < r < 0.216214
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1573239638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.221936 +/- 0.00306817 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.221936 @ 95%CL (1 toyMC)
median expected limit: r < 0.221936 @ 95%CL (1 toyMC)
   68% expected band : 0.221936 < r < 0.221936
   95% expected band : 0.221936 < r < 0.221936
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -898772731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.416161 +/- 0.00242205 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.416161 @ 95%CL (1 toyMC)
median expected limit: r < 0.416161 @ 95%CL (1 toyMC)
   68% expected band : 0.416161 < r < 0.416161
   95% expected band : 0.416161 < r < 0.416161
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2064928091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.178974 +/- 0.00470169 @ 95% CL (89 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.178974 @ 95%CL (1 toyMC)
median expected limit: r < 0.178974 @ 95%CL (1 toyMC)
   68% expected band : 0.178974 < r < 0.178974
   95% expected band : 0.178974 < r < 0.178974
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -140065309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.164685 +/- 0.0035816 @ 95% CL (98 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 0.164685 @ 95%CL (1 toyMC)
median expected limit: r < 0.164685 @ 95%CL (1 toyMC)
   68% expected band : 0.164685 < r < 0.164685
   95% expected band : 0.164685 < r < 0.164685
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -881413069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.315541 +/- 0.00255507 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.315541 @ 95%CL (1 toyMC)
median expected limit: r < 0.315541 @ 95%CL (1 toyMC)
   68% expected band : 0.315541 < r < 0.315541
   95% expected band : 0.315541 < r < 0.315541
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -312073095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.321121 +/- 0.0023264 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.321121 @ 95%CL (1 toyMC)
median expected limit: r < 0.321121 @ 95%CL (1 toyMC)
   68% expected band : 0.321121 < r < 0.321121
   95% expected band : 0.321121 < r < 0.321121
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1624738470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.197446 +/- 0.00335056 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.197446 @ 95%CL (1 toyMC)
median expected limit: r < 0.197446 @ 95%CL (1 toyMC)
   68% expected band : 0.197446 < r < 0.197446
   95% expected band : 0.197446 < r < 0.197446
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1323575952
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.30556 +/- 0.00213121 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.30556 @ 95%CL (1 toyMC)
median expected limit: r < 0.30556 @ 95%CL (1 toyMC)
   68% expected band : 0.30556 < r < 0.30556
   95% expected band : 0.30556 < r < 0.30556
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1380863624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.192216 +/- 0.00313004 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.192216 @ 95%CL (1 toyMC)
median expected limit: r < 0.192216 @ 95%CL (1 toyMC)
   68% expected band : 0.192216 < r < 0.192216
   95% expected band : 0.192216 < r < 0.192216
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2075253557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.215887 +/- 0.00328241 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.215887 @ 95%CL (1 toyMC)
median expected limit: r < 0.215887 @ 95%CL (1 toyMC)
   68% expected band : 0.215887 < r < 0.215887
   95% expected band : 0.215887 < r < 0.215887
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1422096015
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.290503 +/- 0.00267402 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.290503 @ 95%CL (1 toyMC)
median expected limit: r < 0.290503 @ 95%CL (1 toyMC)
   68% expected band : 0.290503 < r < 0.290503
   95% expected band : 0.290503 < r < 0.290503
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -877717436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.172343 +/- 0.00386367 @ 95% CL (98 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 0.172343 @ 95%CL (1 toyMC)
median expected limit: r < 0.172343 @ 95%CL (1 toyMC)
   68% expected band : 0.172343 < r < 0.172343
   95% expected band : 0.172343 < r < 0.172343
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2020561342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.373805 +/- 0.00253532 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.373805 @ 95%CL (1 toyMC)
median expected limit: r < 0.373805 @ 95%CL (1 toyMC)
   68% expected band : 0.373805 < r < 0.373805
   95% expected band : 0.373805 < r < 0.373805
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1817799620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.201683 +/- 0.00243046 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.201683 @ 95%CL (1 toyMC)
median expected limit: r < 0.201683 @ 95%CL (1 toyMC)
   68% expected band : 0.201683 < r < 0.201683
   95% expected band : 0.201683 < r < 0.201683
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 567617727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.347554 +/- 0.00201884 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.347554 @ 95%CL (1 toyMC)
median expected limit: r < 0.347554 @ 95%CL (1 toyMC)
   68% expected band : 0.347554 < r < 0.347554
   95% expected band : 0.347554 < r < 0.347554
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2052857643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.19115 +/- 0.0034521 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.19115 @ 95%CL (1 toyMC)
median expected limit: r < 0.19115 @ 95%CL (1 toyMC)
   68% expected band : 0.19115 < r < 0.19115
   95% expected band : 0.19115 < r < 0.19115
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1732998455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.331466 +/- 0.00222195 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.331466 @ 95%CL (1 toyMC)
median expected limit: r < 0.331466 @ 95%CL (1 toyMC)
   68% expected band : 0.331466 < r < 0.331466
   95% expected band : 0.331466 < r < 0.331466
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 746575858
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.296764 +/- 0.00246364 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.296764 @ 95%CL (1 toyMC)
median expected limit: r < 0.296764 @ 95%CL (1 toyMC)
   68% expected band : 0.296764 < r < 0.296764
   95% expected band : 0.296764 < r < 0.296764
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -833703056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.24232 +/- 0.00311617 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.24232 @ 95%CL (1 toyMC)
median expected limit: r < 0.24232 @ 95%CL (1 toyMC)
   68% expected band : 0.24232 < r < 0.24232
   95% expected band : 0.24232 < r < 0.24232
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -868901001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.225884 +/- 0.00288173 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.225884 @ 95%CL (1 toyMC)
median expected limit: r < 0.225884 @ 95%CL (1 toyMC)
   68% expected band : 0.225884 < r < 0.225884
   95% expected band : 0.225884 < r < 0.225884
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1138771907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.256785 +/- 0.00296939 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.256785 @ 95%CL (1 toyMC)
median expected limit: r < 0.256785 @ 95%CL (1 toyMC)
   68% expected band : 0.256785 < r < 0.256785
   95% expected band : 0.256785 < r < 0.256785
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1391625773
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.397079 +/- 0.00275726 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.397079 @ 95%CL (1 toyMC)
median expected limit: r < 0.397079 @ 95%CL (1 toyMC)
   68% expected band : 0.397079 < r < 0.397079
   95% expected band : 0.397079 < r < 0.397079
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1772846337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.243581 +/- 0.00275044 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.243581 @ 95%CL (1 toyMC)
median expected limit: r < 0.243581 @ 95%CL (1 toyMC)
   68% expected band : 0.243581 < r < 0.243581
   95% expected band : 0.243581 < r < 0.243581
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 551201272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.773478 +/- 0.0038161 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.773478 @ 95%CL (1 toyMC)
median expected limit: r < 0.773478 @ 95%CL (1 toyMC)
   68% expected band : 0.773478 < r < 0.773478
   95% expected band : 0.773478 < r < 0.773478
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399565240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07813 +/- 0.00440258 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.07813 @ 95%CL (1 toyMC)
median expected limit: r < 1.07813 @ 95%CL (1 toyMC)
   68% expected band : 1.07813 < r < 1.07813
   95% expected band : 1.07813 < r < 1.07813
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1646947835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06272 +/- 0.00436815 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.06272 @ 95%CL (1 toyMC)
median expected limit: r < 1.06272 @ 95%CL (1 toyMC)
   68% expected band : 1.06272 < r < 1.06272
   95% expected band : 1.06272 < r < 1.06272
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1346722609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07666 +/- 0.00506453 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.07666 @ 95%CL (1 toyMC)
median expected limit: r < 1.07666 @ 95%CL (1 toyMC)
   68% expected band : 1.07666 < r < 1.07666
   95% expected band : 1.07666 < r < 1.07666
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -86840634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21187 +/- 0.00381278 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.21187 @ 95%CL (1 toyMC)
median expected limit: r < 1.21187 @ 95%CL (1 toyMC)
   68% expected band : 1.21187 < r < 1.21187
   95% expected band : 1.21187 < r < 1.21187
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -276101179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.83352 +/- 0.00271019 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.83352 @ 95%CL (1 toyMC)
median expected limit: r < 0.83352 @ 95%CL (1 toyMC)
   68% expected band : 0.83352 < r < 0.83352
   95% expected band : 0.83352 < r < 0.83352
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1391084826
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.5801 +/- 0.00341047 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.5801 @ 95%CL (1 toyMC)
median expected limit: r < 1.5801 @ 95%CL (1 toyMC)
   68% expected band : 1.5801 < r < 1.5801
   95% expected band : 1.5801 < r < 1.5801
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2128158632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.845079 +/- 0.00339637 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.845079 @ 95%CL (1 toyMC)
median expected limit: r < 0.845079 @ 95%CL (1 toyMC)
   68% expected band : 0.845079 < r < 0.845079
   95% expected band : 0.845079 < r < 0.845079
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 339633042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.870083 +/- 0.00372731 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.870083 @ 95%CL (1 toyMC)
median expected limit: r < 0.870083 @ 95%CL (1 toyMC)
   68% expected band : 0.870083 < r < 0.870083
   95% expected band : 0.870083 < r < 0.870083
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1255668204
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.714423 +/- 0.00324703 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.714423 @ 95%CL (1 toyMC)
median expected limit: r < 0.714423 @ 95%CL (1 toyMC)
   68% expected band : 0.714423 < r < 0.714423
   95% expected band : 0.714423 < r < 0.714423
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1895721159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41601 +/- 0.00403853 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.41601 @ 95%CL (1 toyMC)
median expected limit: r < 1.41601 @ 95%CL (1 toyMC)
   68% expected band : 1.41601 < r < 1.41601
   95% expected band : 1.41601 < r < 1.41601
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1499227743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.91711 +/- 0.00328469 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.91711 @ 95%CL (1 toyMC)
median expected limit: r < 0.91711 @ 95%CL (1 toyMC)
   68% expected band : 0.91711 < r < 0.91711
   95% expected band : 0.91711 < r < 0.91711
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -355023356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21624 +/- 0.0039157 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.21624 @ 95%CL (1 toyMC)
median expected limit: r < 1.21624 @ 95%CL (1 toyMC)
   68% expected band : 1.21624 < r < 1.21624
   95% expected band : 1.21624 < r < 1.21624
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -396730700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.992255 +/- 0.0040021 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.992255 @ 95%CL (1 toyMC)
median expected limit: r < 0.992255 @ 95%CL (1 toyMC)
   68% expected band : 0.992255 < r < 0.992255
   95% expected band : 0.992255 < r < 0.992255
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -747005348
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02912 +/- 0.00374904 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.02912 @ 95%CL (1 toyMC)
median expected limit: r < 1.02912 @ 95%CL (1 toyMC)
   68% expected band : 1.02912 < r < 1.02912
   95% expected band : 1.02912 < r < 1.02912
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -306200318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.704414 +/- 0.00285991 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.704414 @ 95%CL (1 toyMC)
median expected limit: r < 0.704414 @ 95%CL (1 toyMC)
   68% expected band : 0.704414 < r < 0.704414
   95% expected band : 0.704414 < r < 0.704414
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 239367380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66409 +/- 0.00420214 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.66409 @ 95%CL (1 toyMC)
median expected limit: r < 1.66409 @ 95%CL (1 toyMC)
   68% expected band : 1.66409 < r < 1.66409
   95% expected band : 1.66409 < r < 1.66409
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -22237355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02687 +/- 0.00300189 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.02687 @ 95%CL (1 toyMC)
median expected limit: r < 1.02687 @ 95%CL (1 toyMC)
   68% expected band : 1.02687 < r < 1.02687
   95% expected band : 1.02687 < r < 1.02687
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 892652004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51034 +/- 0.00474186 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.51034 @ 95%CL (1 toyMC)
median expected limit: r < 1.51034 @ 95%CL (1 toyMC)
   68% expected band : 1.51034 < r < 1.51034
   95% expected band : 1.51034 < r < 1.51034
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1619920110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.993371 +/- 0.00486449 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.993371 @ 95%CL (1 toyMC)
median expected limit: r < 0.993371 @ 95%CL (1 toyMC)
   68% expected band : 0.993371 < r < 0.993371
   95% expected band : 0.993371 < r < 0.993371
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 718104982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19011 +/- 0.00331052 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.19011 @ 95%CL (1 toyMC)
median expected limit: r < 1.19011 @ 95%CL (1 toyMC)
   68% expected band : 1.19011 < r < 1.19011
   95% expected band : 1.19011 < r < 1.19011
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1323269569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28896 +/- 0.00410235 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.28896 @ 95%CL (1 toyMC)
median expected limit: r < 1.28896 @ 95%CL (1 toyMC)
   68% expected band : 1.28896 < r < 1.28896
   95% expected band : 1.28896 < r < 1.28896
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1460319411
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33995 +/- 0.00453758 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.33995 @ 95%CL (1 toyMC)
median expected limit: r < 1.33995 @ 95%CL (1 toyMC)
   68% expected band : 1.33995 < r < 1.33995
   95% expected band : 1.33995 < r < 1.33995
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 794440360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.808605 +/- 0.00383269 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.808605 @ 95%CL (1 toyMC)
median expected limit: r < 0.808605 @ 95%CL (1 toyMC)
   68% expected band : 0.808605 < r < 0.808605
   95% expected band : 0.808605 < r < 0.808605
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 301863750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.92443 +/- 0.00328624 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.92443 @ 95%CL (1 toyMC)
median expected limit: r < 0.92443 @ 95%CL (1 toyMC)
   68% expected band : 0.92443 < r < 0.92443
   95% expected band : 0.92443 < r < 0.92443
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1891162552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2316 +/- 0.00412274 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.2316 @ 95%CL (1 toyMC)
median expected limit: r < 2.2316 @ 95%CL (1 toyMC)
   68% expected band : 2.2316 < r < 2.2316
   95% expected band : 2.2316 < r < 2.2316
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1398614445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.8267 +/- 0.0038351 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.8267 @ 95%CL (1 toyMC)
median expected limit: r < 0.8267 @ 95%CL (1 toyMC)
   68% expected band : 0.8267 < r < 0.8267
   95% expected band : 0.8267 < r < 0.8267
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 563869394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.778065 +/- 0.00320596 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.778065 @ 95%CL (1 toyMC)
median expected limit: r < 0.778065 @ 95%CL (1 toyMC)
   68% expected band : 0.778065 < r < 0.778065
   95% expected band : 0.778065 < r < 0.778065
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1027597126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.778862 +/- 0.00423199 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.778862 @ 95%CL (1 toyMC)
median expected limit: r < 0.778862 @ 95%CL (1 toyMC)
   68% expected band : 0.778862 < r < 0.778862
   95% expected band : 0.778862 < r < 0.778862
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 116883585
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.924815 +/- 0.00415588 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.924815 @ 95%CL (1 toyMC)
median expected limit: r < 0.924815 @ 95%CL (1 toyMC)
   68% expected band : 0.924815 < r < 0.924815
   95% expected band : 0.924815 < r < 0.924815
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -362254298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2504 +/- 0.00424078 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.2504 @ 95%CL (1 toyMC)
median expected limit: r < 1.2504 @ 95%CL (1 toyMC)
   68% expected band : 1.2504 < r < 1.2504
   95% expected band : 1.2504 < r < 1.2504
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 74123762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.826353 +/- 0.00330629 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.826353 @ 95%CL (1 toyMC)
median expected limit: r < 0.826353 @ 95%CL (1 toyMC)
   68% expected band : 0.826353 < r < 0.826353
   95% expected band : 0.826353 < r < 0.826353
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1483307209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03228 +/- 0.00423643 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.03228 @ 95%CL (1 toyMC)
median expected limit: r < 1.03228 @ 95%CL (1 toyMC)
   68% expected band : 1.03228 < r < 1.03228
   95% expected band : 1.03228 < r < 1.03228
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1746842737
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.701666 +/- 0.00332168 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.701666 @ 95%CL (1 toyMC)
median expected limit: r < 0.701666 @ 95%CL (1 toyMC)
   68% expected band : 0.701666 < r < 0.701666
   95% expected band : 0.701666 < r < 0.701666
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 196961807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.905815 +/- 0.00408596 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.905815 @ 95%CL (1 toyMC)
median expected limit: r < 0.905815 @ 95%CL (1 toyMC)
   68% expected band : 0.905815 < r < 0.905815
   95% expected band : 0.905815 < r < 0.905815
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2054974723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.666915 +/- 0.00360286 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.666915 @ 95%CL (1 toyMC)
median expected limit: r < 0.666915 @ 95%CL (1 toyMC)
   68% expected band : 0.666915 < r < 0.666915
   95% expected band : 0.666915 < r < 0.666915
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 653473874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.94063 +/- 0.00456432 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 0.94063 @ 95%CL (1 toyMC)
median expected limit: r < 0.94063 @ 95%CL (1 toyMC)
   68% expected band : 0.94063 < r < 0.94063
   95% expected band : 0.94063 < r < 0.94063
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -583297487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63633 +/- 0.00426997 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.63633 @ 95%CL (1 toyMC)
median expected limit: r < 1.63633 @ 95%CL (1 toyMC)
   68% expected band : 1.63633 < r < 1.63633
   95% expected band : 1.63633 < r < 1.63633
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1587552769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08591 +/- 0.00356951 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.08591 @ 95%CL (1 toyMC)
median expected limit: r < 1.08591 @ 95%CL (1 toyMC)
   68% expected band : 1.08591 < r < 1.08591
   95% expected band : 1.08591 < r < 1.08591
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1440006521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00828 +/- 0.00392088 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.00828 @ 95%CL (1 toyMC)
median expected limit: r < 1.00828 @ 95%CL (1 toyMC)
   68% expected band : 1.00828 < r < 1.00828
   95% expected band : 1.00828 < r < 1.00828
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1528758712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95461 +/- 0.00438617 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.95461 @ 95%CL (1 toyMC)
median expected limit: r < 1.95461 @ 95%CL (1 toyMC)
   68% expected band : 1.95461 < r < 1.95461
   95% expected band : 1.95461 < r < 1.95461
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1611503022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.893164 +/- 0.00396567 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.893164 @ 95%CL (1 toyMC)
median expected limit: r < 0.893164 @ 95%CL (1 toyMC)
   68% expected band : 0.893164 < r < 0.893164
   95% expected band : 0.893164 < r < 0.893164
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -761239236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.928952 +/- 0.0035945 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.928952 @ 95%CL (1 toyMC)
median expected limit: r < 0.928952 @ 95%CL (1 toyMC)
   68% expected band : 0.928952 < r < 0.928952
   95% expected band : 0.928952 < r < 0.928952
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2040115630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.917405 +/- 0.00428074 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.917405 @ 95%CL (1 toyMC)
median expected limit: r < 0.917405 @ 95%CL (1 toyMC)
   68% expected band : 0.917405 < r < 0.917405
   95% expected band : 0.917405 < r < 0.917405
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1593249834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.920007 +/- 0.00410784 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.920007 @ 95%CL (1 toyMC)
median expected limit: r < 0.920007 @ 95%CL (1 toyMC)
   68% expected band : 0.920007 < r < 0.920007
   95% expected band : 0.920007 < r < 0.920007
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 479920526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.911427 +/- 0.00341581 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.911427 @ 95%CL (1 toyMC)
median expected limit: r < 0.911427 @ 95%CL (1 toyMC)
   68% expected band : 0.911427 < r < 0.911427
   95% expected band : 0.911427 < r < 0.911427
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -573306147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09259 +/- 0.00372051 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.09259 @ 95%CL (1 toyMC)
median expected limit: r < 1.09259 @ 95%CL (1 toyMC)
   68% expected band : 1.09259 < r < 1.09259
   95% expected band : 1.09259 < r < 1.09259
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 276626493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23493 +/- 0.00365774 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.23493 @ 95%CL (1 toyMC)
median expected limit: r < 1.23493 @ 95%CL (1 toyMC)
   68% expected band : 1.23493 < r < 1.23493
   95% expected band : 1.23493 < r < 1.23493
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1511741593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60177 +/- 0.00382822 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.60177 @ 95%CL (1 toyMC)
median expected limit: r < 1.60177 @ 95%CL (1 toyMC)
   68% expected band : 1.60177 < r < 1.60177
   95% expected band : 1.60177 < r < 1.60177
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1841608942
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27122 +/- 0.00382504 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.27122 @ 95%CL (1 toyMC)
median expected limit: r < 1.27122 @ 95%CL (1 toyMC)
   68% expected band : 1.27122 < r < 1.27122
   95% expected band : 1.27122 < r < 1.27122
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -916890828
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.690725 +/- 0.00355186 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.690725 @ 95%CL (1 toyMC)
median expected limit: r < 0.690725 @ 95%CL (1 toyMC)
   68% expected band : 0.690725 < r < 0.690725
   95% expected band : 0.690725 < r < 0.690725
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 170613621
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34503 +/- 0.00374745 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.34503 @ 95%CL (1 toyMC)
median expected limit: r < 1.34503 @ 95%CL (1 toyMC)
   68% expected band : 1.34503 < r < 1.34503
   95% expected band : 1.34503 < r < 1.34503
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1236280836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.69086 +/- 0.00371699 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.69086 @ 95%CL (1 toyMC)
median expected limit: r < 0.69086 @ 95%CL (1 toyMC)
   68% expected band : 0.69086 < r < 0.69086
   95% expected band : 0.69086 < r < 0.69086
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1304671715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40339 +/- 0.00441265 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.40339 @ 95%CL (1 toyMC)
median expected limit: r < 1.40339 @ 95%CL (1 toyMC)
   68% expected band : 1.40339 < r < 1.40339
   95% expected band : 1.40339 < r < 1.40339
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1416584309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.676255 +/- 0.00319912 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.676255 @ 95%CL (1 toyMC)
median expected limit: r < 0.676255 @ 95%CL (1 toyMC)
   68% expected band : 0.676255 < r < 0.676255
   95% expected band : 0.676255 < r < 0.676255
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1617851866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.814474 +/- 0.00417711 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.814474 @ 95%CL (1 toyMC)
median expected limit: r < 0.814474 @ 95%CL (1 toyMC)
   68% expected band : 0.814474 < r < 0.814474
   95% expected band : 0.814474 < r < 0.814474
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -748620373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.967353 +/- 0.00369561 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.967353 @ 95%CL (1 toyMC)
median expected limit: r < 0.967353 @ 95%CL (1 toyMC)
   68% expected band : 0.967353 < r < 0.967353
   95% expected band : 0.967353 < r < 0.967353
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -957262492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43257 +/- 0.00382127 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.43257 @ 95%CL (1 toyMC)
median expected limit: r < 1.43257 @ 95%CL (1 toyMC)
   68% expected band : 1.43257 < r < 1.43257
   95% expected band : 1.43257 < r < 1.43257
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -795214425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.934002 +/- 0.00389574 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.934002 @ 95%CL (1 toyMC)
median expected limit: r < 0.934002 @ 95%CL (1 toyMC)
   68% expected band : 0.934002 < r < 0.934002
   95% expected band : 0.934002 < r < 0.934002
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1383634593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37141 +/- 0.00379238 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.37141 @ 95%CL (1 toyMC)
median expected limit: r < 1.37141 @ 95%CL (1 toyMC)
   68% expected band : 1.37141 < r < 1.37141
   95% expected band : 1.37141 < r < 1.37141
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -531127443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.799701 +/- 0.00345898 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.799701 @ 95%CL (1 toyMC)
median expected limit: r < 0.799701 @ 95%CL (1 toyMC)
   68% expected band : 0.799701 < r < 0.799701
   95% expected band : 0.799701 < r < 0.799701
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -852689888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0327 +/- 0.00356695 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.0327 @ 95%CL (1 toyMC)
median expected limit: r < 1.0327 @ 95%CL (1 toyMC)
   68% expected band : 1.0327 < r < 1.0327
   95% expected band : 1.0327 < r < 1.0327
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1577139379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.978426 +/- 0.00261847 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.978426 @ 95%CL (1 toyMC)
median expected limit: r < 0.978426 @ 95%CL (1 toyMC)
   68% expected band : 0.978426 < r < 0.978426
   95% expected band : 0.978426 < r < 0.978426
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1934661779
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36422 +/- 0.00383338 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.36422 @ 95%CL (1 toyMC)
median expected limit: r < 1.36422 @ 95%CL (1 toyMC)
   68% expected band : 1.36422 < r < 1.36422
   95% expected band : 1.36422 < r < 1.36422
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -188377883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47022 +/- 0.00391859 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.47022 @ 95%CL (1 toyMC)
median expected limit: r < 1.47022 @ 95%CL (1 toyMC)
   68% expected band : 1.47022 < r < 1.47022
   95% expected band : 1.47022 < r < 1.47022
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1358880415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.71056 +/- 0.00314909 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.71056 @ 95%CL (1 toyMC)
median expected limit: r < 0.71056 @ 95%CL (1 toyMC)
   68% expected band : 0.71056 < r < 0.71056
   95% expected band : 0.71056 < r < 0.71056
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2040103412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.973604 +/- 0.00365957 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.973604 @ 95%CL (1 toyMC)
median expected limit: r < 0.973604 @ 95%CL (1 toyMC)
   68% expected band : 0.973604 < r < 0.973604
   95% expected band : 0.973604 < r < 0.973604
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 621236223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.824893 +/- 0.00370963 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.824893 @ 95%CL (1 toyMC)
median expected limit: r < 0.824893 @ 95%CL (1 toyMC)
   68% expected band : 0.824893 < r < 0.824893
   95% expected band : 0.824893 < r < 0.824893
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -88447069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13434 +/- 0.00525899 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.13434 @ 95%CL (1 toyMC)
median expected limit: r < 1.13434 @ 95%CL (1 toyMC)
   68% expected band : 1.13434 < r < 1.13434
   95% expected band : 1.13434 < r < 1.13434
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1012972689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.60546 +/- 0.00414783 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.60546 @ 95%CL (1 toyMC)
median expected limit: r < 2.60546 @ 95%CL (1 toyMC)
   68% expected band : 2.60546 < r < 2.60546
   95% expected band : 2.60546 < r < 2.60546
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1861787839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.53501 +/- 0.00404349 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.53501 @ 95%CL (1 toyMC)
median expected limit: r < 1.53501 @ 95%CL (1 toyMC)
   68% expected band : 1.53501 < r < 1.53501
   95% expected band : 1.53501 < r < 1.53501
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2022385631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.871411 +/- 0.00354509 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.871411 @ 95%CL (1 toyMC)
median expected limit: r < 0.871411 @ 95%CL (1 toyMC)
   68% expected band : 0.871411 < r < 0.871411
   95% expected band : 0.871411 < r < 0.871411
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1725257634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.806976 +/- 0.00323765 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.806976 @ 95%CL (1 toyMC)
median expected limit: r < 0.806976 @ 95%CL (1 toyMC)
   68% expected band : 0.806976 < r < 0.806976
   95% expected band : 0.806976 < r < 0.806976
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1648906778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.876245 +/- 0.00346772 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.876245 @ 95%CL (1 toyMC)
median expected limit: r < 0.876245 @ 95%CL (1 toyMC)
   68% expected band : 0.876245 < r < 0.876245
   95% expected band : 0.876245 < r < 0.876245
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 656288549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.869962 +/- 0.00372236 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.869962 @ 95%CL (1 toyMC)
median expected limit: r < 0.869962 @ 95%CL (1 toyMC)
   68% expected band : 0.869962 < r < 0.869962
   95% expected band : 0.869962 < r < 0.869962
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1107814805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60171 +/- 0.00368401 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.60171 @ 95%CL (1 toyMC)
median expected limit: r < 1.60171 @ 95%CL (1 toyMC)
   68% expected band : 1.60171 < r < 1.60171
   95% expected band : 1.60171 < r < 1.60171
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1857805249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.770596 +/- 0.00294365 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.770596 @ 95%CL (1 toyMC)
median expected limit: r < 0.770596 @ 95%CL (1 toyMC)
   68% expected band : 0.770596 < r < 0.770596
   95% expected band : 0.770596 < r < 0.770596
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -939592876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50675 +/- 0.00404117 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.50675 @ 95%CL (1 toyMC)
median expected limit: r < 1.50675 @ 95%CL (1 toyMC)
   68% expected band : 1.50675 < r < 1.50675
   95% expected band : 1.50675 < r < 1.50675
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2099291999
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.761414 +/- 0.00341396 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.761414 @ 95%CL (1 toyMC)
median expected limit: r < 0.761414 @ 95%CL (1 toyMC)
   68% expected band : 0.761414 < r < 0.761414
   95% expected band : 0.761414 < r < 0.761414
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 3203991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40659 +/- 0.00446991 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.40659 @ 95%CL (1 toyMC)
median expected limit: r < 1.40659 @ 95%CL (1 toyMC)
   68% expected band : 1.40659 < r < 1.40659
   95% expected band : 1.40659 < r < 1.40659
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1981718625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.969828 +/- 0.00441874 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.969828 @ 95%CL (1 toyMC)
median expected limit: r < 0.969828 @ 95%CL (1 toyMC)
   68% expected band : 0.969828 < r < 0.969828
   95% expected band : 0.969828 < r < 0.969828
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 970488267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31086 +/- 0.0043302 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.31086 @ 95%CL (1 toyMC)
median expected limit: r < 1.31086 @ 95%CL (1 toyMC)
   68% expected band : 1.31086 < r < 1.31086
   95% expected band : 1.31086 < r < 1.31086
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1493218798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28728 +/- 0.00422131 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.28728 @ 95%CL (1 toyMC)
median expected limit: r < 1.28728 @ 95%CL (1 toyMC)
   68% expected band : 1.28728 < r < 1.28728
   95% expected band : 1.28728 < r < 1.28728
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1388427306
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.920477 +/- 0.00375789 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.920477 @ 95%CL (1 toyMC)
median expected limit: r < 0.920477 @ 95%CL (1 toyMC)
   68% expected band : 0.920477 < r < 0.920477
   95% expected band : 0.920477 < r < 0.920477
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -3954406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02935 +/- 0.00360736 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.02935 @ 95%CL (1 toyMC)
median expected limit: r < 1.02935 @ 95%CL (1 toyMC)
   68% expected band : 1.02935 < r < 1.02935
   95% expected band : 1.02935 < r < 1.02935
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -957957833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.941498 +/- 0.00372449 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.941498 @ 95%CL (1 toyMC)
median expected limit: r < 0.941498 @ 95%CL (1 toyMC)
   68% expected band : 0.941498 < r < 0.941498
   95% expected band : 0.941498 < r < 0.941498
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1212489546
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.867117 +/- 0.00419118 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.867117 @ 95%CL (1 toyMC)
median expected limit: r < 0.867117 @ 95%CL (1 toyMC)
   68% expected band : 0.867117 < r < 0.867117
   95% expected band : 0.867117 < r < 0.867117
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 592011585
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12017 +/- 0.00432101 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.12017 @ 95%CL (1 toyMC)
median expected limit: r < 1.12017 @ 95%CL (1 toyMC)
   68% expected band : 1.12017 < r < 1.12017
   95% expected band : 1.12017 < r < 1.12017
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1016907154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44145 +/- 0.00415727 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.44145 @ 95%CL (1 toyMC)
median expected limit: r < 1.44145 @ 95%CL (1 toyMC)
   68% expected band : 1.44145 < r < 1.44145
   95% expected band : 1.44145 < r < 1.44145
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 550127232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.823162 +/- 0.00408138 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.823162 @ 95%CL (1 toyMC)
median expected limit: r < 0.823162 @ 95%CL (1 toyMC)
   68% expected band : 0.823162 < r < 0.823162
   95% expected band : 0.823162 < r < 0.823162
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1104034354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.832945 +/- 0.00375353 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.832945 @ 95%CL (1 toyMC)
median expected limit: r < 0.832945 @ 95%CL (1 toyMC)
   68% expected band : 0.832945 < r < 0.832945
   95% expected band : 0.832945 < r < 0.832945
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1621448212
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.980257 +/- 0.00425893 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.980257 @ 95%CL (1 toyMC)
median expected limit: r < 0.980257 @ 95%CL (1 toyMC)
   68% expected band : 0.980257 < r < 0.980257
   95% expected band : 0.980257 < r < 0.980257
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 303031774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17845 +/- 0.00312053 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.17845 @ 95%CL (1 toyMC)
median expected limit: r < 1.17845 @ 95%CL (1 toyMC)
   68% expected band : 1.17845 < r < 1.17845
   95% expected band : 1.17845 < r < 1.17845
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1443305803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.986246 +/- 0.00378905 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.986246 @ 95%CL (1 toyMC)
median expected limit: r < 0.986246 @ 95%CL (1 toyMC)
   68% expected band : 0.986246 < r < 0.986246
   95% expected band : 0.986246 < r < 0.986246
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 867165402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.790121 +/- 0.00338434 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.790121 @ 95%CL (1 toyMC)
median expected limit: r < 0.790121 @ 95%CL (1 toyMC)
   68% expected band : 0.790121 < r < 0.790121
   95% expected band : 0.790121 < r < 0.790121
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 911115987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.954787 +/- 0.00353633 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.954787 @ 95%CL (1 toyMC)
median expected limit: r < 0.954787 @ 95%CL (1 toyMC)
   68% expected band : 0.954787 < r < 0.954787
   95% expected band : 0.954787 < r < 0.954787
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -731354102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.767304 +/- 0.00360029 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.767304 @ 95%CL (1 toyMC)
median expected limit: r < 0.767304 @ 95%CL (1 toyMC)
   68% expected band : 0.767304 < r < 0.767304
   95% expected band : 0.767304 < r < 0.767304
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1330771666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.922362 +/- 0.00418995 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.922362 @ 95%CL (1 toyMC)
median expected limit: r < 0.922362 @ 95%CL (1 toyMC)
   68% expected band : 0.922362 < r < 0.922362
   95% expected band : 0.922362 < r < 0.922362
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 803323553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.86971 +/- 0.00346443 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.86971 @ 95%CL (1 toyMC)
median expected limit: r < 0.86971 @ 95%CL (1 toyMC)
   68% expected band : 0.86971 < r < 0.86971
   95% expected band : 0.86971 < r < 0.86971
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 102261509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.710082 +/- 0.00314698 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.710082 @ 95%CL (1 toyMC)
median expected limit: r < 0.710082 @ 95%CL (1 toyMC)
   68% expected band : 0.710082 < r < 0.710082
   95% expected band : 0.710082 < r < 0.710082
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1925694664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82948 +/- 0.00776885 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.82948 @ 95%CL (1 toyMC)
median expected limit: r < 2.82948 @ 95%CL (1 toyMC)
   68% expected band : 2.82948 < r < 2.82948
   95% expected band : 2.82948 < r < 2.82948
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1584508349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.09042 +/- 0.00758145 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.09042 @ 95%CL (1 toyMC)
median expected limit: r < 3.09042 @ 95%CL (1 toyMC)
   68% expected band : 3.09042 < r < 3.09042
   95% expected band : 3.09042 < r < 3.09042
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1925330556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44564 +/- 0.00650653 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.44564 @ 95%CL (1 toyMC)
median expected limit: r < 2.44564 @ 95%CL (1 toyMC)
   68% expected band : 2.44564 < r < 2.44564
   95% expected band : 2.44564 < r < 2.44564
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1209850694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.12778 +/- 0.00822801 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.12778 @ 95%CL (1 toyMC)
median expected limit: r < 4.12778 @ 95%CL (1 toyMC)
   68% expected band : 4.12778 < r < 4.12778
   95% expected band : 4.12778 < r < 4.12778
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 29432478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.77512 +/- 0.00803101 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.77512 @ 95%CL (1 toyMC)
median expected limit: r < 3.77512 @ 95%CL (1 toyMC)
   68% expected band : 3.77512 < r < 3.77512
   95% expected band : 3.77512 < r < 3.77512
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1535594045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.09201 +/- 0.00939524 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.09201 @ 95%CL (1 toyMC)
median expected limit: r < 7.09201 @ 95%CL (1 toyMC)
   68% expected band : 7.09201 < r < 7.09201
   95% expected band : 7.09201 < r < 7.09201
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1927267688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.22153 +/- 0.00752934 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.22153 @ 95%CL (1 toyMC)
median expected limit: r < 4.22153 @ 95%CL (1 toyMC)
   68% expected band : 4.22153 < r < 4.22153
   95% expected band : 4.22153 < r < 4.22153
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1188756188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.4072 +/- 0.00789895 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.4072 @ 95%CL (1 toyMC)
median expected limit: r < 2.4072 @ 95%CL (1 toyMC)
   68% expected band : 2.4072 < r < 2.4072
   95% expected band : 2.4072 < r < 2.4072
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1678582542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.0116 +/- 0.00858143 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 3.0116 @ 95%CL (1 toyMC)
median expected limit: r < 3.0116 @ 95%CL (1 toyMC)
   68% expected band : 3.0116 < r < 3.0116
   95% expected band : 3.0116 < r < 3.0116
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1504830323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.7378 +/- 0.00522331 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.7378 @ 95%CL (1 toyMC)
median expected limit: r < 2.7378 @ 95%CL (1 toyMC)
   68% expected band : 2.7378 < r < 2.7378
   95% expected band : 2.7378 < r < 2.7378
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -96653580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.29519 +/- 0.00705461 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.29519 @ 95%CL (1 toyMC)
median expected limit: r < 3.29519 @ 95%CL (1 toyMC)
   68% expected band : 3.29519 < r < 3.29519
   95% expected band : 3.29519 < r < 3.29519
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -462128312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52423 +/- 0.00673828 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.52423 @ 95%CL (1 toyMC)
median expected limit: r < 2.52423 @ 95%CL (1 toyMC)
   68% expected band : 2.52423 < r < 2.52423
   95% expected band : 2.52423 < r < 2.52423
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1352064822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.00093 +/- 0.00713102 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.00093 @ 95%CL (1 toyMC)
median expected limit: r < 3.00093 @ 95%CL (1 toyMC)
   68% expected band : 3.00093 < r < 3.00093
   95% expected band : 3.00093 < r < 3.00093
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -699630475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.93623 +/- 0.00660688 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.93623 @ 95%CL (1 toyMC)
median expected limit: r < 3.93623 @ 95%CL (1 toyMC)
   68% expected band : 3.93623 < r < 3.93623
   95% expected band : 3.93623 < r < 3.93623
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -231924581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.03757 +/- 0.00788873 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.03757 @ 95%CL (1 toyMC)
median expected limit: r < 6.03757 @ 95%CL (1 toyMC)
   68% expected band : 6.03757 < r < 6.03757
   95% expected band : 6.03757 < r < 6.03757
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1409004811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.95282 +/- 0.0067858 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.95282 @ 95%CL (1 toyMC)
median expected limit: r < 2.95282 @ 95%CL (1 toyMC)
   68% expected band : 2.95282 < r < 2.95282
   95% expected band : 2.95282 < r < 2.95282
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1948667698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71682 +/- 0.00581755 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.71682 @ 95%CL (1 toyMC)
median expected limit: r < 2.71682 @ 95%CL (1 toyMC)
   68% expected band : 2.71682 < r < 2.71682
   95% expected band : 2.71682 < r < 2.71682
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -939721343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36534 +/- 0.00608015 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.36534 @ 95%CL (1 toyMC)
median expected limit: r < 2.36534 @ 95%CL (1 toyMC)
   68% expected band : 2.36534 < r < 2.36534
   95% expected band : 2.36534 < r < 2.36534
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -576708616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54253 +/- 0.0066645 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.54253 @ 95%CL (1 toyMC)
median expected limit: r < 2.54253 @ 95%CL (1 toyMC)
   68% expected band : 2.54253 < r < 2.54253
   95% expected band : 2.54253 < r < 2.54253
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 998762346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.76257 +/- 0.00857297 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.76257 @ 95%CL (1 toyMC)
median expected limit: r < 3.76257 @ 95%CL (1 toyMC)
   68% expected band : 3.76257 < r < 3.76257
   95% expected band : 3.76257 < r < 3.76257
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -385496644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.41158 +/- 0.00802542 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.41158 @ 95%CL (1 toyMC)
median expected limit: r < 3.41158 @ 95%CL (1 toyMC)
   68% expected band : 3.41158 < r < 3.41158
   95% expected band : 3.41158 < r < 3.41158
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1775488165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.26821 +/- 0.00612363 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.26821 @ 95%CL (1 toyMC)
median expected limit: r < 3.26821 @ 95%CL (1 toyMC)
   68% expected band : 3.26821 < r < 3.26821
   95% expected band : 3.26821 < r < 3.26821
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -449181661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37551 +/- 0.0058337 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.37551 @ 95%CL (1 toyMC)
median expected limit: r < 2.37551 @ 95%CL (1 toyMC)
   68% expected band : 2.37551 < r < 2.37551
   95% expected band : 2.37551 < r < 2.37551
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1547834252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47633 +/- 0.00671276 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.47633 @ 95%CL (1 toyMC)
median expected limit: r < 2.47633 @ 95%CL (1 toyMC)
   68% expected band : 2.47633 < r < 2.47633
   95% expected band : 2.47633 < r < 2.47633
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1851433323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46496 +/- 0.0070708 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.46496 @ 95%CL (1 toyMC)
median expected limit: r < 2.46496 @ 95%CL (1 toyMC)
   68% expected band : 2.46496 < r < 2.46496
   95% expected band : 2.46496 < r < 2.46496
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -790567823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.38866 +/- 0.00609097 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.38866 @ 95%CL (1 toyMC)
median expected limit: r < 3.38866 @ 95%CL (1 toyMC)
   68% expected band : 3.38866 < r < 3.38866
   95% expected band : 3.38866 < r < 3.38866
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 612147347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.90479 +/- 0.00641999 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.90479 @ 95%CL (1 toyMC)
median expected limit: r < 2.90479 @ 95%CL (1 toyMC)
   68% expected band : 2.90479 < r < 2.90479
   95% expected band : 2.90479 < r < 2.90479
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1162447163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.12547 +/- 0.00837159 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.12547 @ 95%CL (1 toyMC)
median expected limit: r < 4.12547 @ 95%CL (1 toyMC)
   68% expected band : 4.12547 < r < 4.12547
   95% expected band : 4.12547 < r < 4.12547
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 265728830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.33481 +/- 0.00624275 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.33481 @ 95%CL (1 toyMC)
median expected limit: r < 2.33481 @ 95%CL (1 toyMC)
   68% expected band : 2.33481 < r < 2.33481
   95% expected band : 2.33481 < r < 2.33481
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1528111698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20081 +/- 0.00675149 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 2.20081 @ 95%CL (1 toyMC)
median expected limit: r < 2.20081 @ 95%CL (1 toyMC)
   68% expected band : 2.20081 < r < 2.20081
   95% expected band : 2.20081 < r < 2.20081
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1182041379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.73264 +/- 0.00587002 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.73264 @ 95%CL (1 toyMC)
median expected limit: r < 2.73264 @ 95%CL (1 toyMC)
   68% expected band : 2.73264 < r < 2.73264
   95% expected band : 2.73264 < r < 2.73264
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1238809931
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.14431 +/- 0.00578044 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.14431 @ 95%CL (1 toyMC)
median expected limit: r < 2.14431 @ 95%CL (1 toyMC)
   68% expected band : 2.14431 < r < 2.14431
   95% expected band : 2.14431 < r < 2.14431
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1618978086
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.39756 +/- 0.00791453 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.39756 @ 95%CL (1 toyMC)
median expected limit: r < 3.39756 @ 95%CL (1 toyMC)
   68% expected band : 3.39756 < r < 3.39756
   95% expected band : 3.39756 < r < 3.39756
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2066258252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.87293 +/- 0.00735492 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.87293 @ 95%CL (1 toyMC)
median expected limit: r < 3.87293 @ 95%CL (1 toyMC)
   68% expected band : 3.87293 < r < 3.87293
   95% expected band : 3.87293 < r < 3.87293
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1461405562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.41125 +/- 0.00772224 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.41125 @ 95%CL (1 toyMC)
median expected limit: r < 4.41125 @ 95%CL (1 toyMC)
   68% expected band : 4.41125 < r < 4.41125
   95% expected band : 4.41125 < r < 4.41125
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1015977712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69905 +/- 0.00665511 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.69905 @ 95%CL (1 toyMC)
median expected limit: r < 2.69905 @ 95%CL (1 toyMC)
   68% expected band : 2.69905 < r < 2.69905
   95% expected band : 2.69905 < r < 2.69905
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1490641974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.41028 +/- 0.00804958 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.41028 @ 95%CL (1 toyMC)
median expected limit: r < 3.41028 @ 95%CL (1 toyMC)
   68% expected band : 3.41028 < r < 3.41028
   95% expected band : 3.41028 < r < 3.41028
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1703089500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0128 +/- 0.00875592 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 5.0128 @ 95%CL (1 toyMC)
median expected limit: r < 5.0128 @ 95%CL (1 toyMC)
   68% expected band : 5.0128 < r < 5.0128
   95% expected band : 5.0128 < r < 5.0128
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1584824128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.85813 +/- 0.0060797 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.85813 @ 95%CL (1 toyMC)
median expected limit: r < 3.85813 @ 95%CL (1 toyMC)
   68% expected band : 3.85813 < r < 3.85813
   95% expected band : 3.85813 < r < 3.85813
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 896713440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82986 +/- 0.00520106 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.82986 @ 95%CL (1 toyMC)
median expected limit: r < 2.82986 @ 95%CL (1 toyMC)
   68% expected band : 2.82986 < r < 2.82986
   95% expected band : 2.82986 < r < 2.82986
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1430643731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67011 +/- 0.00819356 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.67011 @ 95%CL (1 toyMC)
median expected limit: r < 3.67011 @ 95%CL (1 toyMC)
   68% expected band : 3.67011 < r < 3.67011
   95% expected band : 3.67011 < r < 3.67011
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2139566782
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.31949 +/- 0.00976601 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.31949 @ 95%CL (1 toyMC)
median expected limit: r < 4.31949 @ 95%CL (1 toyMC)
   68% expected band : 4.31949 < r < 4.31949
   95% expected band : 4.31949 < r < 4.31949
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1000392053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.74341 +/- 0.00635848 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.74341 @ 95%CL (1 toyMC)
median expected limit: r < 3.74341 @ 95%CL (1 toyMC)
   68% expected band : 3.74341 < r < 3.74341
   95% expected band : 3.74341 < r < 3.74341
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1480654730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.10536 +/- 0.00692544 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.10536 @ 95%CL (1 toyMC)
median expected limit: r < 4.10536 @ 95%CL (1 toyMC)
   68% expected band : 4.10536 < r < 4.10536
   95% expected band : 4.10536 < r < 4.10536
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 847363398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32913 +/- 0.00632809 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.32913 @ 95%CL (1 toyMC)
median expected limit: r < 2.32913 @ 95%CL (1 toyMC)
   68% expected band : 2.32913 < r < 2.32913
   95% expected band : 2.32913 < r < 2.32913
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 28622353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41426 +/- 0.00690024 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.41426 @ 95%CL (1 toyMC)
median expected limit: r < 2.41426 @ 95%CL (1 toyMC)
   68% expected band : 2.41426 < r < 2.41426
   95% expected band : 2.41426 < r < 2.41426
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1400549398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.65422 +/- 0.00649328 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.65422 @ 95%CL (1 toyMC)
median expected limit: r < 3.65422 @ 95%CL (1 toyMC)
   68% expected band : 3.65422 < r < 3.65422
   95% expected band : 3.65422 < r < 3.65422
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -980511895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4765 +/- 0.00662044 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.4765 @ 95%CL (1 toyMC)
median expected limit: r < 3.4765 @ 95%CL (1 toyMC)
   68% expected band : 3.4765 < r < 3.4765
   95% expected band : 3.4765 < r < 3.4765
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 296674911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.31402 +/- 0.00762628 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.31402 @ 95%CL (1 toyMC)
median expected limit: r < 3.31402 @ 95%CL (1 toyMC)
   68% expected band : 3.31402 < r < 3.31402
   95% expected band : 3.31402 < r < 3.31402
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 515008009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.91541 +/- 0.00858922 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 5.91541 @ 95%CL (1 toyMC)
median expected limit: r < 5.91541 @ 95%CL (1 toyMC)
   68% expected band : 5.91541 < r < 5.91541
   95% expected band : 5.91541 < r < 5.91541
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 500618153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.33561 +/- 0.00596662 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.33561 @ 95%CL (1 toyMC)
median expected limit: r < 3.33561 @ 95%CL (1 toyMC)
   68% expected band : 3.33561 < r < 3.33561
   95% expected band : 3.33561 < r < 3.33561
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -229130444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45472 +/- 0.00563689 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.45472 @ 95%CL (1 toyMC)
median expected limit: r < 2.45472 @ 95%CL (1 toyMC)
   68% expected band : 2.45472 < r < 2.45472
   95% expected band : 2.45472 < r < 2.45472
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 702474740
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.28891 +/- 0.00552944 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.28891 @ 95%CL (1 toyMC)
median expected limit: r < 2.28891 @ 95%CL (1 toyMC)
   68% expected band : 2.28891 < r < 2.28891
   95% expected band : 2.28891 < r < 2.28891
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1150058309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.80611 +/- 0.00549631 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.80611 @ 95%CL (1 toyMC)
median expected limit: r < 2.80611 @ 95%CL (1 toyMC)
   68% expected band : 2.80611 < r < 2.80611
   95% expected band : 2.80611 < r < 2.80611
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -22257171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.99646 +/- 0.00639142 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.99646 @ 95%CL (1 toyMC)
median expected limit: r < 2.99646 @ 95%CL (1 toyMC)
   68% expected band : 2.99646 < r < 2.99646
   95% expected band : 2.99646 < r < 2.99646
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1375498455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.63399 +/- 0.00758101 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.63399 @ 95%CL (1 toyMC)
median expected limit: r < 3.63399 @ 95%CL (1 toyMC)
   68% expected band : 3.63399 < r < 3.63399
   95% expected band : 3.63399 < r < 3.63399
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1139827923
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.39966 +/- 0.00587798 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.39966 @ 95%CL (1 toyMC)
median expected limit: r < 2.39966 @ 95%CL (1 toyMC)
   68% expected band : 2.39966 < r < 2.39966
   95% expected band : 2.39966 < r < 2.39966
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1457219245
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.93418 +/- 0.00842029 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 4.93418 @ 95%CL (1 toyMC)
median expected limit: r < 4.93418 @ 95%CL (1 toyMC)
   68% expected band : 4.93418 < r < 4.93418
   95% expected band : 4.93418 < r < 4.93418
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 549896200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.06635 +/- 0.00671944 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.06635 @ 95%CL (1 toyMC)
median expected limit: r < 4.06635 @ 95%CL (1 toyMC)
   68% expected band : 4.06635 < r < 4.06635
   95% expected band : 4.06635 < r < 4.06635
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1430250071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44998 +/- 0.00639499 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.44998 @ 95%CL (1 toyMC)
median expected limit: r < 2.44998 @ 95%CL (1 toyMC)
   68% expected band : 2.44998 < r < 2.44998
   95% expected band : 2.44998 < r < 2.44998
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -634042030
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.21041 +/- 0.00829179 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.21041 @ 95%CL (1 toyMC)
median expected limit: r < 3.21041 @ 95%CL (1 toyMC)
   68% expected band : 3.21041 < r < 3.21041
   95% expected band : 3.21041 < r < 3.21041
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 791260460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86775 +/- 0.00639723 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.86775 @ 95%CL (1 toyMC)
median expected limit: r < 2.86775 @ 95%CL (1 toyMC)
   68% expected band : 2.86775 < r < 2.86775
   95% expected band : 2.86775 < r < 2.86775
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -130685810
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.23794 +/- 0.00602264 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.23794 @ 95%CL (1 toyMC)
median expected limit: r < 3.23794 @ 95%CL (1 toyMC)
   68% expected band : 3.23794 < r < 3.23794
   95% expected band : 3.23794 < r < 3.23794
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2018229561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.07179 +/- 0.00598981 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.07179 @ 95%CL (1 toyMC)
median expected limit: r < 4.07179 @ 95%CL (1 toyMC)
   68% expected band : 4.07179 < r < 4.07179
   95% expected band : 4.07179 < r < 4.07179
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1514977000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.55138 +/- 0.00762569 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 5.55138 @ 95%CL (1 toyMC)
median expected limit: r < 5.55138 @ 95%CL (1 toyMC)
   68% expected band : 5.55138 < r < 5.55138
   95% expected band : 5.55138 < r < 5.55138
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1191429266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20554 +/- 0.0067671 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 2.20554 @ 95%CL (1 toyMC)
median expected limit: r < 2.20554 @ 95%CL (1 toyMC)
   68% expected band : 2.20554 < r < 2.20554
   95% expected band : 2.20554 < r < 2.20554
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1072152570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19773 +/- 0.0104125 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.19773 @ 95%CL (1 toyMC)
median expected limit: r < 6.19773 @ 95%CL (1 toyMC)
   68% expected band : 6.19773 < r < 6.19773
   95% expected band : 6.19773 < r < 6.19773
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2115216980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.09609 +/- 0.00588041 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.09609 @ 95%CL (1 toyMC)
median expected limit: r < 2.09609 @ 95%CL (1 toyMC)
   68% expected band : 2.09609 < r < 2.09609
   95% expected band : 2.09609 < r < 2.09609
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -565103245
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03875 +/- 0.0045926 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 2.03875 @ 95%CL (1 toyMC)
median expected limit: r < 2.03875 @ 95%CL (1 toyMC)
   68% expected band : 2.03875 < r < 2.03875
   95% expected band : 2.03875 < r < 2.03875
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1092031334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53496 +/- 0.00665006 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.53496 @ 95%CL (1 toyMC)
median expected limit: r < 2.53496 @ 95%CL (1 toyMC)
   68% expected band : 2.53496 < r < 2.53496
   95% expected band : 2.53496 < r < 2.53496
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1232581708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.00747 +/- 0.00776162 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.00747 @ 95%CL (1 toyMC)
median expected limit: r < 4.00747 @ 95%CL (1 toyMC)
   68% expected band : 4.00747 < r < 4.00747
   95% expected band : 4.00747 < r < 4.00747
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1425935038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53556 +/- 0.0051789 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.53556 @ 95%CL (1 toyMC)
median expected limit: r < 2.53556 @ 95%CL (1 toyMC)
   68% expected band : 2.53556 < r < 2.53556
   95% expected band : 2.53556 < r < 2.53556
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1272774390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08336 +/- 0.00689725 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.08336 @ 95%CL (1 toyMC)
median expected limit: r < 3.08336 @ 95%CL (1 toyMC)
   68% expected band : 3.08336 < r < 3.08336
   95% expected band : 3.08336 < r < 3.08336
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1747316609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.78263 +/- 0.00704575 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.78263 @ 95%CL (1 toyMC)
median expected limit: r < 4.78263 @ 95%CL (1 toyMC)
   68% expected band : 4.78263 < r < 4.78263
   95% expected band : 4.78263 < r < 4.78263
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2142943008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.28438 +/- 0.00502397 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.28438 @ 95%CL (1 toyMC)
median expected limit: r < 2.28438 @ 95%CL (1 toyMC)
   68% expected band : 2.28438 < r < 2.28438
   95% expected band : 2.28438 < r < 2.28438
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -373270415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.06202 +/- 0.00738065 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.06202 @ 95%CL (1 toyMC)
median expected limit: r < 4.06202 @ 95%CL (1 toyMC)
   68% expected band : 4.06202 < r < 4.06202
   95% expected band : 4.06202 < r < 4.06202
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1338197136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.9319 +/- 0.007622 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 4.9319 @ 95%CL (1 toyMC)
median expected limit: r < 4.9319 @ 95%CL (1 toyMC)
   68% expected band : 4.9319 < r < 4.9319
   95% expected band : 4.9319 < r < 4.9319
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 356849251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.63668 +/- 0.00585844 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.63668 @ 95%CL (1 toyMC)
median expected limit: r < 2.63668 @ 95%CL (1 toyMC)
   68% expected band : 2.63668 < r < 2.63668
   95% expected band : 2.63668 < r < 2.63668
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -817569140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.84865 +/- 0.00806716 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.84865 @ 95%CL (1 toyMC)
median expected limit: r < 3.84865 @ 95%CL (1 toyMC)
   68% expected band : 3.84865 < r < 3.84865
   95% expected band : 3.84865 < r < 3.84865
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1346392445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97584 +/- 0.00975156 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.97584 @ 95%CL (1 toyMC)
median expected limit: r < 3.97584 @ 95%CL (1 toyMC)
   68% expected band : 3.97584 < r < 3.97584
   95% expected band : 3.97584 < r < 3.97584
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1465927605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49924 +/- 0.00609476 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.49924 @ 95%CL (1 toyMC)
median expected limit: r < 3.49924 @ 95%CL (1 toyMC)
   68% expected band : 3.49924 < r < 3.49924
   95% expected band : 3.49924 < r < 3.49924
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 463020979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.90702 +/- 0.00662307 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.90702 @ 95%CL (1 toyMC)
median expected limit: r < 2.90702 @ 95%CL (1 toyMC)
   68% expected band : 2.90702 < r < 2.90702
   95% expected band : 2.90702 < r < 2.90702
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 726194743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.65196 +/- 0.00671592 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 4.65196 @ 95%CL (1 toyMC)
median expected limit: r < 4.65196 @ 95%CL (1 toyMC)
   68% expected band : 4.65196 < r < 4.65196
   95% expected band : 4.65196 < r < 4.65196
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 973331523
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.62489 +/- 0.00939481 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 5.62489 @ 95%CL (1 toyMC)
median expected limit: r < 5.62489 @ 95%CL (1 toyMC)
   68% expected band : 5.62489 < r < 5.62489
   95% expected band : 5.62489 < r < 5.62489
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1777638240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.43476 +/- 0.00892732 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 5.43476 @ 95%CL (1 toyMC)
median expected limit: r < 5.43476 @ 95%CL (1 toyMC)
   68% expected band : 5.43476 < r < 5.43476
   95% expected band : 5.43476 < r < 5.43476
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1890738914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.52085 +/- 0.00889663 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.52085 @ 95%CL (1 toyMC)
median expected limit: r < 4.52085 @ 95%CL (1 toyMC)
   68% expected band : 4.52085 < r < 4.52085
   95% expected band : 4.52085 < r < 4.52085
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 807335947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.76374 +/- 0.010917 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 5.76374 @ 95%CL (1 toyMC)
median expected limit: r < 5.76374 @ 95%CL (1 toyMC)
   68% expected band : 5.76374 < r < 5.76374
   95% expected band : 5.76374 < r < 5.76374
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 821843266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.69338 +/- 0.00785251 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.69338 @ 95%CL (1 toyMC)
median expected limit: r < 3.69338 @ 95%CL (1 toyMC)
   68% expected band : 3.69338 < r < 3.69338
   95% expected band : 3.69338 < r < 3.69338
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1756810135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.66188 +/- 0.00715374 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.66188 @ 95%CL (1 toyMC)
median expected limit: r < 2.66188 @ 95%CL (1 toyMC)
   68% expected band : 2.66188 < r < 2.66188
   95% expected band : 2.66188 < r < 2.66188
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2133891723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.72324 +/- 0.00980382 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 5.72324 @ 95%CL (1 toyMC)
median expected limit: r < 5.72324 @ 95%CL (1 toyMC)
   68% expected band : 5.72324 < r < 5.72324
   95% expected band : 5.72324 < r < 5.72324
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2061111747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.63679 +/- 0.00752856 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.63679 @ 95%CL (1 toyMC)
median expected limit: r < 4.63679 @ 95%CL (1 toyMC)
   68% expected band : 4.63679 < r < 4.63679
   95% expected band : 4.63679 < r < 4.63679
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1308014477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89246 +/- 0.00846643 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.89246 @ 95%CL (1 toyMC)
median expected limit: r < 2.89246 @ 95%CL (1 toyMC)
   68% expected band : 2.89246 < r < 2.89246
   95% expected band : 2.89246 < r < 2.89246
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1609461389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.48088 +/- 0.0101514 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.48088 @ 95%CL (1 toyMC)
median expected limit: r < 6.48088 @ 95%CL (1 toyMC)
   68% expected band : 6.48088 < r < 6.48088
   95% expected band : 6.48088 < r < 6.48088
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399730567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.00247 +/- 0.00749297 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.00247 @ 95%CL (1 toyMC)
median expected limit: r < 4.00247 @ 95%CL (1 toyMC)
   68% expected band : 4.00247 < r < 4.00247
   95% expected band : 4.00247 < r < 4.00247
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 259188654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.42796 +/- 0.0113764 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 5.42796 @ 95%CL (1 toyMC)
median expected limit: r < 5.42796 @ 95%CL (1 toyMC)
   68% expected band : 5.42796 < r < 5.42796
   95% expected band : 5.42796 < r < 5.42796
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 392538331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.85026 +/- 0.0132888 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 7.85026 @ 95%CL (1 toyMC)
median expected limit: r < 7.85026 @ 95%CL (1 toyMC)
   68% expected band : 7.85026 < r < 7.85026
   95% expected band : 7.85026 < r < 7.85026
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 670389127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.2805 +/- 0.0071624 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.2805 @ 95%CL (1 toyMC)
median expected limit: r < 4.2805 @ 95%CL (1 toyMC)
   68% expected band : 4.2805 < r < 4.2805
   95% expected band : 4.2805 < r < 4.2805
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -621273595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.17996 +/- 0.00785694 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 5.17996 @ 95%CL (1 toyMC)
median expected limit: r < 5.17996 @ 95%CL (1 toyMC)
   68% expected band : 5.17996 < r < 5.17996
   95% expected band : 5.17996 < r < 5.17996
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 668979742
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40403 +/- 0.00676672 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.40403 @ 95%CL (1 toyMC)
median expected limit: r < 2.40403 @ 95%CL (1 toyMC)
   68% expected band : 2.40403 < r < 2.40403
   95% expected band : 2.40403 < r < 2.40403
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1079729441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97269 +/- 0.00815756 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 3.97269 @ 95%CL (1 toyMC)
median expected limit: r < 3.97269 @ 95%CL (1 toyMC)
   68% expected band : 3.97269 < r < 3.97269
   95% expected band : 3.97269 < r < 3.97269
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 212249289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.84856 +/- 0.0166021 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 9.84856 @ 95%CL (1 toyMC)
median expected limit: r < 9.84856 @ 95%CL (1 toyMC)
   68% expected band : 9.84856 < r < 9.84856
   95% expected band : 9.84856 < r < 9.84856
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1794551239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.40102 +/- 0.0147699 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 6.40102 @ 95%CL (1 toyMC)
median expected limit: r < 6.40102 @ 95%CL (1 toyMC)
   68% expected band : 6.40102 < r < 6.40102
   95% expected band : 6.40102 < r < 6.40102
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2041099919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.61314 +/- 0.0133369 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 6.61314 @ 95%CL (1 toyMC)
median expected limit: r < 6.61314 @ 95%CL (1 toyMC)
   68% expected band : 6.61314 < r < 6.61314
   95% expected band : 6.61314 < r < 6.61314
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1937010483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.2128 +/- 0.0140565 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 6.2128 @ 95%CL (1 toyMC)
median expected limit: r < 6.2128 @ 95%CL (1 toyMC)
   68% expected band : 6.2128 < r < 6.2128
   95% expected band : 6.2128 < r < 6.2128
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 442847547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.70354 +/- 0.016717 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 7.70354 @ 95%CL (1 toyMC)
median expected limit: r < 7.70354 @ 95%CL (1 toyMC)
   68% expected band : 7.70354 < r < 7.70354
   95% expected band : 7.70354 < r < 7.70354
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 39413798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.27487 +/- 0.0123778 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.27487 @ 95%CL (1 toyMC)
median expected limit: r < 7.27487 @ 95%CL (1 toyMC)
   68% expected band : 7.27487 < r < 7.27487
   95% expected band : 7.27487 < r < 7.27487
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2044357879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.21364 +/- 0.0176782 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.21364 @ 95%CL (1 toyMC)
median expected limit: r < 8.21364 @ 95%CL (1 toyMC)
   68% expected band : 8.21364 < r < 8.21364
   95% expected band : 8.21364 < r < 8.21364
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1846092640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.37104 +/- 0.0178699 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 8.37104 @ 95%CL (1 toyMC)
median expected limit: r < 8.37104 @ 95%CL (1 toyMC)
   68% expected band : 8.37104 < r < 8.37104
   95% expected band : 8.37104 < r < 8.37104
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1760308536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38936 +/- 0.0153035 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.38936 @ 95%CL (1 toyMC)
median expected limit: r < 7.38936 @ 95%CL (1 toyMC)
   68% expected band : 7.38936 < r < 7.38936
   95% expected band : 7.38936 < r < 7.38936
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1811677609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.67958 +/- 0.0154502 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.67958 @ 95%CL (1 toyMC)
median expected limit: r < 7.67958 @ 95%CL (1 toyMC)
   68% expected band : 7.67958 < r < 7.67958
   95% expected band : 7.67958 < r < 7.67958
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 914790583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.73765 +/- 0.0194904 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 8.73765 @ 95%CL (1 toyMC)
median expected limit: r < 8.73765 @ 95%CL (1 toyMC)
   68% expected band : 8.73765 < r < 8.73765
   95% expected band : 8.73765 < r < 8.73765
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2081130990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.87342 +/- 0.0107217 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 5.87342 @ 95%CL (1 toyMC)
median expected limit: r < 5.87342 @ 95%CL (1 toyMC)
   68% expected band : 5.87342 < r < 5.87342
   95% expected band : 5.87342 < r < 5.87342
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1813839892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.2316 +/- 0.0177943 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 8.2316 @ 95%CL (1 toyMC)
median expected limit: r < 8.2316 @ 95%CL (1 toyMC)
   68% expected band : 8.2316 < r < 8.2316
   95% expected band : 8.2316 < r < 8.2316
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1184450265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.006 +/- 0.0188314 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 12.006 @ 95%CL (1 toyMC)
median expected limit: r < 12.006 @ 95%CL (1 toyMC)
   68% expected band : 12.006 < r < 12.006
   95% expected band : 12.006 < r < 12.006
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1666057411
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.51209 +/- 0.0175162 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 9.51209 @ 95%CL (1 toyMC)
median expected limit: r < 9.51209 @ 95%CL (1 toyMC)
   68% expected band : 9.51209 < r < 9.51209
   95% expected band : 9.51209 < r < 9.51209
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -804751736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3523 +/- 0.0145404 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 11.3523 @ 95%CL (1 toyMC)
median expected limit: r < 11.3523 @ 95%CL (1 toyMC)
   68% expected band : 11.3523 < r < 11.3523
   95% expected band : 11.3523 < r < 11.3523
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1040122207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.79318 +/- 0.0133833 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 5.79318 @ 95%CL (1 toyMC)
median expected limit: r < 5.79318 @ 95%CL (1 toyMC)
   68% expected band : 5.79318 < r < 5.79318
   95% expected band : 5.79318 < r < 5.79318
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 990766552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.70672 +/- 0.015085 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.70672 @ 95%CL (1 toyMC)
median expected limit: r < 6.70672 @ 95%CL (1 toyMC)
   68% expected band : 6.70672 < r < 6.70672
   95% expected band : 6.70672 < r < 6.70672
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1876862388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2004 +/- 0.0161828 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 12.2004 @ 95%CL (1 toyMC)
median expected limit: r < 12.2004 @ 95%CL (1 toyMC)
   68% expected band : 12.2004 < r < 12.2004
   95% expected band : 12.2004 < r < 12.2004
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 441531525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.04688 +/- 0.015526 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.04688 @ 95%CL (1 toyMC)
median expected limit: r < 9.04688 @ 95%CL (1 toyMC)
   68% expected band : 9.04688 < r < 9.04688
   95% expected band : 9.04688 < r < 9.04688
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 365166055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1991 +/- 0.0143606 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 12.1991 @ 95%CL (1 toyMC)
median expected limit: r < 12.1991 @ 95%CL (1 toyMC)
   68% expected band : 12.1991 < r < 12.1991
   95% expected band : 12.1991 < r < 12.1991
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2034599725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.19359 +/- 0.0127246 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.19359 @ 95%CL (1 toyMC)
median expected limit: r < 7.19359 @ 95%CL (1 toyMC)
   68% expected band : 7.19359 < r < 7.19359
   95% expected band : 7.19359 < r < 7.19359
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1803519634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20192 +/- 0.013361 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.20192 @ 95%CL (1 toyMC)
median expected limit: r < 6.20192 @ 95%CL (1 toyMC)
   68% expected band : 6.20192 < r < 6.20192
   95% expected band : 6.20192 < r < 6.20192
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1984170829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8326 +/- 0.0150915 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.60 min (real)
mean   expected limit: r < 12.8326 @ 95%CL (1 toyMC)
median expected limit: r < 12.8326 @ 95%CL (1 toyMC)
   68% expected band : 12.8326 < r < 12.8326
   95% expected band : 12.8326 < r < 12.8326
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -229987723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8982 +/- 0.0127796 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.58 min (real)
mean   expected limit: r < 14.8982 @ 95%CL (1 toyMC)
median expected limit: r < 14.8982 @ 95%CL (1 toyMC)
   68% expected band : 14.8982 < r < 14.8982
   95% expected band : 14.8982 < r < 14.8982
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -620545025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.39645 +/- 0.01577 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 9.39645 @ 95%CL (1 toyMC)
median expected limit: r < 9.39645 @ 95%CL (1 toyMC)
   68% expected band : 9.39645 < r < 9.39645
   95% expected band : 9.39645 < r < 9.39645
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -868545048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.21588 +/- 0.0173354 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 8.21588 @ 95%CL (1 toyMC)
median expected limit: r < 8.21588 @ 95%CL (1 toyMC)
   68% expected band : 8.21588 < r < 8.21588
   95% expected band : 8.21588 < r < 8.21588
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1880889164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.68336 +/- 0.0174432 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.68336 @ 95%CL (1 toyMC)
median expected limit: r < 7.68336 @ 95%CL (1 toyMC)
   68% expected band : 7.68336 < r < 7.68336
   95% expected band : 7.68336 < r < 7.68336
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2102072223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5408 +/- 0.0162132 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.60 min (real)
mean   expected limit: r < 12.5408 @ 95%CL (1 toyMC)
median expected limit: r < 12.5408 @ 95%CL (1 toyMC)
   68% expected band : 12.5408 < r < 12.5408
   95% expected band : 12.5408 < r < 12.5408
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1306399727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.12402 +/- 0.0200419 @ 95% CL (100 tries)
Done in 0.59 min (cpu), 0.59 min (real)
mean   expected limit: r < 9.12402 @ 95%CL (1 toyMC)
median expected limit: r < 9.12402 @ 95%CL (1 toyMC)
   68% expected band : 9.12402 < r < 9.12402
   95% expected band : 9.12402 < r < 9.12402
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1455347162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.50408 +/- 0.0148566 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 9.50408 @ 95%CL (1 toyMC)
median expected limit: r < 9.50408 @ 95%CL (1 toyMC)
   68% expected band : 9.50408 < r < 9.50408
   95% expected band : 9.50408 < r < 9.50408
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -388351700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.93359 +/- 0.0170473 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 9.93359 @ 95%CL (1 toyMC)
median expected limit: r < 9.93359 @ 95%CL (1 toyMC)
   68% expected band : 9.93359 < r < 9.93359
   95% expected band : 9.93359 < r < 9.93359
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -24878196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.66877 +/- 0.0140169 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 6.66877 @ 95%CL (1 toyMC)
median expected limit: r < 6.66877 @ 95%CL (1 toyMC)
   68% expected band : 6.66877 < r < 6.66877
   95% expected band : 6.66877 < r < 6.66877
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1146760517
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9306 +/- 0.0191031 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 11.9306 @ 95%CL (1 toyMC)
median expected limit: r < 11.9306 @ 95%CL (1 toyMC)
   68% expected band : 11.9306 < r < 11.9306
   95% expected band : 11.9306 < r < 11.9306
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 861765668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3222 +/- 0.0217836 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 11.3222 @ 95%CL (1 toyMC)
median expected limit: r < 11.3222 @ 95%CL (1 toyMC)
   68% expected band : 11.3222 < r < 11.3222
   95% expected band : 11.3222 < r < 11.3222
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 406955910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8801 +/- 0.0140314 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 10.8801 @ 95%CL (1 toyMC)
median expected limit: r < 10.8801 @ 95%CL (1 toyMC)
   68% expected band : 10.8801 < r < 10.8801
   95% expected band : 10.8801 < r < 10.8801
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -221416610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.41788 +/- 0.0150881 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 6.41788 @ 95%CL (1 toyMC)
median expected limit: r < 6.41788 @ 95%CL (1 toyMC)
   68% expected band : 6.41788 < r < 6.41788
   95% expected band : 6.41788 < r < 6.41788
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 226833823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.021 +/- 0.0151516 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 8.021 @ 95%CL (1 toyMC)
median expected limit: r < 8.021 @ 95%CL (1 toyMC)
   68% expected band : 8.021 < r < 8.021
   95% expected band : 8.021 < r < 8.021
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 625386070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2173 +/- 0.0126247 @ 95% CL (100 tries)
Done in 0.62 min (cpu), 0.63 min (real)
mean   expected limit: r < 14.2173 @ 95%CL (1 toyMC)
median expected limit: r < 14.2173 @ 95%CL (1 toyMC)
   68% expected band : 14.2173 < r < 14.2173
   95% expected band : 14.2173 < r < 14.2173
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 981148980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.53555 +/- 0.0149645 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 7.53555 @ 95%CL (1 toyMC)
median expected limit: r < 7.53555 @ 95%CL (1 toyMC)
   68% expected band : 7.53555 < r < 7.53555
   95% expected band : 7.53555 < r < 7.53555
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1450374184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.67322 +/- 0.0164175 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 8.67322 @ 95%CL (1 toyMC)
median expected limit: r < 8.67322 @ 95%CL (1 toyMC)
   68% expected band : 8.67322 < r < 8.67322
   95% expected band : 8.67322 < r < 8.67322
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1752010320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.87478 +/- 0.0188437 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.87478 @ 95%CL (1 toyMC)
median expected limit: r < 7.87478 @ 95%CL (1 toyMC)
   68% expected band : 7.87478 < r < 7.87478
   95% expected band : 7.87478 < r < 7.87478
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 286048593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.20055 +/- 0.0168246 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 8.20055 @ 95%CL (1 toyMC)
median expected limit: r < 8.20055 @ 95%CL (1 toyMC)
   68% expected band : 8.20055 < r < 8.20055
   95% expected band : 8.20055 < r < 8.20055
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1428684800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.33209 +/- 0.0188348 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 9.33209 @ 95%CL (1 toyMC)
median expected limit: r < 9.33209 @ 95%CL (1 toyMC)
   68% expected band : 9.33209 < r < 9.33209
   95% expected band : 9.33209 < r < 9.33209
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1401748544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4322 +/- 0.0176752 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 13.4322 @ 95%CL (1 toyMC)
median expected limit: r < 13.4322 @ 95%CL (1 toyMC)
   68% expected band : 13.4322 < r < 13.4322
   95% expected band : 13.4322 < r < 13.4322
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1110083043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.31036 +/- 0.0158291 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 8.31036 @ 95%CL (1 toyMC)
median expected limit: r < 8.31036 @ 95%CL (1 toyMC)
   68% expected band : 8.31036 < r < 8.31036
   95% expected band : 8.31036 < r < 8.31036
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2083645962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.15713 +/- 0.019676 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.15713 @ 95%CL (1 toyMC)
median expected limit: r < 8.15713 @ 95%CL (1 toyMC)
   68% expected band : 8.15713 < r < 8.15713
   95% expected band : 8.15713 < r < 8.15713
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -242341056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.27855 +/- 0.0122398 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 6.27855 @ 95%CL (1 toyMC)
median expected limit: r < 6.27855 @ 95%CL (1 toyMC)
   68% expected band : 6.27855 < r < 6.27855
   95% expected band : 6.27855 < r < 6.27855
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1961533827
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.40784 +/- 0.0173485 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.58 min (real)
mean   expected limit: r < 8.40784 @ 95%CL (1 toyMC)
median expected limit: r < 8.40784 @ 95%CL (1 toyMC)
   68% expected band : 8.40784 < r < 8.40784
   95% expected band : 8.40784 < r < 8.40784
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 614778348
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5778 +/- 0.020364 @ 95% CL (100 tries)
Done in 0.58 min (cpu), 0.58 min (real)
mean   expected limit: r < 11.5778 @ 95%CL (1 toyMC)
median expected limit: r < 11.5778 @ 95%CL (1 toyMC)
   68% expected band : 11.5778 < r < 11.5778
   95% expected band : 11.5778 < r < 11.5778
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1503528085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.35805 +/- 0.0185855 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 8.35805 @ 95%CL (1 toyMC)
median expected limit: r < 8.35805 @ 95%CL (1 toyMC)
   68% expected band : 8.35805 < r < 8.35805
   95% expected band : 8.35805 < r < 8.35805
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1986337209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.19367 +/- 0.0173382 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 8.19367 @ 95%CL (1 toyMC)
median expected limit: r < 8.19367 @ 95%CL (1 toyMC)
   68% expected band : 8.19367 < r < 8.19367
   95% expected band : 8.19367 < r < 8.19367
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1683087636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6514 +/- 0.0136078 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.57 min (real)
mean   expected limit: r < 10.6514 @ 95%CL (1 toyMC)
median expected limit: r < 10.6514 @ 95%CL (1 toyMC)
   68% expected band : 10.6514 < r < 10.6514
   95% expected band : 10.6514 < r < 10.6514
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -643421125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8339 +/- 0.0166481 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.60 min (real)
mean   expected limit: r < 10.8339 @ 95%CL (1 toyMC)
median expected limit: r < 10.8339 @ 95%CL (1 toyMC)
   68% expected band : 10.8339 < r < 10.8339
   95% expected band : 10.8339 < r < 10.8339
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1151821128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.91339 +/- 0.0209197 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 9.91339 @ 95%CL (1 toyMC)
median expected limit: r < 9.91339 @ 95%CL (1 toyMC)
   68% expected band : 9.91339 < r < 9.91339
   95% expected band : 9.91339 < r < 9.91339
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2120975012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2517 +/- 0.0169963 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 11.2517 @ 95%CL (1 toyMC)
median expected limit: r < 11.2517 @ 95%CL (1 toyMC)
   68% expected band : 11.2517 < r < 11.2517
   95% expected band : 11.2517 < r < 11.2517
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1727360649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.97052 +/- 0.0169716 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 9.97052 @ 95%CL (1 toyMC)
median expected limit: r < 9.97052 @ 95%CL (1 toyMC)
   68% expected band : 9.97052 < r < 9.97052
   95% expected band : 9.97052 < r < 9.97052
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 236840395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.66809 +/- 0.0132556 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.66809 @ 95%CL (1 toyMC)
median expected limit: r < 7.66809 @ 95%CL (1 toyMC)
   68% expected band : 7.66809 < r < 7.66809
   95% expected band : 7.66809 < r < 7.66809
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1154044615
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.17552 +/- 0.0155938 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.17552 @ 95%CL (1 toyMC)
median expected limit: r < 9.17552 @ 95%CL (1 toyMC)
   68% expected band : 9.17552 < r < 9.17552
   95% expected band : 9.17552 < r < 9.17552
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1169699023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.64142 +/- 0.0183265 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 8.64142 @ 95%CL (1 toyMC)
median expected limit: r < 8.64142 @ 95%CL (1 toyMC)
   68% expected band : 8.64142 < r < 8.64142
   95% expected band : 8.64142 < r < 8.64142
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 324960605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.14809 +/- 0.018433 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 9.14809 @ 95%CL (1 toyMC)
median expected limit: r < 9.14809 @ 95%CL (1 toyMC)
   68% expected band : 9.14809 < r < 9.14809
   95% expected band : 9.14809 < r < 9.14809
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 178027203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.48905 +/- 0.0191265 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 8.48905 @ 95%CL (1 toyMC)
median expected limit: r < 8.48905 @ 95%CL (1 toyMC)
   68% expected band : 8.48905 < r < 8.48905
   95% expected band : 8.48905 < r < 8.48905
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -12007283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0085 +/- 0.0168847 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 10.0085 @ 95%CL (1 toyMC)
median expected limit: r < 10.0085 @ 95%CL (1 toyMC)
   68% expected band : 10.0085 < r < 10.0085
   95% expected band : 10.0085 < r < 10.0085
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1463395020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.11267 +/- 0.0155577 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 8.11267 @ 95%CL (1 toyMC)
median expected limit: r < 8.11267 @ 95%CL (1 toyMC)
   68% expected band : 8.11267 < r < 8.11267
   95% expected band : 8.11267 < r < 8.11267
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1328809458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3641 +/- 0.0166101 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.57 min (real)
mean   expected limit: r < 13.3641 @ 95%CL (1 toyMC)
median expected limit: r < 13.3641 @ 95%CL (1 toyMC)
   68% expected band : 13.3641 < r < 13.3641
   95% expected band : 13.3641 < r < 13.3641
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -451523191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77936 +/- 0.0157602 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.77936 @ 95%CL (1 toyMC)
median expected limit: r < 6.77936 @ 95%CL (1 toyMC)
   68% expected band : 6.77936 < r < 6.77936
   95% expected band : 6.77936 < r < 6.77936
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1133215980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.83272 +/- 0.0158951 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 7.83272 @ 95%CL (1 toyMC)
median expected limit: r < 7.83272 @ 95%CL (1 toyMC)
   68% expected band : 7.83272 < r < 7.83272
   95% expected band : 7.83272 < r < 7.83272
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1242721589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4064 +/- 0.0141584 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 11.4064 @ 95%CL (1 toyMC)
median expected limit: r < 11.4064 @ 95%CL (1 toyMC)
   68% expected band : 11.4064 < r < 11.4064
   95% expected band : 11.4064 < r < 11.4064
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 127431717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2041 +/- 0.0149283 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 10.2041 @ 95%CL (1 toyMC)
median expected limit: r < 10.2041 @ 95%CL (1 toyMC)
   68% expected band : 10.2041 < r < 10.2041
   95% expected band : 10.2041 < r < 10.2041
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 631488875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.88496 +/- 0.0154289 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.88496 @ 95%CL (1 toyMC)
median expected limit: r < 6.88496 @ 95%CL (1 toyMC)
   68% expected band : 6.88496 < r < 6.88496
   95% expected band : 6.88496 < r < 6.88496
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -130614734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.19884 +/- 0.0170955 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 9.19884 @ 95%CL (1 toyMC)
median expected limit: r < 9.19884 @ 95%CL (1 toyMC)
   68% expected band : 9.19884 < r < 9.19884
   95% expected band : 9.19884 < r < 9.19884
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 656038455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.65861 +/- 0.0159946 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 8.65861 @ 95%CL (1 toyMC)
median expected limit: r < 8.65861 @ 95%CL (1 toyMC)
   68% expected band : 8.65861 < r < 8.65861
   95% expected band : 8.65861 < r < 8.65861
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1475699064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.6382 +/- 0.0145772 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 8.6382 @ 95%CL (1 toyMC)
median expected limit: r < 8.6382 @ 95%CL (1 toyMC)
   68% expected band : 8.6382 < r < 8.6382
   95% expected band : 8.6382 < r < 8.6382
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -341589240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.93095 +/- 0.0186922 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 9.93095 @ 95%CL (1 toyMC)
median expected limit: r < 9.93095 @ 95%CL (1 toyMC)
   68% expected band : 9.93095 < r < 9.93095
   95% expected band : 9.93095 < r < 9.93095
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -212644584
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.679 +/- 0.0132217 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.57 min (real)
mean   expected limit: r < 11.679 @ 95%CL (1 toyMC)
median expected limit: r < 11.679 @ 95%CL (1 toyMC)
   68% expected band : 11.679 < r < 11.679
   95% expected band : 11.679 < r < 11.679
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -626877257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8797 +/- 0.0163427 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 10.8797 @ 95%CL (1 toyMC)
median expected limit: r < 10.8797 @ 95%CL (1 toyMC)
   68% expected band : 10.8797 < r < 10.8797
   95% expected band : 10.8797 < r < 10.8797
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -221708905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4528 +/- 0.0122225 @ 95% CL (100 tries)
Done in 0.61 min (cpu), 0.62 min (real)
mean   expected limit: r < 15.4528 @ 95%CL (1 toyMC)
median expected limit: r < 15.4528 @ 95%CL (1 toyMC)
   68% expected band : 15.4528 < r < 15.4528
   95% expected band : 15.4528 < r < 15.4528
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1118012473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.17804 +/- 0.0139619 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 9.17804 @ 95%CL (1 toyMC)
median expected limit: r < 9.17804 @ 95%CL (1 toyMC)
   68% expected band : 9.17804 < r < 9.17804
   95% expected band : 9.17804 < r < 9.17804
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -401204997
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.18043 +/- 0.0157691 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 6.18043 @ 95%CL (1 toyMC)
median expected limit: r < 6.18043 @ 95%CL (1 toyMC)
   68% expected band : 6.18043 < r < 6.18043
   95% expected band : 6.18043 < r < 6.18043
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1650503649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.15347 +/- 0.019338 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 9.15347 @ 95%CL (1 toyMC)
median expected limit: r < 9.15347 @ 95%CL (1 toyMC)
   68% expected band : 9.15347 < r < 9.15347
   95% expected band : 9.15347 < r < 9.15347
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 760278040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1878 +/- 0.0141498 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 14.1878 @ 95%CL (1 toyMC)
median expected limit: r < 14.1878 @ 95%CL (1 toyMC)
   68% expected band : 14.1878 < r < 14.1878
   95% expected band : 14.1878 < r < 14.1878
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1527196211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.83475 +/- 0.0125007 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 5.83475 @ 95%CL (1 toyMC)
median expected limit: r < 5.83475 @ 95%CL (1 toyMC)
   68% expected band : 5.83475 < r < 5.83475
   95% expected band : 5.83475 < r < 5.83475
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1792432713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.20341 +/- 0.0145926 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 8.20341 @ 95%CL (1 toyMC)
median expected limit: r < 8.20341 @ 95%CL (1 toyMC)
   68% expected band : 8.20341 < r < 8.20341
   95% expected band : 8.20341 < r < 8.20341
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1270140954
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4614 +/- 0.0111633 @ 95% CL (100 tries)
Done in 0.62 min (cpu), 0.62 min (real)
mean   expected limit: r < 16.4614 @ 95%CL (1 toyMC)
median expected limit: r < 16.4614 @ 95%CL (1 toyMC)
   68% expected band : 16.4614 < r < 16.4614
   95% expected band : 16.4614 < r < 16.4614
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1110156206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9611 +/- 0.0173735 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 11.9611 @ 95%CL (1 toyMC)
median expected limit: r < 11.9611 @ 95%CL (1 toyMC)
   68% expected band : 11.9611 < r < 11.9611
   95% expected band : 11.9611 < r < 11.9611
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 85859102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.70425 +/- 0.0205551 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 8.70425 @ 95%CL (1 toyMC)
median expected limit: r < 8.70425 @ 95%CL (1 toyMC)
   68% expected band : 8.70425 < r < 8.70425
   95% expected band : 8.70425 < r < 8.70425
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -5278938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.23362 +/- 0.0131298 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 6.23362 @ 95%CL (1 toyMC)
median expected limit: r < 6.23362 @ 95%CL (1 toyMC)
   68% expected band : 6.23362 < r < 6.23362
   95% expected band : 6.23362 < r < 6.23362
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1759496914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3772 +/- 0.0200859 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 11.3772 @ 95%CL (1 toyMC)
median expected limit: r < 11.3772 @ 95%CL (1 toyMC)
   68% expected band : 11.3772 < r < 11.3772
   95% expected band : 11.3772 < r < 11.3772
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1664417963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9883 +/- 0.015659 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 13.9883 @ 95%CL (1 toyMC)
median expected limit: r < 13.9883 @ 95%CL (1 toyMC)
   68% expected band : 13.9883 < r < 13.9883
   95% expected band : 13.9883 < r < 13.9883
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -235671799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.87465 +/- 0.015431 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.87465 @ 95%CL (1 toyMC)
median expected limit: r < 8.87465 @ 95%CL (1 toyMC)
   68% expected band : 8.87465 < r < 8.87465
   95% expected band : 8.87465 < r < 8.87465
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1319831552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.35473 +/- 0.0199201 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 8.35473 @ 95%CL (1 toyMC)
median expected limit: r < 8.35473 @ 95%CL (1 toyMC)
   68% expected band : 8.35473 < r < 8.35473
   95% expected band : 8.35473 < r < 8.35473
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1235420624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7351 +/- 0.0185932 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 10.7351 @ 95%CL (1 toyMC)
median expected limit: r < 10.7351 @ 95%CL (1 toyMC)
   68% expected band : 10.7351 < r < 10.7351
   95% expected band : 10.7351 < r < 10.7351
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1161003068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.19775 +/- 0.013778 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.19775 @ 95%CL (1 toyMC)
median expected limit: r < 7.19775 @ 95%CL (1 toyMC)
   68% expected band : 7.19775 < r < 7.19775
   95% expected band : 7.19775 < r < 7.19775
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1519489181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.46723 +/- 0.0134716 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.46723 @ 95%CL (1 toyMC)
median expected limit: r < 7.46723 @ 95%CL (1 toyMC)
   68% expected band : 7.46723 < r < 7.46723
   95% expected band : 7.46723 < r < 7.46723
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -626332065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.84221 +/- 0.0165151 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.84221 @ 95%CL (1 toyMC)
median expected limit: r < 6.84221 @ 95%CL (1 toyMC)
   68% expected band : 6.84221 < r < 6.84221
   95% expected band : 6.84221 < r < 6.84221
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 577430382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.90391 +/- 0.0172545 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 7.90391 @ 95%CL (1 toyMC)
median expected limit: r < 7.90391 @ 95%CL (1 toyMC)
   68% expected band : 7.90391 < r < 7.90391
   95% expected band : 7.90391 < r < 7.90391
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -17442066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8068 +/- 0.0154434 @ 95% CL (100 tries)
Done in 0.58 min (cpu), 0.58 min (real)
mean   expected limit: r < 13.8068 @ 95%CL (1 toyMC)
median expected limit: r < 13.8068 @ 95%CL (1 toyMC)
   68% expected band : 13.8068 < r < 13.8068
   95% expected band : 13.8068 < r < 13.8068
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1279130353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.21711 +/- 0.0124073 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 6.21711 @ 95%CL (1 toyMC)
median expected limit: r < 6.21711 @ 95%CL (1 toyMC)
   68% expected band : 6.21711 < r < 6.21711
   95% expected band : 6.21711 < r < 6.21711
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1726571085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0979 +/- 0.0166894 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 10.0979 @ 95%CL (1 toyMC)
median expected limit: r < 10.0979 @ 95%CL (1 toyMC)
   68% expected band : 10.0979 < r < 10.0979
   95% expected band : 10.0979 < r < 10.0979
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 846639423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.12769 +/- 0.0143889 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 9.12769 @ 95%CL (1 toyMC)
median expected limit: r < 9.12769 @ 95%CL (1 toyMC)
   68% expected band : 9.12769 < r < 9.12769
   95% expected band : 9.12769 < r < 9.12769
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1405341942
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.22036 +/- 0.00973596 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.22036 @ 95%CL (1 toyMC)
median expected limit: r < 6.22036 @ 95%CL (1 toyMC)
   68% expected band : 6.22036 < r < 6.22036
   95% expected band : 6.22036 < r < 6.22036
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1234187264
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.3287 +/- 0.0076854 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.3287 @ 95%CL (1 toyMC)
median expected limit: r < 4.3287 @ 95%CL (1 toyMC)
   68% expected band : 4.3287 < r < 4.3287
   95% expected band : 4.3287 < r < 4.3287
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 483473602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.92455 +/- 0.00969618 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.92455 @ 95%CL (1 toyMC)
median expected limit: r < 4.92455 @ 95%CL (1 toyMC)
   68% expected band : 4.92455 < r < 4.92455
   95% expected band : 4.92455 < r < 4.92455
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1368545803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20381 +/- 0.010876 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.20381 @ 95%CL (1 toyMC)
median expected limit: r < 6.20381 @ 95%CL (1 toyMC)
   68% expected band : 6.20381 < r < 6.20381
   95% expected band : 6.20381 < r < 6.20381
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -285904596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.85735 +/- 0.0101801 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 4.85735 @ 95%CL (1 toyMC)
median expected limit: r < 4.85735 @ 95%CL (1 toyMC)
   68% expected band : 4.85735 < r < 4.85735
   95% expected band : 4.85735 < r < 4.85735
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1224432155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.08155 +/- 0.0079558 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.08155 @ 95%CL (1 toyMC)
median expected limit: r < 6.08155 @ 95%CL (1 toyMC)
   68% expected band : 6.08155 < r < 6.08155
   95% expected band : 6.08155 < r < 6.08155
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1383234563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.43847 +/- 0.0104962 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 5.43847 @ 95%CL (1 toyMC)
median expected limit: r < 5.43847 @ 95%CL (1 toyMC)
   68% expected band : 5.43847 < r < 5.43847
   95% expected band : 5.43847 < r < 5.43847
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -333980081
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.2859 +/- 0.00896912 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.2859 @ 95%CL (1 toyMC)
median expected limit: r < 4.2859 @ 95%CL (1 toyMC)
   68% expected band : 4.2859 < r < 4.2859
   95% expected band : 4.2859 < r < 4.2859
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -133109425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.76207 +/- 0.00892156 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 7.76207 @ 95%CL (1 toyMC)
median expected limit: r < 7.76207 @ 95%CL (1 toyMC)
   68% expected band : 7.76207 < r < 7.76207
   95% expected band : 7.76207 < r < 7.76207
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -364537439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.92794 +/- 0.0100031 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 8.92794 @ 95%CL (1 toyMC)
median expected limit: r < 8.92794 @ 95%CL (1 toyMC)
   68% expected band : 8.92794 < r < 8.92794
   95% expected band : 8.92794 < r < 8.92794
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1355256522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.83264 +/- 0.0103299 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 7.83264 @ 95%CL (1 toyMC)
median expected limit: r < 7.83264 @ 95%CL (1 toyMC)
   68% expected band : 7.83264 < r < 7.83264
   95% expected band : 7.83264 < r < 7.83264
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1063399484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.24398 +/- 0.0115617 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.24398 @ 95%CL (1 toyMC)
median expected limit: r < 6.24398 @ 95%CL (1 toyMC)
   68% expected band : 6.24398 < r < 6.24398
   95% expected band : 6.24398 < r < 6.24398
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1863091206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7894 +/- 0.0117021 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 11.7894 @ 95%CL (1 toyMC)
median expected limit: r < 11.7894 @ 95%CL (1 toyMC)
   68% expected band : 11.7894 < r < 11.7894
   95% expected band : 11.7894 < r < 11.7894
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1813603866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.80579 +/- 0.00845722 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 3.80579 @ 95%CL (1 toyMC)
median expected limit: r < 3.80579 @ 95%CL (1 toyMC)
   68% expected band : 3.80579 < r < 3.80579
   95% expected band : 3.80579 < r < 3.80579
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1062169956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.8537 +/- 0.0125004 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 7.8537 @ 95%CL (1 toyMC)
median expected limit: r < 7.8537 @ 95%CL (1 toyMC)
   68% expected band : 7.8537 < r < 7.8537
   95% expected band : 7.8537 < r < 7.8537
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2001132103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2899 +/- 0.011261 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 11.2899 @ 95%CL (1 toyMC)
median expected limit: r < 11.2899 @ 95%CL (1 toyMC)
   68% expected band : 11.2899 < r < 11.2899
   95% expected band : 11.2899 < r < 11.2899
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -76968737
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7216 +/- 0.011599 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 12.7216 @ 95%CL (1 toyMC)
median expected limit: r < 12.7216 @ 95%CL (1 toyMC)
   68% expected band : 12.7216 < r < 12.7216
   95% expected band : 12.7216 < r < 12.7216
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1262664377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.498 +/- 0.0113002 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 5.498 @ 95%CL (1 toyMC)
median expected limit: r < 5.498 @ 95%CL (1 toyMC)
   68% expected band : 5.498 < r < 5.498
   95% expected band : 5.498 < r < 5.498
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1149559848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3311 +/- 0.0109458 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 11.3311 @ 95%CL (1 toyMC)
median expected limit: r < 11.3311 @ 95%CL (1 toyMC)
   68% expected band : 11.3311 < r < 11.3311
   95% expected band : 11.3311 < r < 11.3311
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1818390754
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.27989 +/- 0.00823382 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.27989 @ 95%CL (1 toyMC)
median expected limit: r < 4.27989 @ 95%CL (1 toyMC)
   68% expected band : 4.27989 < r < 4.27989
   95% expected band : 4.27989 < r < 4.27989
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1527595793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.99717 +/- 0.00993844 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 6.99717 @ 95%CL (1 toyMC)
median expected limit: r < 6.99717 @ 95%CL (1 toyMC)
   68% expected band : 6.99717 < r < 6.99717
   95% expected band : 6.99717 < r < 6.99717
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -689335659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50923 +/- 0.00902745 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 5.50923 @ 95%CL (1 toyMC)
median expected limit: r < 5.50923 @ 95%CL (1 toyMC)
   68% expected band : 5.50923 < r < 5.50923
   95% expected band : 5.50923 < r < 5.50923
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1436011783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3837 +/- 0.00764103 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 3.3837 @ 95%CL (1 toyMC)
median expected limit: r < 3.3837 @ 95%CL (1 toyMC)
   68% expected band : 3.3837 < r < 3.3837
   95% expected band : 3.3837 < r < 3.3837
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 324447935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.06494 +/- 0.00942732 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 7.06494 @ 95%CL (1 toyMC)
median expected limit: r < 7.06494 @ 95%CL (1 toyMC)
   68% expected band : 7.06494 < r < 7.06494
   95% expected band : 7.06494 < r < 7.06494
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1532694469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0131 +/- 0.00991975 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 13.0131 @ 95%CL (1 toyMC)
median expected limit: r < 13.0131 @ 95%CL (1 toyMC)
   68% expected band : 13.0131 < r < 13.0131
   95% expected band : 13.0131 < r < 13.0131
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 456417866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.22692 +/- 0.0110381 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 6.22692 @ 95%CL (1 toyMC)
median expected limit: r < 6.22692 @ 95%CL (1 toyMC)
   68% expected band : 6.22692 < r < 6.22692
   95% expected band : 6.22692 < r < 6.22692
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 947533090
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.25929 +/- 0.011821 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 9.25929 @ 95%CL (1 toyMC)
median expected limit: r < 9.25929 @ 95%CL (1 toyMC)
   68% expected band : 9.25929 < r < 9.25929
   95% expected band : 9.25929 < r < 9.25929
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -382735302
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.8367 +/- 0.014433 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 8.8367 @ 95%CL (1 toyMC)
median expected limit: r < 8.8367 @ 95%CL (1 toyMC)
   68% expected band : 8.8367 < r < 8.8367
   95% expected band : 8.8367 < r < 8.8367
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -197721272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.8673 +/- 0.0115765 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 7.8673 @ 95%CL (1 toyMC)
median expected limit: r < 7.8673 @ 95%CL (1 toyMC)
   68% expected band : 7.8673 < r < 7.8673
   95% expected band : 7.8673 < r < 7.8673
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1504967530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.2546 +/- 0.0109829 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 6.2546 @ 95%CL (1 toyMC)
median expected limit: r < 6.2546 @ 95%CL (1 toyMC)
   68% expected band : 6.2546 < r < 6.2546
   95% expected band : 6.2546 < r < 6.2546
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 849002146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.80797 +/- 0.00986173 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 3.80797 @ 95%CL (1 toyMC)
median expected limit: r < 3.80797 @ 95%CL (1 toyMC)
   68% expected band : 3.80797 < r < 3.80797
   95% expected band : 3.80797 < r < 3.80797
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1552174225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.00932 +/- 0.0083607 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 7.00932 @ 95%CL (1 toyMC)
median expected limit: r < 7.00932 @ 95%CL (1 toyMC)
   68% expected band : 7.00932 < r < 7.00932
   95% expected band : 7.00932 < r < 7.00932
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1841428959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.87058 +/- 0.0117317 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 8.87058 @ 95%CL (1 toyMC)
median expected limit: r < 8.87058 @ 95%CL (1 toyMC)
   68% expected band : 8.87058 < r < 8.87058
   95% expected band : 8.87058 < r < 8.87058
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1978994381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.08061 +/- 0.0108039 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 6.08061 @ 95%CL (1 toyMC)
median expected limit: r < 6.08061 @ 95%CL (1 toyMC)
   68% expected band : 6.08061 < r < 6.08061
   95% expected band : 6.08061 < r < 6.08061
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1980650565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.74644 +/- 0.0117664 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.57 min (real)
mean   expected limit: r < 9.74644 @ 95%CL (1 toyMC)
median expected limit: r < 9.74644 @ 95%CL (1 toyMC)
   68% expected band : 9.74644 < r < 9.74644
   95% expected band : 9.74644 < r < 9.74644
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1213721960
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.7852 +/- 0.00959211 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.7852 @ 95%CL (1 toyMC)
median expected limit: r < 4.7852 @ 95%CL (1 toyMC)
   68% expected band : 4.7852 < r < 4.7852
   95% expected band : 4.7852 < r < 4.7852
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 174698161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.00101 +/- 0.0105936 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 7.00101 @ 95%CL (1 toyMC)
median expected limit: r < 7.00101 @ 95%CL (1 toyMC)
   68% expected band : 7.00101 < r < 7.00101
   95% expected band : 7.00101 < r < 7.00101
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1004422802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.61691 +/- 0.0118384 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 7.61691 @ 95%CL (1 toyMC)
median expected limit: r < 7.61691 @ 95%CL (1 toyMC)
   68% expected band : 7.61691 < r < 7.61691
   95% expected band : 7.61691 < r < 7.61691
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1740025867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90888 +/- 0.0113129 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.90888 @ 95%CL (1 toyMC)
median expected limit: r < 4.90888 @ 95%CL (1 toyMC)
   68% expected band : 4.90888 < r < 4.90888
   95% expected band : 4.90888 < r < 4.90888
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1216491510
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.2392 +/- 0.009085 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 6.2392 @ 95%CL (1 toyMC)
median expected limit: r < 6.2392 @ 95%CL (1 toyMC)
   68% expected band : 6.2392 < r < 6.2392
   95% expected band : 6.2392 < r < 6.2392
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -12938908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.79222 +/- 0.0105686 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.79222 @ 95%CL (1 toyMC)
median expected limit: r < 4.79222 @ 95%CL (1 toyMC)
   68% expected band : 4.79222 < r < 4.79222
   95% expected band : 4.79222 < r < 4.79222
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -979982879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.8263 +/- 0.00867657 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 4.8263 @ 95%CL (1 toyMC)
median expected limit: r < 4.8263 @ 95%CL (1 toyMC)
   68% expected band : 4.8263 < r < 4.8263
   95% expected band : 4.8263 < r < 4.8263
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1793700925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.26679 +/- 0.0114414 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 6.26679 @ 95%CL (1 toyMC)
median expected limit: r < 6.26679 @ 95%CL (1 toyMC)
   68% expected band : 6.26679 < r < 6.26679
   95% expected band : 6.26679 < r < 6.26679
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1655952807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.11718 +/- 0.00996194 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.11718 @ 95%CL (1 toyMC)
median expected limit: r < 7.11718 @ 95%CL (1 toyMC)
   68% expected band : 7.11718 < r < 7.11718
   95% expected band : 7.11718 < r < 7.11718
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 163033796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.00328 +/- 0.0086133 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 7.00328 @ 95%CL (1 toyMC)
median expected limit: r < 7.00328 @ 95%CL (1 toyMC)
   68% expected band : 7.00328 < r < 7.00328
   95% expected band : 7.00328 < r < 7.00328
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1306065777
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.1891 +/- 0.00998733 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 6.1891 @ 95%CL (1 toyMC)
median expected limit: r < 6.1891 @ 95%CL (1 toyMC)
   68% expected band : 6.1891 < r < 6.1891
   95% expected band : 6.1891 < r < 6.1891
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 759507292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.803 +/- 0.0125644 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 8.803 @ 95%CL (1 toyMC)
median expected limit: r < 8.803 @ 95%CL (1 toyMC)
   68% expected band : 8.803 < r < 8.803
   95% expected band : 8.803 < r < 8.803
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -48769405
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.87846 +/- 0.00890719 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 4.87846 @ 95%CL (1 toyMC)
median expected limit: r < 4.87846 @ 95%CL (1 toyMC)
   68% expected band : 4.87846 < r < 4.87846
   95% expected band : 4.87846 < r < 4.87846
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -212922986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.49178 +/- 0.00639868 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 5.49178 @ 95%CL (1 toyMC)
median expected limit: r < 5.49178 @ 95%CL (1 toyMC)
   68% expected band : 5.49178 < r < 5.49178
   95% expected band : 5.49178 < r < 5.49178
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1580434890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4131 +/- 0.00698729 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.4131 @ 95%CL (1 toyMC)
median expected limit: r < 3.4131 @ 95%CL (1 toyMC)
   68% expected band : 3.4131 < r < 3.4131
   95% expected band : 3.4131 < r < 3.4131
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1996064885
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.84697 +/- 0.00863273 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 4.84697 @ 95%CL (1 toyMC)
median expected limit: r < 4.84697 @ 95%CL (1 toyMC)
   68% expected band : 4.84697 < r < 4.84697
   95% expected band : 4.84697 < r < 4.84697
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1691848666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.57599 +/- 0.0109827 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 8.57599 @ 95%CL (1 toyMC)
median expected limit: r < 8.57599 @ 95%CL (1 toyMC)
   68% expected band : 8.57599 < r < 8.57599
   95% expected band : 8.57599 < r < 8.57599
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1264924079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.90748 +/- 0.00793443 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 6.90748 @ 95%CL (1 toyMC)
median expected limit: r < 6.90748 @ 95%CL (1 toyMC)
   68% expected band : 6.90748 < r < 6.90748
   95% expected band : 6.90748 < r < 6.90748
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1326177073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.6538 +/- 0.00838958 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 7.6538 @ 95%CL (1 toyMC)
median expected limit: r < 7.6538 @ 95%CL (1 toyMC)
   68% expected band : 7.6538 < r < 7.6538
   95% expected band : 7.6538 < r < 7.6538
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1947454178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20857 +/- 0.0111846 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 6.20857 @ 95%CL (1 toyMC)
median expected limit: r < 6.20857 @ 95%CL (1 toyMC)
   68% expected band : 6.20857 < r < 6.20857
   95% expected band : 6.20857 < r < 6.20857
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1136746787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.28442 +/- 0.0119925 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 6.28442 @ 95%CL (1 toyMC)
median expected limit: r < 6.28442 @ 95%CL (1 toyMC)
   68% expected band : 6.28442 < r < 6.28442
   95% expected band : 6.28442 < r < 6.28442
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1756290179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.04856 +/- 0.0101262 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 7.04856 @ 95%CL (1 toyMC)
median expected limit: r < 7.04856 @ 95%CL (1 toyMC)
   68% expected band : 7.04856 < r < 7.04856
   95% expected band : 7.04856 < r < 7.04856
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2087333837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.48951 +/- 0.0106024 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 8.48951 @ 95%CL (1 toyMC)
median expected limit: r < 8.48951 @ 95%CL (1 toyMC)
   68% expected band : 8.48951 < r < 8.48951
   95% expected band : 8.48951 < r < 8.48951
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1957306487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.81513 +/- 0.0113682 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 7.81513 @ 95%CL (1 toyMC)
median expected limit: r < 7.81513 @ 95%CL (1 toyMC)
   68% expected band : 7.81513 < r < 7.81513
   95% expected band : 7.81513 < r < 7.81513
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1633535004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.24843 +/- 0.0124313 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.24843 @ 95%CL (1 toyMC)
median expected limit: r < 6.24843 @ 95%CL (1 toyMC)
   68% expected band : 6.24843 < r < 6.24843
   95% expected band : 6.24843 < r < 6.24843
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -398904025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.99182 +/- 0.0102973 @ 95% CL (100 tries)
Done in 0.62 min (cpu), 0.62 min (real)
mean   expected limit: r < 6.99182 @ 95%CL (1 toyMC)
median expected limit: r < 6.99182 @ 95%CL (1 toyMC)
   68% expected band : 6.99182 < r < 6.99182
   95% expected band : 6.99182 < r < 6.99182
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -554395120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.22501 +/- 0.0126275 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.22501 @ 95%CL (1 toyMC)
median expected limit: r < 6.22501 @ 95%CL (1 toyMC)
   68% expected band : 6.22501 < r < 6.22501
   95% expected band : 6.22501 < r < 6.22501
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -295585969
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.99376 +/- 0.00881769 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.99376 @ 95%CL (1 toyMC)
median expected limit: r < 7.99376 @ 95%CL (1 toyMC)
   68% expected band : 7.99376 < r < 7.99376
   95% expected band : 7.99376 < r < 7.99376
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -323379512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.79218 +/- 0.00995707 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 8.79218 @ 95%CL (1 toyMC)
median expected limit: r < 8.79218 @ 95%CL (1 toyMC)
   68% expected band : 8.79218 < r < 8.79218
   95% expected band : 8.79218 < r < 8.79218
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1856354249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.93494 +/- 0.0098074 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 7.93494 @ 95%CL (1 toyMC)
median expected limit: r < 7.93494 @ 95%CL (1 toyMC)
   68% expected band : 7.93494 < r < 7.93494
   95% expected band : 7.93494 < r < 7.93494
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1365496919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.91772 +/- 0.00891681 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 7.91772 @ 95%CL (1 toyMC)
median expected limit: r < 7.91772 @ 95%CL (1 toyMC)
   68% expected band : 7.91772 < r < 7.91772
   95% expected band : 7.91772 < r < 7.91772
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2091626483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.874 +/- 0.00852136 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.874 @ 95%CL (1 toyMC)
median expected limit: r < 4.874 @ 95%CL (1 toyMC)
   68% expected band : 4.874 < r < 4.874
   95% expected band : 4.874 < r < 4.874
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1155597663
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.54514 +/- 0.010592 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 5.54514 @ 95%CL (1 toyMC)
median expected limit: r < 5.54514 @ 95%CL (1 toyMC)
   68% expected band : 5.54514 < r < 5.54514
   95% expected band : 5.54514 < r < 5.54514
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -541904097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.05546 +/- 0.0102763 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 7.05546 @ 95%CL (1 toyMC)
median expected limit: r < 7.05546 @ 95%CL (1 toyMC)
   68% expected band : 7.05546 < r < 7.05546
   95% expected band : 7.05546 < r < 7.05546
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1154038596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.31407 +/- 0.00714653 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.31407 @ 95%CL (1 toyMC)
median expected limit: r < 4.31407 @ 95%CL (1 toyMC)
   68% expected band : 4.31407 < r < 4.31407
   95% expected band : 4.31407 < r < 4.31407
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1334404089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10553 +/- 0.0102771 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 7.10553 @ 95%CL (1 toyMC)
median expected limit: r < 7.10553 @ 95%CL (1 toyMC)
   68% expected band : 7.10553 < r < 7.10553
   95% expected band : 7.10553 < r < 7.10553
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1934407731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.45439 +/- 0.0134966 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.58 min (real)
mean   expected limit: r < 8.45439 @ 95%CL (1 toyMC)
median expected limit: r < 8.45439 @ 95%CL (1 toyMC)
   68% expected band : 8.45439 < r < 8.45439
   95% expected band : 8.45439 < r < 8.45439
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -854298231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.81481 +/- 0.00859992 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 3.81481 @ 95%CL (1 toyMC)
median expected limit: r < 3.81481 @ 95%CL (1 toyMC)
   68% expected band : 3.81481 < r < 3.81481
   95% expected band : 3.81481 < r < 3.81481
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -30754714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.05786 +/- 0.0110495 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.05786 @ 95%CL (1 toyMC)
median expected limit: r < 7.05786 @ 95%CL (1 toyMC)
   68% expected band : 7.05786 < r < 7.05786
   95% expected band : 7.05786 < r < 7.05786
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1695195793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.05731 +/- 0.0114888 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 7.05731 @ 95%CL (1 toyMC)
median expected limit: r < 7.05731 @ 95%CL (1 toyMC)
   68% expected band : 7.05731 < r < 7.05731
   95% expected band : 7.05731 < r < 7.05731
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -790545171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.22938 +/- 0.0100147 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 6.22938 @ 95%CL (1 toyMC)
median expected limit: r < 6.22938 @ 95%CL (1 toyMC)
   68% expected band : 6.22938 < r < 6.22938
   95% expected band : 6.22938 < r < 6.22938
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -24770767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.47457 +/- 0.0094913 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 5.47457 @ 95%CL (1 toyMC)
median expected limit: r < 5.47457 @ 95%CL (1 toyMC)
   68% expected band : 5.47457 < r < 5.47457
   95% expected band : 5.47457 < r < 5.47457
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1927718827
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51083 +/- 0.00877317 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 5.51083 @ 95%CL (1 toyMC)
median expected limit: r < 5.51083 @ 95%CL (1 toyMC)
   68% expected band : 5.51083 < r < 5.51083
   95% expected band : 5.51083 < r < 5.51083
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -909964920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20391 +/- 0.0100215 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 6.20391 @ 95%CL (1 toyMC)
median expected limit: r < 6.20391 @ 95%CL (1 toyMC)
   68% expected band : 6.20391 < r < 6.20391
   95% expected band : 6.20391 < r < 6.20391
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1050215834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.2551 +/- 0.0103802 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.2551 @ 95%CL (1 toyMC)
median expected limit: r < 6.2551 @ 95%CL (1 toyMC)
   68% expected band : 6.2551 < r < 6.2551
   95% expected band : 6.2551 < r < 6.2551
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 281500117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.82996 +/- 0.00872779 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 4.82996 @ 95%CL (1 toyMC)
median expected limit: r < 4.82996 @ 95%CL (1 toyMC)
   68% expected band : 4.82996 < r < 4.82996
   95% expected band : 4.82996 < r < 4.82996
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1715777069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19591 +/- 0.0108595 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 6.19591 @ 95%CL (1 toyMC)
median expected limit: r < 6.19591 @ 95%CL (1 toyMC)
   68% expected band : 6.19591 < r < 6.19591
   95% expected band : 6.19591 < r < 6.19591
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1467556171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9209 +/- 0.0108464 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.61 min (real)
mean   expected limit: r < 12.9209 @ 95%CL (1 toyMC)
median expected limit: r < 12.9209 @ 95%CL (1 toyMC)
   68% expected band : 12.9209 < r < 12.9209
   95% expected band : 12.9209 < r < 12.9209
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -327701508
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.83911 +/- 0.008252 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.83911 @ 95%CL (1 toyMC)
median expected limit: r < 4.83911 @ 95%CL (1 toyMC)
   68% expected band : 4.83911 < r < 4.83911
   95% expected band : 4.83911 < r < 4.83911
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -110581557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.34296 +/- 0.00737637 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.34296 @ 95%CL (1 toyMC)
median expected limit: r < 4.34296 @ 95%CL (1 toyMC)
   68% expected band : 4.34296 < r < 4.34296
   95% expected band : 4.34296 < r < 4.34296
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1014280147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.24507 +/- 0.00960602 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 6.24507 @ 95%CL (1 toyMC)
median expected limit: r < 6.24507 @ 95%CL (1 toyMC)
   68% expected band : 6.24507 < r < 6.24507
   95% expected band : 6.24507 < r < 6.24507
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1597748962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.97112 +/- 0.0100218 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 6.97112 @ 95%CL (1 toyMC)
median expected limit: r < 6.97112 @ 95%CL (1 toyMC)
   68% expected band : 6.97112 < r < 6.97112
   95% expected band : 6.97112 < r < 6.97112
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1139846299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.81363 +/- 0.0130125 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.81363 @ 95%CL (1 toyMC)
median expected limit: r < 7.81363 @ 95%CL (1 toyMC)
   68% expected band : 7.81363 < r < 7.81363
   95% expected band : 7.81363 < r < 7.81363
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1582726745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90284 +/- 0.0087549 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.90284 @ 95%CL (1 toyMC)
median expected limit: r < 4.90284 @ 95%CL (1 toyMC)
   68% expected band : 4.90284 < r < 4.90284
   95% expected band : 4.90284 < r < 4.90284
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1969985747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.42613 +/- 0.00741775 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.42613 @ 95%CL (1 toyMC)
median expected limit: r < 3.42613 @ 95%CL (1 toyMC)
   68% expected band : 3.42613 < r < 3.42613
   95% expected band : 3.42613 < r < 3.42613
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1108745763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.7873 +/- 0.0110821 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 9.7873 @ 95%CL (1 toyMC)
median expected limit: r < 9.7873 @ 95%CL (1 toyMC)
   68% expected band : 9.7873 < r < 9.7873
   95% expected band : 9.7873 < r < 9.7873
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1344858409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.92484 +/- 0.0119296 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.92484 @ 95%CL (1 toyMC)
median expected limit: r < 7.92484 @ 95%CL (1 toyMC)
   68% expected band : 7.92484 < r < 7.92484
   95% expected band : 7.92484 < r < 7.92484
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 269420565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.27102 +/- 0.0080498 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.27102 @ 95%CL (1 toyMC)
median expected limit: r < 4.27102 @ 95%CL (1 toyMC)
   68% expected band : 4.27102 < r < 4.27102
   95% expected band : 4.27102 < r < 4.27102
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1500530123
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51297 +/- 0.0105694 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 5.51297 @ 95%CL (1 toyMC)
median expected limit: r < 5.51297 @ 95%CL (1 toyMC)
   68% expected band : 5.51297 < r < 5.51297
   95% expected band : 5.51297 < r < 5.51297
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 401508310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.46771 +/- 0.0107601 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 5.46771 @ 95%CL (1 toyMC)
median expected limit: r < 5.46771 @ 95%CL (1 toyMC)
   68% expected band : 5.46771 < r < 5.46771
   95% expected band : 5.46771 < r < 5.46771
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 675081762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.87941 +/- 0.0102413 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 7.87941 @ 95%CL (1 toyMC)
median expected limit: r < 7.87941 @ 95%CL (1 toyMC)
   68% expected band : 7.87941 < r < 7.87941
   95% expected band : 7.87941 < r < 7.87941
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1657160103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.38115 +/- 0.0121904 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 9.38115 @ 95%CL (1 toyMC)
median expected limit: r < 9.38115 @ 95%CL (1 toyMC)
   68% expected band : 9.38115 < r < 9.38115
   95% expected band : 9.38115 < r < 9.38115
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -296334955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86062 +/- 0.00958593 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 4.86062 @ 95%CL (1 toyMC)
median expected limit: r < 4.86062 @ 95%CL (1 toyMC)
   68% expected band : 4.86062 < r < 4.86062
   95% expected band : 4.86062 < r < 4.86062
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1765370627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.41803 +/- 0.00708357 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.41803 @ 95%CL (1 toyMC)
median expected limit: r < 3.41803 @ 95%CL (1 toyMC)
   68% expected band : 3.41803 < r < 3.41803
   95% expected band : 3.41803 < r < 3.41803
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1915515194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.85048 +/- 0.00850455 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 4.85048 @ 95%CL (1 toyMC)
median expected limit: r < 4.85048 @ 95%CL (1 toyMC)
   68% expected band : 4.85048 < r < 4.85048
   95% expected band : 4.85048 < r < 4.85048
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 441319235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.28527 +/- 0.0135194 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.28527 @ 95%CL (1 toyMC)
median expected limit: r < 9.28527 @ 95%CL (1 toyMC)
   68% expected band : 9.28527 < r < 9.28527
   95% expected band : 9.28527 < r < 9.28527
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1167167986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2196 +/- 0.0102151 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.61 min (real)
mean   expected limit: r < 17.2196 @ 95%CL (1 toyMC)
median expected limit: r < 17.2196 @ 95%CL (1 toyMC)
   68% expected band : 17.2196 < r < 17.2196
   95% expected band : 17.2196 < r < 17.2196
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1357841286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.22624 +/- 0.0134122 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.22624 @ 95%CL (1 toyMC)
median expected limit: r < 7.22624 @ 95%CL (1 toyMC)
   68% expected band : 7.22624 < r < 7.22624
   95% expected band : 7.22624 < r < 7.22624
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -595616150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2613 +/- 0.0134881 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 12.2613 @ 95%CL (1 toyMC)
median expected limit: r < 12.2613 @ 95%CL (1 toyMC)
   68% expected band : 12.2613 < r < 12.2613
   95% expected band : 12.2613 < r < 12.2613
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1584696406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2919 +/- 0.0086787 @ 95% CL (100 tries)
Done in 0.59 min (cpu), 0.59 min (real)
mean   expected limit: r < 16.2919 @ 95%CL (1 toyMC)
median expected limit: r < 16.2919 @ 95%CL (1 toyMC)
   68% expected band : 16.2919 < r < 16.2919
   95% expected band : 16.2919 < r < 16.2919
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1979855829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6028 +/- 0.0119039 @ 95% CL (100 tries)
Done in 0.58 min (cpu), 0.58 min (real)
mean   expected limit: r < 11.6028 @ 95%CL (1 toyMC)
median expected limit: r < 11.6028 @ 95%CL (1 toyMC)
   68% expected band : 11.6028 < r < 11.6028
   95% expected band : 11.6028 < r < 11.6028
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 717627510
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.474 +/- 0.0109426 @ 95% CL (100 tries)
Done in 0.58 min (cpu), 0.59 min (real)
mean   expected limit: r < 15.474 @ 95%CL (1 toyMC)
median expected limit: r < 15.474 @ 95%CL (1 toyMC)
   68% expected band : 15.474 < r < 15.474
   95% expected band : 15.474 < r < 15.474
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 932762172
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.72603 +/- 0.0115579 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 6.72603 @ 95%CL (1 toyMC)
median expected limit: r < 6.72603 @ 95%CL (1 toyMC)
   68% expected band : 6.72603 < r < 6.72603
   95% expected band : 6.72603 < r < 6.72603
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -579789765
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.65178 +/- 0.0137487 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.65178 @ 95%CL (1 toyMC)
median expected limit: r < 9.65178 @ 95%CL (1 toyMC)
   68% expected band : 9.65178 < r < 9.65178
   95% expected band : 9.65178 < r < 9.65178
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2118576169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.47538 +/- 0.0159164 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 8.47538 @ 95%CL (1 toyMC)
median expected limit: r < 8.47538 @ 95%CL (1 toyMC)
   68% expected band : 8.47538 < r < 8.47538
   95% expected band : 8.47538 < r < 8.47538
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1173384123
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6079 +/- 0.0153405 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 13.6079 @ 95%CL (1 toyMC)
median expected limit: r < 13.6079 @ 95%CL (1 toyMC)
   68% expected band : 13.6079 < r < 13.6079
   95% expected band : 13.6079 < r < 13.6079
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -877012244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9657 +/- 0.0186152 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 10.9657 @ 95%CL (1 toyMC)
median expected limit: r < 10.9657 @ 95%CL (1 toyMC)
   68% expected band : 10.9657 < r < 10.9657
   95% expected band : 10.9657 < r < 10.9657
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1117913741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6446 +/- 0.0150842 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 11.6446 @ 95%CL (1 toyMC)
median expected limit: r < 11.6446 @ 95%CL (1 toyMC)
   68% expected band : 11.6446 < r < 11.6446
   95% expected band : 11.6446 < r < 11.6446
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1276287887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8416 +/- 0.0134964 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 11.8416 @ 95%CL (1 toyMC)
median expected limit: r < 11.8416 @ 95%CL (1 toyMC)
   68% expected band : 11.8416 < r < 11.8416
   95% expected band : 11.8416 < r < 11.8416
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 362694559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.07091 +/- 0.018072 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.07091 @ 95%CL (1 toyMC)
median expected limit: r < 8.07091 @ 95%CL (1 toyMC)
   68% expected band : 8.07091 < r < 8.07091
   95% expected band : 8.07091 < r < 8.07091
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1727061236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5513 +/- 0.0163594 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 12.5513 @ 95%CL (1 toyMC)
median expected limit: r < 12.5513 @ 95%CL (1 toyMC)
   68% expected band : 12.5513 < r < 12.5513
   95% expected band : 12.5513 < r < 12.5513
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1676130099
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8296 +/- 0.0127171 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 13.8296 @ 95%CL (1 toyMC)
median expected limit: r < 13.8296 @ 95%CL (1 toyMC)
   68% expected band : 13.8296 < r < 13.8296
   95% expected band : 13.8296 < r < 13.8296
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 408592069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.75309 +/- 0.0150305 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.75309 @ 95%CL (1 toyMC)
median expected limit: r < 9.75309 @ 95%CL (1 toyMC)
   68% expected band : 9.75309 < r < 9.75309
   95% expected band : 9.75309 < r < 9.75309
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1907490818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.65608 +/- 0.0153167 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.65608 @ 95%CL (1 toyMC)
median expected limit: r < 8.65608 @ 95%CL (1 toyMC)
   68% expected band : 8.65608 < r < 8.65608
   95% expected band : 8.65608 < r < 8.65608
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1880569468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0169 +/- 0.0180526 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 12.0169 @ 95%CL (1 toyMC)
median expected limit: r < 12.0169 @ 95%CL (1 toyMC)
   68% expected band : 12.0169 < r < 12.0169
   95% expected band : 12.0169 < r < 12.0169
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2056608073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1317 +/- 0.00634878 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.60 min (real)
mean   expected limit: r < 18.1317 @ 95%CL (1 toyMC)
median expected limit: r < 18.1317 @ 95%CL (1 toyMC)
   68% expected band : 18.1317 < r < 18.1317
   95% expected band : 18.1317 < r < 18.1317
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1230448949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.51162 +/- 0.0138911 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 7.51162 @ 95%CL (1 toyMC)
median expected limit: r < 7.51162 @ 95%CL (1 toyMC)
   68% expected band : 7.51162 < r < 7.51162
   95% expected band : 7.51162 < r < 7.51162
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1033539082
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.38708 +/- 0.0195641 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 9.38708 @ 95%CL (1 toyMC)
median expected limit: r < 9.38708 @ 95%CL (1 toyMC)
   68% expected band : 9.38708 < r < 9.38708
   95% expected band : 9.38708 < r < 9.38708
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 352955428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7993 +/- 0.0181393 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 11.7993 @ 95%CL (1 toyMC)
median expected limit: r < 11.7993 @ 95%CL (1 toyMC)
   68% expected band : 11.7993 < r < 11.7993
   95% expected band : 11.7993 < r < 11.7993
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1593795864
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.73996 +/- 0.0165358 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 8.73996 @ 95%CL (1 toyMC)
median expected limit: r < 8.73996 @ 95%CL (1 toyMC)
   68% expected band : 8.73996 < r < 8.73996
   95% expected band : 8.73996 < r < 8.73996
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 918442625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8096 +/- 0.0167727 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 10.8096 @ 95%CL (1 toyMC)
median expected limit: r < 10.8096 @ 95%CL (1 toyMC)
   68% expected band : 10.8096 < r < 10.8096
   95% expected band : 10.8096 < r < 10.8096
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 73029548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.88184 +/- 0.0171908 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.88184 @ 95%CL (1 toyMC)
median expected limit: r < 8.88184 @ 95%CL (1 toyMC)
   68% expected band : 8.88184 < r < 8.88184
   95% expected band : 8.88184 < r < 8.88184
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 809565290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.6736 +/- 0.0119729 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.6736 @ 95%CL (1 toyMC)
median expected limit: r < 7.6736 @ 95%CL (1 toyMC)
   68% expected band : 7.6736 < r < 7.6736
   95% expected band : 7.6736 < r < 7.6736
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 410230301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1648 +/- 0.0163357 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 10.1648 @ 95%CL (1 toyMC)
median expected limit: r < 10.1648 @ 95%CL (1 toyMC)
   68% expected band : 10.1648 < r < 10.1648
   95% expected band : 10.1648 < r < 10.1648
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1659577509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6352 +/- 0.0147733 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 13.6352 @ 95%CL (1 toyMC)
median expected limit: r < 13.6352 @ 95%CL (1 toyMC)
   68% expected band : 13.6352 < r < 13.6352
   95% expected band : 13.6352 < r < 13.6352
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 188568818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3826 +/- 0.0073325 @ 95% CL (100 tries)
Done in 0.59 min (cpu), 0.60 min (real)
mean   expected limit: r < 17.3826 @ 95%CL (1 toyMC)
median expected limit: r < 17.3826 @ 95%CL (1 toyMC)
   68% expected band : 17.3826 < r < 17.3826
   95% expected band : 17.3826 < r < 17.3826
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -26581590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0611 +/- 0.0141041 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 13.0611 @ 95%CL (1 toyMC)
median expected limit: r < 13.0611 @ 95%CL (1 toyMC)
   68% expected band : 13.0611 < r < 13.0611
   95% expected band : 13.0611 < r < 13.0611
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -942082128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9291 +/- 0.0162253 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 11.9291 @ 95%CL (1 toyMC)
median expected limit: r < 11.9291 @ 95%CL (1 toyMC)
   68% expected band : 11.9291 < r < 11.9291
   95% expected band : 11.9291 < r < 11.9291
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -29009026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.07903 +/- 0.0152346 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 8.07903 @ 95%CL (1 toyMC)
median expected limit: r < 8.07903 @ 95%CL (1 toyMC)
   68% expected band : 8.07903 < r < 8.07903
   95% expected band : 8.07903 < r < 8.07903
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -812057335
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6547 +/- 0.00924001 @ 95% CL (100 tries)
Done in 0.59 min (cpu), 0.60 min (real)
mean   expected limit: r < 17.6547 @ 95%CL (1 toyMC)
median expected limit: r < 17.6547 @ 95%CL (1 toyMC)
   68% expected band : 17.6547 < r < 17.6547
   95% expected band : 17.6547 < r < 17.6547
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -589493840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5089 +/- 0.0117816 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.57 min (real)
mean   expected limit: r < 15.5089 @ 95%CL (1 toyMC)
median expected limit: r < 15.5089 @ 95%CL (1 toyMC)
   68% expected band : 15.5089 < r < 15.5089
   95% expected band : 15.5089 < r < 15.5089
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1479252773
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0545 +/- 0.0142187 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 14.0545 @ 95%CL (1 toyMC)
median expected limit: r < 14.0545 @ 95%CL (1 toyMC)
   68% expected band : 14.0545 < r < 14.0545
   95% expected band : 14.0545 < r < 14.0545
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -410073913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7545 +/- 0.014997 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 10.7545 @ 95%CL (1 toyMC)
median expected limit: r < 10.7545 @ 95%CL (1 toyMC)
   68% expected band : 10.7545 < r < 10.7545
   95% expected band : 10.7545 < r < 10.7545
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1794471485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0499 +/- 0.00671687 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.60 min (real)
mean   expected limit: r < 17.0499 @ 95%CL (1 toyMC)
median expected limit: r < 17.0499 @ 95%CL (1 toyMC)
   68% expected band : 17.0499 < r < 17.0499
   95% expected band : 17.0499 < r < 17.0499
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -109708634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9417 +/- 0.0133753 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 13.9417 @ 95%CL (1 toyMC)
median expected limit: r < 13.9417 @ 95%CL (1 toyMC)
   68% expected band : 13.9417 < r < 13.9417
   95% expected band : 13.9417 < r < 13.9417
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 149028490
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.70671 +/- 0.018331 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 8.70671 @ 95%CL (1 toyMC)
median expected limit: r < 8.70671 @ 95%CL (1 toyMC)
   68% expected band : 8.70671 < r < 8.70671
   95% expected band : 8.70671 < r < 8.70671
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2117829102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.48819 +/- 0.0156797 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.48819 @ 95%CL (1 toyMC)
median expected limit: r < 9.48819 @ 95%CL (1 toyMC)
   68% expected band : 9.48819 < r < 9.48819
   95% expected band : 9.48819 < r < 9.48819
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2072644045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.5915 +/- 0.014919 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.5915 @ 95%CL (1 toyMC)
median expected limit: r < 7.5915 @ 95%CL (1 toyMC)
   68% expected band : 7.5915 < r < 7.5915
   95% expected band : 7.5915 < r < 7.5915
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1674304088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7681 +/- 0.0148673 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 13.7681 @ 95%CL (1 toyMC)
median expected limit: r < 13.7681 @ 95%CL (1 toyMC)
   68% expected band : 13.7681 < r < 13.7681
   95% expected band : 13.7681 < r < 13.7681
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1209896850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0082 +/- 0.0154596 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 11.0082 @ 95%CL (1 toyMC)
median expected limit: r < 11.0082 @ 95%CL (1 toyMC)
   68% expected band : 11.0082 < r < 11.0082
   95% expected band : 11.0082 < r < 11.0082
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1850054915
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.84962 +/- 0.0117456 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 6.84962 @ 95%CL (1 toyMC)
median expected limit: r < 6.84962 @ 95%CL (1 toyMC)
   68% expected band : 6.84962 < r < 6.84962
   95% expected band : 6.84962 < r < 6.84962
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 658876607
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1714 +/- 0.017132 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 10.1714 @ 95%CL (1 toyMC)
median expected limit: r < 10.1714 @ 95%CL (1 toyMC)
   68% expected band : 10.1714 < r < 10.1714
   95% expected band : 10.1714 < r < 10.1714
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 5900592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7633 +/- 0.019943 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 10.7633 @ 95%CL (1 toyMC)
median expected limit: r < 10.7633 @ 95%CL (1 toyMC)
   68% expected band : 10.7633 < r < 10.7633
   95% expected band : 10.7633 < r < 10.7633
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2042388357
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2205 +/- 0.0083878 @ 95% CL (100 tries)
Done in 0.60 min (cpu), 0.60 min (real)
mean   expected limit: r < 17.2205 @ 95%CL (1 toyMC)
median expected limit: r < 17.2205 @ 95%CL (1 toyMC)
   68% expected band : 17.2205 < r < 17.2205
   95% expected band : 17.2205 < r < 17.2205
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 519109856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5762 +/- 0.0135471 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 14.5762 @ 95%CL (1 toyMC)
median expected limit: r < 14.5762 @ 95%CL (1 toyMC)
   68% expected band : 14.5762 < r < 14.5762
   95% expected band : 14.5762 < r < 14.5762
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2026193608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0821 +/- 0.0164462 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 13.0821 @ 95%CL (1 toyMC)
median expected limit: r < 13.0821 @ 95%CL (1 toyMC)
   68% expected band : 13.0821 < r < 13.0821
   95% expected band : 13.0821 < r < 13.0821
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -749315310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2011 +/- 0.0166204 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 10.2011 @ 95%CL (1 toyMC)
median expected limit: r < 10.2011 @ 95%CL (1 toyMC)
   68% expected band : 10.2011 < r < 10.2011
   95% expected band : 10.2011 < r < 10.2011
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 718373068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.84939 +/- 0.0152547 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.84939 @ 95%CL (1 toyMC)
median expected limit: r < 8.84939 @ 95%CL (1 toyMC)
   68% expected band : 8.84939 < r < 8.84939
   95% expected band : 8.84939 < r < 8.84939
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1384064906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.52926 +/- 0.0126527 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 8.52926 @ 95%CL (1 toyMC)
median expected limit: r < 8.52926 @ 95%CL (1 toyMC)
   68% expected band : 8.52926 < r < 8.52926
   95% expected band : 8.52926 < r < 8.52926
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1971961177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7411 +/- 0.0129155 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 14.7411 @ 95%CL (1 toyMC)
median expected limit: r < 14.7411 @ 95%CL (1 toyMC)
   68% expected band : 14.7411 < r < 14.7411
   95% expected band : 14.7411 < r < 14.7411
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2025730232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0911 +/- 0.0100112 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.58 min (real)
mean   expected limit: r < 15.0911 @ 95%CL (1 toyMC)
median expected limit: r < 15.0911 @ 95%CL (1 toyMC)
   68% expected band : 15.0911 < r < 15.0911
   95% expected band : 15.0911 < r < 15.0911
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 423602341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9308 +/- 0.00925902 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 15.9308 @ 95%CL (1 toyMC)
median expected limit: r < 15.9308 @ 95%CL (1 toyMC)
   68% expected band : 15.9308 < r < 15.9308
   95% expected band : 15.9308 < r < 15.9308
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -436658803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9343 +/- 0.010851 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 15.9343 @ 95%CL (1 toyMC)
median expected limit: r < 15.9343 @ 95%CL (1 toyMC)
   68% expected band : 15.9343 < r < 15.9343
   95% expected band : 15.9343 < r < 15.9343
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1388888918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0563 +/- 0.0183248 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 12.0563 @ 95%CL (1 toyMC)
median expected limit: r < 12.0563 @ 95%CL (1 toyMC)
   68% expected band : 12.0563 < r < 12.0563
   95% expected band : 12.0563 < r < 12.0563
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1131791044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.87711 +/- 0.0133141 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 6.87711 @ 95%CL (1 toyMC)
median expected limit: r < 6.87711 @ 95%CL (1 toyMC)
   68% expected band : 6.87711 < r < 6.87711
   95% expected band : 6.87711 < r < 6.87711
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 275035827
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7521 +/- 0.0149767 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 10.7521 @ 95%CL (1 toyMC)
median expected limit: r < 10.7521 @ 95%CL (1 toyMC)
   68% expected band : 10.7521 < r < 10.7521
   95% expected band : 10.7521 < r < 10.7521
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1175112873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1685 +/- 0.0184824 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 10.1685 @ 95%CL (1 toyMC)
median expected limit: r < 10.1685 @ 95%CL (1 toyMC)
   68% expected band : 10.1685 < r < 10.1685
   95% expected band : 10.1685 < r < 10.1685
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1646538167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.30182 +/- 0.0150628 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.30182 @ 95%CL (1 toyMC)
median expected limit: r < 7.30182 @ 95%CL (1 toyMC)
   68% expected band : 7.30182 < r < 7.30182
   95% expected band : 7.30182 < r < 7.30182
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 650408009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6819 +/- 0.00676616 @ 95% CL (100 tries)
Done in 0.59 min (cpu), 0.59 min (real)
mean   expected limit: r < 17.6819 @ 95%CL (1 toyMC)
median expected limit: r < 17.6819 @ 95%CL (1 toyMC)
   68% expected band : 17.6819 < r < 17.6819
   95% expected band : 17.6819 < r < 17.6819
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1668959366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.84503 +/- 0.0175359 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.84503 @ 95%CL (1 toyMC)
median expected limit: r < 8.84503 @ 95%CL (1 toyMC)
   68% expected band : 8.84503 < r < 8.84503
   95% expected band : 8.84503 < r < 8.84503
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 602700669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2748 +/- 0.0183339 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 11.2748 @ 95%CL (1 toyMC)
median expected limit: r < 11.2748 @ 95%CL (1 toyMC)
   68% expected band : 11.2748 < r < 11.2748
   95% expected band : 11.2748 < r < 11.2748
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1782581532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.827 +/- 0.0152358 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 12.827 @ 95%CL (1 toyMC)
median expected limit: r < 12.827 @ 95%CL (1 toyMC)
   68% expected band : 12.827 < r < 12.827
   95% expected band : 12.827 < r < 12.827
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1258078772
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2333 +/- 0.0165988 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 11.2333 @ 95%CL (1 toyMC)
median expected limit: r < 11.2333 @ 95%CL (1 toyMC)
   68% expected band : 11.2333 < r < 11.2333
   95% expected band : 11.2333 < r < 11.2333
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1267399129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0274 +/- 0.0193108 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 10.0274 @ 95%CL (1 toyMC)
median expected limit: r < 10.0274 @ 95%CL (1 toyMC)
   68% expected band : 10.0274 < r < 10.0274
   95% expected band : 10.0274 < r < 10.0274
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1771522260
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1726 +/- 0.0175611 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 13.1726 @ 95%CL (1 toyMC)
median expected limit: r < 13.1726 @ 95%CL (1 toyMC)
   68% expected band : 13.1726 < r < 13.1726
   95% expected band : 13.1726 < r < 13.1726
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1245341538
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4872 +/- 0.0171985 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 13.4872 @ 95%CL (1 toyMC)
median expected limit: r < 13.4872 @ 95%CL (1 toyMC)
   68% expected band : 13.4872 < r < 13.4872
   95% expected band : 13.4872 < r < 13.4872
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -231245311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3491 +/- 0.0229015 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 10.3491 @ 95%CL (1 toyMC)
median expected limit: r < 10.3491 @ 95%CL (1 toyMC)
   68% expected band : 10.3491 < r < 10.3491
   95% expected band : 10.3491 < r < 10.3491
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 108524088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1195 +/- 0.0156635 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 14.1195 @ 95%CL (1 toyMC)
median expected limit: r < 14.1195 @ 95%CL (1 toyMC)
   68% expected band : 14.1195 < r < 14.1195
   95% expected band : 14.1195 < r < 14.1195
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1245948865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8964 +/- 0.0144845 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 12.8964 @ 95%CL (1 toyMC)
median expected limit: r < 12.8964 @ 95%CL (1 toyMC)
   68% expected band : 12.8964 < r < 12.8964
   95% expected band : 12.8964 < r < 12.8964
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 874816635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4991 +/- 0.0120244 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.57 min (real)
mean   expected limit: r < 15.4991 @ 95%CL (1 toyMC)
median expected limit: r < 15.4991 @ 95%CL (1 toyMC)
   68% expected band : 15.4991 < r < 15.4991
   95% expected band : 15.4991 < r < 15.4991
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 396936206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4533 +/- 0.00924577 @ 95% CL (100 tries)
Done in 0.59 min (cpu), 0.59 min (real)
mean   expected limit: r < 16.4533 @ 95%CL (1 toyMC)
median expected limit: r < 16.4533 @ 95%CL (1 toyMC)
   68% expected band : 16.4533 < r < 16.4533
   95% expected band : 16.4533 < r < 16.4533
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1758253325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9285 +/- 0.0181319 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 11.9285 @ 95%CL (1 toyMC)
median expected limit: r < 11.9285 @ 95%CL (1 toyMC)
   68% expected band : 11.9285 < r < 11.9285
   95% expected band : 11.9285 < r < 11.9285
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -94844270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8465 +/- 0.0184477 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 10.8465 @ 95%CL (1 toyMC)
median expected limit: r < 10.8465 @ 95%CL (1 toyMC)
   68% expected band : 10.8465 < r < 10.8465
   95% expected band : 10.8465 < r < 10.8465
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1234006882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9261 +/- 0.0175571 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 10.9261 @ 95%CL (1 toyMC)
median expected limit: r < 10.9261 @ 95%CL (1 toyMC)
   68% expected band : 10.9261 < r < 10.9261
   95% expected band : 10.9261 < r < 10.9261
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -271026237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.10192 +/- 0.0139866 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.10192 @ 95%CL (1 toyMC)
median expected limit: r < 8.10192 @ 95%CL (1 toyMC)
   68% expected band : 8.10192 < r < 8.10192
   95% expected band : 8.10192 < r < 8.10192
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 44570293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.67514 +/- 0.0124112 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.67514 @ 95%CL (1 toyMC)
median expected limit: r < 7.67514 @ 95%CL (1 toyMC)
   68% expected band : 7.67514 < r < 7.67514
   95% expected band : 7.67514 < r < 7.67514
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1782945651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.06165 +/- 0.0156601 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.06165 @ 95%CL (1 toyMC)
median expected limit: r < 8.06165 @ 95%CL (1 toyMC)
   68% expected band : 8.06165 < r < 8.06165
   95% expected band : 8.06165 < r < 8.06165
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1191847901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5557 +/- 0.0109091 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 15.5557 @ 95%CL (1 toyMC)
median expected limit: r < 15.5557 @ 95%CL (1 toyMC)
   68% expected band : 15.5557 < r < 15.5557
   95% expected band : 15.5557 < r < 15.5557
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -591747151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5863 +/- 0.00841791 @ 95% CL (100 tries)
Done in 0.59 min (cpu), 0.59 min (real)
mean   expected limit: r < 16.5863 @ 95%CL (1 toyMC)
median expected limit: r < 16.5863 @ 95%CL (1 toyMC)
   68% expected band : 16.5863 < r < 16.5863
   95% expected band : 16.5863 < r < 16.5863
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -633209015
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5548 +/- 0.0133388 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 14.5548 @ 95%CL (1 toyMC)
median expected limit: r < 14.5548 @ 95%CL (1 toyMC)
   68% expected band : 14.5548 < r < 14.5548
   95% expected band : 14.5548 < r < 14.5548
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1902920380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.678 +/- 0.0112242 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 14.678 @ 95%CL (1 toyMC)
median expected limit: r < 14.678 @ 95%CL (1 toyMC)
   68% expected band : 14.678 < r < 14.678
   95% expected band : 14.678 < r < 14.678
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1271108475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.534 +/- 0.0151131 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 13.534 @ 95%CL (1 toyMC)
median expected limit: r < 13.534 @ 95%CL (1 toyMC)
   68% expected band : 13.534 < r < 13.534
   95% expected band : 13.534 < r < 13.534
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -621395960
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1284 +/- 0.0188404 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 12.1284 @ 95%CL (1 toyMC)
median expected limit: r < 12.1284 @ 95%CL (1 toyMC)
   68% expected band : 12.1284 < r < 12.1284
   95% expected band : 12.1284 < r < 12.1284
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2027657009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5346 +/- 0.011957 @ 95% CL (100 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 15.5346 @ 95%CL (1 toyMC)
median expected limit: r < 15.5346 @ 95%CL (1 toyMC)
   68% expected band : 15.5346 < r < 15.5346
   95% expected band : 15.5346 < r < 15.5346
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -214172986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1359 +/- 0.0144854 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 10.1359 @ 95%CL (1 toyMC)
median expected limit: r < 10.1359 @ 95%CL (1 toyMC)
   68% expected band : 10.1359 < r < 10.1359
   95% expected band : 10.1359 < r < 10.1359
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -796278204
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4707 +/- 0.0163507 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 10.4707 @ 95%CL (1 toyMC)
median expected limit: r < 10.4707 @ 95%CL (1 toyMC)
   68% expected band : 10.4707 < r < 10.4707
   95% expected band : 10.4707 < r < 10.4707
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1466971527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0243 +/- 0.0147971 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 11.0243 @ 95%CL (1 toyMC)
median expected limit: r < 11.0243 @ 95%CL (1 toyMC)
   68% expected band : 11.0243 < r < 11.0243
   95% expected band : 11.0243 < r < 11.0243
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -31983249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1538 +/- 0.0122413 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 14.1538 @ 95%CL (1 toyMC)
median expected limit: r < 14.1538 @ 95%CL (1 toyMC)
   68% expected band : 14.1538 < r < 14.1538
   95% expected band : 14.1538 < r < 14.1538
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1386974365
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5217 +/- 0.013497 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 12.5217 @ 95%CL (1 toyMC)
median expected limit: r < 12.5217 @ 95%CL (1 toyMC)
   68% expected band : 12.5217 < r < 12.5217
   95% expected band : 12.5217 < r < 12.5217
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1210923645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7008 +/- 0.0154197 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 12.7008 @ 95%CL (1 toyMC)
median expected limit: r < 12.7008 @ 95%CL (1 toyMC)
   68% expected band : 12.7008 < r < 12.7008
   95% expected band : 12.7008 < r < 12.7008
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 637599629
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.58597 +/- 0.0170513 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.58597 @ 95%CL (1 toyMC)
median expected limit: r < 8.58597 @ 95%CL (1 toyMC)
   68% expected band : 8.58597 < r < 8.58597
   95% expected band : 8.58597 < r < 8.58597
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 33612536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.52469 +/- 0.0172188 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.52469 @ 95%CL (1 toyMC)
median expected limit: r < 7.52469 @ 95%CL (1 toyMC)
   68% expected band : 7.52469 < r < 7.52469
   95% expected band : 7.52469 < r < 7.52469
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1026129163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4223 +/- 0.0197268 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 13.4223 @ 95%CL (1 toyMC)
median expected limit: r < 13.4223 @ 95%CL (1 toyMC)
   68% expected band : 13.4223 < r < 13.4223
   95% expected band : 13.4223 < r < 13.4223
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 347252696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2038 +/- 0.0169856 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 11.2038 @ 95%CL (1 toyMC)
median expected limit: r < 11.2038 @ 95%CL (1 toyMC)
   68% expected band : 11.2038 < r < 11.2038
   95% expected band : 11.2038 < r < 11.2038
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2119754899
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0516 +/- 0.00610829 @ 95% CL (100 tries)
Done in 0.61 min (cpu), 0.61 min (real)
mean   expected limit: r < 18.0516 @ 95%CL (1 toyMC)
median expected limit: r < 18.0516 @ 95%CL (1 toyMC)
   68% expected band : 18.0516 < r < 18.0516
   95% expected band : 18.0516 < r < 18.0516
>>>> Finished computing CI MCMC with Lambda = 100
