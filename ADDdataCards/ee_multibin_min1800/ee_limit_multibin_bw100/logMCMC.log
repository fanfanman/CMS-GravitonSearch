 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 627334147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.21003 +/- 0.00255239 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.21003 @ 95%CL (1 toyMC)
median expected limit: r < 0.21003 @ 95%CL (1 toyMC)
   68% expected band : 0.21003 < r < 0.21003
   95% expected band : 0.21003 < r < 0.21003
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1324821360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.205387 +/- 0.00233035 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.205387 @ 95%CL (1 toyMC)
median expected limit: r < 0.205387 @ 95%CL (1 toyMC)
   68% expected band : 0.205387 < r < 0.205387
   95% expected band : 0.205387 < r < 0.205387
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -407018436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.252336 +/- 0.00261221 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.252336 @ 95%CL (1 toyMC)
median expected limit: r < 0.252336 @ 95%CL (1 toyMC)
   68% expected band : 0.252336 < r < 0.252336
   95% expected band : 0.252336 < r < 0.252336
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1472006307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.205129 +/- 0.00287881 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.205129 @ 95%CL (1 toyMC)
median expected limit: r < 0.205129 @ 95%CL (1 toyMC)
   68% expected band : 0.205129 < r < 0.205129
   95% expected band : 0.205129 < r < 0.205129
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2086825197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.377488 +/- 0.00193808 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.377488 @ 95%CL (1 toyMC)
median expected limit: r < 0.377488 @ 95%CL (1 toyMC)
   68% expected band : 0.377488 < r < 0.377488
   95% expected band : 0.377488 < r < 0.377488
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 847815569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.183854 +/- 0.00200833 @ 95% CL (99 tries)
Done in 2.31 min (cpu), 2.32 min (real)
mean   expected limit: r < 0.183854 @ 95%CL (1 toyMC)
median expected limit: r < 0.183854 @ 95%CL (1 toyMC)
   68% expected band : 0.183854 < r < 0.183854
   95% expected band : 0.183854 < r < 0.183854
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1305837337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.209978 +/- 0.00264477 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.209978 @ 95%CL (1 toyMC)
median expected limit: r < 0.209978 @ 95%CL (1 toyMC)
   68% expected band : 0.209978 < r < 0.209978
   95% expected band : 0.209978 < r < 0.209978
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1491961939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.180576 +/- 0.00418878 @ 95% CL (99 tries)
Done in 2.42 min (cpu), 2.43 min (real)
mean   expected limit: r < 0.180576 @ 95%CL (1 toyMC)
median expected limit: r < 0.180576 @ 95%CL (1 toyMC)
   68% expected band : 0.180576 < r < 0.180576
   95% expected band : 0.180576 < r < 0.180576
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -505796590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.329095 +/- 0.00181785 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.329095 @ 95%CL (1 toyMC)
median expected limit: r < 0.329095 @ 95%CL (1 toyMC)
   68% expected band : 0.329095 < r < 0.329095
   95% expected band : 0.329095 < r < 0.329095
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1351502537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.187522 +/- 0.0030593 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.187522 @ 95%CL (1 toyMC)
median expected limit: r < 0.187522 @ 95%CL (1 toyMC)
   68% expected band : 0.187522 < r < 0.187522
   95% expected band : 0.187522 < r < 0.187522
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 330845518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.208759 +/- 0.00269295 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.208759 @ 95%CL (1 toyMC)
median expected limit: r < 0.208759 @ 95%CL (1 toyMC)
   68% expected band : 0.208759 < r < 0.208759
   95% expected band : 0.208759 < r < 0.208759
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2122356785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.08131 +/- 2.17481 @ 95% CL (22 tries)
Done in 52.16 min (cpu), 52.39 min (real)
mean   expected limit: r < 7.08131 @ 95%CL (1 toyMC)
median expected limit: r < 7.08131 @ 95%CL (1 toyMC)
   68% expected band : 7.08131 < r < 7.08131
   95% expected band : 7.08131 < r < 7.08131
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 984140417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.220586 +/- 0.00281007 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.220586 @ 95%CL (1 toyMC)
median expected limit: r < 0.220586 @ 95%CL (1 toyMC)
   68% expected band : 0.220586 < r < 0.220586
   95% expected band : 0.220586 < r < 0.220586
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1571183897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.22974 +/- 0.00190895 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.22974 @ 95%CL (1 toyMC)
median expected limit: r < 0.22974 @ 95%CL (1 toyMC)
   68% expected band : 0.22974 < r < 0.22974
   95% expected band : 0.22974 < r < 0.22974
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2122408290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203177 +/- 0.00328958 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.203177 @ 95%CL (1 toyMC)
median expected limit: r < 0.203177 @ 95%CL (1 toyMC)
   68% expected band : 0.203177 < r < 0.203177
   95% expected band : 0.203177 < r < 0.203177
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1387906702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.188671 +/- 0.00292604 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 0.188671 @ 95%CL (1 toyMC)
median expected limit: r < 0.188671 @ 95%CL (1 toyMC)
   68% expected band : 0.188671 < r < 0.188671
   95% expected band : 0.188671 < r < 0.188671
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1284956782
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.155874 +/- 0.00723076 @ 95% CL (55 tries)
Done in 26.50 min (cpu), 26.65 min (real)
mean   expected limit: r < 0.155874 @ 95%CL (1 toyMC)
median expected limit: r < 0.155874 @ 95%CL (1 toyMC)
   68% expected band : 0.155874 < r < 0.155874
   95% expected band : 0.155874 < r < 0.155874
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1336259434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.177654 +/- 0.00479022 @ 95% CL (92 tries)
Done in 8.79 min (cpu), 8.84 min (real)
mean   expected limit: r < 0.177654 @ 95%CL (1 toyMC)
median expected limit: r < 0.177654 @ 95%CL (1 toyMC)
   68% expected band : 0.177654 < r < 0.177654
   95% expected band : 0.177654 < r < 0.177654
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1205381597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.141906 +/- 0.00743322 @ 95% CL (68 tries)
Done in 22.58 min (cpu), 22.73 min (real)
mean   expected limit: r < 0.141906 @ 95%CL (1 toyMC)
median expected limit: r < 0.141906 @ 95%CL (1 toyMC)
   68% expected band : 0.141906 < r < 0.141906
   95% expected band : 0.141906 < r < 0.141906
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -446244117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.259259 +/- 0.00233598 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.92 min (real)
mean   expected limit: r < 0.259259 @ 95%CL (1 toyMC)
median expected limit: r < 0.259259 @ 95%CL (1 toyMC)
   68% expected band : 0.259259 < r < 0.259259
   95% expected band : 0.259259 < r < 0.259259
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1660451044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.166607 +/- 0.00329542 @ 95% CL (96 tries)
Done in 4.21 min (cpu), 4.24 min (real)
mean   expected limit: r < 0.166607 @ 95%CL (1 toyMC)
median expected limit: r < 0.166607 @ 95%CL (1 toyMC)
   68% expected band : 0.166607 < r < 0.166607
   95% expected band : 0.166607 < r < 0.166607
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1800947479
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.209144 +/- 0.00283237 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.84 min (real)
mean   expected limit: r < 0.209144 @ 95%CL (1 toyMC)
median expected limit: r < 0.209144 @ 95%CL (1 toyMC)
   68% expected band : 0.209144 < r < 0.209144
   95% expected band : 0.209144 < r < 0.209144
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1991441982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.240638 +/- 0.00176712 @ 95% CL (100 tries)
Done in 1.99 min (cpu), 2.00 min (real)
mean   expected limit: r < 0.240638 @ 95%CL (1 toyMC)
median expected limit: r < 0.240638 @ 95%CL (1 toyMC)
   68% expected band : 0.240638 < r < 0.240638
   95% expected band : 0.240638 < r < 0.240638
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1702933025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.157436 +/- 0.00586998 @ 95% CL (70 tries)
Done in 24.60 min (cpu), 24.75 min (real)
mean   expected limit: r < 0.157436 @ 95%CL (1 toyMC)
median expected limit: r < 0.157436 @ 95%CL (1 toyMC)
   68% expected band : 0.157436 < r < 0.157436
   95% expected band : 0.157436 < r < 0.157436
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -488416025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.17711 +/- 0.00441641 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.93 min (real)
mean   expected limit: r < 0.17711 @ 95%CL (1 toyMC)
median expected limit: r < 0.17711 @ 95%CL (1 toyMC)
   68% expected band : 0.17711 < r < 0.17711
   95% expected band : 0.17711 < r < 0.17711
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -841999950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.259326 +/- 0.0021121 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 0.259326 @ 95%CL (1 toyMC)
median expected limit: r < 0.259326 @ 95%CL (1 toyMC)
   68% expected band : 0.259326 < r < 0.259326
   95% expected band : 0.259326 < r < 0.259326
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1703490592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.24257 +/- 0.00252377 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.85 min (real)
mean   expected limit: r < 0.24257 @ 95%CL (1 toyMC)
median expected limit: r < 0.24257 @ 95%CL (1 toyMC)
   68% expected band : 0.24257 < r < 0.24257
   95% expected band : 0.24257 < r < 0.24257
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 946202226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.323246 +/- 0.00191615 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.94 min (real)
mean   expected limit: r < 0.323246 @ 95%CL (1 toyMC)
median expected limit: r < 0.323246 @ 95%CL (1 toyMC)
   68% expected band : 0.323246 < r < 0.323246
   95% expected band : 0.323246 < r < 0.323246
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2071149220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.24364 +/- 0.00212432 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.89 min (real)
mean   expected limit: r < 0.24364 @ 95%CL (1 toyMC)
median expected limit: r < 0.24364 @ 95%CL (1 toyMC)
   68% expected band : 0.24364 < r < 0.24364
   95% expected band : 0.24364 < r < 0.24364
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -519480488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.349746 +/- 0.00212812 @ 95% CL (100 tries)
Done in 1.98 min (cpu), 1.99 min (real)
mean   expected limit: r < 0.349746 @ 95%CL (1 toyMC)
median expected limit: r < 0.349746 @ 95%CL (1 toyMC)
   68% expected band : 0.349746 < r < 0.349746
   95% expected band : 0.349746 < r < 0.349746
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1675468437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.69553 +/- 1.81782 @ 95% CL (32 tries)
Done in 41.56 min (cpu), 41.81 min (real)
mean   expected limit: r < 7.69553 @ 95%CL (1 toyMC)
median expected limit: r < 7.69553 @ 95%CL (1 toyMC)
   68% expected band : 7.69553 < r < 7.69553
   95% expected band : 7.69553 < r < 7.69553
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 79262222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.300556 +/- 0.00237024 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.89 min (real)
mean   expected limit: r < 0.300556 @ 95%CL (1 toyMC)
median expected limit: r < 0.300556 @ 95%CL (1 toyMC)
   68% expected band : 0.300556 < r < 0.300556
   95% expected band : 0.300556 < r < 0.300556
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 695649649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.351588 +/- 0.00185519 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.89 min (real)
mean   expected limit: r < 0.351588 @ 95%CL (1 toyMC)
median expected limit: r < 0.351588 @ 95%CL (1 toyMC)
   68% expected band : 0.351588 < r < 0.351588
   95% expected band : 0.351588 < r < 0.351588
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -493198828
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.161243 +/- 0.00415582 @ 95% CL (88 tries)
Done in 9.28 min (cpu), 9.35 min (real)
mean   expected limit: r < 0.161243 @ 95%CL (1 toyMC)
median expected limit: r < 0.161243 @ 95%CL (1 toyMC)
   68% expected band : 0.161243 < r < 0.161243
   95% expected band : 0.161243 < r < 0.161243
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 590834090
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.167138 +/- 0.00693045 @ 95% CL (51 tries)
Done in 32.92 min (cpu), 33.07 min (real)
mean   expected limit: r < 0.167138 @ 95%CL (1 toyMC)
median expected limit: r < 0.167138 @ 95%CL (1 toyMC)
   68% expected band : 0.167138 < r < 0.167138
   95% expected band : 0.167138 < r < 0.167138
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1424701634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.160787 +/- 0.00552749 @ 95% CL (87 tries)
Done in 13.27 min (cpu), 13.33 min (real)
mean   expected limit: r < 0.160787 @ 95%CL (1 toyMC)
median expected limit: r < 0.160787 @ 95%CL (1 toyMC)
   68% expected band : 0.160787 < r < 0.160787
   95% expected band : 0.160787 < r < 0.160787
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 972585633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.191173 +/- 0.00277414 @ 95% CL (99 tries)
Done in 2.48 min (cpu), 2.48 min (real)
mean   expected limit: r < 0.191173 @ 95%CL (1 toyMC)
median expected limit: r < 0.191173 @ 95%CL (1 toyMC)
   68% expected band : 0.191173 < r < 0.191173
   95% expected band : 0.191173 < r < 0.191173
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1495488207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.243444 +/- 0.00248663 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.243444 @ 95%CL (1 toyMC)
median expected limit: r < 0.243444 @ 95%CL (1 toyMC)
   68% expected band : 0.243444 < r < 0.243444
   95% expected band : 0.243444 < r < 0.243444
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1969669296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.185665 +/- 0.00326806 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.185665 @ 95%CL (1 toyMC)
median expected limit: r < 0.185665 @ 95%CL (1 toyMC)
   68% expected band : 0.185665 < r < 0.185665
   95% expected band : 0.185665 < r < 0.185665
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -7698597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.292562 +/- 0.00176117 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 0.292562 @ 95%CL (1 toyMC)
median expected limit: r < 0.292562 @ 95%CL (1 toyMC)
   68% expected band : 0.292562 < r < 0.292562
   95% expected band : 0.292562 < r < 0.292562
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 83409980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.242766 +/- 0.00216548 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.242766 @ 95%CL (1 toyMC)
median expected limit: r < 0.242766 @ 95%CL (1 toyMC)
   68% expected band : 0.242766 < r < 0.242766
   95% expected band : 0.242766 < r < 0.242766
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1786274613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.21676 +/- 0.0032064 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.21676 @ 95%CL (1 toyMC)
median expected limit: r < 0.21676 @ 95%CL (1 toyMC)
   68% expected band : 0.21676 < r < 0.21676
   95% expected band : 0.21676 < r < 0.21676
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -486177864
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.206707 +/- 0.00338213 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.206707 @ 95%CL (1 toyMC)
median expected limit: r < 0.206707 @ 95%CL (1 toyMC)
   68% expected band : 0.206707 < r < 0.206707
   95% expected band : 0.206707 < r < 0.206707
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 297035809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.209624 +/- 0.00280776 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.209624 @ 95%CL (1 toyMC)
median expected limit: r < 0.209624 @ 95%CL (1 toyMC)
   68% expected band : 0.209624 < r < 0.209624
   95% expected band : 0.209624 < r < 0.209624
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 775368940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.225963 +/- 0.00176754 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.225963 @ 95%CL (1 toyMC)
median expected limit: r < 0.225963 @ 95%CL (1 toyMC)
   68% expected band : 0.225963 < r < 0.225963
   95% expected band : 0.225963 < r < 0.225963
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1140104614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.379334 +/- 0.00195208 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.379334 @ 95%CL (1 toyMC)
median expected limit: r < 0.379334 @ 95%CL (1 toyMC)
   68% expected band : 0.379334 < r < 0.379334
   95% expected band : 0.379334 < r < 0.379334
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1884595000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.19607 +/- 0.00243237 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.19607 @ 95%CL (1 toyMC)
median expected limit: r < 0.19607 @ 95%CL (1 toyMC)
   68% expected band : 0.19607 < r < 0.19607
   95% expected band : 0.19607 < r < 0.19607
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -187346352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.214222 +/- 0.00229676 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.214222 @ 95%CL (1 toyMC)
median expected limit: r < 0.214222 @ 95%CL (1 toyMC)
   68% expected band : 0.214222 < r < 0.214222
   95% expected band : 0.214222 < r < 0.214222
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 594658453
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.226414 +/- 0.00251606 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.226414 @ 95%CL (1 toyMC)
median expected limit: r < 0.226414 @ 95%CL (1 toyMC)
   68% expected band : 0.226414 < r < 0.226414
   95% expected band : 0.226414 < r < 0.226414
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2056522235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.42111 +/- 0.00214687 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.42111 @ 95%CL (1 toyMC)
median expected limit: r < 0.42111 @ 95%CL (1 toyMC)
   68% expected band : 0.42111 < r < 0.42111
   95% expected band : 0.42111 < r < 0.42111
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 860020526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.297432 +/- 0.0016001 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.297432 @ 95%CL (1 toyMC)
median expected limit: r < 0.297432 @ 95%CL (1 toyMC)
   68% expected band : 0.297432 < r < 0.297432
   95% expected band : 0.297432 < r < 0.297432
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -776269786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.18743 +/- 0.00332988 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.18743 @ 95%CL (1 toyMC)
median expected limit: r < 0.18743 @ 95%CL (1 toyMC)
   68% expected band : 0.18743 < r < 0.18743
   95% expected band : 0.18743 < r < 0.18743
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 603462701
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.1671 +/- 0.00487264 @ 95% CL (95 tries)
Done in 4.64 min (cpu), 4.65 min (real)
mean   expected limit: r < 0.1671 @ 95%CL (1 toyMC)
median expected limit: r < 0.1671 @ 95%CL (1 toyMC)
   68% expected band : 0.1671 < r < 0.1671
   95% expected band : 0.1671 < r < 0.1671
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1233613701
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.155985 +/- 0.00564266 @ 95% CL (72 tries)
Done in 16.93 min (cpu), 16.99 min (real)
mean   expected limit: r < 0.155985 @ 95%CL (1 toyMC)
median expected limit: r < 0.155985 @ 95%CL (1 toyMC)
   68% expected band : 0.155985 < r < 0.155985
   95% expected band : 0.155985 < r < 0.155985
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2108581100
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.163561 +/- 0.00414633 @ 95% CL (88 tries)
Done in 11.31 min (cpu), 11.35 min (real)
mean   expected limit: r < 0.163561 @ 95%CL (1 toyMC)
median expected limit: r < 0.163561 @ 95%CL (1 toyMC)
   68% expected band : 0.163561 < r < 0.163561
   95% expected band : 0.163561 < r < 0.163561
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1257383322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.293276 +/- 0.00220743 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.293276 @ 95%CL (1 toyMC)
median expected limit: r < 0.293276 @ 95%CL (1 toyMC)
   68% expected band : 0.293276 < r < 0.293276
   95% expected band : 0.293276 < r < 0.293276
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 486667868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.245936 +/- 0.00239372 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.245936 @ 95%CL (1 toyMC)
median expected limit: r < 0.245936 @ 95%CL (1 toyMC)
   68% expected band : 0.245936 < r < 0.245936
   95% expected band : 0.245936 < r < 0.245936
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -42421439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.154319 +/- 0.00483847 @ 95% CL (77 tries)
Done in 13.32 min (cpu), 13.37 min (real)
mean   expected limit: r < 0.154319 @ 95%CL (1 toyMC)
median expected limit: r < 0.154319 @ 95%CL (1 toyMC)
   68% expected band : 0.154319 < r < 0.154319
   95% expected band : 0.154319 < r < 0.154319
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1333286589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.19799 +/- 0.00338852 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.19799 @ 95%CL (1 toyMC)
median expected limit: r < 0.19799 @ 95%CL (1 toyMC)
   68% expected band : 0.19799 < r < 0.19799
   95% expected band : 0.19799 < r < 0.19799
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1853919127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.316044 +/- 0.00182658 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.316044 @ 95%CL (1 toyMC)
median expected limit: r < 0.316044 @ 95%CL (1 toyMC)
   68% expected band : 0.316044 < r < 0.316044
   95% expected band : 0.316044 < r < 0.316044
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 28407380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.21779 +/- 0.00279817 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 0.21779 @ 95%CL (1 toyMC)
median expected limit: r < 0.21779 @ 95%CL (1 toyMC)
   68% expected band : 0.21779 < r < 0.21779
   95% expected band : 0.21779 < r < 0.21779
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1859351029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.171901 +/- 0.00411352 @ 95% CL (98 tries)
Done in 2.19 min (cpu), 2.20 min (real)
mean   expected limit: r < 0.171901 @ 95%CL (1 toyMC)
median expected limit: r < 0.171901 @ 95%CL (1 toyMC)
   68% expected band : 0.171901 < r < 0.171901
   95% expected band : 0.171901 < r < 0.171901
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -618591926
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.185633 +/- 0.00249764 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.185633 @ 95%CL (1 toyMC)
median expected limit: r < 0.185633 @ 95%CL (1 toyMC)
   68% expected band : 0.185633 < r < 0.185633
   95% expected band : 0.185633 < r < 0.185633
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1363519024
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.213372 +/- 0.00211965 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.213372 @ 95%CL (1 toyMC)
median expected limit: r < 0.213372 @ 95%CL (1 toyMC)
   68% expected band : 0.213372 < r < 0.213372
   95% expected band : 0.213372 < r < 0.213372
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1782424206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.179853 +/- 0.00329244 @ 95% CL (98 tries)
Done in 2.80 min (cpu), 2.81 min (real)
mean   expected limit: r < 0.179853 @ 95%CL (1 toyMC)
median expected limit: r < 0.179853 @ 95%CL (1 toyMC)
   68% expected band : 0.179853 < r < 0.179853
   95% expected band : 0.179853 < r < 0.179853
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -583674065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.191447 +/- 0.00340112 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.191447 @ 95%CL (1 toyMC)
median expected limit: r < 0.191447 @ 95%CL (1 toyMC)
   68% expected band : 0.191447 < r < 0.191447
   95% expected band : 0.191447 < r < 0.191447
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1910851154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.16427 +/- 0.00508332 @ 95% CL (90 tries)
Done in 10.67 min (cpu), 10.70 min (real)
mean   expected limit: r < 0.16427 @ 95%CL (1 toyMC)
median expected limit: r < 0.16427 @ 95%CL (1 toyMC)
   68% expected band : 0.16427 < r < 0.16427
   95% expected band : 0.16427 < r < 0.16427
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1517730769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.200665 +/- 0.00290189 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.200665 @ 95%CL (1 toyMC)
median expected limit: r < 0.200665 @ 95%CL (1 toyMC)
   68% expected band : 0.200665 < r < 0.200665
   95% expected band : 0.200665 < r < 0.200665
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1826558598
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.188882 +/- 0.00306402 @ 95% CL (99 tries)
Done in 2.16 min (cpu), 2.17 min (real)
mean   expected limit: r < 0.188882 @ 95%CL (1 toyMC)
median expected limit: r < 0.188882 @ 95%CL (1 toyMC)
   68% expected band : 0.188882 < r < 0.188882
   95% expected band : 0.188882 < r < 0.188882
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1714840878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.22827 +/- 0.00237221 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.22827 @ 95%CL (1 toyMC)
median expected limit: r < 0.22827 @ 95%CL (1 toyMC)
   68% expected band : 0.22827 < r < 0.22827
   95% expected band : 0.22827 < r < 0.22827
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1655083950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.55075 +/- 1.39588 @ 95% CL (39 tries)
Done in 34.92 min (cpu), 35.03 min (real)
mean   expected limit: r < 4.55075 @ 95%CL (1 toyMC)
median expected limit: r < 4.55075 @ 95%CL (1 toyMC)
   68% expected band : 4.55075 < r < 4.55075
   95% expected band : 4.55075 < r < 4.55075
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1332607261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.272559 +/- 0.0018754 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.272559 @ 95%CL (1 toyMC)
median expected limit: r < 0.272559 @ 95%CL (1 toyMC)
   68% expected band : 0.272559 < r < 0.272559
   95% expected band : 0.272559 < r < 0.272559
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1450915281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.233357 +/- 0.00249582 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.233357 @ 95%CL (1 toyMC)
median expected limit: r < 0.233357 @ 95%CL (1 toyMC)
   68% expected band : 0.233357 < r < 0.233357
   95% expected band : 0.233357 < r < 0.233357
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 625134606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.186915 +/- 0.00350575 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.186915 @ 95%CL (1 toyMC)
median expected limit: r < 0.186915 @ 95%CL (1 toyMC)
   68% expected band : 0.186915 < r < 0.186915
   95% expected band : 0.186915 < r < 0.186915
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -487714736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.218463 +/- 0.00215639 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.218463 @ 95%CL (1 toyMC)
median expected limit: r < 0.218463 @ 95%CL (1 toyMC)
   68% expected band : 0.218463 < r < 0.218463
   95% expected band : 0.218463 < r < 0.218463
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1597401423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.173005 +/- 0.00377345 @ 95% CL (97 tries)
Done in 3.04 min (cpu), 3.05 min (real)
mean   expected limit: r < 0.173005 @ 95%CL (1 toyMC)
median expected limit: r < 0.173005 @ 95%CL (1 toyMC)
   68% expected band : 0.173005 < r < 0.173005
   95% expected band : 0.173005 < r < 0.173005
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 210513185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.247862 +/- 0.00231771 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.247862 @ 95%CL (1 toyMC)
median expected limit: r < 0.247862 @ 95%CL (1 toyMC)
   68% expected band : 0.247862 < r < 0.247862
   95% expected band : 0.247862 < r < 0.247862
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1584784935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.27671 +/- 0.0022776 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.27671 @ 95%CL (1 toyMC)
median expected limit: r < 0.27671 @ 95%CL (1 toyMC)
   68% expected band : 0.27671 < r < 0.27671
   95% expected band : 0.27671 < r < 0.27671
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 666415876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.159934 +/- 0.00387785 @ 95% CL (86 tries)
Done in 9.36 min (cpu), 9.39 min (real)
mean   expected limit: r < 0.159934 @ 95%CL (1 toyMC)
median expected limit: r < 0.159934 @ 95%CL (1 toyMC)
   68% expected band : 0.159934 < r < 0.159934
   95% expected band : 0.159934 < r < 0.159934
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1360304051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.253837 +/- 0.00179106 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.253837 @ 95%CL (1 toyMC)
median expected limit: r < 0.253837 @ 95%CL (1 toyMC)
   68% expected band : 0.253837 < r < 0.253837
   95% expected band : 0.253837 < r < 0.253837
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1565889391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.44167 +/- 0.00220531 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.44167 @ 95%CL (1 toyMC)
median expected limit: r < 0.44167 @ 95%CL (1 toyMC)
   68% expected band : 0.44167 < r < 0.44167
   95% expected band : 0.44167 < r < 0.44167
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1358786239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.30125 +/- 0.00217238 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.30125 @ 95%CL (1 toyMC)
median expected limit: r < 0.30125 @ 95%CL (1 toyMC)
   68% expected band : 0.30125 < r < 0.30125
   95% expected band : 0.30125 < r < 0.30125
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 741954595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.220099 +/- 0.00224505 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.220099 @ 95%CL (1 toyMC)
median expected limit: r < 0.220099 @ 95%CL (1 toyMC)
   68% expected band : 0.220099 < r < 0.220099
   95% expected band : 0.220099 < r < 0.220099
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1205891662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.188203 +/- 0.00310621 @ 95% CL (99 tries)
Done in 2.08 min (cpu), 2.09 min (real)
mean   expected limit: r < 0.188203 @ 95%CL (1 toyMC)
median expected limit: r < 0.188203 @ 95%CL (1 toyMC)
   68% expected band : 0.188203 < r < 0.188203
   95% expected band : 0.188203 < r < 0.188203
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 255947676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.22503 +/- 0.00282707 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.22503 @ 95%CL (1 toyMC)
median expected limit: r < 0.22503 @ 95%CL (1 toyMC)
   68% expected band : 0.22503 < r < 0.22503
   95% expected band : 0.22503 < r < 0.22503
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 962226038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.310968 +/- 0.00198827 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 0.310968 @ 95%CL (1 toyMC)
median expected limit: r < 0.310968 @ 95%CL (1 toyMC)
   68% expected band : 0.310968 < r < 0.310968
   95% expected band : 0.310968 < r < 0.310968
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -217602174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.418084 +/- 0.00229317 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.418084 @ 95%CL (1 toyMC)
median expected limit: r < 0.418084 @ 95%CL (1 toyMC)
   68% expected band : 0.418084 < r < 0.418084
   95% expected band : 0.418084 < r < 0.418084
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1341109476
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.58953 +/- 2.48212 @ 95% CL (16 tries)
Done in 50.98 min (cpu), 51.11 min (real)
mean   expected limit: r < 7.58953 @ 95%CL (1 toyMC)
median expected limit: r < 7.58953 @ 95%CL (1 toyMC)
   68% expected band : 7.58953 < r < 7.58953
   95% expected band : 7.58953 < r < 7.58953
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -244842381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.206631 +/- 0.00227382 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.206631 @ 95%CL (1 toyMC)
median expected limit: r < 0.206631 @ 95%CL (1 toyMC)
   68% expected band : 0.206631 < r < 0.206631
   95% expected band : 0.206631 < r < 0.206631
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1507785740
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.267952 +/- 0.00241794 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.267952 @ 95%CL (1 toyMC)
median expected limit: r < 0.267952 @ 95%CL (1 toyMC)
   68% expected band : 0.267952 < r < 0.267952
   95% expected band : 0.267952 < r < 0.267952
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1852727859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.222407 +/- 0.00244935 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.222407 @ 95%CL (1 toyMC)
median expected limit: r < 0.222407 @ 95%CL (1 toyMC)
   68% expected band : 0.222407 < r < 0.222407
   95% expected band : 0.222407 < r < 0.222407
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1431940778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.25835 +/- 0.00237302 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.25835 @ 95%CL (1 toyMC)
median expected limit: r < 0.25835 @ 95%CL (1 toyMC)
   68% expected band : 0.25835 < r < 0.25835
   95% expected band : 0.25835 < r < 0.25835
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1412614157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.160554 +/- 0.0041744 @ 95% CL (85 tries)
Done in 10.27 min (cpu), 10.31 min (real)
mean   expected limit: r < 0.160554 @ 95%CL (1 toyMC)
median expected limit: r < 0.160554 @ 95%CL (1 toyMC)
   68% expected band : 0.160554 < r < 0.160554
   95% expected band : 0.160554 < r < 0.160554
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1450676080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.425585 +/- 0.00157543 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.425585 @ 95%CL (1 toyMC)
median expected limit: r < 0.425585 @ 95%CL (1 toyMC)
   68% expected band : 0.425585 < r < 0.425585
   95% expected band : 0.425585 < r < 0.425585
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1457010585
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203633 +/- 0.0025164 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 0.203633 @ 95%CL (1 toyMC)
median expected limit: r < 0.203633 @ 95%CL (1 toyMC)
   68% expected band : 0.203633 < r < 0.203633
   95% expected band : 0.203633 < r < 0.203633
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -893771018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.170544 +/- 0.00378169 @ 95% CL (97 tries)
Done in 3.15 min (cpu), 3.16 min (real)
mean   expected limit: r < 0.170544 @ 95%CL (1 toyMC)
median expected limit: r < 0.170544 @ 95%CL (1 toyMC)
   68% expected band : 0.170544 < r < 0.170544
   95% expected band : 0.170544 < r < 0.170544
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 931456410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.188993 +/- 0.00296469 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.188993 @ 95%CL (1 toyMC)
median expected limit: r < 0.188993 @ 95%CL (1 toyMC)
   68% expected band : 0.188993 < r < 0.188993
   95% expected band : 0.188993 < r < 0.188993
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1699448905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.323936 +/- 0.0020293 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.323936 @ 95%CL (1 toyMC)
median expected limit: r < 0.323936 @ 95%CL (1 toyMC)
   68% expected band : 0.323936 < r < 0.323936
   95% expected band : 0.323936 < r < 0.323936
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1040307696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.234149 +/- 0.00282904 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.234149 @ 95%CL (1 toyMC)
median expected limit: r < 0.234149 @ 95%CL (1 toyMC)
   68% expected band : 0.234149 < r < 0.234149
   95% expected band : 0.234149 < r < 0.234149
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1139949335
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.191611 +/- 0.00467168 @ 95% CL (97 tries)
Done in 4.05 min (cpu), 4.06 min (real)
mean   expected limit: r < 0.191611 @ 95%CL (1 toyMC)
median expected limit: r < 0.191611 @ 95%CL (1 toyMC)
   68% expected band : 0.191611 < r < 0.191611
   95% expected band : 0.191611 < r < 0.191611
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 173772925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.678307 +/- 0.00332411 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.678307 @ 95%CL (1 toyMC)
median expected limit: r < 0.678307 @ 95%CL (1 toyMC)
   68% expected band : 0.678307 < r < 0.678307
   95% expected band : 0.678307 < r < 0.678307
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1591908430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.725962 +/- 0.00327909 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.725962 @ 95%CL (1 toyMC)
median expected limit: r < 0.725962 @ 95%CL (1 toyMC)
   68% expected band : 0.725962 < r < 0.725962
   95% expected band : 0.725962 < r < 0.725962
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 806906541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.529774 +/- 0.00315498 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.529774 @ 95%CL (1 toyMC)
median expected limit: r < 0.529774 @ 95%CL (1 toyMC)
   68% expected band : 0.529774 < r < 0.529774
   95% expected band : 0.529774 < r < 0.529774
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1659933201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.54789 +/- 0.00377385 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.54789 @ 95%CL (1 toyMC)
median expected limit: r < 0.54789 @ 95%CL (1 toyMC)
   68% expected band : 0.54789 < r < 0.54789
   95% expected band : 0.54789 < r < 0.54789
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1842468019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.866296 +/- 0.00392265 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.866296 @ 95%CL (1 toyMC)
median expected limit: r < 0.866296 @ 95%CL (1 toyMC)
   68% expected band : 0.866296 < r < 0.866296
   95% expected band : 0.866296 < r < 0.866296
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1645110851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.626238 +/- 0.00384706 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.626238 @ 95%CL (1 toyMC)
median expected limit: r < 0.626238 @ 95%CL (1 toyMC)
   68% expected band : 0.626238 < r < 0.626238
   95% expected band : 0.626238 < r < 0.626238
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 732365167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.826622 +/- 0.00385762 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.826622 @ 95%CL (1 toyMC)
median expected limit: r < 0.826622 @ 95%CL (1 toyMC)
   68% expected band : 0.826622 < r < 0.826622
   95% expected band : 0.826622 < r < 0.826622
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 939726084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.764166 +/- 0.00255803 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.764166 @ 95%CL (1 toyMC)
median expected limit: r < 0.764166 @ 95%CL (1 toyMC)
   68% expected band : 0.764166 < r < 0.764166
   95% expected band : 0.764166 < r < 0.764166
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -375219425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.578225 +/- 0.00300406 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.578225 @ 95%CL (1 toyMC)
median expected limit: r < 0.578225 @ 95%CL (1 toyMC)
   68% expected band : 0.578225 < r < 0.578225
   95% expected band : 0.578225 < r < 0.578225
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -861764012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.886342 +/- 0.00357519 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.886342 @ 95%CL (1 toyMC)
median expected limit: r < 0.886342 @ 95%CL (1 toyMC)
   68% expected band : 0.886342 < r < 0.886342
   95% expected band : 0.886342 < r < 0.886342
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 617174885
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.800869 +/- 0.00323566 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.800869 @ 95%CL (1 toyMC)
median expected limit: r < 0.800869 @ 95%CL (1 toyMC)
   68% expected band : 0.800869 < r < 0.800869
   95% expected band : 0.800869 < r < 0.800869
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 457353394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.916301 +/- 0.00259641 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.916301 @ 95%CL (1 toyMC)
median expected limit: r < 0.916301 @ 95%CL (1 toyMC)
   68% expected band : 0.916301 < r < 0.916301
   95% expected band : 0.916301 < r < 0.916301
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -190558216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.631194 +/- 0.00386502 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.631194 @ 95%CL (1 toyMC)
median expected limit: r < 0.631194 @ 95%CL (1 toyMC)
   68% expected band : 0.631194 < r < 0.631194
   95% expected band : 0.631194 < r < 0.631194
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 986523736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.579945 +/- 0.00334606 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.579945 @ 95%CL (1 toyMC)
median expected limit: r < 0.579945 @ 95%CL (1 toyMC)
   68% expected band : 0.579945 < r < 0.579945
   95% expected band : 0.579945 < r < 0.579945
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1573362933
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.95617 +/- 0.00400066 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.95617 @ 95%CL (1 toyMC)
median expected limit: r < 0.95617 @ 95%CL (1 toyMC)
   68% expected band : 0.95617 < r < 0.95617
   95% expected band : 0.95617 < r < 0.95617
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1105459038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.883625 +/- 0.00420343 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.883625 @ 95%CL (1 toyMC)
median expected limit: r < 0.883625 @ 95%CL (1 toyMC)
   68% expected band : 0.883625 < r < 0.883625
   95% expected band : 0.883625 < r < 0.883625
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -559465093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44086 +/- 0.003821 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.44086 @ 95%CL (1 toyMC)
median expected limit: r < 1.44086 @ 95%CL (1 toyMC)
   68% expected band : 1.44086 < r < 1.44086
   95% expected band : 1.44086 < r < 1.44086
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1222038774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.656377 +/- 0.00334699 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.656377 @ 95%CL (1 toyMC)
median expected limit: r < 0.656377 @ 95%CL (1 toyMC)
   68% expected band : 0.656377 < r < 0.656377
   95% expected band : 0.656377 < r < 0.656377
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 680468975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.846874 +/- 0.00334762 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.846874 @ 95%CL (1 toyMC)
median expected limit: r < 0.846874 @ 95%CL (1 toyMC)
   68% expected band : 0.846874 < r < 0.846874
   95% expected band : 0.846874 < r < 0.846874
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 709777867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02586 +/- 0.00318364 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 1.02586 @ 95%CL (1 toyMC)
median expected limit: r < 1.02586 @ 95%CL (1 toyMC)
   68% expected band : 1.02586 < r < 1.02586
   95% expected band : 1.02586 < r < 1.02586
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1271429571
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.877805 +/- 0.00356366 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.877805 @ 95%CL (1 toyMC)
median expected limit: r < 0.877805 @ 95%CL (1 toyMC)
   68% expected band : 0.877805 < r < 0.877805
   95% expected band : 0.877805 < r < 0.877805
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 270898257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.973629 +/- 0.00285658 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.973629 @ 95%CL (1 toyMC)
median expected limit: r < 0.973629 @ 95%CL (1 toyMC)
   68% expected band : 0.973629 < r < 0.973629
   95% expected band : 0.973629 < r < 0.973629
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1818841936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21845 +/- 0.00315055 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.21845 @ 95%CL (1 toyMC)
median expected limit: r < 1.21845 @ 95%CL (1 toyMC)
   68% expected band : 1.21845 < r < 1.21845
   95% expected band : 1.21845 < r < 1.21845
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 746165653
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.786663 +/- 0.00394227 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.786663 @ 95%CL (1 toyMC)
median expected limit: r < 0.786663 @ 95%CL (1 toyMC)
   68% expected band : 0.786663 < r < 0.786663
   95% expected band : 0.786663 < r < 0.786663
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 588940008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.574006 +/- 0.00330656 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.574006 @ 95%CL (1 toyMC)
median expected limit: r < 0.574006 @ 95%CL (1 toyMC)
   68% expected band : 0.574006 < r < 0.574006
   95% expected band : 0.574006 < r < 0.574006
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1092936632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.590766 +/- 0.00309845 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.590766 @ 95%CL (1 toyMC)
median expected limit: r < 0.590766 @ 95%CL (1 toyMC)
   68% expected band : 0.590766 < r < 0.590766
   95% expected band : 0.590766 < r < 0.590766
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 477305018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.905139 +/- 0.00361713 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.905139 @ 95%CL (1 toyMC)
median expected limit: r < 0.905139 @ 95%CL (1 toyMC)
   68% expected band : 0.905139 < r < 0.905139
   95% expected band : 0.905139 < r < 0.905139
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -589419774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.769082 +/- 0.00244796 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.769082 @ 95%CL (1 toyMC)
median expected limit: r < 0.769082 @ 95%CL (1 toyMC)
   68% expected band : 0.769082 < r < 0.769082
   95% expected band : 0.769082 < r < 0.769082
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 822914346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.624813 +/- 0.00340891 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.624813 @ 95%CL (1 toyMC)
median expected limit: r < 0.624813 @ 95%CL (1 toyMC)
   68% expected band : 0.624813 < r < 0.624813
   95% expected band : 0.624813 < r < 0.624813
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -677243261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03228 +/- 0.00388414 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.03228 @ 95%CL (1 toyMC)
median expected limit: r < 1.03228 @ 95%CL (1 toyMC)
   68% expected band : 1.03228 < r < 1.03228
   95% expected band : 1.03228 < r < 1.03228
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -103623071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.497577 +/- 0.00384958 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.497577 @ 95%CL (1 toyMC)
median expected limit: r < 0.497577 @ 95%CL (1 toyMC)
   68% expected band : 0.497577 < r < 0.497577
   95% expected band : 0.497577 < r < 0.497577
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1076639887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.716235 +/- 0.00372367 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.716235 @ 95%CL (1 toyMC)
median expected limit: r < 0.716235 @ 95%CL (1 toyMC)
   68% expected band : 0.716235 < r < 0.716235
   95% expected band : 0.716235 < r < 0.716235
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -31142617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.793297 +/- 0.00388191 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.793297 @ 95%CL (1 toyMC)
median expected limit: r < 0.793297 @ 95%CL (1 toyMC)
   68% expected band : 0.793297 < r < 0.793297
   95% expected band : 0.793297 < r < 0.793297
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1182701113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03328 +/- 0.00390943 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 1.03328 @ 95%CL (1 toyMC)
median expected limit: r < 1.03328 @ 95%CL (1 toyMC)
   68% expected band : 1.03328 < r < 1.03328
   95% expected band : 1.03328 < r < 1.03328
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1966873392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.888717 +/- 0.00408055 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.888717 @ 95%CL (1 toyMC)
median expected limit: r < 0.888717 @ 95%CL (1 toyMC)
   68% expected band : 0.888717 < r < 0.888717
   95% expected band : 0.888717 < r < 0.888717
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 373297076
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.630454 +/- 0.00306687 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.630454 @ 95%CL (1 toyMC)
median expected limit: r < 0.630454 @ 95%CL (1 toyMC)
   68% expected band : 0.630454 < r < 0.630454
   95% expected band : 0.630454 < r < 0.630454
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1181029355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.754765 +/- 0.00319644 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.754765 @ 95%CL (1 toyMC)
median expected limit: r < 0.754765 @ 95%CL (1 toyMC)
   68% expected band : 0.754765 < r < 0.754765
   95% expected band : 0.754765 < r < 0.754765
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1242580894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.832081 +/- 0.00359414 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.832081 @ 95%CL (1 toyMC)
median expected limit: r < 0.832081 @ 95%CL (1 toyMC)
   68% expected band : 0.832081 < r < 0.832081
   95% expected band : 0.832081 < r < 0.832081
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1535738469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00686 +/- 0.00272372 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.00686 @ 95%CL (1 toyMC)
median expected limit: r < 1.00686 @ 95%CL (1 toyMC)
   68% expected band : 1.00686 < r < 1.00686
   95% expected band : 1.00686 < r < 1.00686
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -413729087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17277 +/- 0.00291392 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.17277 @ 95%CL (1 toyMC)
median expected limit: r < 1.17277 @ 95%CL (1 toyMC)
   68% expected band : 1.17277 < r < 1.17277
   95% expected band : 1.17277 < r < 1.17277
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1336191167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.615251 +/- 0.00334164 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.615251 @ 95%CL (1 toyMC)
median expected limit: r < 0.615251 @ 95%CL (1 toyMC)
   68% expected band : 0.615251 < r < 0.615251
   95% expected band : 0.615251 < r < 0.615251
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 135672456
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.603988 +/- 0.0031876 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.603988 @ 95%CL (1 toyMC)
median expected limit: r < 0.603988 @ 95%CL (1 toyMC)
   68% expected band : 0.603988 < r < 0.603988
   95% expected band : 0.603988 < r < 0.603988
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 495865377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.62544 +/- 0.00358105 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.62544 @ 95%CL (1 toyMC)
median expected limit: r < 0.62544 @ 95%CL (1 toyMC)
   68% expected band : 0.62544 < r < 0.62544
   95% expected band : 0.62544 < r < 0.62544
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -787918193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.850782 +/- 0.00356791 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.850782 @ 95%CL (1 toyMC)
median expected limit: r < 0.850782 @ 95%CL (1 toyMC)
   68% expected band : 0.850782 < r < 0.850782
   95% expected band : 0.850782 < r < 0.850782
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -777422245
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4987 +/- 0.00340563 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 1.4987 @ 95%CL (1 toyMC)
median expected limit: r < 1.4987 @ 95%CL (1 toyMC)
   68% expected band : 1.4987 < r < 1.4987
   95% expected band : 1.4987 < r < 1.4987
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1566552181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.568959 +/- 0.00351315 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.568959 @ 95%CL (1 toyMC)
median expected limit: r < 0.568959 @ 95%CL (1 toyMC)
   68% expected band : 0.568959 < r < 0.568959
   95% expected band : 0.568959 < r < 0.568959
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1365251085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11172 +/- 0.00335926 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.11172 @ 95%CL (1 toyMC)
median expected limit: r < 1.11172 @ 95%CL (1 toyMC)
   68% expected band : 1.11172 < r < 1.11172
   95% expected band : 1.11172 < r < 1.11172
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -497334092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.516518 +/- 0.00296284 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.516518 @ 95%CL (1 toyMC)
median expected limit: r < 0.516518 @ 95%CL (1 toyMC)
   68% expected band : 0.516518 < r < 0.516518
   95% expected band : 0.516518 < r < 0.516518
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1939295722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.943314 +/- 0.00320038 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 0.943314 @ 95%CL (1 toyMC)
median expected limit: r < 0.943314 @ 95%CL (1 toyMC)
   68% expected band : 0.943314 < r < 0.943314
   95% expected band : 0.943314 < r < 0.943314
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -138928669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.61949 +/- 0.00318214 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.61949 @ 95%CL (1 toyMC)
median expected limit: r < 0.61949 @ 95%CL (1 toyMC)
   68% expected band : 0.61949 < r < 0.61949
   95% expected band : 0.61949 < r < 0.61949
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -358213251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.593089 +/- 0.00339167 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.593089 @ 95%CL (1 toyMC)
median expected limit: r < 0.593089 @ 95%CL (1 toyMC)
   68% expected band : 0.593089 < r < 0.593089
   95% expected band : 0.593089 < r < 0.593089
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1639974680
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.49884 +/- 0.00323353 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.49884 @ 95%CL (1 toyMC)
median expected limit: r < 0.49884 @ 95%CL (1 toyMC)
   68% expected band : 0.49884 < r < 0.49884
   95% expected band : 0.49884 < r < 0.49884
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -403875819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.666413 +/- 0.00385435 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.666413 @ 95%CL (1 toyMC)
median expected limit: r < 0.666413 @ 95%CL (1 toyMC)
   68% expected band : 0.666413 < r < 0.666413
   95% expected band : 0.666413 < r < 0.666413
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1183225237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.554591 +/- 0.00299431 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.554591 @ 95%CL (1 toyMC)
median expected limit: r < 0.554591 @ 95%CL (1 toyMC)
   68% expected band : 0.554591 < r < 0.554591
   95% expected band : 0.554591 < r < 0.554591
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -161712600
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.625938 +/- 0.00337005 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.625938 @ 95%CL (1 toyMC)
median expected limit: r < 0.625938 @ 95%CL (1 toyMC)
   68% expected band : 0.625938 < r < 0.625938
   95% expected band : 0.625938 < r < 0.625938
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1157734039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.912863 +/- 0.00330052 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.912863 @ 95%CL (1 toyMC)
median expected limit: r < 0.912863 @ 95%CL (1 toyMC)
   68% expected band : 0.912863 < r < 0.912863
   95% expected band : 0.912863 < r < 0.912863
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1105812385
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.533989 +/- 0.00343187 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.533989 @ 95%CL (1 toyMC)
median expected limit: r < 0.533989 @ 95%CL (1 toyMC)
   68% expected band : 0.533989 < r < 0.533989
   95% expected band : 0.533989 < r < 0.533989
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -815399614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.651515 +/- 0.00309245 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.651515 @ 95%CL (1 toyMC)
median expected limit: r < 0.651515 @ 95%CL (1 toyMC)
   68% expected band : 0.651515 < r < 0.651515
   95% expected band : 0.651515 < r < 0.651515
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 474295677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.520602 +/- 0.00350658 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.520602 @ 95%CL (1 toyMC)
median expected limit: r < 0.520602 @ 95%CL (1 toyMC)
   68% expected band : 0.520602 < r < 0.520602
   95% expected band : 0.520602 < r < 0.520602
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 335901948
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.923749 +/- 0.00277083 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.923749 @ 95%CL (1 toyMC)
median expected limit: r < 0.923749 @ 95%CL (1 toyMC)
   68% expected band : 0.923749 < r < 0.923749
   95% expected band : 0.923749 < r < 0.923749
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 529611765
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.575028 +/- 0.00301905 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.575028 @ 95%CL (1 toyMC)
median expected limit: r < 0.575028 @ 95%CL (1 toyMC)
   68% expected band : 0.575028 < r < 0.575028
   95% expected band : 0.575028 < r < 0.575028
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1846860486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.595855 +/- 0.00327096 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.595855 @ 95%CL (1 toyMC)
median expected limit: r < 0.595855 @ 95%CL (1 toyMC)
   68% expected band : 0.595855 < r < 0.595855
   95% expected band : 0.595855 < r < 0.595855
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1488429814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.67516 +/- 0.00305314 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.67516 @ 95%CL (1 toyMC)
median expected limit: r < 0.67516 @ 95%CL (1 toyMC)
   68% expected band : 0.67516 < r < 0.67516
   95% expected band : 0.67516 < r < 0.67516
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1716350104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.811198 +/- 0.00384691 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.811198 @ 95%CL (1 toyMC)
median expected limit: r < 0.811198 @ 95%CL (1 toyMC)
   68% expected band : 0.811198 < r < 0.811198
   95% expected band : 0.811198 < r < 0.811198
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1319975726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.846794 +/- 0.00357582 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 0.846794 @ 95%CL (1 toyMC)
median expected limit: r < 0.846794 @ 95%CL (1 toyMC)
   68% expected band : 0.846794 < r < 0.846794
   95% expected band : 0.846794 < r < 0.846794
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1395469216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.547649 +/- 0.00346058 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.547649 @ 95%CL (1 toyMC)
median expected limit: r < 0.547649 @ 95%CL (1 toyMC)
   68% expected band : 0.547649 < r < 0.547649
   95% expected band : 0.547649 < r < 0.547649
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1317440771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.707629 +/- 0.0031458 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.707629 @ 95%CL (1 toyMC)
median expected limit: r < 0.707629 @ 95%CL (1 toyMC)
   68% expected band : 0.707629 < r < 0.707629
   95% expected band : 0.707629 < r < 0.707629
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1120320622
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.764924 +/- 0.00372793 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.764924 @ 95%CL (1 toyMC)
median expected limit: r < 0.764924 @ 95%CL (1 toyMC)
   68% expected band : 0.764924 < r < 0.764924
   95% expected band : 0.764924 < r < 0.764924
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1776350791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.764694 +/- 0.00260352 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.764694 @ 95%CL (1 toyMC)
median expected limit: r < 0.764694 @ 95%CL (1 toyMC)
   68% expected band : 0.764694 < r < 0.764694
   95% expected band : 0.764694 < r < 0.764694
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2108324619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.770852 +/- 0.00349805 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.770852 @ 95%CL (1 toyMC)
median expected limit: r < 0.770852 @ 95%CL (1 toyMC)
   68% expected band : 0.770852 < r < 0.770852
   95% expected band : 0.770852 < r < 0.770852
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 716658586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.673982 +/- 0.00315784 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.673982 @ 95%CL (1 toyMC)
median expected limit: r < 0.673982 @ 95%CL (1 toyMC)
   68% expected band : 0.673982 < r < 0.673982
   95% expected band : 0.673982 < r < 0.673982
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -307428126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.911065 +/- 0.00362213 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.911065 @ 95%CL (1 toyMC)
median expected limit: r < 0.911065 @ 95%CL (1 toyMC)
   68% expected band : 0.911065 < r < 0.911065
   95% expected band : 0.911065 < r < 0.911065
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1874613452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.78171 +/- 0.00385602 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.78171 @ 95%CL (1 toyMC)
median expected limit: r < 0.78171 @ 95%CL (1 toyMC)
   68% expected band : 0.78171 < r < 0.78171
   95% expected band : 0.78171 < r < 0.78171
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1912548594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.676112 +/- 0.00391335 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 0.676112 @ 95%CL (1 toyMC)
median expected limit: r < 0.676112 @ 95%CL (1 toyMC)
   68% expected band : 0.676112 < r < 0.676112
   95% expected band : 0.676112 < r < 0.676112
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -247077060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.942392 +/- 0.00292821 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.942392 @ 95%CL (1 toyMC)
median expected limit: r < 0.942392 @ 95%CL (1 toyMC)
   68% expected band : 0.942392 < r < 0.942392
   95% expected band : 0.942392 < r < 0.942392
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1604065554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.950716 +/- 0.00315087 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.950716 @ 95%CL (1 toyMC)
median expected limit: r < 0.950716 @ 95%CL (1 toyMC)
   68% expected band : 0.950716 < r < 0.950716
   95% expected band : 0.950716 < r < 0.950716
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1004347496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16443 +/- 0.0027896 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 1.16443 @ 95%CL (1 toyMC)
median expected limit: r < 1.16443 @ 95%CL (1 toyMC)
   68% expected band : 1.16443 < r < 1.16443
   95% expected band : 1.16443 < r < 1.16443
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 835102992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.576753 +/- 0.00398577 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.576753 @ 95%CL (1 toyMC)
median expected limit: r < 0.576753 @ 95%CL (1 toyMC)
   68% expected band : 0.576753 < r < 0.576753
   95% expected band : 0.576753 < r < 0.576753
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2080177400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.969292 +/- 0.00335913 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.969292 @ 95%CL (1 toyMC)
median expected limit: r < 0.969292 @ 95%CL (1 toyMC)
   68% expected band : 0.969292 < r < 0.969292
   95% expected band : 0.969292 < r < 0.969292
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1588501121
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.790935 +/- 0.00343418 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.790935 @ 95%CL (1 toyMC)
median expected limit: r < 0.790935 @ 95%CL (1 toyMC)
   68% expected band : 0.790935 < r < 0.790935
   95% expected band : 0.790935 < r < 0.790935
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1486154731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32526 +/- 0.00339829 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.32526 @ 95%CL (1 toyMC)
median expected limit: r < 1.32526 @ 95%CL (1 toyMC)
   68% expected band : 1.32526 < r < 1.32526
   95% expected band : 1.32526 < r < 1.32526
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1258455474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.662439 +/- 0.00379177 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.662439 @ 95%CL (1 toyMC)
median expected limit: r < 0.662439 @ 95%CL (1 toyMC)
   68% expected band : 0.662439 < r < 0.662439
   95% expected band : 0.662439 < r < 0.662439
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 533701012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.65952 +/- 0.00341633 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.65952 @ 95%CL (1 toyMC)
median expected limit: r < 0.65952 @ 95%CL (1 toyMC)
   68% expected band : 0.65952 < r < 0.65952
   95% expected band : 0.65952 < r < 0.65952
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1089588238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.580005 +/- 0.0031652 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.580005 @ 95%CL (1 toyMC)
median expected limit: r < 0.580005 @ 95%CL (1 toyMC)
   68% expected band : 0.580005 < r < 0.580005
   95% expected band : 0.580005 < r < 0.580005
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 32364617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.870463 +/- 0.00294198 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.870463 @ 95%CL (1 toyMC)
median expected limit: r < 0.870463 @ 95%CL (1 toyMC)
   68% expected band : 0.870463 < r < 0.870463
   95% expected band : 0.870463 < r < 0.870463
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1419348895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.540558 +/- 0.00287573 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.540558 @ 95%CL (1 toyMC)
median expected limit: r < 0.540558 @ 95%CL (1 toyMC)
   68% expected band : 0.540558 < r < 0.540558
   95% expected band : 0.540558 < r < 0.540558
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 678726351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.7123 +/- 0.00385443 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.7123 @ 95%CL (1 toyMC)
median expected limit: r < 0.7123 @ 95%CL (1 toyMC)
   68% expected band : 0.7123 < r < 0.7123
   95% expected band : 0.7123 < r < 0.7123
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 64103230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.701486 +/- 0.00305748 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.701486 @ 95%CL (1 toyMC)
median expected limit: r < 0.701486 @ 95%CL (1 toyMC)
   68% expected band : 0.701486 < r < 0.701486
   95% expected band : 0.701486 < r < 0.701486
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2137149609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.798074 +/- 0.00406044 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.798074 @ 95%CL (1 toyMC)
median expected limit: r < 0.798074 @ 95%CL (1 toyMC)
   68% expected band : 0.798074 < r < 0.798074
   95% expected band : 0.798074 < r < 0.798074
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1384179843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.711381 +/- 0.00299071 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.711381 @ 95%CL (1 toyMC)
median expected limit: r < 0.711381 @ 95%CL (1 toyMC)
   68% expected band : 0.711381 < r < 0.711381
   95% expected band : 0.711381 < r < 0.711381
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 684022788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30061 +/- 0.00369647 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 1.30061 @ 95%CL (1 toyMC)
median expected limit: r < 1.30061 @ 95%CL (1 toyMC)
   68% expected band : 1.30061 < r < 1.30061
   95% expected band : 1.30061 < r < 1.30061
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 43280822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.871954 +/- 0.0032927 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.871954 @ 95%CL (1 toyMC)
median expected limit: r < 0.871954 @ 95%CL (1 toyMC)
   68% expected band : 0.871954 < r < 0.871954
   95% expected band : 0.871954 < r < 0.871954
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 650693023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.52999 +/- 0.00245593 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.52999 @ 95%CL (1 toyMC)
median expected limit: r < 0.52999 @ 95%CL (1 toyMC)
   68% expected band : 0.52999 < r < 0.52999
   95% expected band : 0.52999 < r < 0.52999
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -28687095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.858612 +/- 0.00330868 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.858612 @ 95%CL (1 toyMC)
median expected limit: r < 0.858612 @ 95%CL (1 toyMC)
   68% expected band : 0.858612 < r < 0.858612
   95% expected band : 0.858612 < r < 0.858612
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -604544054
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.656883 +/- 0.00334238 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.656883 @ 95%CL (1 toyMC)
median expected limit: r < 0.656883 @ 95%CL (1 toyMC)
   68% expected band : 0.656883 < r < 0.656883
   95% expected band : 0.656883 < r < 0.656883
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -443550506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.633462 +/- 0.00292304 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.633462 @ 95%CL (1 toyMC)
median expected limit: r < 0.633462 @ 95%CL (1 toyMC)
   68% expected band : 0.633462 < r < 0.633462
   95% expected band : 0.633462 < r < 0.633462
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1488521963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.762789 +/- 0.0029025 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.762789 @ 95%CL (1 toyMC)
median expected limit: r < 0.762789 @ 95%CL (1 toyMC)
   68% expected band : 0.762789 < r < 0.762789
   95% expected band : 0.762789 < r < 0.762789
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -576276625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.777421 +/- 0.00361368 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 0.777421 @ 95%CL (1 toyMC)
median expected limit: r < 0.777421 @ 95%CL (1 toyMC)
   68% expected band : 0.777421 < r < 0.777421
   95% expected band : 0.777421 < r < 0.777421
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 258165512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.6484 +/- 0.00290012 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.6484 @ 95%CL (1 toyMC)
median expected limit: r < 0.6484 @ 95%CL (1 toyMC)
   68% expected band : 0.6484 < r < 0.6484
   95% expected band : 0.6484 < r < 0.6484
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -982919223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.755805 +/- 0.00303054 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 0.755805 @ 95%CL (1 toyMC)
median expected limit: r < 0.755805 @ 95%CL (1 toyMC)
   68% expected band : 0.755805 < r < 0.755805
   95% expected band : 0.755805 < r < 0.755805
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 703011868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.72216 +/- 0.00569925 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 1.72216 @ 95%CL (1 toyMC)
median expected limit: r < 1.72216 @ 95%CL (1 toyMC)
   68% expected band : 1.72216 < r < 1.72216
   95% expected band : 1.72216 < r < 1.72216
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1656423732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95409 +/- 0.00602562 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.95409 @ 95%CL (1 toyMC)
median expected limit: r < 1.95409 @ 95%CL (1 toyMC)
   68% expected band : 1.95409 < r < 1.95409
   95% expected band : 1.95409 < r < 1.95409
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -681819233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.42152 +/- 0.0079477 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 4.42152 @ 95%CL (1 toyMC)
median expected limit: r < 4.42152 @ 95%CL (1 toyMC)
   68% expected band : 4.42152 < r < 4.42152
   95% expected band : 4.42152 < r < 4.42152
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2021654467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.47593 +/- 0.0075372 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 3.47593 @ 95%CL (1 toyMC)
median expected limit: r < 3.47593 @ 95%CL (1 toyMC)
   68% expected band : 3.47593 < r < 3.47593
   95% expected band : 3.47593 < r < 3.47593
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 953131509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56062 +/- 0.00630348 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.56062 @ 95%CL (1 toyMC)
median expected limit: r < 2.56062 @ 95%CL (1 toyMC)
   68% expected band : 2.56062 < r < 2.56062
   95% expected band : 2.56062 < r < 2.56062
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 982172434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.74463 +/- 0.00731518 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 3.74463 @ 95%CL (1 toyMC)
median expected limit: r < 3.74463 @ 95%CL (1 toyMC)
   68% expected band : 3.74463 < r < 3.74463
   95% expected band : 3.74463 < r < 3.74463
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1585799597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54569 +/- 0.006225 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.54569 @ 95%CL (1 toyMC)
median expected limit: r < 2.54569 @ 95%CL (1 toyMC)
   68% expected band : 2.54569 < r < 2.54569
   95% expected band : 2.54569 < r < 2.54569
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1289332968
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20884 +/- 0.00551071 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 2.20884 @ 95%CL (1 toyMC)
median expected limit: r < 2.20884 @ 95%CL (1 toyMC)
   68% expected band : 2.20884 < r < 2.20884
   95% expected band : 2.20884 < r < 2.20884
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 53148667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.73323 +/- 0.00863102 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 5.73323 @ 95%CL (1 toyMC)
median expected limit: r < 5.73323 @ 95%CL (1 toyMC)
   68% expected band : 5.73323 < r < 5.73323
   95% expected band : 5.73323 < r < 5.73323
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1247906450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.27888 +/- 0.00666755 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 3.27888 @ 95%CL (1 toyMC)
median expected limit: r < 3.27888 @ 95%CL (1 toyMC)
   68% expected band : 3.27888 < r < 3.27888
   95% expected band : 3.27888 < r < 3.27888
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1984892422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62086 +/- 0.00636367 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.62086 @ 95%CL (1 toyMC)
median expected limit: r < 2.62086 @ 95%CL (1 toyMC)
   68% expected band : 2.62086 < r < 2.62086
   95% expected band : 2.62086 < r < 2.62086
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -532144437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02592 +/- 0.00564102 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.02592 @ 95%CL (1 toyMC)
median expected limit: r < 2.02592 @ 95%CL (1 toyMC)
   68% expected band : 2.02592 < r < 2.02592
   95% expected band : 2.02592 < r < 2.02592
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1782032020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.71192 +/- 0.00663719 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.87 min (real)
mean   expected limit: r < 3.71192 @ 95%CL (1 toyMC)
median expected limit: r < 3.71192 @ 95%CL (1 toyMC)
   68% expected band : 3.71192 < r < 3.71192
   95% expected band : 3.71192 < r < 3.71192
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1897025066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.93252 +/- 0.0071208 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 2.93252 @ 95%CL (1 toyMC)
median expected limit: r < 2.93252 @ 95%CL (1 toyMC)
   68% expected band : 2.93252 < r < 2.93252
   95% expected band : 2.93252 < r < 2.93252
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1551164200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96645 +/- 0.00626029 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.92 min (real)
mean   expected limit: r < 1.96645 @ 95%CL (1 toyMC)
median expected limit: r < 1.96645 @ 95%CL (1 toyMC)
   68% expected band : 1.96645 < r < 1.96645
   95% expected band : 1.96645 < r < 1.96645
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 244295317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.9908 +/- 0.00567699 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.9908 @ 95%CL (1 toyMC)
median expected limit: r < 2.9908 @ 95%CL (1 toyMC)
   68% expected band : 2.9908 < r < 2.9908
   95% expected band : 2.9908 < r < 2.9908
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 854942193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1276 +/- 0.00477631 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.1276 @ 95%CL (1 toyMC)
median expected limit: r < 2.1276 @ 95%CL (1 toyMC)
   68% expected band : 2.1276 < r < 2.1276
   95% expected band : 2.1276 < r < 2.1276
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1618195630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30112 +/- 0.00610684 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.30112 @ 95%CL (1 toyMC)
median expected limit: r < 2.30112 @ 95%CL (1 toyMC)
   68% expected band : 2.30112 < r < 2.30112
   95% expected band : 2.30112 < r < 2.30112
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1945105094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11047 +/- 0.00581165 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.11047 @ 95%CL (1 toyMC)
median expected limit: r < 2.11047 @ 95%CL (1 toyMC)
   68% expected band : 2.11047 < r < 2.11047
   95% expected band : 2.11047 < r < 2.11047
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -821474441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83634 +/- 0.00547056 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 1.83634 @ 95%CL (1 toyMC)
median expected limit: r < 1.83634 @ 95%CL (1 toyMC)
   68% expected band : 1.83634 < r < 1.83634
   95% expected band : 1.83634 < r < 1.83634
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1879875949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.60761 +/- 0.00860266 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 3.60761 @ 95%CL (1 toyMC)
median expected limit: r < 3.60761 @ 95%CL (1 toyMC)
   68% expected band : 3.60761 < r < 3.60761
   95% expected band : 3.60761 < r < 3.60761
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -262482456
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65098 +/- 0.00539654 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.65098 @ 95%CL (1 toyMC)
median expected limit: r < 2.65098 @ 95%CL (1 toyMC)
   68% expected band : 2.65098 < r < 2.65098
   95% expected band : 2.65098 < r < 2.65098
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 889735947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.78198 +/- 0.00664947 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 3.78198 @ 95%CL (1 toyMC)
median expected limit: r < 3.78198 @ 95%CL (1 toyMC)
   68% expected band : 3.78198 < r < 3.78198
   95% expected band : 3.78198 < r < 3.78198
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1553272786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19795 +/- 0.00487035 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 2.19795 @ 95%CL (1 toyMC)
median expected limit: r < 2.19795 @ 95%CL (1 toyMC)
   68% expected band : 2.19795 < r < 2.19795
   95% expected band : 2.19795 < r < 2.19795
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -286123434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.43951 +/- 0.00717174 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 2.43951 @ 95%CL (1 toyMC)
median expected limit: r < 2.43951 @ 95%CL (1 toyMC)
   68% expected band : 2.43951 < r < 2.43951
   95% expected band : 2.43951 < r < 2.43951
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1694996400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.66239 +/- 0.00767496 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.87 min (real)
mean   expected limit: r < 2.66239 @ 95%CL (1 toyMC)
median expected limit: r < 2.66239 @ 95%CL (1 toyMC)
   68% expected band : 2.66239 < r < 2.66239
   95% expected band : 2.66239 < r < 2.66239
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -808773203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.47586 +/- 0.00636212 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 3.47586 @ 95%CL (1 toyMC)
median expected limit: r < 3.47586 @ 95%CL (1 toyMC)
   68% expected band : 3.47586 < r < 3.47586
   95% expected band : 3.47586 < r < 3.47586
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -252969342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.41231 +/- 0.00603381 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.87 min (real)
mean   expected limit: r < 3.41231 @ 95%CL (1 toyMC)
median expected limit: r < 3.41231 @ 95%CL (1 toyMC)
   68% expected band : 3.41231 < r < 3.41231
   95% expected band : 3.41231 < r < 3.41231
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 657376662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74459 +/- 0.00694358 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.74459 @ 95%CL (1 toyMC)
median expected limit: r < 2.74459 @ 95%CL (1 toyMC)
   68% expected band : 2.74459 < r < 2.74459
   95% expected band : 2.74459 < r < 2.74459
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1016572524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68024 +/- 0.00686124 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.68024 @ 95%CL (1 toyMC)
median expected limit: r < 2.68024 @ 95%CL (1 toyMC)
   68% expected band : 2.68024 < r < 2.68024
   95% expected band : 2.68024 < r < 2.68024
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -997117771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.3308 +/- 0.00660851 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 4.3308 @ 95%CL (1 toyMC)
median expected limit: r < 4.3308 @ 95%CL (1 toyMC)
   68% expected band : 4.3308 < r < 4.3308
   95% expected band : 4.3308 < r < 4.3308
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1138361076
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.01109 +/- 0.00632525 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 3.01109 @ 95%CL (1 toyMC)
median expected limit: r < 3.01109 @ 95%CL (1 toyMC)
   68% expected band : 3.01109 < r < 3.01109
   95% expected band : 3.01109 < r < 3.01109
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2099621205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08311 +/- 0.00578121 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 3.08311 @ 95%CL (1 toyMC)
median expected limit: r < 3.08311 @ 95%CL (1 toyMC)
   68% expected band : 3.08311 < r < 3.08311
   95% expected band : 3.08311 < r < 3.08311
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -595516158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79384 +/- 0.00616074 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.79384 @ 95%CL (1 toyMC)
median expected limit: r < 1.79384 @ 95%CL (1 toyMC)
   68% expected band : 1.79384 < r < 1.79384
   95% expected band : 1.79384 < r < 1.79384
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 22032817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.6441 +/- 0.00680063 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 2.6441 @ 95%CL (1 toyMC)
median expected limit: r < 2.6441 @ 95%CL (1 toyMC)
   68% expected band : 2.6441 < r < 2.6441
   95% expected band : 2.6441 < r < 2.6441
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1992157573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95943 +/- 0.00576773 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.95943 @ 95%CL (1 toyMC)
median expected limit: r < 1.95943 @ 95%CL (1 toyMC)
   68% expected band : 1.95943 < r < 1.95943
   95% expected band : 1.95943 < r < 1.95943
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 833265079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30808 +/- 0.00543289 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 2.30808 @ 95%CL (1 toyMC)
median expected limit: r < 2.30808 @ 95%CL (1 toyMC)
   68% expected band : 2.30808 < r < 2.30808
   95% expected band : 2.30808 < r < 2.30808
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -837796650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.24511 +/- 0.00635315 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.24511 @ 95%CL (1 toyMC)
median expected limit: r < 2.24511 @ 95%CL (1 toyMC)
   68% expected band : 2.24511 < r < 2.24511
   95% expected band : 2.24511 < r < 2.24511
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 368083618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.57743 +/- 0.0065524 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 3.57743 @ 95%CL (1 toyMC)
median expected limit: r < 3.57743 @ 95%CL (1 toyMC)
   68% expected band : 3.57743 < r < 3.57743
   95% expected band : 3.57743 < r < 3.57743
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1378741135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.31124 +/- 0.00964576 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.87 min (real)
mean   expected limit: r < 4.31124 @ 95%CL (1 toyMC)
median expected limit: r < 4.31124 @ 95%CL (1 toyMC)
   68% expected band : 4.31124 < r < 4.31124
   95% expected band : 4.31124 < r < 4.31124
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 672163287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.01257 +/- 0.00599565 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 4.01257 @ 95%CL (1 toyMC)
median expected limit: r < 4.01257 @ 95%CL (1 toyMC)
   68% expected band : 4.01257 < r < 4.01257
   95% expected band : 4.01257 < r < 4.01257
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 4143358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.45216 +/- 0.00616985 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 3.45216 @ 95%CL (1 toyMC)
median expected limit: r < 3.45216 @ 95%CL (1 toyMC)
   68% expected band : 3.45216 < r < 3.45216
   95% expected band : 3.45216 < r < 3.45216
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1765040474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48586 +/- 0.00605273 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.48586 @ 95%CL (1 toyMC)
median expected limit: r < 2.48586 @ 95%CL (1 toyMC)
   68% expected band : 2.48586 < r < 2.48586
   95% expected band : 2.48586 < r < 2.48586
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 470987375
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.2503 +/- 0.00807563 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 3.2503 @ 95%CL (1 toyMC)
median expected limit: r < 3.2503 @ 95%CL (1 toyMC)
   68% expected band : 3.2503 < r < 3.2503
   95% expected band : 3.2503 < r < 3.2503
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1210682830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.93961 +/- 0.00587065 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.93961 @ 95%CL (1 toyMC)
median expected limit: r < 2.93961 @ 95%CL (1 toyMC)
   68% expected band : 2.93961 < r < 2.93961
   95% expected band : 2.93961 < r < 2.93961
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -735317450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.91041 +/- 0.00739802 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.91041 @ 95%CL (1 toyMC)
median expected limit: r < 2.91041 @ 95%CL (1 toyMC)
   68% expected band : 2.91041 < r < 2.91041
   95% expected band : 2.91041 < r < 2.91041
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1743811421
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1349 +/- 0.00548162 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 2.1349 @ 95%CL (1 toyMC)
median expected limit: r < 2.1349 @ 95%CL (1 toyMC)
   68% expected band : 2.1349 < r < 2.1349
   95% expected band : 2.1349 < r < 2.1349
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -487123695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22976 +/- 0.00567698 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 2.22976 @ 95%CL (1 toyMC)
median expected limit: r < 2.22976 @ 95%CL (1 toyMC)
   68% expected band : 2.22976 < r < 2.22976
   95% expected band : 2.22976 < r < 2.22976
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -865374612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8864 +/- 0.00554583 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.8864 @ 95%CL (1 toyMC)
median expected limit: r < 1.8864 @ 95%CL (1 toyMC)
   68% expected band : 1.8864 < r < 1.8864
   95% expected band : 1.8864 < r < 1.8864
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 9646533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06358 +/- 0.00395601 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 3.06358 @ 95%CL (1 toyMC)
median expected limit: r < 3.06358 @ 95%CL (1 toyMC)
   68% expected band : 3.06358 < r < 3.06358
   95% expected band : 3.06358 < r < 3.06358
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 970450472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8722 +/- 0.00563363 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 1.8722 @ 95%CL (1 toyMC)
median expected limit: r < 1.8722 @ 95%CL (1 toyMC)
   68% expected band : 1.8722 < r < 1.8722
   95% expected band : 1.8722 < r < 1.8722
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1209770959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.01002 +/- 0.00527503 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.01002 @ 95%CL (1 toyMC)
median expected limit: r < 2.01002 @ 95%CL (1 toyMC)
   68% expected band : 2.01002 < r < 2.01002
   95% expected band : 2.01002 < r < 2.01002
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 408736751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81265 +/- 0.00515637 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.81265 @ 95%CL (1 toyMC)
median expected limit: r < 1.81265 @ 95%CL (1 toyMC)
   68% expected band : 1.81265 < r < 1.81265
   95% expected band : 1.81265 < r < 1.81265
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1587152373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03361 +/- 0.00629873 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.03361 @ 95%CL (1 toyMC)
median expected limit: r < 2.03361 @ 95%CL (1 toyMC)
   68% expected band : 2.03361 < r < 2.03361
   95% expected band : 2.03361 < r < 2.03361
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 450359961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86598 +/- 0.00581592 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 1.86598 @ 95%CL (1 toyMC)
median expected limit: r < 1.86598 @ 95%CL (1 toyMC)
   68% expected band : 1.86598 < r < 1.86598
   95% expected band : 1.86598 < r < 1.86598
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1881749242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30244 +/- 0.00503773 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.30244 @ 95%CL (1 toyMC)
median expected limit: r < 2.30244 @ 95%CL (1 toyMC)
   68% expected band : 2.30244 < r < 2.30244
   95% expected band : 2.30244 < r < 2.30244
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 634382345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.36187 +/- 0.0061883 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.87 min (real)
mean   expected limit: r < 3.36187 @ 95%CL (1 toyMC)
median expected limit: r < 3.36187 @ 95%CL (1 toyMC)
   68% expected band : 3.36187 < r < 3.36187
   95% expected band : 3.36187 < r < 3.36187
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1238005099
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.83819 +/- 0.00696404 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.83819 @ 95%CL (1 toyMC)
median expected limit: r < 2.83819 @ 95%CL (1 toyMC)
   68% expected band : 2.83819 < r < 2.83819
   95% expected band : 2.83819 < r < 2.83819
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -377106658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83138 +/- 0.00563725 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.83138 @ 95%CL (1 toyMC)
median expected limit: r < 1.83138 @ 95%CL (1 toyMC)
   68% expected band : 1.83138 < r < 1.83138
   95% expected band : 1.83138 < r < 1.83138
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1691490817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22598 +/- 0.00559556 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.22598 @ 95%CL (1 toyMC)
median expected limit: r < 2.22598 @ 95%CL (1 toyMC)
   68% expected band : 2.22598 < r < 2.22598
   95% expected band : 2.22598 < r < 2.22598
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1024662062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77948 +/- 0.00487459 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 1.77948 @ 95%CL (1 toyMC)
median expected limit: r < 1.77948 @ 95%CL (1 toyMC)
   68% expected band : 1.77948 < r < 1.77948
   95% expected band : 1.77948 < r < 1.77948
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 642236078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.14037 +/- 0.00619422 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.14037 @ 95%CL (1 toyMC)
median expected limit: r < 2.14037 @ 95%CL (1 toyMC)
   68% expected band : 2.14037 < r < 2.14037
   95% expected band : 2.14037 < r < 2.14037
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1717927750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.79759 +/- 0.00704563 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 2.79759 @ 95%CL (1 toyMC)
median expected limit: r < 2.79759 @ 95%CL (1 toyMC)
   68% expected band : 2.79759 < r < 2.79759
   95% expected band : 2.79759 < r < 2.79759
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2110211553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.74239 +/- 0.00540599 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.74239 @ 95%CL (1 toyMC)
median expected limit: r < 1.74239 @ 95%CL (1 toyMC)
   68% expected band : 1.74239 < r < 1.74239
   95% expected band : 1.74239 < r < 1.74239
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1101579458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8096 +/- 0.0045491 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.8096 @ 95%CL (1 toyMC)
median expected limit: r < 1.8096 @ 95%CL (1 toyMC)
   68% expected band : 1.8096 < r < 1.8096
   95% expected band : 1.8096 < r < 1.8096
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1292516083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.25662 +/- 0.00427852 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.25662 @ 95%CL (1 toyMC)
median expected limit: r < 2.25662 @ 95%CL (1 toyMC)
   68% expected band : 2.25662 < r < 2.25662
   95% expected band : 2.25662 < r < 2.25662
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -779957958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.88103 +/- 0.00618693 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 3.88103 @ 95%CL (1 toyMC)
median expected limit: r < 3.88103 @ 95%CL (1 toyMC)
   68% expected band : 3.88103 < r < 3.88103
   95% expected band : 3.88103 < r < 3.88103
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1141297039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.46878 +/- 0.00832775 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 4.46878 @ 95%CL (1 toyMC)
median expected limit: r < 4.46878 @ 95%CL (1 toyMC)
   68% expected band : 4.46878 < r < 4.46878
   95% expected band : 4.46878 < r < 4.46878
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2091027749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20636 +/- 0.00577356 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.20636 @ 95%CL (1 toyMC)
median expected limit: r < 2.20636 @ 95%CL (1 toyMC)
   68% expected band : 2.20636 < r < 2.20636
   95% expected band : 2.20636 < r < 2.20636
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -685507560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63506 +/- 0.00606527 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.63506 @ 95%CL (1 toyMC)
median expected limit: r < 1.63506 @ 95%CL (1 toyMC)
   68% expected band : 1.63506 < r < 1.63506
   95% expected band : 1.63506 < r < 1.63506
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -727320266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9175 +/- 0.00656432 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.9175 @ 95%CL (1 toyMC)
median expected limit: r < 1.9175 @ 95%CL (1 toyMC)
   68% expected band : 1.9175 < r < 1.9175
   95% expected band : 1.9175 < r < 1.9175
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1709542157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99574 +/- 0.00589348 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.99574 @ 95%CL (1 toyMC)
median expected limit: r < 1.99574 @ 95%CL (1 toyMC)
   68% expected band : 1.99574 < r < 1.99574
   95% expected band : 1.99574 < r < 1.99574
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 581986126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03641 +/- 0.00515328 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.03641 @ 95%CL (1 toyMC)
median expected limit: r < 2.03641 @ 95%CL (1 toyMC)
   68% expected band : 2.03641 < r < 2.03641
   95% expected band : 2.03641 < r < 2.03641
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1566484716
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67878 +/- 0.00597441 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.67878 @ 95%CL (1 toyMC)
median expected limit: r < 2.67878 @ 95%CL (1 toyMC)
   68% expected band : 2.67878 < r < 2.67878
   95% expected band : 2.67878 < r < 2.67878
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1369494883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00886 +/- 0.00472853 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 2.00886 @ 95%CL (1 toyMC)
median expected limit: r < 2.00886 @ 95%CL (1 toyMC)
   68% expected band : 2.00886 < r < 2.00886
   95% expected band : 2.00886 < r < 2.00886
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1138332879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41163 +/- 0.00599548 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 2.41163 @ 95%CL (1 toyMC)
median expected limit: r < 2.41163 @ 95%CL (1 toyMC)
   68% expected band : 2.41163 < r < 2.41163
   95% expected band : 2.41163 < r < 2.41163
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 487738685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.58069 +/- 0.00669293 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.58069 @ 95%CL (1 toyMC)
median expected limit: r < 2.58069 @ 95%CL (1 toyMC)
   68% expected band : 2.58069 < r < 2.58069
   95% expected band : 2.58069 < r < 2.58069
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1581093934
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42954 +/- 0.00527362 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 2.42954 @ 95%CL (1 toyMC)
median expected limit: r < 2.42954 @ 95%CL (1 toyMC)
   68% expected band : 2.42954 < r < 2.42954
   95% expected band : 2.42954 < r < 2.42954
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1402691989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.27755 +/- 0.00762168 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 4.27755 @ 95%CL (1 toyMC)
median expected limit: r < 4.27755 @ 95%CL (1 toyMC)
   68% expected band : 4.27755 < r < 4.27755
   95% expected band : 4.27755 < r < 4.27755
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1408475274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.05665 +/- 0.0082843 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 5.05665 @ 95%CL (1 toyMC)
median expected limit: r < 5.05665 @ 95%CL (1 toyMC)
   68% expected band : 5.05665 < r < 5.05665
   95% expected band : 5.05665 < r < 5.05665
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2035857518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.46028 +/- 0.00709968 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 3.46028 @ 95%CL (1 toyMC)
median expected limit: r < 3.46028 @ 95%CL (1 toyMC)
   68% expected band : 3.46028 < r < 3.46028
   95% expected band : 3.46028 < r < 3.46028
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 193457818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.37005 +/- 0.00585911 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 3.37005 @ 95%CL (1 toyMC)
median expected limit: r < 3.37005 @ 95%CL (1 toyMC)
   68% expected band : 3.37005 < r < 3.37005
   95% expected band : 3.37005 < r < 3.37005
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 390631106
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80376 +/- 0.00618413 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.80376 @ 95%CL (1 toyMC)
median expected limit: r < 1.80376 @ 95%CL (1 toyMC)
   68% expected band : 1.80376 < r < 1.80376
   95% expected band : 1.80376 < r < 1.80376
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1837599241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03826 +/- 0.00530491 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 2.03826 @ 95%CL (1 toyMC)
median expected limit: r < 2.03826 @ 95%CL (1 toyMC)
   68% expected band : 2.03826 < r < 2.03826
   95% expected band : 2.03826 < r < 2.03826
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 51478882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.23001 +/- 0.00553238 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 2.23001 @ 95%CL (1 toyMC)
median expected limit: r < 2.23001 @ 95%CL (1 toyMC)
   68% expected band : 2.23001 < r < 2.23001
   95% expected band : 2.23001 < r < 2.23001
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -455390570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.19638 +/- 0.00762344 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 3.19638 @ 95%CL (1 toyMC)
median expected limit: r < 3.19638 @ 95%CL (1 toyMC)
   68% expected band : 3.19638 < r < 3.19638
   95% expected band : 3.19638 < r < 3.19638
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -716569708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65404 +/- 0.00606515 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 2.65404 @ 95%CL (1 toyMC)
median expected limit: r < 2.65404 @ 95%CL (1 toyMC)
   68% expected band : 2.65404 < r < 2.65404
   95% expected band : 2.65404 < r < 2.65404
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1726497089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68825 +/- 0.00878414 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.68825 @ 95%CL (1 toyMC)
median expected limit: r < 2.68825 @ 95%CL (1 toyMC)
   68% expected band : 2.68825 < r < 2.68825
   95% expected band : 2.68825 < r < 2.68825
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 687253179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.93637 +/- 0.00597503 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.93637 @ 95%CL (1 toyMC)
median expected limit: r < 2.93637 @ 95%CL (1 toyMC)
   68% expected band : 2.93637 < r < 2.93637
   95% expected band : 2.93637 < r < 2.93637
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -220459016
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.57826 +/- 0.00705781 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 3.57826 @ 95%CL (1 toyMC)
median expected limit: r < 3.57826 @ 95%CL (1 toyMC)
   68% expected band : 3.57826 < r < 3.57826
   95% expected band : 3.57826 < r < 3.57826
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1998756730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.64267 +/- 0.00719774 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.64267 @ 95%CL (1 toyMC)
median expected limit: r < 2.64267 @ 95%CL (1 toyMC)
   68% expected band : 2.64267 < r < 2.64267
   95% expected band : 2.64267 < r < 2.64267
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -528427349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.01419 +/- 0.00559058 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 2.01419 @ 95%CL (1 toyMC)
median expected limit: r < 2.01419 @ 95%CL (1 toyMC)
   68% expected band : 2.01419 < r < 2.01419
   95% expected band : 2.01419 < r < 2.01419
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -326012580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.62566 +/- 0.0060457 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 4.62566 @ 95%CL (1 toyMC)
median expected limit: r < 4.62566 @ 95%CL (1 toyMC)
   68% expected band : 4.62566 < r < 4.62566
   95% expected band : 4.62566 < r < 4.62566
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 434506212
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78407 +/- 0.00486355 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.78407 @ 95%CL (1 toyMC)
median expected limit: r < 1.78407 @ 95%CL (1 toyMC)
   68% expected band : 1.78407 < r < 1.78407
   95% expected band : 1.78407 < r < 1.78407
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 282896744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.64579 +/- 0.00669771 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.64579 @ 95%CL (1 toyMC)
median expected limit: r < 2.64579 @ 95%CL (1 toyMC)
   68% expected band : 2.64579 < r < 2.64579
   95% expected band : 2.64579 < r < 2.64579
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -66508492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.17058 +/- 0.00681669 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 3.17058 @ 95%CL (1 toyMC)
median expected limit: r < 3.17058 @ 95%CL (1 toyMC)
   68% expected band : 3.17058 < r < 3.17058
   95% expected band : 3.17058 < r < 3.17058
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -164745844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.0652 +/- 0.00613312 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 4.0652 @ 95%CL (1 toyMC)
median expected limit: r < 4.0652 @ 95%CL (1 toyMC)
   68% expected band : 4.0652 < r < 4.0652
   95% expected band : 4.0652 < r < 4.0652
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 358459360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18749 +/- 0.00480842 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 2.18749 @ 95%CL (1 toyMC)
median expected limit: r < 2.18749 @ 95%CL (1 toyMC)
   68% expected band : 2.18749 < r < 2.18749
   95% expected band : 2.18749 < r < 2.18749
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -387331652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.73709 +/- 0.0107412 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 7.73709 @ 95%CL (1 toyMC)
median expected limit: r < 7.73709 @ 95%CL (1 toyMC)
   68% expected band : 7.73709 < r < 7.73709
   95% expected band : 7.73709 < r < 7.73709
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -960034224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98579 +/- 0.0049825 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.98579 @ 95%CL (1 toyMC)
median expected limit: r < 1.98579 @ 95%CL (1 toyMC)
   68% expected band : 1.98579 < r < 1.98579
   95% expected band : 1.98579 < r < 1.98579
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -326878364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.85786 +/- 0.0162072 @ 95% CL (100 tries)
Done in 1.93 min (cpu), 1.94 min (real)
mean   expected limit: r < 9.85786 @ 95%CL (1 toyMC)
median expected limit: r < 9.85786 @ 95%CL (1 toyMC)
   68% expected band : 9.85786 < r < 9.85786
   95% expected band : 9.85786 < r < 9.85786
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1742770028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60511 +/- 0.00813275 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 4.60511 @ 95%CL (1 toyMC)
median expected limit: r < 4.60511 @ 95%CL (1 toyMC)
   68% expected band : 4.60511 < r < 4.60511
   95% expected band : 4.60511 < r < 4.60511
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 914609915
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.18249 +/- 0.0143803 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 8.18249 @ 95%CL (1 toyMC)
median expected limit: r < 8.18249 @ 95%CL (1 toyMC)
   68% expected band : 8.18249 < r < 8.18249
   95% expected band : 8.18249 < r < 8.18249
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 168423694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.57624 +/- 0.0119206 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 7.57624 @ 95%CL (1 toyMC)
median expected limit: r < 7.57624 @ 95%CL (1 toyMC)
   68% expected band : 7.57624 < r < 7.57624
   95% expected band : 7.57624 < r < 7.57624
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1091990120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.49921 +/- 0.0104752 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 4.49921 @ 95%CL (1 toyMC)
median expected limit: r < 4.49921 @ 95%CL (1 toyMC)
   68% expected band : 4.49921 < r < 4.49921
   95% expected band : 4.49921 < r < 4.49921
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 568692112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.60918 +/- 0.0119198 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 5.60918 @ 95%CL (1 toyMC)
median expected limit: r < 5.60918 @ 95%CL (1 toyMC)
   68% expected band : 5.60918 < r < 5.60918
   95% expected band : 5.60918 < r < 5.60918
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1703615668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.24172 +/- 0.0115418 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.87 min (real)
mean   expected limit: r < 7.24172 @ 95%CL (1 toyMC)
median expected limit: r < 7.24172 @ 95%CL (1 toyMC)
   68% expected band : 7.24172 < r < 7.24172
   95% expected band : 7.24172 < r < 7.24172
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -27489478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.38885 +/- 0.00895999 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 5.38885 @ 95%CL (1 toyMC)
median expected limit: r < 5.38885 @ 95%CL (1 toyMC)
   68% expected band : 5.38885 < r < 5.38885
   95% expected band : 5.38885 < r < 5.38885
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -506983635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.97678 +/- 0.0138212 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 6.97678 @ 95%CL (1 toyMC)
median expected limit: r < 6.97678 @ 95%CL (1 toyMC)
   68% expected band : 6.97678 < r < 6.97678
   95% expected band : 6.97678 < r < 6.97678
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1109073165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.40964 +/- 0.0125943 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 5.40964 @ 95%CL (1 toyMC)
median expected limit: r < 5.40964 @ 95%CL (1 toyMC)
   68% expected band : 5.40964 < r < 5.40964
   95% expected band : 5.40964 < r < 5.40964
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 651944028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.53496 +/- 0.00893209 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 4.53496 @ 95%CL (1 toyMC)
median expected limit: r < 4.53496 @ 95%CL (1 toyMC)
   68% expected band : 4.53496 < r < 4.53496
   95% expected band : 4.53496 < r < 4.53496
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 127716237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.65197 +/- 0.00929168 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 4.65197 @ 95%CL (1 toyMC)
median expected limit: r < 4.65197 @ 95%CL (1 toyMC)
   68% expected band : 4.65197 < r < 4.65197
   95% expected band : 4.65197 < r < 4.65197
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -910952194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56975 +/- 0.0118721 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.69 min (real)
mean   expected limit: r < 4.56975 @ 95%CL (1 toyMC)
median expected limit: r < 4.56975 @ 95%CL (1 toyMC)
   68% expected band : 4.56975 < r < 4.56975
   95% expected band : 4.56975 < r < 4.56975
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -132953497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.066 +/- 0.0138056 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 10.066 @ 95%CL (1 toyMC)
median expected limit: r < 10.066 @ 95%CL (1 toyMC)
   68% expected band : 10.066 < r < 10.066
   95% expected band : 10.066 < r < 10.066
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1372995041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.23947 +/- 0.015239 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 7.23947 @ 95%CL (1 toyMC)
median expected limit: r < 7.23947 @ 95%CL (1 toyMC)
   68% expected band : 7.23947 < r < 7.23947
   95% expected band : 7.23947 < r < 7.23947
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1282388918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.94532 +/- 0.0138809 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 6.94532 @ 95%CL (1 toyMC)
median expected limit: r < 6.94532 @ 95%CL (1 toyMC)
   68% expected band : 6.94532 < r < 6.94532
   95% expected band : 6.94532 < r < 6.94532
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -210550429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.52742 +/- 0.0137081 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 7.52742 @ 95%CL (1 toyMC)
median expected limit: r < 7.52742 @ 95%CL (1 toyMC)
   68% expected band : 7.52742 < r < 7.52742
   95% expected band : 7.52742 < r < 7.52742
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1290848090
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2119 +/- 0.0161932 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 12.2119 @ 95%CL (1 toyMC)
median expected limit: r < 12.2119 @ 95%CL (1 toyMC)
   68% expected band : 12.2119 < r < 12.2119
   95% expected band : 12.2119 < r < 12.2119
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1315516160
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.83089 +/- 0.0144163 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.90 min (real)
mean   expected limit: r < 7.83089 @ 95%CL (1 toyMC)
median expected limit: r < 7.83089 @ 95%CL (1 toyMC)
   68% expected band : 7.83089 < r < 7.83089
   95% expected band : 7.83089 < r < 7.83089
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 236460057
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.0676 +/- 0.0147776 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 7.0676 @ 95%CL (1 toyMC)
median expected limit: r < 7.0676 @ 95%CL (1 toyMC)
   68% expected band : 7.0676 < r < 7.0676
   95% expected band : 7.0676 < r < 7.0676
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -475602665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.66932 +/- 0.0151539 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 9.66932 @ 95%CL (1 toyMC)
median expected limit: r < 9.66932 @ 95%CL (1 toyMC)
   68% expected band : 9.66932 < r < 9.66932
   95% expected band : 9.66932 < r < 9.66932
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1074847084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9666 +/- 0.0129666 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 11.9666 @ 95%CL (1 toyMC)
median expected limit: r < 11.9666 @ 95%CL (1 toyMC)
   68% expected band : 11.9666 < r < 11.9666
   95% expected band : 11.9666 < r < 11.9666
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -297996416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.02809 +/- 0.010376 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 6.02809 @ 95%CL (1 toyMC)
median expected limit: r < 6.02809 @ 95%CL (1 toyMC)
   68% expected band : 6.02809 < r < 6.02809
   95% expected band : 6.02809 < r < 6.02809
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 274895351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.13134 +/- 0.013822 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 7.13134 @ 95%CL (1 toyMC)
median expected limit: r < 7.13134 @ 95%CL (1 toyMC)
   68% expected band : 7.13134 < r < 7.13134
   95% expected band : 7.13134 < r < 7.13134
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1149383284
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.13452 +/- 0.0108934 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 5.13452 @ 95%CL (1 toyMC)
median expected limit: r < 5.13452 @ 95%CL (1 toyMC)
   68% expected band : 5.13452 < r < 5.13452
   95% expected band : 5.13452 < r < 5.13452
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -359456807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.1912 +/- 0.0135855 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 7.1912 @ 95%CL (1 toyMC)
median expected limit: r < 7.1912 @ 95%CL (1 toyMC)
   68% expected band : 7.1912 < r < 7.1912
   95% expected band : 7.1912 < r < 7.1912
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -333351012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90932 +/- 0.0100064 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 4.90932 @ 95%CL (1 toyMC)
median expected limit: r < 4.90932 @ 95%CL (1 toyMC)
   68% expected band : 4.90932 < r < 4.90932
   95% expected band : 4.90932 < r < 4.90932
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1995594564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.67088 +/- 0.0182093 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 9.67088 @ 95%CL (1 toyMC)
median expected limit: r < 9.67088 @ 95%CL (1 toyMC)
   68% expected band : 9.67088 < r < 9.67088
   95% expected band : 9.67088 < r < 9.67088
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2069244246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.90688 +/- 0.0109414 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 5.90688 @ 95%CL (1 toyMC)
median expected limit: r < 5.90688 @ 95%CL (1 toyMC)
   68% expected band : 5.90688 < r < 5.90688
   95% expected band : 5.90688 < r < 5.90688
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2104104246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.782 +/- 0.0124861 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 4.782 @ 95%CL (1 toyMC)
median expected limit: r < 4.782 @ 95%CL (1 toyMC)
   68% expected band : 4.782 < r < 4.782
   95% expected band : 4.782 < r < 4.782
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -562000714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50831 +/- 0.0113244 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.50831 @ 95%CL (1 toyMC)
median expected limit: r < 5.50831 @ 95%CL (1 toyMC)
   68% expected band : 5.50831 < r < 5.50831
   95% expected band : 5.50831 < r < 5.50831
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2096471310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87791 +/- 0.0144681 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 9.87791 @ 95%CL (1 toyMC)
median expected limit: r < 9.87791 @ 95%CL (1 toyMC)
   68% expected band : 9.87791 < r < 9.87791
   95% expected band : 9.87791 < r < 9.87791
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -558525308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.32349 +/- 0.0133816 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 9.32349 @ 95%CL (1 toyMC)
median expected limit: r < 9.32349 @ 95%CL (1 toyMC)
   68% expected band : 9.32349 < r < 9.32349
   95% expected band : 9.32349 < r < 9.32349
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -879811831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.61296 +/- 0.0139233 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 6.61296 @ 95%CL (1 toyMC)
median expected limit: r < 6.61296 @ 95%CL (1 toyMC)
   68% expected band : 6.61296 < r < 6.61296
   95% expected band : 6.61296 < r < 6.61296
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1517651516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.48617 +/- 0.0113436 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 4.48617 @ 95%CL (1 toyMC)
median expected limit: r < 4.48617 @ 95%CL (1 toyMC)
   68% expected band : 4.48617 < r < 4.48617
   95% expected band : 4.48617 < r < 4.48617
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1501047480
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.44919 +/- 0.0105791 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 4.44919 @ 95%CL (1 toyMC)
median expected limit: r < 4.44919 @ 95%CL (1 toyMC)
   68% expected band : 4.44919 < r < 4.44919
   95% expected band : 4.44919 < r < 4.44919
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1666946669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.25446 +/- 0.0123791 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 6.25446 @ 95%CL (1 toyMC)
median expected limit: r < 6.25446 @ 95%CL (1 toyMC)
   68% expected band : 6.25446 < r < 6.25446
   95% expected band : 6.25446 < r < 6.25446
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1190887691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.5837 +/- 0.0120582 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 5.5837 @ 95%CL (1 toyMC)
median expected limit: r < 5.5837 @ 95%CL (1 toyMC)
   68% expected band : 5.5837 < r < 5.5837
   95% expected band : 5.5837 < r < 5.5837
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -195336909
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.17275 +/- 0.0132636 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 7.17275 @ 95%CL (1 toyMC)
median expected limit: r < 7.17275 @ 95%CL (1 toyMC)
   68% expected band : 7.17275 < r < 7.17275
   95% expected band : 7.17275 < r < 7.17275
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 608782745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.9467 +/- 0.0122795 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 8.9467 @ 95%CL (1 toyMC)
median expected limit: r < 8.9467 @ 95%CL (1 toyMC)
   68% expected band : 8.9467 < r < 8.9467
   95% expected band : 8.9467 < r < 8.9467
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -223429663
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.556 +/- 0.0147925 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.556 @ 95%CL (1 toyMC)
median expected limit: r < 10.556 @ 95%CL (1 toyMC)
   68% expected band : 10.556 < r < 10.556
   95% expected band : 10.556 < r < 10.556
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 905571800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.98192 +/- 0.0159182 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 6.98192 @ 95%CL (1 toyMC)
median expected limit: r < 6.98192 @ 95%CL (1 toyMC)
   68% expected band : 6.98192 < r < 6.98192
   95% expected band : 6.98192 < r < 6.98192
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -653533763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.57618 +/- 0.0146201 @ 95% CL (100 tries)
Done in 1.95 min (cpu), 1.95 min (real)
mean   expected limit: r < 6.57618 @ 95%CL (1 toyMC)
median expected limit: r < 6.57618 @ 95%CL (1 toyMC)
   68% expected band : 6.57618 < r < 6.57618
   95% expected band : 6.57618 < r < 6.57618
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2008161568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9753 +/- 0.0146716 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.92 min (real)
mean   expected limit: r < 10.9753 @ 95%CL (1 toyMC)
median expected limit: r < 10.9753 @ 95%CL (1 toyMC)
   68% expected band : 10.9753 < r < 10.9753
   95% expected band : 10.9753 < r < 10.9753
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1413473500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.26955 +/- 0.0136507 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.92 min (real)
mean   expected limit: r < 8.26955 @ 95%CL (1 toyMC)
median expected limit: r < 8.26955 @ 95%CL (1 toyMC)
   68% expected band : 8.26955 < r < 8.26955
   95% expected band : 8.26955 < r < 8.26955
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1958136233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.25692 +/- 0.0139232 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 6.25692 @ 95%CL (1 toyMC)
median expected limit: r < 6.25692 @ 95%CL (1 toyMC)
   68% expected band : 6.25692 < r < 6.25692
   95% expected band : 6.25692 < r < 6.25692
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 891836174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19697 +/- 0.01181 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 6.19697 @ 95%CL (1 toyMC)
median expected limit: r < 6.19697 @ 95%CL (1 toyMC)
   68% expected band : 6.19697 < r < 6.19697
   95% expected band : 6.19697 < r < 6.19697
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 586245759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.39471 +/- 0.0133716 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 7.39471 @ 95%CL (1 toyMC)
median expected limit: r < 7.39471 @ 95%CL (1 toyMC)
   68% expected band : 7.39471 < r < 7.39471
   95% expected band : 7.39471 < r < 7.39471
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399583961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.78541 +/- 0.0111253 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 5.78541 @ 95%CL (1 toyMC)
median expected limit: r < 5.78541 @ 95%CL (1 toyMC)
   68% expected band : 5.78541 < r < 5.78541
   95% expected band : 5.78541 < r < 5.78541
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2054395727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.32839 +/- 0.0144605 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 6.32839 @ 95%CL (1 toyMC)
median expected limit: r < 6.32839 @ 95%CL (1 toyMC)
   68% expected band : 6.32839 < r < 6.32839
   95% expected band : 6.32839 < r < 6.32839
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1967479224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.92986 +/- 0.0106428 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 5.92986 @ 95%CL (1 toyMC)
median expected limit: r < 5.92986 @ 95%CL (1 toyMC)
   68% expected band : 5.92986 < r < 5.92986
   95% expected band : 5.92986 < r < 5.92986
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -189244973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.80525 +/- 0.0137836 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 5.80525 @ 95%CL (1 toyMC)
median expected limit: r < 5.80525 @ 95%CL (1 toyMC)
   68% expected band : 5.80525 < r < 5.80525
   95% expected band : 5.80525 < r < 5.80525
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1499567497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3504 +/- 0.0148319 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.3504 @ 95%CL (1 toyMC)
median expected limit: r < 10.3504 @ 95%CL (1 toyMC)
   68% expected band : 10.3504 < r < 10.3504
   95% expected band : 10.3504 < r < 10.3504
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 568907415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.4115 +/- 0.0133964 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 5.4115 @ 95%CL (1 toyMC)
median expected limit: r < 5.4115 @ 95%CL (1 toyMC)
   68% expected band : 5.4115 < r < 5.4115
   95% expected band : 5.4115 < r < 5.4115
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1619985033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.69179 +/- 0.013937 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 5.69179 @ 95%CL (1 toyMC)
median expected limit: r < 5.69179 @ 95%CL (1 toyMC)
   68% expected band : 5.69179 < r < 5.69179
   95% expected band : 5.69179 < r < 5.69179
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1359792925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.53467 +/- 0.0131056 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 5.53467 @ 95%CL (1 toyMC)
median expected limit: r < 5.53467 @ 95%CL (1 toyMC)
   68% expected band : 5.53467 < r < 5.53467
   95% expected band : 5.53467 < r < 5.53467
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 422709574
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.90628 +/- 0.0143909 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 6.90628 @ 95%CL (1 toyMC)
median expected limit: r < 6.90628 @ 95%CL (1 toyMC)
   68% expected band : 6.90628 < r < 6.90628
   95% expected band : 6.90628 < r < 6.90628
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2015229513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.40064 +/- 0.0137039 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 6.40064 @ 95%CL (1 toyMC)
median expected limit: r < 6.40064 @ 95%CL (1 toyMC)
   68% expected band : 6.40064 < r < 6.40064
   95% expected band : 6.40064 < r < 6.40064
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -533494955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.57399 +/- 0.0157385 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 9.57399 @ 95%CL (1 toyMC)
median expected limit: r < 9.57399 @ 95%CL (1 toyMC)
   68% expected band : 9.57399 < r < 9.57399
   95% expected band : 9.57399 < r < 9.57399
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -951684782
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3886 +/- 0.0139295 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 13.3886 @ 95%CL (1 toyMC)
median expected limit: r < 13.3886 @ 95%CL (1 toyMC)
   68% expected band : 13.3886 < r < 13.3886
   95% expected band : 13.3886 < r < 13.3886
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1737845180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19335 +/- 0.0128295 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 6.19335 @ 95%CL (1 toyMC)
median expected limit: r < 6.19335 @ 95%CL (1 toyMC)
   68% expected band : 6.19335 < r < 6.19335
   95% expected band : 6.19335 < r < 6.19335
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -359350006
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.68223 +/- 0.00858337 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 4.68223 @ 95%CL (1 toyMC)
median expected limit: r < 4.68223 @ 95%CL (1 toyMC)
   68% expected band : 4.68223 < r < 4.68223
   95% expected band : 4.68223 < r < 4.68223
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1040110079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.36673 +/- 0.0103246 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 6.36673 @ 95%CL (1 toyMC)
median expected limit: r < 6.36673 @ 95%CL (1 toyMC)
   68% expected band : 6.36673 < r < 6.36673
   95% expected band : 6.36673 < r < 6.36673
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 208769385
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.32211 +/- 0.0127897 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 5.32211 @ 95%CL (1 toyMC)
median expected limit: r < 5.32211 @ 95%CL (1 toyMC)
   68% expected band : 5.32211 < r < 5.32211
   95% expected band : 5.32211 < r < 5.32211
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1087494933
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6545 +/- 0.0167714 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 10.6545 @ 95%CL (1 toyMC)
median expected limit: r < 10.6545 @ 95%CL (1 toyMC)
   68% expected band : 10.6545 < r < 10.6545
   95% expected band : 10.6545 < r < 10.6545
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1427169341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9533 +/- 0.0133658 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 12.9533 @ 95%CL (1 toyMC)
median expected limit: r < 12.9533 @ 95%CL (1 toyMC)
   68% expected band : 12.9533 < r < 12.9533
   95% expected band : 12.9533 < r < 12.9533
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1361047268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.76369 +/- 0.00934634 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 7.76369 @ 95%CL (1 toyMC)
median expected limit: r < 7.76369 @ 95%CL (1 toyMC)
   68% expected band : 7.76369 < r < 7.76369
   95% expected band : 7.76369 < r < 7.76369
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1487368027
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.44204 +/- 0.0138946 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 8.44204 @ 95%CL (1 toyMC)
median expected limit: r < 8.44204 @ 95%CL (1 toyMC)
   68% expected band : 8.44204 < r < 8.44204
   95% expected band : 8.44204 < r < 8.44204
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1953953809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.64253 +/- 0.0102702 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 6.64253 @ 95%CL (1 toyMC)
median expected limit: r < 6.64253 @ 95%CL (1 toyMC)
   68% expected band : 6.64253 < r < 6.64253
   95% expected band : 6.64253 < r < 6.64253
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 677339767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.92945 +/- 0.0104816 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 4.92945 @ 95%CL (1 toyMC)
median expected limit: r < 4.92945 @ 95%CL (1 toyMC)
   68% expected band : 4.92945 < r < 4.92945
   95% expected band : 4.92945 < r < 4.92945
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 521798486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50044 +/- 0.0131189 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.50044 @ 95%CL (1 toyMC)
median expected limit: r < 5.50044 @ 95%CL (1 toyMC)
   68% expected band : 5.50044 < r < 5.50044
   95% expected band : 5.50044 < r < 5.50044
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1118969999
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.01448 +/- 0.0136716 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 7.01448 @ 95%CL (1 toyMC)
median expected limit: r < 7.01448 @ 95%CL (1 toyMC)
   68% expected band : 7.01448 < r < 7.01448
   95% expected band : 7.01448 < r < 7.01448
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1439016652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86302 +/- 0.0113793 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 4.86302 @ 95%CL (1 toyMC)
median expected limit: r < 4.86302 @ 95%CL (1 toyMC)
   68% expected band : 4.86302 < r < 4.86302
   95% expected band : 4.86302 < r < 4.86302
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 655961746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.46253 +/- 0.0129378 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 8.46253 @ 95%CL (1 toyMC)
median expected limit: r < 8.46253 @ 95%CL (1 toyMC)
   68% expected band : 8.46253 < r < 8.46253
   95% expected band : 8.46253 < r < 8.46253
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -593397720
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90601 +/- 0.010885 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 4.90601 @ 95%CL (1 toyMC)
median expected limit: r < 4.90601 @ 95%CL (1 toyMC)
   68% expected band : 4.90601 < r < 4.90601
   95% expected band : 4.90601 < r < 4.90601
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -933234800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.4649 +/- 0.011285 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.4649 @ 95%CL (1 toyMC)
median expected limit: r < 5.4649 @ 95%CL (1 toyMC)
   68% expected band : 5.4649 < r < 5.4649
   95% expected band : 5.4649 < r < 5.4649
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1133191713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3081 +/- 0.0151909 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 11.3081 @ 95%CL (1 toyMC)
median expected limit: r < 11.3081 @ 95%CL (1 toyMC)
   68% expected band : 11.3081 < r < 11.3081
   95% expected band : 11.3081 < r < 11.3081
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1209997784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.25381 +/- 0.0105962 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 6.25381 @ 95%CL (1 toyMC)
median expected limit: r < 6.25381 @ 95%CL (1 toyMC)
   68% expected band : 6.25381 < r < 6.25381
   95% expected band : 6.25381 < r < 6.25381
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 708230675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.83903 +/- 0.0140066 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 6.83903 @ 95%CL (1 toyMC)
median expected limit: r < 6.83903 @ 95%CL (1 toyMC)
   68% expected band : 6.83903 < r < 6.83903
   95% expected band : 6.83903 < r < 6.83903
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 271710299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.77114 +/- 0.0095615 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 4.77114 @ 95%CL (1 toyMC)
median expected limit: r < 4.77114 @ 95%CL (1 toyMC)
   68% expected band : 4.77114 < r < 4.77114
   95% expected band : 4.77114 < r < 4.77114
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -477659758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.34501 +/- 0.015993 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 7.34501 @ 95%CL (1 toyMC)
median expected limit: r < 7.34501 @ 95%CL (1 toyMC)
   68% expected band : 7.34501 < r < 7.34501
   95% expected band : 7.34501 < r < 7.34501
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1437692872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4595 +/- 0.0191733 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 11.4595 @ 95%CL (1 toyMC)
median expected limit: r < 11.4595 @ 95%CL (1 toyMC)
   68% expected band : 11.4595 < r < 11.4595
   95% expected band : 11.4595 < r < 11.4595
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 47658702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5409 +/- 0.0143139 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 13.5409 @ 95%CL (1 toyMC)
median expected limit: r < 13.5409 @ 95%CL (1 toyMC)
   68% expected band : 13.5409 < r < 13.5409
   95% expected band : 13.5409 < r < 13.5409
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1781773830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.54501 +/- 0.0113576 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 6.54501 @ 95%CL (1 toyMC)
median expected limit: r < 6.54501 @ 95%CL (1 toyMC)
   68% expected band : 6.54501 < r < 6.54501
   95% expected band : 6.54501 < r < 6.54501
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -721966363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.24165 +/- 0.00995439 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 5.24165 @ 95%CL (1 toyMC)
median expected limit: r < 5.24165 @ 95%CL (1 toyMC)
   68% expected band : 5.24165 < r < 5.24165
   95% expected band : 5.24165 < r < 5.24165
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1267987824
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.71934 +/- 0.0104325 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 4.71934 @ 95%CL (1 toyMC)
median expected limit: r < 4.71934 @ 95%CL (1 toyMC)
   68% expected band : 4.71934 < r < 4.71934
   95% expected band : 4.71934 < r < 4.71934
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -279370807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.5856 +/- 0.00958564 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 7.5856 @ 95%CL (1 toyMC)
median expected limit: r < 7.5856 @ 95%CL (1 toyMC)
   68% expected band : 7.5856 < r < 7.5856
   95% expected band : 7.5856 < r < 7.5856
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 256029324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90703 +/- 0.0107987 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 4.90703 @ 95%CL (1 toyMC)
median expected limit: r < 4.90703 @ 95%CL (1 toyMC)
   68% expected band : 4.90703 < r < 4.90703
   95% expected band : 4.90703 < r < 4.90703
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 621009322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.36612 +/- 0.0123611 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 5.36612 @ 95%CL (1 toyMC)
median expected limit: r < 5.36612 @ 95%CL (1 toyMC)
   68% expected band : 5.36612 < r < 5.36612
   95% expected band : 5.36612 < r < 5.36612
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1834362798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.13742 +/- 0.0107185 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 6.13742 @ 95%CL (1 toyMC)
median expected limit: r < 6.13742 @ 95%CL (1 toyMC)
   68% expected band : 6.13742 < r < 6.13742
   95% expected band : 6.13742 < r < 6.13742
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1727182456
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.7186 +/- 0.0169252 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 8.7186 @ 95%CL (1 toyMC)
median expected limit: r < 8.7186 @ 95%CL (1 toyMC)
   68% expected band : 8.7186 < r < 8.7186
   95% expected band : 8.7186 < r < 8.7186
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1227531040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.91232 +/- 0.0100296 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 4.91232 @ 95%CL (1 toyMC)
median expected limit: r < 4.91232 @ 95%CL (1 toyMC)
   68% expected band : 4.91232 < r < 4.91232
   95% expected band : 4.91232 < r < 4.91232
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1040969193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3667 +/- 0.0133114 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 10.3667 @ 95%CL (1 toyMC)
median expected limit: r < 10.3667 @ 95%CL (1 toyMC)
   68% expected band : 10.3667 < r < 10.3667
   95% expected band : 10.3667 < r < 10.3667
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1624789875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.55127 +/- 0.0161453 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 9.55127 @ 95%CL (1 toyMC)
median expected limit: r < 9.55127 @ 95%CL (1 toyMC)
   68% expected band : 9.55127 < r < 9.55127
   95% expected band : 9.55127 < r < 9.55127
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1139768093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4067 +/- 0.0154606 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.92 min (real)
mean   expected limit: r < 11.4067 @ 95%CL (1 toyMC)
median expected limit: r < 11.4067 @ 95%CL (1 toyMC)
   68% expected band : 11.4067 < r < 11.4067
   95% expected band : 11.4067 < r < 11.4067
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1662506660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.01849 +/- 0.0137166 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 7.01849 @ 95%CL (1 toyMC)
median expected limit: r < 7.01849 @ 95%CL (1 toyMC)
   68% expected band : 7.01849 < r < 7.01849
   95% expected band : 7.01849 < r < 7.01849
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2046978891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.08318 +/- 0.0135384 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 8.08318 @ 95%CL (1 toyMC)
median expected limit: r < 8.08318 @ 95%CL (1 toyMC)
   68% expected band : 8.08318 < r < 8.08318
   95% expected band : 8.08318 < r < 8.08318
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -969622810
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.63279 +/- 0.0132196 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 6.63279 @ 95%CL (1 toyMC)
median expected limit: r < 6.63279 @ 95%CL (1 toyMC)
   68% expected band : 6.63279 < r < 6.63279
   95% expected band : 6.63279 < r < 6.63279
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 442161442
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.262 +/- 0.018981 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 9.262 @ 95%CL (1 toyMC)
median expected limit: r < 9.262 @ 95%CL (1 toyMC)
   68% expected band : 9.262 < r < 9.262
   95% expected band : 9.262 < r < 9.262
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1368326471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.96831 +/- 0.0126336 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 5.96831 @ 95%CL (1 toyMC)
median expected limit: r < 5.96831 @ 95%CL (1 toyMC)
   68% expected band : 5.96831 < r < 5.96831
   95% expected band : 5.96831 < r < 5.96831
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1823584224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.4701 +/- 0.009135 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 6.4701 @ 95%CL (1 toyMC)
median expected limit: r < 6.4701 @ 95%CL (1 toyMC)
   68% expected band : 6.4701 < r < 6.4701
   95% expected band : 6.4701 < r < 6.4701
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 101557292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61821 +/- 0.00732402 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 3.61821 @ 95%CL (1 toyMC)
median expected limit: r < 3.61821 @ 95%CL (1 toyMC)
   68% expected band : 3.61821 < r < 3.61821
   95% expected band : 3.61821 < r < 3.61821
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2066825799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.3559 +/- 0.0110375 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.3559 @ 95%CL (1 toyMC)
median expected limit: r < 5.3559 @ 95%CL (1 toyMC)
   68% expected band : 5.3559 < r < 5.3559
   95% expected band : 5.3559 < r < 5.3559
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 275390954
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11607 +/- 0.0117164 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 5.11607 @ 95%CL (1 toyMC)
median expected limit: r < 5.11607 @ 95%CL (1 toyMC)
   68% expected band : 5.11607 < r < 5.11607
   95% expected band : 5.11607 < r < 5.11607
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1339686727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.76878 +/- 0.00891209 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 4.76878 @ 95%CL (1 toyMC)
median expected limit: r < 4.76878 @ 95%CL (1 toyMC)
   68% expected band : 4.76878 < r < 4.76878
   95% expected band : 4.76878 < r < 4.76878
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1803879769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.93089 +/- 0.00938771 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 5.93089 @ 95%CL (1 toyMC)
median expected limit: r < 5.93089 @ 95%CL (1 toyMC)
   68% expected band : 5.93089 < r < 5.93089
   95% expected band : 5.93089 < r < 5.93089
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2020503543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.02641 +/- 0.0118034 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 6.02641 @ 95%CL (1 toyMC)
median expected limit: r < 6.02641 @ 95%CL (1 toyMC)
   68% expected band : 6.02641 < r < 6.02641
   95% expected band : 6.02641 < r < 6.02641
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1415678643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60341 +/- 0.0101012 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 4.60341 @ 95%CL (1 toyMC)
median expected limit: r < 4.60341 @ 95%CL (1 toyMC)
   68% expected band : 4.60341 < r < 4.60341
   95% expected band : 4.60341 < r < 4.60341
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1118883654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.17052 +/- 0.00878039 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.92 min (real)
mean   expected limit: r < 9.17052 @ 95%CL (1 toyMC)
median expected limit: r < 9.17052 @ 95%CL (1 toyMC)
   68% expected band : 9.17052 < r < 9.17052
   95% expected band : 9.17052 < r < 9.17052
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1983782072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.30235 +/- 0.00916767 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 4.30235 @ 95%CL (1 toyMC)
median expected limit: r < 4.30235 @ 95%CL (1 toyMC)
   68% expected band : 4.30235 < r < 4.30235
   95% expected band : 4.30235 < r < 4.30235
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 238162488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.52731 +/- 0.00706143 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 4.52731 @ 95%CL (1 toyMC)
median expected limit: r < 4.52731 @ 95%CL (1 toyMC)
   68% expected band : 4.52731 < r < 4.52731
   95% expected band : 4.52731 < r < 4.52731
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2107238831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.4995 +/- 0.0084741 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 5.4995 @ 95%CL (1 toyMC)
median expected limit: r < 5.4995 @ 95%CL (1 toyMC)
   68% expected band : 5.4995 < r < 5.4995
   95% expected band : 5.4995 < r < 5.4995
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 701674111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.34398 +/- 0.00984066 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.90 min (real)
mean   expected limit: r < 8.34398 @ 95%CL (1 toyMC)
median expected limit: r < 8.34398 @ 95%CL (1 toyMC)
   68% expected band : 8.34398 < r < 8.34398
   95% expected band : 8.34398 < r < 8.34398
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1713946274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.96596 +/- 0.00801163 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 3.96596 @ 95%CL (1 toyMC)
median expected limit: r < 3.96596 @ 95%CL (1 toyMC)
   68% expected band : 3.96596 < r < 3.96596
   95% expected band : 3.96596 < r < 3.96596
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1194921779
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.41264 +/- 0.00968649 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 5.41264 @ 95%CL (1 toyMC)
median expected limit: r < 5.41264 @ 95%CL (1 toyMC)
   68% expected band : 5.41264 < r < 5.41264
   95% expected band : 5.41264 < r < 5.41264
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1716972155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.99563 +/- 0.00898333 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 3.99563 @ 95%CL (1 toyMC)
median expected limit: r < 3.99563 @ 95%CL (1 toyMC)
   68% expected band : 3.99563 < r < 3.99563
   95% expected band : 3.99563 < r < 3.99563
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 216984064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.35748 +/- 0.00880238 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 4.35748 @ 95%CL (1 toyMC)
median expected limit: r < 4.35748 @ 95%CL (1 toyMC)
   68% expected band : 4.35748 < r < 4.35748
   95% expected band : 4.35748 < r < 4.35748
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -512196751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.58249 +/- 0.00667429 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 3.58249 @ 95%CL (1 toyMC)
median expected limit: r < 3.58249 @ 95%CL (1 toyMC)
   68% expected band : 3.58249 < r < 3.58249
   95% expected band : 3.58249 < r < 3.58249
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1954214401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.81674 +/- 0.0126342 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 9.81674 @ 95%CL (1 toyMC)
median expected limit: r < 9.81674 @ 95%CL (1 toyMC)
   68% expected band : 9.81674 < r < 9.81674
   95% expected band : 9.81674 < r < 9.81674
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1300482619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.56225 +/- 0.00958372 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 7.56225 @ 95%CL (1 toyMC)
median expected limit: r < 7.56225 @ 95%CL (1 toyMC)
   68% expected band : 7.56225 < r < 7.56225
   95% expected band : 7.56225 < r < 7.56225
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1870128255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.18054 +/- 0.0104481 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.92 min (real)
mean   expected limit: r < 7.18054 @ 95%CL (1 toyMC)
median expected limit: r < 7.18054 @ 95%CL (1 toyMC)
   68% expected band : 7.18054 < r < 7.18054
   95% expected band : 7.18054 < r < 7.18054
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1591263785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.81679 +/- 0.00963011 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 5.81679 @ 95%CL (1 toyMC)
median expected limit: r < 5.81679 @ 95%CL (1 toyMC)
   68% expected band : 5.81679 < r < 5.81679
   95% expected band : 5.81679 < r < 5.81679
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 328636451
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.32643 +/- 0.00832658 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 4.32643 @ 95%CL (1 toyMC)
median expected limit: r < 4.32643 @ 95%CL (1 toyMC)
   68% expected band : 4.32643 < r < 4.32643
   95% expected band : 4.32643 < r < 4.32643
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1266395640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.38905 +/- 0.00640475 @ 95% CL (100 tries)
Done in 1.62 min (cpu), 1.62 min (real)
mean   expected limit: r < 3.38905 @ 95%CL (1 toyMC)
median expected limit: r < 3.38905 @ 95%CL (1 toyMC)
   68% expected band : 3.38905 < r < 3.38905
   95% expected band : 3.38905 < r < 3.38905
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1388989871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.09799 +/- 0.00897775 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 5.09799 @ 95%CL (1 toyMC)
median expected limit: r < 5.09799 @ 95%CL (1 toyMC)
   68% expected band : 5.09799 < r < 5.09799
   95% expected band : 5.09799 < r < 5.09799
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1198848467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.27005 +/- 0.0076638 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 5.27005 @ 95%CL (1 toyMC)
median expected limit: r < 5.27005 @ 95%CL (1 toyMC)
   68% expected band : 5.27005 < r < 5.27005
   95% expected band : 5.27005 < r < 5.27005
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1354236732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9921 +/- 0.0109845 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.92 min (real)
mean   expected limit: r < 13.9921 @ 95%CL (1 toyMC)
median expected limit: r < 13.9921 @ 95%CL (1 toyMC)
   68% expected band : 13.9921 < r < 13.9921
   95% expected band : 13.9921 < r < 13.9921
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1212827591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.17096 +/- 0.00795071 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 4.17096 @ 95%CL (1 toyMC)
median expected limit: r < 4.17096 @ 95%CL (1 toyMC)
   68% expected band : 4.17096 < r < 4.17096
   95% expected band : 4.17096 < r < 4.17096
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1224223414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.76446 +/- 0.0108296 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 6.76446 @ 95%CL (1 toyMC)
median expected limit: r < 6.76446 @ 95%CL (1 toyMC)
   68% expected band : 6.76446 < r < 6.76446
   95% expected band : 6.76446 < r < 6.76446
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1057528922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.692 +/- 0.00954093 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 12.692 @ 95%CL (1 toyMC)
median expected limit: r < 12.692 @ 95%CL (1 toyMC)
   68% expected band : 12.692 < r < 12.692
   95% expected band : 12.692 < r < 12.692
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1379550492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20507 +/- 0.0103017 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 6.20507 @ 95%CL (1 toyMC)
median expected limit: r < 6.20507 @ 95%CL (1 toyMC)
   68% expected band : 6.20507 < r < 6.20507
   95% expected band : 6.20507 < r < 6.20507
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -766656379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.08986 +/- 0.0109029 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 9.08986 @ 95%CL (1 toyMC)
median expected limit: r < 9.08986 @ 95%CL (1 toyMC)
   68% expected band : 9.08986 < r < 9.08986
   95% expected band : 9.08986 < r < 9.08986
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 867701170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.85534 +/- 0.0086126 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 8.85534 @ 95%CL (1 toyMC)
median expected limit: r < 8.85534 @ 95%CL (1 toyMC)
   68% expected band : 8.85534 < r < 8.85534
   95% expected band : 8.85534 < r < 8.85534
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -127120987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.00768 +/- 0.00739605 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 4.00768 @ 95%CL (1 toyMC)
median expected limit: r < 4.00768 @ 95%CL (1 toyMC)
   68% expected band : 4.00768 < r < 4.00768
   95% expected band : 4.00768 < r < 4.00768
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -840710001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.63113 +/- 0.0103446 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 9.63113 @ 95%CL (1 toyMC)
median expected limit: r < 9.63113 @ 95%CL (1 toyMC)
   68% expected band : 9.63113 < r < 9.63113
   95% expected band : 9.63113 < r < 9.63113
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2122080575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.14673 +/- 0.00977747 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 4.14673 @ 95%CL (1 toyMC)
median expected limit: r < 4.14673 @ 95%CL (1 toyMC)
   68% expected band : 4.14673 < r < 4.14673
   95% expected band : 4.14673 < r < 4.14673
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1830584988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.38668 +/- 0.0093281 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 5.38668 @ 95%CL (1 toyMC)
median expected limit: r < 5.38668 @ 95%CL (1 toyMC)
   68% expected band : 5.38668 < r < 5.38668
   95% expected band : 5.38668 < r < 5.38668
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 744655109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.54836 +/- 0.00825924 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 3.54836 @ 95%CL (1 toyMC)
median expected limit: r < 3.54836 @ 95%CL (1 toyMC)
   68% expected band : 3.54836 < r < 3.54836
   95% expected band : 3.54836 < r < 3.54836
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 446155394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86627 +/- 0.00828011 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 4.86627 @ 95%CL (1 toyMC)
median expected limit: r < 4.86627 @ 95%CL (1 toyMC)
   68% expected band : 4.86627 < r < 4.86627
   95% expected band : 4.86627 < r < 4.86627
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1204724140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5876 +/- 0.0102811 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 10.5876 @ 95%CL (1 toyMC)
median expected limit: r < 10.5876 @ 95%CL (1 toyMC)
   68% expected band : 10.5876 < r < 10.5876
   95% expected band : 10.5876 < r < 10.5876
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1313125898
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.51179 +/- 0.00897061 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.86 min (real)
mean   expected limit: r < 6.51179 @ 95%CL (1 toyMC)
median expected limit: r < 6.51179 @ 95%CL (1 toyMC)
   68% expected band : 6.51179 < r < 6.51179
   95% expected band : 6.51179 < r < 6.51179
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -613230261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.53488 +/- 0.0118833 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 8.53488 @ 95%CL (1 toyMC)
median expected limit: r < 8.53488 @ 95%CL (1 toyMC)
   68% expected band : 8.53488 < r < 8.53488
   95% expected band : 8.53488 < r < 8.53488
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1884094109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.83766 +/- 0.0101307 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 6.83766 @ 95%CL (1 toyMC)
median expected limit: r < 6.83766 @ 95%CL (1 toyMC)
   68% expected band : 6.83766 < r < 6.83766
   95% expected band : 6.83766 < r < 6.83766
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 878986363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.47439 +/- 0.00930951 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 7.47439 @ 95%CL (1 toyMC)
median expected limit: r < 7.47439 @ 95%CL (1 toyMC)
   68% expected band : 7.47439 < r < 7.47439
   95% expected band : 7.47439 < r < 7.47439
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1035882879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.48045 +/- 0.00853074 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 6.48045 @ 95%CL (1 toyMC)
median expected limit: r < 6.48045 @ 95%CL (1 toyMC)
   68% expected band : 6.48045 < r < 6.48045
   95% expected band : 6.48045 < r < 6.48045
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -628592863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.29855 +/- 0.00821279 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 3.29855 @ 95%CL (1 toyMC)
median expected limit: r < 3.29855 @ 95%CL (1 toyMC)
   68% expected band : 3.29855 < r < 3.29855
   95% expected band : 3.29855 < r < 3.29855
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 119285077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97992 +/- 0.00781536 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 3.97992 @ 95%CL (1 toyMC)
median expected limit: r < 3.97992 @ 95%CL (1 toyMC)
   68% expected band : 3.97992 < r < 3.97992
   95% expected band : 3.97992 < r < 3.97992
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2082827125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.64638 +/- 0.00773182 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 3.64638 @ 95%CL (1 toyMC)
median expected limit: r < 3.64638 @ 95%CL (1 toyMC)
   68% expected band : 3.64638 < r < 3.64638
   95% expected band : 3.64638 < r < 3.64638
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1924452817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.10789 +/- 0.0105969 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 6.10789 @ 95%CL (1 toyMC)
median expected limit: r < 6.10789 @ 95%CL (1 toyMC)
   68% expected band : 6.10789 < r < 6.10789
   95% expected band : 6.10789 < r < 6.10789
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 967000030
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5609 +/- 0.0114299 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.92 min (real)
mean   expected limit: r < 10.5609 @ 95%CL (1 toyMC)
median expected limit: r < 10.5609 @ 95%CL (1 toyMC)
   68% expected band : 10.5609 < r < 10.5609
   95% expected band : 10.5609 < r < 10.5609
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -88525640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.45046 +/- 0.010507 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 7.45046 @ 95%CL (1 toyMC)
median expected limit: r < 7.45046 @ 95%CL (1 toyMC)
   68% expected band : 7.45046 < r < 7.45046
   95% expected band : 7.45046 < r < 7.45046
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1326730315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.19893 +/- 0.00740329 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 4.19893 @ 95%CL (1 toyMC)
median expected limit: r < 4.19893 @ 95%CL (1 toyMC)
   68% expected band : 4.19893 < r < 4.19893
   95% expected band : 4.19893 < r < 4.19893
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1375780963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7121 +/- 0.0123932 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 13.7121 @ 95%CL (1 toyMC)
median expected limit: r < 13.7121 @ 95%CL (1 toyMC)
   68% expected band : 13.7121 < r < 13.7121
   95% expected band : 13.7121 < r < 13.7121
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1740037687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.14267 +/- 0.0081413 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 6.14267 @ 95%CL (1 toyMC)
median expected limit: r < 6.14267 @ 95%CL (1 toyMC)
   68% expected band : 6.14267 < r < 6.14267
   95% expected band : 6.14267 < r < 6.14267
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -814775622
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.25117 +/- 0.0105622 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 8.25117 @ 95%CL (1 toyMC)
median expected limit: r < 8.25117 @ 95%CL (1 toyMC)
   68% expected band : 8.25117 < r < 8.25117
   95% expected band : 8.25117 < r < 8.25117
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 726135439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.93662 +/- 0.00766583 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 5.93662 @ 95%CL (1 toyMC)
median expected limit: r < 5.93662 @ 95%CL (1 toyMC)
   68% expected band : 5.93662 < r < 5.93662
   95% expected band : 5.93662 < r < 5.93662
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 794107805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56724 +/- 0.00757628 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 3.56724 @ 95%CL (1 toyMC)
median expected limit: r < 3.56724 @ 95%CL (1 toyMC)
   68% expected band : 3.56724 < r < 3.56724
   95% expected band : 3.56724 < r < 3.56724
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1508087217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4354 +/- 0.0126034 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 10.4354 @ 95%CL (1 toyMC)
median expected limit: r < 10.4354 @ 95%CL (1 toyMC)
   68% expected band : 10.4354 < r < 10.4354
   95% expected band : 10.4354 < r < 10.4354
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1539498755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.62171 +/- 0.00759049 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 3.62171 @ 95%CL (1 toyMC)
median expected limit: r < 3.62171 @ 95%CL (1 toyMC)
   68% expected band : 3.62171 < r < 3.62171
   95% expected band : 3.62171 < r < 3.62171
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1616911609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20351 +/- 0.00866283 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 6.20351 @ 95%CL (1 toyMC)
median expected limit: r < 6.20351 @ 95%CL (1 toyMC)
   68% expected band : 6.20351 < r < 6.20351
   95% expected band : 6.20351 < r < 6.20351
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -932513428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.71549 +/- 0.00871011 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 4.71549 @ 95%CL (1 toyMC)
median expected limit: r < 4.71549 @ 95%CL (1 toyMC)
   68% expected band : 4.71549 < r < 4.71549
   95% expected band : 4.71549 < r < 4.71549
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1255555293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.09986 +/- 0.0101048 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 5.09986 @ 95%CL (1 toyMC)
median expected limit: r < 5.09986 @ 95%CL (1 toyMC)
   68% expected band : 5.09986 < r < 5.09986
   95% expected band : 5.09986 < r < 5.09986
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -710930637
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.82211 +/- 0.0107632 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 7.82211 @ 95%CL (1 toyMC)
median expected limit: r < 7.82211 @ 95%CL (1 toyMC)
   68% expected band : 7.82211 < r < 7.82211
   95% expected band : 7.82211 < r < 7.82211
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2122934525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11072 +/- 0.00776131 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 5.11072 @ 95%CL (1 toyMC)
median expected limit: r < 5.11072 @ 95%CL (1 toyMC)
   68% expected band : 5.11072 < r < 5.11072
   95% expected band : 5.11072 < r < 5.11072
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -241865752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01169 +/- 0.0088701 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 6.01169 @ 95%CL (1 toyMC)
median expected limit: r < 6.01169 @ 95%CL (1 toyMC)
   68% expected band : 6.01169 < r < 6.01169
   95% expected band : 6.01169 < r < 6.01169
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 910660936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.72284 +/- 0.00717316 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 4.72284 @ 95%CL (1 toyMC)
median expected limit: r < 4.72284 @ 95%CL (1 toyMC)
   68% expected band : 4.72284 < r < 4.72284
   95% expected band : 4.72284 < r < 4.72284
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 392185749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.24986 +/- 0.00669031 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 3.24986 @ 95%CL (1 toyMC)
median expected limit: r < 3.24986 @ 95%CL (1 toyMC)
   68% expected band : 3.24986 < r < 3.24986
   95% expected band : 3.24986 < r < 3.24986
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1471311822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.62242 +/- 0.00842634 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.62242 @ 95%CL (1 toyMC)
median expected limit: r < 5.62242 @ 95%CL (1 toyMC)
   68% expected band : 5.62242 < r < 5.62242
   95% expected band : 5.62242 < r < 5.62242
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 607394177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.71899 +/- 0.0082151 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 5.71899 @ 95%CL (1 toyMC)
median expected limit: r < 5.71899 @ 95%CL (1 toyMC)
   68% expected band : 5.71899 < r < 5.71899
   95% expected band : 5.71899 < r < 5.71899
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1207571154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.47625 +/- 0.00687987 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.47625 @ 95%CL (1 toyMC)
median expected limit: r < 5.47625 @ 95%CL (1 toyMC)
   68% expected band : 5.47625 < r < 5.47625
   95% expected band : 5.47625 < r < 5.47625
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -782857206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.03709 +/- 0.00857549 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 5.03709 @ 95%CL (1 toyMC)
median expected limit: r < 5.03709 @ 95%CL (1 toyMC)
   68% expected band : 5.03709 < r < 5.03709
   95% expected band : 5.03709 < r < 5.03709
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1047044052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.4351 +/- 0.0106461 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 6.4351 @ 95%CL (1 toyMC)
median expected limit: r < 6.4351 @ 95%CL (1 toyMC)
   68% expected band : 6.4351 < r < 6.4351
   95% expected band : 6.4351 < r < 6.4351
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -46909066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.42536 +/- 0.0117907 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 9.42536 @ 95%CL (1 toyMC)
median expected limit: r < 9.42536 @ 95%CL (1 toyMC)
   68% expected band : 9.42536 < r < 9.42536
   95% expected band : 9.42536 < r < 9.42536
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1799601541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6075 +/- 0.0130813 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.92 min (real)
mean   expected limit: r < 10.6075 @ 95%CL (1 toyMC)
median expected limit: r < 10.6075 @ 95%CL (1 toyMC)
   68% expected band : 10.6075 < r < 10.6075
   95% expected band : 10.6075 < r < 10.6075
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -60495812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01262 +/- 0.0103414 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 6.01262 @ 95%CL (1 toyMC)
median expected limit: r < 6.01262 @ 95%CL (1 toyMC)
   68% expected band : 6.01262 < r < 6.01262
   95% expected band : 6.01262 < r < 6.01262
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1591728993
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.3997 +/- 0.00756381 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.81 min (real)
mean   expected limit: r < 5.3997 @ 95%CL (1 toyMC)
median expected limit: r < 5.3997 @ 95%CL (1 toyMC)
   68% expected band : 5.3997 < r < 5.3997
   95% expected band : 5.3997 < r < 5.3997
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -423095409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.3911 +/- 0.0110387 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 7.3911 @ 95%CL (1 toyMC)
median expected limit: r < 7.3911 @ 95%CL (1 toyMC)
   68% expected band : 7.3911 < r < 7.3911
   95% expected band : 7.3911 < r < 7.3911
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1850484907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.23228 +/- 0.00779898 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.82 min (real)
mean   expected limit: r < 4.23228 @ 95%CL (1 toyMC)
median expected limit: r < 4.23228 @ 95%CL (1 toyMC)
   68% expected band : 4.23228 < r < 4.23228
   95% expected band : 4.23228 < r < 4.23228
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 306821290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.6436 +/- 0.00762059 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.6436 @ 95%CL (1 toyMC)
median expected limit: r < 5.6436 @ 95%CL (1 toyMC)
   68% expected band : 5.6436 < r < 5.6436
   95% expected band : 5.6436 < r < 5.6436
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682550797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.02296 +/- 0.00977129 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 6.02296 @ 95%CL (1 toyMC)
median expected limit: r < 6.02296 @ 95%CL (1 toyMC)
   68% expected band : 6.02296 < r < 6.02296
   95% expected band : 6.02296 < r < 6.02296
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1178402376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.03492 +/- 0.00892932 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 7.03492 @ 95%CL (1 toyMC)
median expected limit: r < 7.03492 @ 95%CL (1 toyMC)
   68% expected band : 7.03492 < r < 7.03492
   95% expected band : 7.03492 < r < 7.03492
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -952002396
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.27812 +/- 0.0115785 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 7.27812 @ 95%CL (1 toyMC)
median expected limit: r < 7.27812 @ 95%CL (1 toyMC)
   68% expected band : 7.27812 < r < 7.27812
   95% expected band : 7.27812 < r < 7.27812
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 534631111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60922 +/- 0.00865721 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 4.60922 @ 95%CL (1 toyMC)
median expected limit: r < 4.60922 @ 95%CL (1 toyMC)
   68% expected band : 4.60922 < r < 4.60922
   95% expected band : 4.60922 < r < 4.60922
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 978322821
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.52758 +/- 0.0117297 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.52758 @ 95%CL (1 toyMC)
median expected limit: r < 5.52758 @ 95%CL (1 toyMC)
   68% expected band : 5.52758 < r < 5.52758
   95% expected band : 5.52758 < r < 5.52758
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1893854095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.16627 +/- 0.0101205 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 7.16627 @ 95%CL (1 toyMC)
median expected limit: r < 7.16627 @ 95%CL (1 toyMC)
   68% expected band : 7.16627 < r < 7.16627
   95% expected band : 7.16627 < r < 7.16627
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1797383548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.34776 +/- 0.0105274 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 6.34776 @ 95%CL (1 toyMC)
median expected limit: r < 6.34776 @ 95%CL (1 toyMC)
   68% expected band : 6.34776 < r < 6.34776
   95% expected band : 6.34776 < r < 6.34776
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1917515988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.45595 +/- 0.0086354 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 4.45595 @ 95%CL (1 toyMC)
median expected limit: r < 4.45595 @ 95%CL (1 toyMC)
   68% expected band : 4.45595 < r < 4.45595
   95% expected band : 4.45595 < r < 4.45595
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1795820183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.49028 +/- 0.0100865 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 6.49028 @ 95%CL (1 toyMC)
median expected limit: r < 6.49028 @ 95%CL (1 toyMC)
   68% expected band : 6.49028 < r < 6.49028
   95% expected band : 6.49028 < r < 6.49028
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1744005783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6526 +/- 0.0121842 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.92 min (real)
mean   expected limit: r < 16.6526 @ 95%CL (1 toyMC)
median expected limit: r < 16.6526 @ 95%CL (1 toyMC)
   68% expected band : 16.6526 < r < 16.6526
   95% expected band : 16.6526 < r < 16.6526
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 748447531
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.87368 +/- 0.00949871 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 6.87368 @ 95%CL (1 toyMC)
median expected limit: r < 6.87368 @ 95%CL (1 toyMC)
   68% expected band : 6.87368 < r < 6.87368
   95% expected band : 6.87368 < r < 6.87368
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1385219273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51952 +/- 0.00803607 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 5.51952 @ 95%CL (1 toyMC)
median expected limit: r < 5.51952 @ 95%CL (1 toyMC)
   68% expected band : 5.51952 < r < 5.51952
   95% expected band : 5.51952 < r < 5.51952
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2010493955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.37094 +/- 0.0073421 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 4.37094 @ 95%CL (1 toyMC)
median expected limit: r < 4.37094 @ 95%CL (1 toyMC)
   68% expected band : 4.37094 < r < 4.37094
   95% expected band : 4.37094 < r < 4.37094
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2105422253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.50915 +/- 0.00972432 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 7.50915 @ 95%CL (1 toyMC)
median expected limit: r < 7.50915 @ 95%CL (1 toyMC)
   68% expected band : 7.50915 < r < 7.50915
   95% expected band : 7.50915 < r < 7.50915
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -241015838
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.64537 +/- 0.00663765 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 3.64537 @ 95%CL (1 toyMC)
median expected limit: r < 3.64537 @ 95%CL (1 toyMC)
   68% expected band : 3.64537 < r < 3.64537
   95% expected band : 3.64537 < r < 3.64537
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -382465908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.95011 +/- 0.0091715 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 5.95011 @ 95%CL (1 toyMC)
median expected limit: r < 5.95011 @ 95%CL (1 toyMC)
   68% expected band : 5.95011 < r < 5.95011
   95% expected band : 5.95011 < r < 5.95011
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 462144459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.39123 +/- 0.00844063 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 6.39123 @ 95%CL (1 toyMC)
median expected limit: r < 6.39123 @ 95%CL (1 toyMC)
   68% expected band : 6.39123 < r < 6.39123
   95% expected band : 6.39123 < r < 6.39123
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 118038284
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.55371 +/- 0.00861612 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 6.55371 @ 95%CL (1 toyMC)
median expected limit: r < 6.55371 @ 95%CL (1 toyMC)
   68% expected band : 6.55371 < r < 6.55371
   95% expected band : 6.55371 < r < 6.55371
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1132301144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.01641 +/- 0.00957715 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 5.01641 @ 95%CL (1 toyMC)
median expected limit: r < 5.01641 @ 95%CL (1 toyMC)
   68% expected band : 5.01641 < r < 5.01641
   95% expected band : 5.01641 < r < 5.01641
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 668124101
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86774 +/- 0.00807778 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 4.86774 @ 95%CL (1 toyMC)
median expected limit: r < 4.86774 @ 95%CL (1 toyMC)
   68% expected band : 4.86774 < r < 4.86774
   95% expected band : 4.86774 < r < 4.86774
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1732577971
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99538 +/- 0.00882623 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 5.99538 @ 95%CL (1 toyMC)
median expected limit: r < 5.99538 @ 95%CL (1 toyMC)
   68% expected band : 5.99538 < r < 5.99538
   95% expected band : 5.99538 < r < 5.99538
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1591199148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9017 +/- 0.013488 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 10.9017 @ 95%CL (1 toyMC)
median expected limit: r < 10.9017 @ 95%CL (1 toyMC)
   68% expected band : 10.9017 < r < 10.9017
   95% expected band : 10.9017 < r < 10.9017
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -702963252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4624 +/- 0.0178386 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 13.4624 @ 95%CL (1 toyMC)
median expected limit: r < 13.4624 @ 95%CL (1 toyMC)
   68% expected band : 13.4624 < r < 13.4624
   95% expected band : 13.4624 < r < 13.4624
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 698417393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.19699 +/- 0.0147539 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 7.19699 @ 95%CL (1 toyMC)
median expected limit: r < 7.19699 @ 95%CL (1 toyMC)
   68% expected band : 7.19699 < r < 7.19699
   95% expected band : 7.19699 < r < 7.19699
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -604528327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.49135 +/- 0.0130705 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 9.49135 @ 95%CL (1 toyMC)
median expected limit: r < 9.49135 @ 95%CL (1 toyMC)
   68% expected band : 9.49135 < r < 9.49135
   95% expected band : 9.49135 < r < 9.49135
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2085890400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.11624 +/- 0.013883 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 9.11624 @ 95%CL (1 toyMC)
median expected limit: r < 9.11624 @ 95%CL (1 toyMC)
   68% expected band : 9.11624 < r < 9.11624
   95% expected band : 9.11624 < r < 9.11624
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 708266032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8108 +/- 0.0131309 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 14.8108 @ 95%CL (1 toyMC)
median expected limit: r < 14.8108 @ 95%CL (1 toyMC)
   68% expected band : 14.8108 < r < 14.8108
   95% expected band : 14.8108 < r < 14.8108
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1033324131
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.48562 +/- 0.0136886 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 8.48562 @ 95%CL (1 toyMC)
median expected limit: r < 8.48562 @ 95%CL (1 toyMC)
   68% expected band : 8.48562 < r < 8.48562
   95% expected band : 8.48562 < r < 8.48562
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1301778079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.63388 +/- 0.0136001 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 9.63388 @ 95%CL (1 toyMC)
median expected limit: r < 9.63388 @ 95%CL (1 toyMC)
   68% expected band : 9.63388 < r < 9.63388
   95% expected band : 9.63388 < r < 9.63388
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 754361045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.74483 +/- 0.0158721 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 8.74483 @ 95%CL (1 toyMC)
median expected limit: r < 8.74483 @ 95%CL (1 toyMC)
   68% expected band : 8.74483 < r < 8.74483
   95% expected band : 8.74483 < r < 8.74483
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1333804226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.538 +/- 0.0110775 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 16.538 @ 95%CL (1 toyMC)
median expected limit: r < 16.538 @ 95%CL (1 toyMC)
   68% expected band : 16.538 < r < 16.538
   95% expected band : 16.538 < r < 16.538
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1063322632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.0368 +/- 0.0125679 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 6.0368 @ 95%CL (1 toyMC)
median expected limit: r < 6.0368 @ 95%CL (1 toyMC)
   68% expected band : 6.0368 < r < 6.0368
   95% expected band : 6.0368 < r < 6.0368
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 231318886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1964 +/- 0.0135111 @ 95% CL (100 tries)
Done in 1.93 min (cpu), 1.93 min (real)
mean   expected limit: r < 11.1964 @ 95%CL (1 toyMC)
median expected limit: r < 11.1964 @ 95%CL (1 toyMC)
   68% expected band : 11.1964 < r < 11.1964
   95% expected band : 11.1964 < r < 11.1964
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1590207849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.893 +/- 0.0151027 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 8.893 @ 95%CL (1 toyMC)
median expected limit: r < 8.893 @ 95%CL (1 toyMC)
   68% expected band : 8.893 < r < 8.893
   95% expected band : 8.893 < r < 8.893
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -201926188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6295 +/- 0.0128683 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 10.6295 @ 95%CL (1 toyMC)
median expected limit: r < 10.6295 @ 95%CL (1 toyMC)
   68% expected band : 10.6295 < r < 10.6295
   95% expected band : 10.6295 < r < 10.6295
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -822994923
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.89932 +/- 0.0149984 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 9.89932 @ 95%CL (1 toyMC)
median expected limit: r < 9.89932 @ 95%CL (1 toyMC)
   68% expected band : 9.89932 < r < 9.89932
   95% expected band : 9.89932 < r < 9.89932
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 976205458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8121 +/- 0.0158525 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 10.8121 @ 95%CL (1 toyMC)
median expected limit: r < 10.8121 @ 95%CL (1 toyMC)
   68% expected band : 10.8121 < r < 10.8121
   95% expected band : 10.8121 < r < 10.8121
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1013118171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6074 +/- 0.0056387 @ 95% CL (100 tries)
Done in 1.96 min (cpu), 1.96 min (real)
mean   expected limit: r < 17.6074 @ 95%CL (1 toyMC)
median expected limit: r < 17.6074 @ 95%CL (1 toyMC)
   68% expected band : 17.6074 < r < 17.6074
   95% expected band : 17.6074 < r < 17.6074
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -208608870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.09259 +/- 0.0142692 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 8.09259 @ 95%CL (1 toyMC)
median expected limit: r < 8.09259 @ 95%CL (1 toyMC)
   68% expected band : 8.09259 < r < 8.09259
   95% expected band : 8.09259 < r < 8.09259
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1616734122
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9484 +/- 0.0121046 @ 95% CL (100 tries)
Done in 1.92 min (cpu), 1.93 min (real)
mean   expected limit: r < 13.9484 @ 95%CL (1 toyMC)
median expected limit: r < 13.9484 @ 95%CL (1 toyMC)
   68% expected band : 13.9484 < r < 13.9484
   95% expected band : 13.9484 < r < 13.9484
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1673218704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7037 +/- 0.0137311 @ 95% CL (100 tries)
Done in 1.94 min (cpu), 1.94 min (real)
mean   expected limit: r < 11.7037 @ 95%CL (1 toyMC)
median expected limit: r < 11.7037 @ 95%CL (1 toyMC)
   68% expected band : 11.7037 < r < 11.7037
   95% expected band : 11.7037 < r < 11.7037
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -142095899
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.42272 +/- 0.0124007 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 6.42272 @ 95%CL (1 toyMC)
median expected limit: r < 6.42272 @ 95%CL (1 toyMC)
   68% expected band : 6.42272 < r < 6.42272
   95% expected band : 6.42272 < r < 6.42272
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 561220625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0896 +/- 0.0158888 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 10.0896 @ 95%CL (1 toyMC)
median expected limit: r < 10.0896 @ 95%CL (1 toyMC)
   68% expected band : 10.0896 < r < 10.0896
   95% expected band : 10.0896 < r < 10.0896
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -405632339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.78056 +/- 0.0177828 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 9.78056 @ 95%CL (1 toyMC)
median expected limit: r < 9.78056 @ 95%CL (1 toyMC)
   68% expected band : 9.78056 < r < 9.78056
   95% expected band : 9.78056 < r < 9.78056
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1025628560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4409 +/- 0.00944289 @ 95% CL (100 tries)
Done in 1.95 min (cpu), 1.95 min (real)
mean   expected limit: r < 14.4409 @ 95%CL (1 toyMC)
median expected limit: r < 14.4409 @ 95%CL (1 toyMC)
   68% expected band : 14.4409 < r < 14.4409
   95% expected band : 14.4409 < r < 14.4409
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2094891336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8428 +/- 0.0142631 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 10.8428 @ 95%CL (1 toyMC)
median expected limit: r < 10.8428 @ 95%CL (1 toyMC)
   68% expected band : 10.8428 < r < 10.8428
   95% expected band : 10.8428 < r < 10.8428
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1419228410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.5143 +/- 0.013748 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 6.5143 @ 95%CL (1 toyMC)
median expected limit: r < 6.5143 @ 95%CL (1 toyMC)
   68% expected band : 6.5143 < r < 6.5143
   95% expected band : 6.5143 < r < 6.5143
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1096608287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.84098 +/- 0.0141987 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 7.84098 @ 95%CL (1 toyMC)
median expected limit: r < 7.84098 @ 95%CL (1 toyMC)
   68% expected band : 7.84098 < r < 7.84098
   95% expected band : 7.84098 < r < 7.84098
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1674476262
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.1481 +/- 0.0172723 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 9.1481 @ 95%CL (1 toyMC)
median expected limit: r < 9.1481 @ 95%CL (1 toyMC)
   68% expected band : 9.1481 < r < 9.1481
   95% expected band : 9.1481 < r < 9.1481
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -744555839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1283 +/- 0.00773484 @ 95% CL (100 tries)
Done in 1.93 min (cpu), 1.93 min (real)
mean   expected limit: r < 16.1283 @ 95%CL (1 toyMC)
median expected limit: r < 16.1283 @ 95%CL (1 toyMC)
   68% expected band : 16.1283 < r < 16.1283
   95% expected band : 16.1283 < r < 16.1283
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1754881971
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2877 +/- 0.0159539 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 10.2877 @ 95%CL (1 toyMC)
median expected limit: r < 10.2877 @ 95%CL (1 toyMC)
   68% expected band : 10.2877 < r < 10.2877
   95% expected band : 10.2877 < r < 10.2877
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 673947724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.59102 +/- 0.013446 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 8.59102 @ 95%CL (1 toyMC)
median expected limit: r < 8.59102 @ 95%CL (1 toyMC)
   68% expected band : 8.59102 < r < 8.59102
   95% expected band : 8.59102 < r < 8.59102
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1249343803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1635 +/- 0.0172857 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 10.1635 @ 95%CL (1 toyMC)
median expected limit: r < 10.1635 @ 95%CL (1 toyMC)
   68% expected band : 10.1635 < r < 10.1635
   95% expected band : 10.1635 < r < 10.1635
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1450237167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.35393 +/- 0.0138985 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 7.35393 @ 95%CL (1 toyMC)
median expected limit: r < 7.35393 @ 95%CL (1 toyMC)
   68% expected band : 7.35393 < r < 7.35393
   95% expected band : 7.35393 < r < 7.35393
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 966059584
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7618 +/- 0.0127199 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 10.7618 @ 95%CL (1 toyMC)
median expected limit: r < 10.7618 @ 95%CL (1 toyMC)
   68% expected band : 10.7618 < r < 10.7618
   95% expected band : 10.7618 < r < 10.7618
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 803520441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1793 +/- 0.0125776 @ 95% CL (100 tries)
Done in 1.95 min (cpu), 1.96 min (real)
mean   expected limit: r < 16.1793 @ 95%CL (1 toyMC)
median expected limit: r < 16.1793 @ 95%CL (1 toyMC)
   68% expected band : 16.1793 < r < 16.1793
   95% expected band : 16.1793 < r < 16.1793
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -575077057
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3637 +/- 0.0140169 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 10.3637 @ 95%CL (1 toyMC)
median expected limit: r < 10.3637 @ 95%CL (1 toyMC)
   68% expected band : 10.3637 < r < 10.3637
   95% expected band : 10.3637 < r < 10.3637
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 960089771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7808 +/- 0.0144945 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 10.7808 @ 95%CL (1 toyMC)
median expected limit: r < 10.7808 @ 95%CL (1 toyMC)
   68% expected band : 10.7808 < r < 10.7808
   95% expected band : 10.7808 < r < 10.7808
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1980466499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.517 +/- 0.013344 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.517 @ 95%CL (1 toyMC)
median expected limit: r < 10.517 @ 95%CL (1 toyMC)
   68% expected band : 10.517 < r < 10.517
   95% expected band : 10.517 < r < 10.517
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2141190594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.25685 +/- 0.0113601 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 7.25685 @ 95%CL (1 toyMC)
median expected limit: r < 7.25685 @ 95%CL (1 toyMC)
   68% expected band : 7.25685 < r < 7.25685
   95% expected band : 7.25685 < r < 7.25685
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 757029379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.13337 +/- 0.0152227 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 8.13337 @ 95%CL (1 toyMC)
median expected limit: r < 8.13337 @ 95%CL (1 toyMC)
   68% expected band : 8.13337 < r < 8.13337
   95% expected band : 8.13337 < r < 8.13337
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -498609633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5658 +/- 0.0183746 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.5658 @ 95%CL (1 toyMC)
median expected limit: r < 10.5658 @ 95%CL (1 toyMC)
   68% expected band : 10.5658 < r < 10.5658
   95% expected band : 10.5658 < r < 10.5658
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1741804225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.83496 +/- 0.0164665 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 8.83496 @ 95%CL (1 toyMC)
median expected limit: r < 8.83496 @ 95%CL (1 toyMC)
   68% expected band : 8.83496 < r < 8.83496
   95% expected band : 8.83496 < r < 8.83496
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1571802824
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5182 +/- 0.0169783 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 10.5182 @ 95%CL (1 toyMC)
median expected limit: r < 10.5182 @ 95%CL (1 toyMC)
   68% expected band : 10.5182 < r < 10.5182
   95% expected band : 10.5182 < r < 10.5182
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1602553024
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.14581 +/- 0.0176834 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 8.14581 @ 95%CL (1 toyMC)
median expected limit: r < 8.14581 @ 95%CL (1 toyMC)
   68% expected band : 8.14581 < r < 8.14581
   95% expected band : 8.14581 < r < 8.14581
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -615584048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87503 +/- 0.0126474 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 9.87503 @ 95%CL (1 toyMC)
median expected limit: r < 9.87503 @ 95%CL (1 toyMC)
   68% expected band : 9.87503 < r < 9.87503
   95% expected band : 9.87503 < r < 9.87503
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 916940689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3619 +/- 0.0157575 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 11.3619 @ 95%CL (1 toyMC)
median expected limit: r < 11.3619 @ 95%CL (1 toyMC)
   68% expected band : 11.3619 < r < 11.3619
   95% expected band : 11.3619 < r < 11.3619
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 737964403
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4949 +/- 0.0143727 @ 95% CL (100 tries)
Done in 1.94 min (cpu), 1.94 min (real)
mean   expected limit: r < 12.4949 @ 95%CL (1 toyMC)
median expected limit: r < 12.4949 @ 95%CL (1 toyMC)
   68% expected band : 12.4949 < r < 12.4949
   95% expected band : 12.4949 < r < 12.4949
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -491699026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.61373 +/- 0.00996224 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 6.61373 @ 95%CL (1 toyMC)
median expected limit: r < 6.61373 @ 95%CL (1 toyMC)
   68% expected band : 6.61373 < r < 6.61373
   95% expected band : 6.61373 < r < 6.61373
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1155426587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.76523 +/- 0.0138559 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 9.76523 @ 95%CL (1 toyMC)
median expected limit: r < 9.76523 @ 95%CL (1 toyMC)
   68% expected band : 9.76523 < r < 9.76523
   95% expected band : 9.76523 < r < 9.76523
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 986579677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.97763 +/- 0.0138239 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 9.97763 @ 95%CL (1 toyMC)
median expected limit: r < 9.97763 @ 95%CL (1 toyMC)
   68% expected band : 9.97763 < r < 9.97763
   95% expected band : 9.97763 < r < 9.97763
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2092502620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.64318 +/- 0.013999 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 7.64318 @ 95%CL (1 toyMC)
median expected limit: r < 7.64318 @ 95%CL (1 toyMC)
   68% expected band : 7.64318 < r < 7.64318
   95% expected band : 7.64318 < r < 7.64318
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -468629029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.17823 +/- 0.014551 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 9.17823 @ 95%CL (1 toyMC)
median expected limit: r < 9.17823 @ 95%CL (1 toyMC)
   68% expected band : 9.17823 < r < 9.17823
   95% expected band : 9.17823 < r < 9.17823
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1542094566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.71601 +/- 0.0121003 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.84 min (real)
mean   expected limit: r < 6.71601 @ 95%CL (1 toyMC)
median expected limit: r < 6.71601 @ 95%CL (1 toyMC)
   68% expected band : 6.71601 < r < 6.71601
   95% expected band : 6.71601 < r < 6.71601
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1680511511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1016 +/- 0.016458 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 11.1016 @ 95%CL (1 toyMC)
median expected limit: r < 11.1016 @ 95%CL (1 toyMC)
   68% expected band : 11.1016 < r < 11.1016
   95% expected band : 11.1016 < r < 11.1016
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 97786880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4506 +/- 0.0144359 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 10.4506 @ 95%CL (1 toyMC)
median expected limit: r < 10.4506 @ 95%CL (1 toyMC)
   68% expected band : 10.4506 < r < 10.4506
   95% expected band : 10.4506 < r < 10.4506
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 633568309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.37338 +/- 0.0138639 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 8.37338 @ 95%CL (1 toyMC)
median expected limit: r < 8.37338 @ 95%CL (1 toyMC)
   68% expected band : 8.37338 < r < 8.37338
   95% expected band : 8.37338 < r < 8.37338
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2056388911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5139 +/- 0.0119052 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 12.5139 @ 95%CL (1 toyMC)
median expected limit: r < 12.5139 @ 95%CL (1 toyMC)
   68% expected band : 12.5139 < r < 12.5139
   95% expected band : 12.5139 < r < 12.5139
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2039541650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.29673 +/- 0.0155357 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 8.29673 @ 95%CL (1 toyMC)
median expected limit: r < 8.29673 @ 95%CL (1 toyMC)
   68% expected band : 8.29673 < r < 8.29673
   95% expected band : 8.29673 < r < 8.29673
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 9966050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4254 +/- 0.0156316 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.87 min (real)
mean   expected limit: r < 10.4254 @ 95%CL (1 toyMC)
median expected limit: r < 10.4254 @ 95%CL (1 toyMC)
   68% expected band : 10.4254 < r < 10.4254
   95% expected band : 10.4254 < r < 10.4254
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1491924559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.12812 +/- 0.009641 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 6.12812 @ 95%CL (1 toyMC)
median expected limit: r < 6.12812 @ 95%CL (1 toyMC)
   68% expected band : 6.12812 < r < 6.12812
   95% expected band : 6.12812 < r < 6.12812
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2033355960
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2939 +/- 0.0126069 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 12.2939 @ 95%CL (1 toyMC)
median expected limit: r < 12.2939 @ 95%CL (1 toyMC)
   68% expected band : 12.2939 < r < 12.2939
   95% expected band : 12.2939 < r < 12.2939
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1281616880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.68036 +/- 0.00873575 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 4.68036 @ 95%CL (1 toyMC)
median expected limit: r < 4.68036 @ 95%CL (1 toyMC)
   68% expected band : 4.68036 < r < 4.68036
   95% expected band : 4.68036 < r < 4.68036
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -596868434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4263 +/- 0.0130629 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 12.4263 @ 95%CL (1 toyMC)
median expected limit: r < 12.4263 @ 95%CL (1 toyMC)
   68% expected band : 12.4263 < r < 12.4263
   95% expected band : 12.4263 < r < 12.4263
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -367104951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6887 +/- 0.014524 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 11.6887 @ 95%CL (1 toyMC)
median expected limit: r < 11.6887 @ 95%CL (1 toyMC)
   68% expected band : 11.6887 < r < 11.6887
   95% expected band : 11.6887 < r < 11.6887
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2099956147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.8596 +/- 0.0156018 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 7.8596 @ 95%CL (1 toyMC)
median expected limit: r < 7.8596 @ 95%CL (1 toyMC)
   68% expected band : 7.8596 < r < 7.8596
   95% expected band : 7.8596 < r < 7.8596
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -27142332
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.76415 +/- 0.0107652 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 5.76415 @ 95%CL (1 toyMC)
median expected limit: r < 5.76415 @ 95%CL (1 toyMC)
   68% expected band : 5.76415 < r < 5.76415
   95% expected band : 5.76415 < r < 5.76415
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -236839495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.64719 +/- 0.0133063 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 6.64719 @ 95%CL (1 toyMC)
median expected limit: r < 6.64719 @ 95%CL (1 toyMC)
   68% expected band : 6.64719 < r < 6.64719
   95% expected band : 6.64719 < r < 6.64719
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1272652647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3158 +/- 0.0148392 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.3158 @ 95%CL (1 toyMC)
median expected limit: r < 10.3158 @ 95%CL (1 toyMC)
   68% expected band : 10.3158 < r < 10.3158
   95% expected band : 10.3158 < r < 10.3158
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -235596495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.83842 +/- 0.0142702 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 8.83842 @ 95%CL (1 toyMC)
median expected limit: r < 8.83842 @ 95%CL (1 toyMC)
   68% expected band : 8.83842 < r < 8.83842
   95% expected band : 8.83842 < r < 8.83842
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 642967561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0097 +/- 0.0145311 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 11.0097 @ 95%CL (1 toyMC)
median expected limit: r < 11.0097 @ 95%CL (1 toyMC)
   68% expected band : 11.0097 < r < 11.0097
   95% expected band : 11.0097 < r < 11.0097
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -52964769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5732 +/- 0.015556 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.5732 @ 95%CL (1 toyMC)
median expected limit: r < 10.5732 @ 95%CL (1 toyMC)
   68% expected band : 10.5732 < r < 10.5732
   95% expected band : 10.5732 < r < 10.5732
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1602872406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7347 +/- 0.0166212 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 11.7347 @ 95%CL (1 toyMC)
median expected limit: r < 11.7347 @ 95%CL (1 toyMC)
   68% expected band : 11.7347 < r < 11.7347
   95% expected band : 11.7347 < r < 11.7347
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -551183643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.514 +/- 0.0163176 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 12.514 @ 95%CL (1 toyMC)
median expected limit: r < 12.514 @ 95%CL (1 toyMC)
   68% expected band : 12.514 < r < 12.514
   95% expected band : 12.514 < r < 12.514
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -771006356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9293 +/- 0.0164242 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 10.9293 @ 95%CL (1 toyMC)
median expected limit: r < 10.9293 @ 95%CL (1 toyMC)
   68% expected band : 10.9293 < r < 10.9293
   95% expected band : 10.9293 < r < 10.9293
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 981669102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.32843 +/- 0.0137184 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 7.32843 @ 95%CL (1 toyMC)
median expected limit: r < 7.32843 @ 95%CL (1 toyMC)
   68% expected band : 7.32843 < r < 7.32843
   95% expected band : 7.32843 < r < 7.32843
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1332726956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8155 +/- 0.015889 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 12.8155 @ 95%CL (1 toyMC)
median expected limit: r < 12.8155 @ 95%CL (1 toyMC)
   68% expected band : 12.8155 < r < 12.8155
   95% expected band : 12.8155 < r < 12.8155
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1599536808
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.91653 +/- 0.0178212 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 9.91653 @ 95%CL (1 toyMC)
median expected limit: r < 9.91653 @ 95%CL (1 toyMC)
   68% expected band : 9.91653 < r < 9.91653
   95% expected band : 9.91653 < r < 9.91653
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1326918169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2907 +/- 0.0139373 @ 95% CL (100 tries)
Done in 1.95 min (cpu), 1.95 min (real)
mean   expected limit: r < 15.2907 @ 95%CL (1 toyMC)
median expected limit: r < 15.2907 @ 95%CL (1 toyMC)
   68% expected band : 15.2907 < r < 15.2907
   95% expected band : 15.2907 < r < 15.2907
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1627892171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.54292 +/- 0.0142773 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 8.54292 @ 95%CL (1 toyMC)
median expected limit: r < 8.54292 @ 95%CL (1 toyMC)
   68% expected band : 8.54292 < r < 8.54292
   95% expected band : 8.54292 < r < 8.54292
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -371383437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.32619 +/- 0.0167143 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 9.32619 @ 95%CL (1 toyMC)
median expected limit: r < 9.32619 @ 95%CL (1 toyMC)
   68% expected band : 9.32619 < r < 9.32619
   95% expected band : 9.32619 < r < 9.32619
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1129887798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.68824 +/- 0.0110647 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 6.68824 @ 95%CL (1 toyMC)
median expected limit: r < 6.68824 @ 95%CL (1 toyMC)
   68% expected band : 6.68824 < r < 6.68824
   95% expected band : 6.68824 < r < 6.68824
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2079817451
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7029 +/- 0.0122178 @ 95% CL (100 tries)
Done in 1.89 min (cpu), 1.89 min (real)
mean   expected limit: r < 12.7029 @ 95%CL (1 toyMC)
median expected limit: r < 12.7029 @ 95%CL (1 toyMC)
   68% expected band : 12.7029 < r < 12.7029
   95% expected band : 12.7029 < r < 12.7029
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -74351328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9104 +/- 0.0130222 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 12.9104 @ 95%CL (1 toyMC)
median expected limit: r < 12.9104 @ 95%CL (1 toyMC)
   68% expected band : 12.9104 < r < 12.9104
   95% expected band : 12.9104 < r < 12.9104
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 735794125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.56854 +/- 0.0134572 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 7.56854 @ 95%CL (1 toyMC)
median expected limit: r < 7.56854 @ 95%CL (1 toyMC)
   68% expected band : 7.56854 < r < 7.56854
   95% expected band : 7.56854 < r < 7.56854
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1776221729
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.049 +/- 0.0120048 @ 95% CL (100 tries)
Done in 1.98 min (cpu), 1.98 min (real)
mean   expected limit: r < 16.049 @ 95%CL (1 toyMC)
median expected limit: r < 16.049 @ 95%CL (1 toyMC)
   68% expected band : 16.049 < r < 16.049
   95% expected band : 16.049 < r < 16.049
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -929893196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4496 +/- 0.0149285 @ 95% CL (100 tries)
Done in 1.90 min (cpu), 1.90 min (real)
mean   expected limit: r < 12.4496 @ 95%CL (1 toyMC)
median expected limit: r < 12.4496 @ 95%CL (1 toyMC)
   68% expected band : 12.4496 < r < 12.4496
   95% expected band : 12.4496 < r < 12.4496
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -676793159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4188 +/- 0.0148023 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 10.4188 @ 95%CL (1 toyMC)
median expected limit: r < 10.4188 @ 95%CL (1 toyMC)
   68% expected band : 10.4188 < r < 10.4188
   95% expected band : 10.4188 < r < 10.4188
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1893637017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8179 +/- 0.0129039 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.91 min (real)
mean   expected limit: r < 14.8179 @ 95%CL (1 toyMC)
median expected limit: r < 14.8179 @ 95%CL (1 toyMC)
   68% expected band : 14.8179 < r < 14.8179
   95% expected band : 14.8179 < r < 14.8179
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1070755087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3422 +/- 0.0152254 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.3422 @ 95%CL (1 toyMC)
median expected limit: r < 10.3422 @ 95%CL (1 toyMC)
   68% expected band : 10.3422 < r < 10.3422
   95% expected band : 10.3422 < r < 10.3422
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1609892847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.463 +/- 0.0174205 @ 95% CL (100 tries)
Done in 1.91 min (cpu), 1.92 min (real)
mean   expected limit: r < 11.463 @ 95%CL (1 toyMC)
median expected limit: r < 11.463 @ 95%CL (1 toyMC)
   68% expected band : 11.463 < r < 11.463
   95% expected band : 11.463 < r < 11.463
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 892438167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8113 +/- 0.0164622 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.8113 @ 95%CL (1 toyMC)
median expected limit: r < 10.8113 @ 95%CL (1 toyMC)
   68% expected band : 10.8113 < r < 10.8113
   95% expected band : 10.8113 < r < 10.8113
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1558052249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0619 +/- 0.0150052 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 11.0619 @ 95%CL (1 toyMC)
median expected limit: r < 11.0619 @ 95%CL (1 toyMC)
   68% expected band : 11.0619 < r < 11.0619
   95% expected band : 11.0619 < r < 11.0619
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 876899083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5415 +/- 0.0179077 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 10.5415 @ 95%CL (1 toyMC)
median expected limit: r < 10.5415 @ 95%CL (1 toyMC)
   68% expected band : 10.5415 < r < 10.5415
   95% expected band : 10.5415 < r < 10.5415
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1715219484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.059 +/- 0.0136543 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 10.059 @ 95%CL (1 toyMC)
median expected limit: r < 10.059 @ 95%CL (1 toyMC)
   68% expected band : 10.059 < r < 10.059
   95% expected band : 10.059 < r < 10.059
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 836240088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3298 +/- 0.0175626 @ 95% CL (100 tries)
Done in 1.86 min (cpu), 1.86 min (real)
mean   expected limit: r < 10.3298 @ 95%CL (1 toyMC)
median expected limit: r < 10.3298 @ 95%CL (1 toyMC)
   68% expected band : 10.3298 < r < 10.3298
   95% expected band : 10.3298 < r < 10.3298
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1592725243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.84775 +/- 0.0144999 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.85 min (real)
mean   expected limit: r < 8.84775 @ 95%CL (1 toyMC)
median expected limit: r < 8.84775 @ 95%CL (1 toyMC)
   68% expected band : 8.84775 < r < 8.84775
   95% expected band : 8.84775 < r < 8.84775
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -55873753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.74309 +/- 0.0147099 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.87 min (real)
mean   expected limit: r < 9.74309 @ 95%CL (1 toyMC)
median expected limit: r < 9.74309 @ 95%CL (1 toyMC)
   68% expected band : 9.74309 < r < 9.74309
   95% expected band : 9.74309 < r < 9.74309
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1125686957
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6209 +/- 0.0145652 @ 95% CL (100 tries)
Done in 1.87 min (cpu), 1.88 min (real)
mean   expected limit: r < 10.6209 @ 95%CL (1 toyMC)
median expected limit: r < 10.6209 @ 95%CL (1 toyMC)
   68% expected band : 10.6209 < r < 10.6209
   95% expected band : 10.6209 < r < 10.6209
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -255653210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.73719 +/- 0.0137539 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 7.73719 @ 95%CL (1 toyMC)
median expected limit: r < 7.73719 @ 95%CL (1 toyMC)
   68% expected band : 7.73719 < r < 7.73719
   95% expected band : 7.73719 < r < 7.73719
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1719713615
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.779 +/- 0.0167227 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 12.779 @ 95%CL (1 toyMC)
median expected limit: r < 12.779 @ 95%CL (1 toyMC)
   68% expected band : 12.779 < r < 12.779
   95% expected band : 12.779 < r < 12.779
>>>> Finished computing CI MCMC with Lambda = 100
