 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -164937033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.206367 +/- 0.00313154 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 0.206367 @ 95%CL (1 toyMC)
median expected limit: r < 0.206367 @ 95%CL (1 toyMC)
   68% expected band : 0.206367 < r < 0.206367
   95% expected band : 0.206367 < r < 0.206367
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 359806490
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.278413 +/- 0.00309815 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.278413 @ 95%CL (1 toyMC)
median expected limit: r < 0.278413 @ 95%CL (1 toyMC)
   68% expected band : 0.278413 < r < 0.278413
   95% expected band : 0.278413 < r < 0.278413
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -43160656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.306666 +/- 0.00269532 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.306666 @ 95%CL (1 toyMC)
median expected limit: r < 0.306666 @ 95%CL (1 toyMC)
   68% expected band : 0.306666 < r < 0.306666
   95% expected band : 0.306666 < r < 0.306666
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 107217372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.283981 +/- 0.00224129 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.283981 @ 95%CL (1 toyMC)
median expected limit: r < 0.283981 @ 95%CL (1 toyMC)
   68% expected band : 0.283981 < r < 0.283981
   95% expected band : 0.283981 < r < 0.283981
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 503929304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.217623 +/- 0.00297791 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.217623 @ 95%CL (1 toyMC)
median expected limit: r < 0.217623 @ 95%CL (1 toyMC)
   68% expected band : 0.217623 < r < 0.217623
   95% expected band : 0.217623 < r < 0.217623
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -624144369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.289255 +/- 0.00263855 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.289255 @ 95%CL (1 toyMC)
median expected limit: r < 0.289255 @ 95%CL (1 toyMC)
   68% expected band : 0.289255 < r < 0.289255
   95% expected band : 0.289255 < r < 0.289255
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1557021584
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.311145 +/- 0.00228103 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.311145 @ 95%CL (1 toyMC)
median expected limit: r < 0.311145 @ 95%CL (1 toyMC)
   68% expected band : 0.311145 < r < 0.311145
   95% expected band : 0.311145 < r < 0.311145
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -382608045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.219421 +/- 0.00260451 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.219421 @ 95%CL (1 toyMC)
median expected limit: r < 0.219421 @ 95%CL (1 toyMC)
   68% expected band : 0.219421 < r < 0.219421
   95% expected band : 0.219421 < r < 0.219421
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 89668868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.291051 +/- 0.00216561 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.291051 @ 95%CL (1 toyMC)
median expected limit: r < 0.291051 @ 95%CL (1 toyMC)
   68% expected band : 0.291051 < r < 0.291051
   95% expected band : 0.291051 < r < 0.291051
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1811119267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.404871 +/- 0.00283121 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.404871 @ 95%CL (1 toyMC)
median expected limit: r < 0.404871 @ 95%CL (1 toyMC)
   68% expected band : 0.404871 < r < 0.404871
   95% expected band : 0.404871 < r < 0.404871
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 324740197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.223314 +/- 0.00261886 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.223314 @ 95%CL (1 toyMC)
median expected limit: r < 0.223314 @ 95%CL (1 toyMC)
   68% expected band : 0.223314 < r < 0.223314
   95% expected band : 0.223314 < r < 0.223314
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1613744122
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.240282 +/- 0.00262999 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.240282 @ 95%CL (1 toyMC)
median expected limit: r < 0.240282 @ 95%CL (1 toyMC)
   68% expected band : 0.240282 < r < 0.240282
   95% expected band : 0.240282 < r < 0.240282
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1149821096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.224133 +/- 0.00272649 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.224133 @ 95%CL (1 toyMC)
median expected limit: r < 0.224133 @ 95%CL (1 toyMC)
   68% expected band : 0.224133 < r < 0.224133
   95% expected band : 0.224133 < r < 0.224133
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 541587918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.232322 +/- 0.00274431 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.232322 @ 95%CL (1 toyMC)
median expected limit: r < 0.232322 @ 95%CL (1 toyMC)
   68% expected band : 0.232322 < r < 0.232322
   95% expected band : 0.232322 < r < 0.232322
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1456972183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.30937 +/- 0.00257125 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.30937 @ 95%CL (1 toyMC)
median expected limit: r < 0.30937 @ 95%CL (1 toyMC)
   68% expected band : 0.30937 < r < 0.30937
   95% expected band : 0.30937 < r < 0.30937
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 259610410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.310013 +/- 0.0030156 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.310013 @ 95%CL (1 toyMC)
median expected limit: r < 0.310013 @ 95%CL (1 toyMC)
   68% expected band : 0.310013 < r < 0.310013
   95% expected band : 0.310013 < r < 0.310013
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -865362341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.260015 +/- 0.00213859 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.260015 @ 95%CL (1 toyMC)
median expected limit: r < 0.260015 @ 95%CL (1 toyMC)
   68% expected band : 0.260015 < r < 0.260015
   95% expected band : 0.260015 < r < 0.260015
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -290422222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.289531 +/- 0.00263202 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.289531 @ 95%CL (1 toyMC)
median expected limit: r < 0.289531 @ 95%CL (1 toyMC)
   68% expected band : 0.289531 < r < 0.289531
   95% expected band : 0.289531 < r < 0.289531
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -788766292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.207055 +/- 0.00315627 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.207055 @ 95%CL (1 toyMC)
median expected limit: r < 0.207055 @ 95%CL (1 toyMC)
   68% expected band : 0.207055 < r < 0.207055
   95% expected band : 0.207055 < r < 0.207055
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1358512059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.224293 +/- 0.00293491 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.224293 @ 95%CL (1 toyMC)
median expected limit: r < 0.224293 @ 95%CL (1 toyMC)
   68% expected band : 0.224293 < r < 0.224293
   95% expected band : 0.224293 < r < 0.224293
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1408265974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.331009 +/- 0.00203855 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.331009 @ 95%CL (1 toyMC)
median expected limit: r < 0.331009 @ 95%CL (1 toyMC)
   68% expected band : 0.331009 < r < 0.331009
   95% expected band : 0.331009 < r < 0.331009
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2048152512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.354452 +/- 0.00264158 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.354452 @ 95%CL (1 toyMC)
median expected limit: r < 0.354452 @ 95%CL (1 toyMC)
   68% expected band : 0.354452 < r < 0.354452
   95% expected band : 0.354452 < r < 0.354452
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -79863723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.242336 +/- 0.00261724 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.242336 @ 95%CL (1 toyMC)
median expected limit: r < 0.242336 @ 95%CL (1 toyMC)
   68% expected band : 0.242336 < r < 0.242336
   95% expected band : 0.242336 < r < 0.242336
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -662289214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.304249 +/- 0.00248891 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.304249 @ 95%CL (1 toyMC)
median expected limit: r < 0.304249 @ 95%CL (1 toyMC)
   68% expected band : 0.304249 < r < 0.304249
   95% expected band : 0.304249 < r < 0.304249
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -314393449
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.436823 +/- 0.00238499 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.436823 @ 95%CL (1 toyMC)
median expected limit: r < 0.436823 @ 95%CL (1 toyMC)
   68% expected band : 0.436823 < r < 0.436823
   95% expected band : 0.436823 < r < 0.436823
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -54051271
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.238955 +/- 0.00278969 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.238955 @ 95%CL (1 toyMC)
median expected limit: r < 0.238955 @ 95%CL (1 toyMC)
   68% expected band : 0.238955 < r < 0.238955
   95% expected band : 0.238955 < r < 0.238955
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1192828088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.37954 +/- 0.00239322 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.37954 @ 95%CL (1 toyMC)
median expected limit: r < 0.37954 @ 95%CL (1 toyMC)
   68% expected band : 0.37954 < r < 0.37954
   95% expected band : 0.37954 < r < 0.37954
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 160458681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.23456 +/- 0.00271457 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.23456 @ 95%CL (1 toyMC)
median expected limit: r < 0.23456 @ 95%CL (1 toyMC)
   68% expected band : 0.23456 < r < 0.23456
   95% expected band : 0.23456 < r < 0.23456
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -752731182
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.26093 +/- 0.00254455 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.26093 @ 95%CL (1 toyMC)
median expected limit: r < 0.26093 @ 95%CL (1 toyMC)
   68% expected band : 0.26093 < r < 0.26093
   95% expected band : 0.26093 < r < 0.26093
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1952989998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.283417 +/- 0.00316132 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.283417 @ 95%CL (1 toyMC)
median expected limit: r < 0.283417 @ 95%CL (1 toyMC)
   68% expected band : 0.283417 < r < 0.283417
   95% expected band : 0.283417 < r < 0.283417
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1006672391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.380734 +/- 0.00264679 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.380734 @ 95%CL (1 toyMC)
median expected limit: r < 0.380734 @ 95%CL (1 toyMC)
   68% expected band : 0.380734 < r < 0.380734
   95% expected band : 0.380734 < r < 0.380734
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2073155068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.257354 +/- 0.00292416 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.257354 @ 95%CL (1 toyMC)
median expected limit: r < 0.257354 @ 95%CL (1 toyMC)
   68% expected band : 0.257354 < r < 0.257354
   95% expected band : 0.257354 < r < 0.257354
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 340354313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.212999 +/- 0.00302431 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.212999 @ 95%CL (1 toyMC)
median expected limit: r < 0.212999 @ 95%CL (1 toyMC)
   68% expected band : 0.212999 < r < 0.212999
   95% expected band : 0.212999 < r < 0.212999
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2123723902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.282644 +/- 0.00269542 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.282644 @ 95%CL (1 toyMC)
median expected limit: r < 0.282644 @ 95%CL (1 toyMC)
   68% expected band : 0.282644 < r < 0.282644
   95% expected band : 0.282644 < r < 0.282644
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 92613250
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.205852 +/- 0.00295154 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.205852 @ 95%CL (1 toyMC)
median expected limit: r < 0.205852 @ 95%CL (1 toyMC)
   68% expected band : 0.205852 < r < 0.205852
   95% expected band : 0.205852 < r < 0.205852
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -270241757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.382902 +/- 0.0019369 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.382902 @ 95%CL (1 toyMC)
median expected limit: r < 0.382902 @ 95%CL (1 toyMC)
   68% expected band : 0.382902 < r < 0.382902
   95% expected band : 0.382902 < r < 0.382902
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 672462928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.30721 +/- 0.00181907 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.30721 @ 95%CL (1 toyMC)
median expected limit: r < 0.30721 @ 95%CL (1 toyMC)
   68% expected band : 0.30721 < r < 0.30721
   95% expected band : 0.30721 < r < 0.30721
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1452026349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.20914 +/- 0.00330146 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.20914 @ 95%CL (1 toyMC)
median expected limit: r < 0.20914 @ 95%CL (1 toyMC)
   68% expected band : 0.20914 < r < 0.20914
   95% expected band : 0.20914 < r < 0.20914
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 801469500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.238339 +/- 0.0030584 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.238339 @ 95%CL (1 toyMC)
median expected limit: r < 0.238339 @ 95%CL (1 toyMC)
   68% expected band : 0.238339 < r < 0.238339
   95% expected band : 0.238339 < r < 0.238339
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2047675983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.237619 +/- 0.0028379 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.237619 @ 95%CL (1 toyMC)
median expected limit: r < 0.237619 @ 95%CL (1 toyMC)
   68% expected band : 0.237619 < r < 0.237619
   95% expected band : 0.237619 < r < 0.237619
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 119245339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.377738 +/- 0.00227278 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.377738 @ 95%CL (1 toyMC)
median expected limit: r < 0.377738 @ 95%CL (1 toyMC)
   68% expected band : 0.377738 < r < 0.377738
   95% expected band : 0.377738 < r < 0.377738
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -839399366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.261786 +/- 0.00324687 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.261786 @ 95%CL (1 toyMC)
median expected limit: r < 0.261786 @ 95%CL (1 toyMC)
   68% expected band : 0.261786 < r < 0.261786
   95% expected band : 0.261786 < r < 0.261786
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1375676869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.254114 +/- 0.00235147 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.254114 @ 95%CL (1 toyMC)
median expected limit: r < 0.254114 @ 95%CL (1 toyMC)
   68% expected band : 0.254114 < r < 0.254114
   95% expected band : 0.254114 < r < 0.254114
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -618510966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.356881 +/- 0.00230219 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.356881 @ 95%CL (1 toyMC)
median expected limit: r < 0.356881 @ 95%CL (1 toyMC)
   68% expected band : 0.356881 < r < 0.356881
   95% expected band : 0.356881 < r < 0.356881
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -709577730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.240266 +/- 0.00248815 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.240266 @ 95%CL (1 toyMC)
median expected limit: r < 0.240266 @ 95%CL (1 toyMC)
   68% expected band : 0.240266 < r < 0.240266
   95% expected band : 0.240266 < r < 0.240266
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1787098363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.234855 +/- 0.00295814 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.234855 @ 95%CL (1 toyMC)
median expected limit: r < 0.234855 @ 95%CL (1 toyMC)
   68% expected band : 0.234855 < r < 0.234855
   95% expected band : 0.234855 < r < 0.234855
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -951966503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.224481 +/- 0.00220535 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.224481 @ 95%CL (1 toyMC)
median expected limit: r < 0.224481 @ 95%CL (1 toyMC)
   68% expected band : 0.224481 < r < 0.224481
   95% expected band : 0.224481 < r < 0.224481
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1617752777
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.511828 +/- 0.00285082 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.511828 @ 95%CL (1 toyMC)
median expected limit: r < 0.511828 @ 95%CL (1 toyMC)
   68% expected band : 0.511828 < r < 0.511828
   95% expected band : 0.511828 < r < 0.511828
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1230469517
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.507344 +/- 0.00225496 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.507344 @ 95%CL (1 toyMC)
median expected limit: r < 0.507344 @ 95%CL (1 toyMC)
   68% expected band : 0.507344 < r < 0.507344
   95% expected band : 0.507344 < r < 0.507344
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 877682504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.240761 +/- 0.0028091 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.240761 @ 95%CL (1 toyMC)
median expected limit: r < 0.240761 @ 95%CL (1 toyMC)
   68% expected band : 0.240761 < r < 0.240761
   95% expected band : 0.240761 < r < 0.240761
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2047086275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.350954 +/- 0.00213624 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.350954 @ 95%CL (1 toyMC)
median expected limit: r < 0.350954 @ 95%CL (1 toyMC)
   68% expected band : 0.350954 < r < 0.350954
   95% expected band : 0.350954 < r < 0.350954
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1812936607
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.174991 +/- 0.00347147 @ 95% CL (98 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 0.174991 @ 95%CL (1 toyMC)
median expected limit: r < 0.174991 @ 95%CL (1 toyMC)
   68% expected band : 0.174991 < r < 0.174991
   95% expected band : 0.174991 < r < 0.174991
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1727095215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.484729 +/- 0.00190688 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.484729 @ 95%CL (1 toyMC)
median expected limit: r < 0.484729 @ 95%CL (1 toyMC)
   68% expected band : 0.484729 < r < 0.484729
   95% expected band : 0.484729 < r < 0.484729
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -81519002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.244825 +/- 0.00261121 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.244825 @ 95%CL (1 toyMC)
median expected limit: r < 0.244825 @ 95%CL (1 toyMC)
   68% expected band : 0.244825 < r < 0.244825
   95% expected band : 0.244825 < r < 0.244825
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 869743767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.230751 +/- 0.00276739 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.230751 @ 95%CL (1 toyMC)
median expected limit: r < 0.230751 @ 95%CL (1 toyMC)
   68% expected band : 0.230751 < r < 0.230751
   95% expected band : 0.230751 < r < 0.230751
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1048446497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.284994 +/- 0.00202514 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.284994 @ 95%CL (1 toyMC)
median expected limit: r < 0.284994 @ 95%CL (1 toyMC)
   68% expected band : 0.284994 < r < 0.284994
   95% expected band : 0.284994 < r < 0.284994
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1529005856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.262618 +/- 0.00281627 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.262618 @ 95%CL (1 toyMC)
median expected limit: r < 0.262618 @ 95%CL (1 toyMC)
   68% expected band : 0.262618 < r < 0.262618
   95% expected band : 0.262618 < r < 0.262618
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1750120226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.326211 +/- 0.00267511 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.326211 @ 95%CL (1 toyMC)
median expected limit: r < 0.326211 @ 95%CL (1 toyMC)
   68% expected band : 0.326211 < r < 0.326211
   95% expected band : 0.326211 < r < 0.326211
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 424993585
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.231551 +/- 0.00289487 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.231551 @ 95%CL (1 toyMC)
median expected limit: r < 0.231551 @ 95%CL (1 toyMC)
   68% expected band : 0.231551 < r < 0.231551
   95% expected band : 0.231551 < r < 0.231551
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1559902328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.268059 +/- 0.00335064 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.268059 @ 95%CL (1 toyMC)
median expected limit: r < 0.268059 @ 95%CL (1 toyMC)
   68% expected band : 0.268059 < r < 0.268059
   95% expected band : 0.268059 < r < 0.268059
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2066415506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.332733 +/- 0.00217524 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.332733 @ 95%CL (1 toyMC)
median expected limit: r < 0.332733 @ 95%CL (1 toyMC)
   68% expected band : 0.332733 < r < 0.332733
   95% expected band : 0.332733 < r < 0.332733
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2015998834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.267484 +/- 0.00212875 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.267484 @ 95%CL (1 toyMC)
median expected limit: r < 0.267484 @ 95%CL (1 toyMC)
   68% expected band : 0.267484 < r < 0.267484
   95% expected band : 0.267484 < r < 0.267484
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1613733306
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.597607 +/- 0.00253915 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.597607 @ 95%CL (1 toyMC)
median expected limit: r < 0.597607 @ 95%CL (1 toyMC)
   68% expected band : 0.597607 < r < 0.597607
   95% expected band : 0.597607 < r < 0.597607
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 457119183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.349932 +/- 0.00233946 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.349932 @ 95%CL (1 toyMC)
median expected limit: r < 0.349932 @ 95%CL (1 toyMC)
   68% expected band : 0.349932 < r < 0.349932
   95% expected band : 0.349932 < r < 0.349932
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1863094482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.205386 +/- 0.00287987 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.205386 @ 95%CL (1 toyMC)
median expected limit: r < 0.205386 @ 95%CL (1 toyMC)
   68% expected band : 0.205386 < r < 0.205386
   95% expected band : 0.205386 < r < 0.205386
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2144127265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.222376 +/- 0.0035714 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.222376 @ 95%CL (1 toyMC)
median expected limit: r < 0.222376 @ 95%CL (1 toyMC)
   68% expected band : 0.222376 < r < 0.222376
   95% expected band : 0.222376 < r < 0.222376
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -566575156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.187694 +/- 0.0026611 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.187694 @ 95%CL (1 toyMC)
median expected limit: r < 0.187694 @ 95%CL (1 toyMC)
   68% expected band : 0.187694 < r < 0.187694
   95% expected band : 0.187694 < r < 0.187694
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1187107461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.237933 +/- 0.00237401 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.237933 @ 95%CL (1 toyMC)
median expected limit: r < 0.237933 @ 95%CL (1 toyMC)
   68% expected band : 0.237933 < r < 0.237933
   95% expected band : 0.237933 < r < 0.237933
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1387307989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.264349 +/- 0.00220975 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.264349 @ 95%CL (1 toyMC)
median expected limit: r < 0.264349 @ 95%CL (1 toyMC)
   68% expected band : 0.264349 < r < 0.264349
   95% expected band : 0.264349 < r < 0.264349
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1383805871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.288587 +/- 0.00179554 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.288587 @ 95%CL (1 toyMC)
median expected limit: r < 0.288587 @ 95%CL (1 toyMC)
   68% expected band : 0.288587 < r < 0.288587
   95% expected band : 0.288587 < r < 0.288587
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1176386334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.257854 +/- 0.00261251 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.257854 @ 95%CL (1 toyMC)
median expected limit: r < 0.257854 @ 95%CL (1 toyMC)
   68% expected band : 0.257854 < r < 0.257854
   95% expected band : 0.257854 < r < 0.257854
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1335308518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.290929 +/- 0.00272478 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.290929 @ 95%CL (1 toyMC)
median expected limit: r < 0.290929 @ 95%CL (1 toyMC)
   68% expected band : 0.290929 < r < 0.290929
   95% expected band : 0.290929 < r < 0.290929
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -89343622
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.329099 +/- 0.00200245 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.329099 @ 95%CL (1 toyMC)
median expected limit: r < 0.329099 @ 95%CL (1 toyMC)
   68% expected band : 0.329099 < r < 0.329099
   95% expected band : 0.329099 < r < 0.329099
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -903754197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.237427 +/- 0.00202092 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.237427 @ 95%CL (1 toyMC)
median expected limit: r < 0.237427 @ 95%CL (1 toyMC)
   68% expected band : 0.237427 < r < 0.237427
   95% expected band : 0.237427 < r < 0.237427
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1179744941
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.246552 +/- 0.0026651 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.246552 @ 95%CL (1 toyMC)
median expected limit: r < 0.246552 @ 95%CL (1 toyMC)
   68% expected band : 0.246552 < r < 0.246552
   95% expected band : 0.246552 < r < 0.246552
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -281169895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.281332 +/- 0.00257034 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.281332 @ 95%CL (1 toyMC)
median expected limit: r < 0.281332 @ 95%CL (1 toyMC)
   68% expected band : 0.281332 < r < 0.281332
   95% expected band : 0.281332 < r < 0.281332
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1277152758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.294777 +/- 0.00263672 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.294777 @ 95%CL (1 toyMC)
median expected limit: r < 0.294777 @ 95%CL (1 toyMC)
   68% expected band : 0.294777 < r < 0.294777
   95% expected band : 0.294777 < r < 0.294777
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 585867119
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.296146 +/- 0.00251572 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.296146 @ 95%CL (1 toyMC)
median expected limit: r < 0.296146 @ 95%CL (1 toyMC)
   68% expected band : 0.296146 < r < 0.296146
   95% expected band : 0.296146 < r < 0.296146
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 524932666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.420946 +/- 0.00196082 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.420946 @ 95%CL (1 toyMC)
median expected limit: r < 0.420946 @ 95%CL (1 toyMC)
   68% expected band : 0.420946 < r < 0.420946
   95% expected band : 0.420946 < r < 0.420946
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -257546184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.357056 +/- 0.00268527 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.357056 @ 95%CL (1 toyMC)
median expected limit: r < 0.357056 @ 95%CL (1 toyMC)
   68% expected band : 0.357056 < r < 0.357056
   95% expected band : 0.357056 < r < 0.357056
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1525053665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.331776 +/- 0.00251745 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.331776 @ 95%CL (1 toyMC)
median expected limit: r < 0.331776 @ 95%CL (1 toyMC)
   68% expected band : 0.331776 < r < 0.331776
   95% expected band : 0.331776 < r < 0.331776
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2060983902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.461334 +/- 0.00264305 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.461334 @ 95%CL (1 toyMC)
median expected limit: r < 0.461334 @ 95%CL (1 toyMC)
   68% expected band : 0.461334 < r < 0.461334
   95% expected band : 0.461334 < r < 0.461334
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1333656930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.283511 +/- 0.00266836 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.283511 @ 95%CL (1 toyMC)
median expected limit: r < 0.283511 @ 95%CL (1 toyMC)
   68% expected band : 0.283511 < r < 0.283511
   95% expected band : 0.283511 < r < 0.283511
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1274591214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.233139 +/- 0.00288234 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.233139 @ 95%CL (1 toyMC)
median expected limit: r < 0.233139 @ 95%CL (1 toyMC)
   68% expected band : 0.233139 < r < 0.233139
   95% expected band : 0.233139 < r < 0.233139
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 752641568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.407759 +/- 0.0023346 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.407759 @ 95%CL (1 toyMC)
median expected limit: r < 0.407759 @ 95%CL (1 toyMC)
   68% expected band : 0.407759 < r < 0.407759
   95% expected band : 0.407759 < r < 0.407759
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 226034330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.29724 +/- 0.00215182 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.29724 @ 95%CL (1 toyMC)
median expected limit: r < 0.29724 @ 95%CL (1 toyMC)
   68% expected band : 0.29724 < r < 0.29724
   95% expected band : 0.29724 < r < 0.29724
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1581491299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.205017 +/- 0.00261692 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.205017 @ 95%CL (1 toyMC)
median expected limit: r < 0.205017 @ 95%CL (1 toyMC)
   68% expected band : 0.205017 < r < 0.205017
   95% expected band : 0.205017 < r < 0.205017
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 180471910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.32683 +/- 0.00310504 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.32683 @ 95%CL (1 toyMC)
median expected limit: r < 0.32683 @ 95%CL (1 toyMC)
   68% expected band : 0.32683 < r < 0.32683
   95% expected band : 0.32683 < r < 0.32683
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1023680430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.692459 +/- 0.00185106 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.692459 @ 95%CL (1 toyMC)
median expected limit: r < 0.692459 @ 95%CL (1 toyMC)
   68% expected band : 0.692459 < r < 0.692459
   95% expected band : 0.692459 < r < 0.692459
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 730321819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.274563 +/- 0.00254917 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.274563 @ 95%CL (1 toyMC)
median expected limit: r < 0.274563 @ 95%CL (1 toyMC)
   68% expected band : 0.274563 < r < 0.274563
   95% expected band : 0.274563 < r < 0.274563
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1602746088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.234619 +/- 0.00248352 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.234619 @ 95%CL (1 toyMC)
median expected limit: r < 0.234619 @ 95%CL (1 toyMC)
   68% expected band : 0.234619 < r < 0.234619
   95% expected band : 0.234619 < r < 0.234619
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 244788795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.280406 +/- 0.002344 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.280406 @ 95%CL (1 toyMC)
median expected limit: r < 0.280406 @ 95%CL (1 toyMC)
   68% expected band : 0.280406 < r < 0.280406
   95% expected band : 0.280406 < r < 0.280406
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -286100713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.214199 +/- 0.00338662 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.214199 @ 95%CL (1 toyMC)
median expected limit: r < 0.214199 @ 95%CL (1 toyMC)
   68% expected band : 0.214199 < r < 0.214199
   95% expected band : 0.214199 < r < 0.214199
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1151053393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.390082 +/- 0.00218502 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.390082 @ 95%CL (1 toyMC)
median expected limit: r < 0.390082 @ 95%CL (1 toyMC)
   68% expected band : 0.390082 < r < 0.390082
   95% expected band : 0.390082 < r < 0.390082
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1211743280
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.292322 +/- 0.00276749 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.292322 @ 95%CL (1 toyMC)
median expected limit: r < 0.292322 @ 95%CL (1 toyMC)
   68% expected band : 0.292322 < r < 0.292322
   95% expected band : 0.292322 < r < 0.292322
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 19258164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.247151 +/- 0.00240195 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.247151 @ 95%CL (1 toyMC)
median expected limit: r < 0.247151 @ 95%CL (1 toyMC)
   68% expected band : 0.247151 < r < 0.247151
   95% expected band : 0.247151 < r < 0.247151
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1296932261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.349705 +/- 0.00201923 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.349705 @ 95%CL (1 toyMC)
median expected limit: r < 0.349705 @ 95%CL (1 toyMC)
   68% expected band : 0.349705 < r < 0.349705
   95% expected band : 0.349705 < r < 0.349705
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -153431074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.250306 +/- 0.00258587 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.250306 @ 95%CL (1 toyMC)
median expected limit: r < 0.250306 @ 95%CL (1 toyMC)
   68% expected band : 0.250306 < r < 0.250306
   95% expected band : 0.250306 < r < 0.250306
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -61421945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.38182 +/- 0.00233088 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.38182 @ 95%CL (1 toyMC)
median expected limit: r < 0.38182 @ 95%CL (1 toyMC)
   68% expected band : 0.38182 < r < 0.38182
   95% expected band : 0.38182 < r < 0.38182
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1803728548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.278508 +/- 0.00232124 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.278508 @ 95%CL (1 toyMC)
median expected limit: r < 0.278508 @ 95%CL (1 toyMC)
   68% expected band : 0.278508 < r < 0.278508
   95% expected band : 0.278508 < r < 0.278508
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1818449685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84344 +/- 0.00368674 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.84344 @ 95%CL (1 toyMC)
median expected limit: r < 1.84344 @ 95%CL (1 toyMC)
   68% expected band : 1.84344 < r < 1.84344
   95% expected band : 1.84344 < r < 1.84344
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 687062851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14815 +/- 0.00432229 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.14815 @ 95%CL (1 toyMC)
median expected limit: r < 1.14815 @ 95%CL (1 toyMC)
   68% expected band : 1.14815 < r < 1.14815
   95% expected band : 1.14815 < r < 1.14815
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1045455215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.854745 +/- 0.0033634 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.854745 @ 95%CL (1 toyMC)
median expected limit: r < 0.854745 @ 95%CL (1 toyMC)
   68% expected band : 0.854745 < r < 0.854745
   95% expected band : 0.854745 < r < 0.854745
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -761044009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9922 +/- 0.00466295 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.9922 @ 95%CL (1 toyMC)
median expected limit: r < 1.9922 @ 95%CL (1 toyMC)
   68% expected band : 1.9922 < r < 1.9922
   95% expected band : 1.9922 < r < 1.9922
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1791407819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.81093 +/- 0.0039394 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.81093 @ 95%CL (1 toyMC)
median expected limit: r < 0.81093 @ 95%CL (1 toyMC)
   68% expected band : 0.81093 < r < 0.81093
   95% expected band : 0.81093 < r < 0.81093
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -841395548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00586 +/- 0.00399467 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.00586 @ 95%CL (1 toyMC)
median expected limit: r < 1.00586 @ 95%CL (1 toyMC)
   68% expected band : 1.00586 < r < 1.00586
   95% expected band : 1.00586 < r < 1.00586
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -940927073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.823139 +/- 0.00408096 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.823139 @ 95%CL (1 toyMC)
median expected limit: r < 0.823139 @ 95%CL (1 toyMC)
   68% expected band : 0.823139 < r < 0.823139
   95% expected band : 0.823139 < r < 0.823139
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1524270293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.683994 +/- 0.00331268 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.683994 @ 95%CL (1 toyMC)
median expected limit: r < 0.683994 @ 95%CL (1 toyMC)
   68% expected band : 0.683994 < r < 0.683994
   95% expected band : 0.683994 < r < 0.683994
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2091088947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86703 +/- 0.00370432 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.86703 @ 95%CL (1 toyMC)
median expected limit: r < 1.86703 @ 95%CL (1 toyMC)
   68% expected band : 1.86703 < r < 1.86703
   95% expected band : 1.86703 < r < 1.86703
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -545412774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.917706 +/- 0.0035682 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.917706 @ 95%CL (1 toyMC)
median expected limit: r < 0.917706 @ 95%CL (1 toyMC)
   68% expected band : 0.917706 < r < 0.917706
   95% expected band : 0.917706 < r < 0.917706
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2144609762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0464 +/- 0.00564352 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.0464 @ 95%CL (1 toyMC)
median expected limit: r < 2.0464 @ 95%CL (1 toyMC)
   68% expected band : 2.0464 < r < 2.0464
   95% expected band : 2.0464 < r < 2.0464
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1213221145
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.867368 +/- 0.00424245 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.867368 @ 95%CL (1 toyMC)
median expected limit: r < 0.867368 @ 95%CL (1 toyMC)
   68% expected band : 0.867368 < r < 0.867368
   95% expected band : 0.867368 < r < 0.867368
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -871930951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.986209 +/- 0.00423989 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.986209 @ 95%CL (1 toyMC)
median expected limit: r < 0.986209 @ 95%CL (1 toyMC)
   68% expected band : 0.986209 < r < 0.986209
   95% expected band : 0.986209 < r < 0.986209
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -733284411
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58165 +/- 0.00465463 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.58165 @ 95%CL (1 toyMC)
median expected limit: r < 1.58165 @ 95%CL (1 toyMC)
   68% expected band : 1.58165 < r < 1.58165
   95% expected band : 1.58165 < r < 1.58165
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -600041676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47037 +/- 0.00338547 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.47037 @ 95%CL (1 toyMC)
median expected limit: r < 1.47037 @ 95%CL (1 toyMC)
   68% expected band : 1.47037 < r < 1.47037
   95% expected band : 1.47037 < r < 1.47037
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1019945984
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.937562 +/- 0.00348092 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.937562 @ 95%CL (1 toyMC)
median expected limit: r < 0.937562 @ 95%CL (1 toyMC)
   68% expected band : 0.937562 < r < 0.937562
   95% expected band : 0.937562 < r < 0.937562
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -614406073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1316 +/- 0.00233829 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.1316 @ 95%CL (1 toyMC)
median expected limit: r < 1.1316 @ 95%CL (1 toyMC)
   68% expected band : 1.1316 < r < 1.1316
   95% expected band : 1.1316 < r < 1.1316
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2126855739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.71752 +/- 0.00375101 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.71752 @ 95%CL (1 toyMC)
median expected limit: r < 0.71752 @ 95%CL (1 toyMC)
   68% expected band : 0.71752 < r < 0.71752
   95% expected band : 0.71752 < r < 0.71752
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 412353970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24239 +/- 0.00453473 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.24239 @ 95%CL (1 toyMC)
median expected limit: r < 1.24239 @ 95%CL (1 toyMC)
   68% expected band : 1.24239 < r < 1.24239
   95% expected band : 1.24239 < r < 1.24239
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -365995794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28982 +/- 0.0035293 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.28982 @ 95%CL (1 toyMC)
median expected limit: r < 1.28982 @ 95%CL (1 toyMC)
   68% expected band : 1.28982 < r < 1.28982
   95% expected band : 1.28982 < r < 1.28982
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367982135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07113 +/- 0.00508845 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.07113 @ 95%CL (1 toyMC)
median expected limit: r < 1.07113 @ 95%CL (1 toyMC)
   68% expected band : 1.07113 < r < 1.07113
   95% expected band : 1.07113 < r < 1.07113
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -93834730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.93335 +/- 0.0042055 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.93335 @ 95%CL (1 toyMC)
median expected limit: r < 0.93335 @ 95%CL (1 toyMC)
   68% expected band : 0.93335 < r < 0.93335
   95% expected band : 0.93335 < r < 0.93335
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -599858111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90241 +/- 0.00352144 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.90241 @ 95%CL (1 toyMC)
median expected limit: r < 1.90241 @ 95%CL (1 toyMC)
   68% expected band : 1.90241 < r < 1.90241
   95% expected band : 1.90241 < r < 1.90241
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1420478754
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.777564 +/- 0.00385462 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.777564 @ 95%CL (1 toyMC)
median expected limit: r < 0.777564 @ 95%CL (1 toyMC)
   68% expected band : 0.777564 < r < 0.777564
   95% expected band : 0.777564 < r < 0.777564
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2107120120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48469 +/- 0.00479942 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.48469 @ 95%CL (1 toyMC)
median expected limit: r < 1.48469 @ 95%CL (1 toyMC)
   68% expected band : 1.48469 < r < 1.48469
   95% expected band : 1.48469 < r < 1.48469
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1494509530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.68014 +/- 0.00311484 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.68014 @ 95%CL (1 toyMC)
median expected limit: r < 0.68014 @ 95%CL (1 toyMC)
   68% expected band : 0.68014 < r < 0.68014
   95% expected band : 0.68014 < r < 0.68014
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -824688416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06392 +/- 0.00339197 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.06392 @ 95%CL (1 toyMC)
median expected limit: r < 1.06392 @ 95%CL (1 toyMC)
   68% expected band : 1.06392 < r < 1.06392
   95% expected band : 1.06392 < r < 1.06392
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1546920865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.93831 +/- 0.00419514 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.93831 @ 95%CL (1 toyMC)
median expected limit: r < 0.93831 @ 95%CL (1 toyMC)
   68% expected band : 0.93831 < r < 0.93831
   95% expected band : 0.93831 < r < 0.93831
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1159654037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0652 +/- 0.00390178 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.0652 @ 95%CL (1 toyMC)
median expected limit: r < 1.0652 @ 95%CL (1 toyMC)
   68% expected band : 1.0652 < r < 1.0652
   95% expected band : 1.0652 < r < 1.0652
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1459848768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.994973 +/- 0.00408797 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.994973 @ 95%CL (1 toyMC)
median expected limit: r < 0.994973 @ 95%CL (1 toyMC)
   68% expected band : 0.994973 < r < 0.994973
   95% expected band : 0.994973 < r < 0.994973
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1653199802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47638 +/- 0.00364276 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.47638 @ 95%CL (1 toyMC)
median expected limit: r < 1.47638 @ 95%CL (1 toyMC)
   68% expected band : 1.47638 < r < 1.47638
   95% expected band : 1.47638 < r < 1.47638
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -468599026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.773949 +/- 0.00327722 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.773949 @ 95%CL (1 toyMC)
median expected limit: r < 0.773949 @ 95%CL (1 toyMC)
   68% expected band : 0.773949 < r < 0.773949
   95% expected band : 0.773949 < r < 0.773949
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1311026159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.938532 +/- 0.00328173 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.938532 @ 95%CL (1 toyMC)
median expected limit: r < 0.938532 @ 95%CL (1 toyMC)
   68% expected band : 0.938532 < r < 0.938532
   95% expected band : 0.938532 < r < 0.938532
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 24906407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.806722 +/- 0.0034396 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.806722 @ 95%CL (1 toyMC)
median expected limit: r < 0.806722 @ 95%CL (1 toyMC)
   68% expected band : 0.806722 < r < 0.806722
   95% expected band : 0.806722 < r < 0.806722
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1655575940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07923 +/- 0.00420843 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.07923 @ 95%CL (1 toyMC)
median expected limit: r < 1.07923 @ 95%CL (1 toyMC)
   68% expected band : 1.07923 < r < 1.07923
   95% expected band : 1.07923 < r < 1.07923
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1631677864
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11991 +/- 0.00431053 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.11991 @ 95%CL (1 toyMC)
median expected limit: r < 1.11991 @ 95%CL (1 toyMC)
   68% expected band : 1.11991 < r < 1.11991
   95% expected band : 1.11991 < r < 1.11991
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1252807591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19606 +/- 0.00443525 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.19606 @ 95%CL (1 toyMC)
median expected limit: r < 1.19606 @ 95%CL (1 toyMC)
   68% expected band : 1.19606 < r < 1.19606
   95% expected band : 1.19606 < r < 1.19606
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1690794343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.996184 +/- 0.00410893 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.996184 @ 95%CL (1 toyMC)
median expected limit: r < 0.996184 @ 95%CL (1 toyMC)
   68% expected band : 0.996184 < r < 0.996184
   95% expected band : 0.996184 < r < 0.996184
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1787126940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34195 +/- 0.00443507 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.34195 @ 95%CL (1 toyMC)
median expected limit: r < 1.34195 @ 95%CL (1 toyMC)
   68% expected band : 1.34195 < r < 1.34195
   95% expected band : 1.34195 < r < 1.34195
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 245619410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24828 +/- 0.00486906 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.24828 @ 95%CL (1 toyMC)
median expected limit: r < 1.24828 @ 95%CL (1 toyMC)
   68% expected band : 1.24828 < r < 1.24828
   95% expected band : 1.24828 < r < 1.24828
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2127756774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.938342 +/- 0.00368081 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.938342 @ 95%CL (1 toyMC)
median expected limit: r < 0.938342 @ 95%CL (1 toyMC)
   68% expected band : 0.938342 < r < 0.938342
   95% expected band : 0.938342 < r < 0.938342
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 25391012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23792 +/- 0.00398768 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.23792 @ 95%CL (1 toyMC)
median expected limit: r < 1.23792 @ 95%CL (1 toyMC)
   68% expected band : 1.23792 < r < 1.23792
   95% expected band : 1.23792 < r < 1.23792
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -871258752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.819043 +/- 0.00353666 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.819043 @ 95%CL (1 toyMC)
median expected limit: r < 0.819043 @ 95%CL (1 toyMC)
   68% expected band : 0.819043 < r < 0.819043
   95% expected band : 0.819043 < r < 0.819043
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1469175370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.718589 +/- 0.00327668 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.718589 @ 95%CL (1 toyMC)
median expected limit: r < 0.718589 @ 95%CL (1 toyMC)
   68% expected band : 0.718589 < r < 0.718589
   95% expected band : 0.718589 < r < 0.718589
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1536643002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06678 +/- 0.00411488 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.06678 @ 95%CL (1 toyMC)
median expected limit: r < 1.06678 @ 95%CL (1 toyMC)
   68% expected band : 1.06678 < r < 1.06678
   95% expected band : 1.06678 < r < 1.06678
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1883113741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20252 +/- 0.00466949 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.20252 @ 95%CL (1 toyMC)
median expected limit: r < 1.20252 @ 95%CL (1 toyMC)
   68% expected band : 1.20252 < r < 1.20252
   95% expected band : 1.20252 < r < 1.20252
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -307857949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.808942 +/- 0.00381443 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.808942 @ 95%CL (1 toyMC)
median expected limit: r < 0.808942 @ 95%CL (1 toyMC)
   68% expected band : 0.808942 < r < 0.808942
   95% expected band : 0.808942 < r < 0.808942
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 924842672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48628 +/- 0.0038945 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.48628 @ 95%CL (1 toyMC)
median expected limit: r < 1.48628 @ 95%CL (1 toyMC)
   68% expected band : 1.48628 < r < 1.48628
   95% expected band : 1.48628 < r < 1.48628
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1347725787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31178 +/- 0.00323551 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.31178 @ 95%CL (1 toyMC)
median expected limit: r < 1.31178 @ 95%CL (1 toyMC)
   68% expected band : 1.31178 < r < 1.31178
   95% expected band : 1.31178 < r < 1.31178
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1355433025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.774418 +/- 0.00396072 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.774418 @ 95%CL (1 toyMC)
median expected limit: r < 0.774418 @ 95%CL (1 toyMC)
   68% expected band : 0.774418 < r < 0.774418
   95% expected band : 0.774418 < r < 0.774418
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -37114033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37656 +/- 0.00345752 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.37656 @ 95%CL (1 toyMC)
median expected limit: r < 1.37656 @ 95%CL (1 toyMC)
   68% expected band : 1.37656 < r < 1.37656
   95% expected band : 1.37656 < r < 1.37656
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1225740110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.812856 +/- 0.00342302 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.812856 @ 95%CL (1 toyMC)
median expected limit: r < 0.812856 @ 95%CL (1 toyMC)
   68% expected band : 0.812856 < r < 0.812856
   95% expected band : 0.812856 < r < 0.812856
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1552251059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76 +/- 0.00281648 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.76 @ 95%CL (1 toyMC)
median expected limit: r < 1.76 @ 95%CL (1 toyMC)
   68% expected band : 1.76 < r < 1.76
   95% expected band : 1.76 < r < 1.76
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -490721829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.821376 +/- 0.00351188 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.821376 @ 95%CL (1 toyMC)
median expected limit: r < 0.821376 @ 95%CL (1 toyMC)
   68% expected band : 0.821376 < r < 0.821376
   95% expected band : 0.821376 < r < 0.821376
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -351752703
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.53095 +/- 0.00344463 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.53095 @ 95%CL (1 toyMC)
median expected limit: r < 1.53095 @ 95%CL (1 toyMC)
   68% expected band : 1.53095 < r < 1.53095
   95% expected band : 1.53095 < r < 1.53095
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 991684369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.5887 +/- 0.00478096 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.5887 @ 95%CL (1 toyMC)
median expected limit: r < 1.5887 @ 95%CL (1 toyMC)
   68% expected band : 1.5887 < r < 1.5887
   95% expected band : 1.5887 < r < 1.5887
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 390707051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.942737 +/- 0.00361846 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.942737 @ 95%CL (1 toyMC)
median expected limit: r < 0.942737 @ 95%CL (1 toyMC)
   68% expected band : 0.942737 < r < 0.942737
   95% expected band : 0.942737 < r < 0.942737
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2103252723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00198 +/- 0.00398271 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.00198 @ 95%CL (1 toyMC)
median expected limit: r < 1.00198 @ 95%CL (1 toyMC)
   68% expected band : 1.00198 < r < 1.00198
   95% expected band : 1.00198 < r < 1.00198
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1100085525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21231 +/- 0.00445773 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.21231 @ 95%CL (1 toyMC)
median expected limit: r < 1.21231 @ 95%CL (1 toyMC)
   68% expected band : 1.21231 < r < 1.21231
   95% expected band : 1.21231 < r < 1.21231
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682032929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.924796 +/- 0.00369791 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.924796 @ 95%CL (1 toyMC)
median expected limit: r < 0.924796 @ 95%CL (1 toyMC)
   68% expected band : 0.924796 < r < 0.924796
   95% expected band : 0.924796 < r < 0.924796
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -967041260
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.868732 +/- 0.0031545 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.868732 @ 95%CL (1 toyMC)
median expected limit: r < 0.868732 @ 95%CL (1 toyMC)
   68% expected band : 0.868732 < r < 0.868732
   95% expected band : 0.868732 < r < 0.868732
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -928401389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86847 +/- 0.00576166 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.86847 @ 95%CL (1 toyMC)
median expected limit: r < 1.86847 @ 95%CL (1 toyMC)
   68% expected band : 1.86847 < r < 1.86847
   95% expected band : 1.86847 < r < 1.86847
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -138096616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84911 +/- 0.0050826 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.84911 @ 95%CL (1 toyMC)
median expected limit: r < 1.84911 @ 95%CL (1 toyMC)
   68% expected band : 1.84911 < r < 1.84911
   95% expected band : 1.84911 < r < 1.84911
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1294456932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1709 +/- 0.00338726 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.1709 @ 95%CL (1 toyMC)
median expected limit: r < 1.1709 @ 95%CL (1 toyMC)
   68% expected band : 1.1709 < r < 1.1709
   95% expected band : 1.1709 < r < 1.1709
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1127274439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12901 +/- 0.00394505 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.12901 @ 95%CL (1 toyMC)
median expected limit: r < 2.12901 @ 95%CL (1 toyMC)
   68% expected band : 2.12901 < r < 2.12901
   95% expected band : 2.12901 < r < 2.12901
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1376685217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.722816 +/- 0.00399468 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.722816 @ 95%CL (1 toyMC)
median expected limit: r < 0.722816 @ 95%CL (1 toyMC)
   68% expected band : 0.722816 < r < 0.722816
   95% expected band : 0.722816 < r < 0.722816
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1222280323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45447 +/- 0.0049229 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.45447 @ 95%CL (1 toyMC)
median expected limit: r < 1.45447 @ 95%CL (1 toyMC)
   68% expected band : 1.45447 < r < 1.45447
   95% expected band : 1.45447 < r < 1.45447
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1372220547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15393 +/- 0.00364686 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.15393 @ 95%CL (1 toyMC)
median expected limit: r < 1.15393 @ 95%CL (1 toyMC)
   68% expected band : 1.15393 < r < 1.15393
   95% expected band : 1.15393 < r < 1.15393
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -445992161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22822 +/- 0.00411871 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.22822 @ 95%CL (1 toyMC)
median expected limit: r < 1.22822 @ 95%CL (1 toyMC)
   68% expected band : 1.22822 < r < 1.22822
   95% expected band : 1.22822 < r < 1.22822
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -855734387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.810699 +/- 0.00436481 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.810699 @ 95%CL (1 toyMC)
median expected limit: r < 0.810699 @ 95%CL (1 toyMC)
   68% expected band : 0.810699 < r < 0.810699
   95% expected band : 0.810699 < r < 0.810699
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1749445255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.987753 +/- 0.00374545 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.987753 @ 95%CL (1 toyMC)
median expected limit: r < 0.987753 @ 95%CL (1 toyMC)
   68% expected band : 0.987753 < r < 0.987753
   95% expected band : 0.987753 < r < 0.987753
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -921691589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12076 +/- 0.00375702 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.12076 @ 95%CL (1 toyMC)
median expected limit: r < 1.12076 @ 95%CL (1 toyMC)
   68% expected band : 1.12076 < r < 1.12076
   95% expected band : 1.12076 < r < 1.12076
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -676291876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84933 +/- 0.00525714 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.84933 @ 95%CL (1 toyMC)
median expected limit: r < 1.84933 @ 95%CL (1 toyMC)
   68% expected band : 1.84933 < r < 1.84933
   95% expected band : 1.84933 < r < 1.84933
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1190732714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.814595 +/- 0.00324815 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.814595 @ 95%CL (1 toyMC)
median expected limit: r < 0.814595 @ 95%CL (1 toyMC)
   68% expected band : 0.814595 < r < 0.814595
   95% expected band : 0.814595 < r < 0.814595
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1226801576
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21141 +/- 0.00345123 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.21141 @ 95%CL (1 toyMC)
median expected limit: r < 1.21141 @ 95%CL (1 toyMC)
   68% expected band : 1.21141 < r < 1.21141
   95% expected band : 1.21141 < r < 1.21141
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 239900708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29113 +/- 0.00383428 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.29113 @ 95%CL (1 toyMC)
median expected limit: r < 1.29113 @ 95%CL (1 toyMC)
   68% expected band : 1.29113 < r < 1.29113
   95% expected band : 1.29113 < r < 1.29113
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 385875984
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.764729 +/- 0.00412499 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.764729 @ 95%CL (1 toyMC)
median expected limit: r < 0.764729 @ 95%CL (1 toyMC)
   68% expected band : 0.764729 < r < 0.764729
   95% expected band : 0.764729 < r < 0.764729
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -571487404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.98166 +/- 0.00293662 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.98166 @ 95%CL (1 toyMC)
median expected limit: r < 0.98166 @ 95%CL (1 toyMC)
   68% expected band : 0.98166 < r < 0.98166
   95% expected band : 0.98166 < r < 0.98166
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2073454587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.874444 +/- 0.00357089 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.874444 @ 95%CL (1 toyMC)
median expected limit: r < 0.874444 @ 95%CL (1 toyMC)
   68% expected band : 0.874444 < r < 0.874444
   95% expected band : 0.874444 < r < 0.874444
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 163148441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15181 +/- 0.00477432 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.15181 @ 95%CL (1 toyMC)
median expected limit: r < 1.15181 @ 95%CL (1 toyMC)
   68% expected band : 1.15181 < r < 1.15181
   95% expected band : 1.15181 < r < 1.15181
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2080993476
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.81184 +/- 0.00405802 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.81184 @ 95%CL (1 toyMC)
median expected limit: r < 0.81184 @ 95%CL (1 toyMC)
   68% expected band : 0.81184 < r < 0.81184
   95% expected band : 0.81184 < r < 0.81184
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1303577327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.87074 +/- 0.00309387 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.87074 @ 95%CL (1 toyMC)
median expected limit: r < 0.87074 @ 95%CL (1 toyMC)
   68% expected band : 0.87074 < r < 0.87074
   95% expected band : 0.87074 < r < 0.87074
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 209542149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.722044 +/- 0.00363609 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.722044 @ 95%CL (1 toyMC)
median expected limit: r < 0.722044 @ 95%CL (1 toyMC)
   68% expected band : 0.722044 < r < 0.722044
   95% expected band : 0.722044 < r < 0.722044
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1573722019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.86304 +/- 0.00371916 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.86304 @ 95%CL (1 toyMC)
median expected limit: r < 0.86304 @ 95%CL (1 toyMC)
   68% expected band : 0.86304 < r < 0.86304
   95% expected band : 0.86304 < r < 0.86304
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 686745135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.688224 +/- 0.00284872 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.688224 @ 95%CL (1 toyMC)
median expected limit: r < 0.688224 @ 95%CL (1 toyMC)
   68% expected band : 0.688224 < r < 0.688224
   95% expected band : 0.688224 < r < 0.688224
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -645187943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.93025 +/- 0.00317828 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.93025 @ 95%CL (1 toyMC)
median expected limit: r < 0.93025 @ 95%CL (1 toyMC)
   68% expected band : 0.93025 < r < 0.93025
   95% expected band : 0.93025 < r < 0.93025
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -130798263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.764153 +/- 0.0046944 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.764153 @ 95%CL (1 toyMC)
median expected limit: r < 0.764153 @ 95%CL (1 toyMC)
   68% expected band : 0.764153 < r < 0.764153
   95% expected band : 0.764153 < r < 0.764153
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2027213642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.984924 +/- 0.00352419 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 0.984924 @ 95%CL (1 toyMC)
median expected limit: r < 0.984924 @ 95%CL (1 toyMC)
   68% expected band : 0.984924 < r < 0.984924
   95% expected band : 0.984924 < r < 0.984924
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 21165253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29069 +/- 0.00379169 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.29069 @ 95%CL (1 toyMC)
median expected limit: r < 1.29069 @ 95%CL (1 toyMC)
   68% expected band : 1.29069 < r < 1.29069
   95% expected band : 1.29069 < r < 1.29069
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1789162753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.760182 +/- 0.00362968 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.760182 @ 95%CL (1 toyMC)
median expected limit: r < 0.760182 @ 95%CL (1 toyMC)
   68% expected band : 0.760182 < r < 0.760182
   95% expected band : 0.760182 < r < 0.760182
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2048754830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.923324 +/- 0.00325391 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.923324 @ 95%CL (1 toyMC)
median expected limit: r < 0.923324 @ 95%CL (1 toyMC)
   68% expected band : 0.923324 < r < 0.923324
   95% expected band : 0.923324 < r < 0.923324
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 152053516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36785 +/- 0.0039816 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.36785 @ 95%CL (1 toyMC)
median expected limit: r < 1.36785 @ 95%CL (1 toyMC)
   68% expected band : 1.36785 < r < 1.36785
   95% expected band : 1.36785 < r < 1.36785
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1302279762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20263 +/- 0.00342657 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.20263 @ 95%CL (1 toyMC)
median expected limit: r < 1.20263 @ 95%CL (1 toyMC)
   68% expected band : 1.20263 < r < 1.20263
   95% expected band : 1.20263 < r < 1.20263
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -337094162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.867868 +/- 0.00388822 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.867868 @ 95%CL (1 toyMC)
median expected limit: r < 0.867868 @ 95%CL (1 toyMC)
   68% expected band : 0.867868 < r < 0.867868
   95% expected band : 0.867868 < r < 0.867868
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -390831616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.861684 +/- 0.00313001 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.861684 @ 95%CL (1 toyMC)
median expected limit: r < 0.861684 @ 95%CL (1 toyMC)
   68% expected band : 0.861684 < r < 0.861684
   95% expected band : 0.861684 < r < 0.861684
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 69268257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.680341 +/- 0.00242819 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.680341 @ 95%CL (1 toyMC)
median expected limit: r < 0.680341 @ 95%CL (1 toyMC)
   68% expected band : 0.680341 < r < 0.680341
   95% expected band : 0.680341 < r < 0.680341
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2137263582
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.719917 +/- 0.00325804 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.719917 @ 95%CL (1 toyMC)
median expected limit: r < 0.719917 @ 95%CL (1 toyMC)
   68% expected band : 0.719917 < r < 0.719917
   95% expected band : 0.719917 < r < 0.719917
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -704813520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.820859 +/- 0.00302854 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.820859 @ 95%CL (1 toyMC)
median expected limit: r < 0.820859 @ 95%CL (1 toyMC)
   68% expected band : 0.820859 < r < 0.820859
   95% expected band : 0.820859 < r < 0.820859
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 50752328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.786 +/- 0.00493842 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.786 @ 95%CL (1 toyMC)
median expected limit: r < 1.786 @ 95%CL (1 toyMC)
   68% expected band : 1.786 < r < 1.786
   95% expected band : 1.786 < r < 1.786
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 902466223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.932331 +/- 0.00409013 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.932331 @ 95%CL (1 toyMC)
median expected limit: r < 0.932331 @ 95%CL (1 toyMC)
   68% expected band : 0.932331 < r < 0.932331
   95% expected band : 0.932331 < r < 0.932331
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1339425359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51419 +/- 0.00652693 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.51419 @ 95%CL (1 toyMC)
median expected limit: r < 2.51419 @ 95%CL (1 toyMC)
   68% expected band : 2.51419 < r < 2.51419
   95% expected band : 2.51419 < r < 2.51419
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1968855672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.43853 +/- 0.00570656 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.43853 @ 95%CL (1 toyMC)
median expected limit: r < 3.43853 @ 95%CL (1 toyMC)
   68% expected band : 3.43853 < r < 3.43853
   95% expected band : 3.43853 < r < 3.43853
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1366991951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.04783 +/- 0.00671219 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.04783 @ 95%CL (1 toyMC)
median expected limit: r < 3.04783 @ 95%CL (1 toyMC)
   68% expected band : 3.04783 < r < 3.04783
   95% expected band : 3.04783 < r < 3.04783
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1901745577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.92384 +/- 0.0090604 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.92384 @ 95%CL (1 toyMC)
median expected limit: r < 4.92384 @ 95%CL (1 toyMC)
   68% expected band : 4.92384 < r < 4.92384
   95% expected band : 4.92384 < r < 4.92384
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1987903929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.66453 +/- 0.00732663 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.66453 @ 95%CL (1 toyMC)
median expected limit: r < 3.66453 @ 95%CL (1 toyMC)
   68% expected band : 3.66453 < r < 3.66453
   95% expected band : 3.66453 < r < 3.66453
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1448902825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.80652 +/- 0.00726857 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.80652 @ 95%CL (1 toyMC)
median expected limit: r < 3.80652 @ 95%CL (1 toyMC)
   68% expected band : 3.80652 < r < 3.80652
   95% expected band : 3.80652 < r < 3.80652
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -978714839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9076 +/- 0.00776261 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.9076 @ 95%CL (1 toyMC)
median expected limit: r < 3.9076 @ 95%CL (1 toyMC)
   68% expected band : 3.9076 < r < 3.9076
   95% expected band : 3.9076 < r < 3.9076
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1340696543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.44742 +/- 0.0078257 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.44742 @ 95%CL (1 toyMC)
median expected limit: r < 3.44742 @ 95%CL (1 toyMC)
   68% expected band : 3.44742 < r < 3.44742
   95% expected band : 3.44742 < r < 3.44742
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 988024283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.29997 +/- 0.00570346 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.29997 @ 95%CL (1 toyMC)
median expected limit: r < 3.29997 @ 95%CL (1 toyMC)
   68% expected band : 3.29997 < r < 3.29997
   95% expected band : 3.29997 < r < 3.29997
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -376662043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69355 +/- 0.00659559 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.69355 @ 95%CL (1 toyMC)
median expected limit: r < 2.69355 @ 95%CL (1 toyMC)
   68% expected band : 2.69355 < r < 2.69355
   95% expected band : 2.69355 < r < 2.69355
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 884643474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.84633 +/- 0.00888688 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.84633 @ 95%CL (1 toyMC)
median expected limit: r < 3.84633 @ 95%CL (1 toyMC)
   68% expected band : 3.84633 < r < 3.84633
   95% expected band : 3.84633 < r < 3.84633
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1313042579
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.24776 +/- 0.00861773 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.24776 @ 95%CL (1 toyMC)
median expected limit: r < 4.24776 @ 95%CL (1 toyMC)
   68% expected band : 4.24776 < r < 4.24776
   95% expected band : 4.24776 < r < 4.24776
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 452177981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.99318 +/- 0.0119936 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.99318 @ 95%CL (1 toyMC)
median expected limit: r < 4.99318 @ 95%CL (1 toyMC)
   68% expected band : 4.99318 < r < 4.99318
   95% expected band : 4.99318 < r < 4.99318
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 382015496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.24303 +/- 0.00746877 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.24303 @ 95%CL (1 toyMC)
median expected limit: r < 4.24303 @ 95%CL (1 toyMC)
   68% expected band : 4.24303 < r < 4.24303
   95% expected band : 4.24303 < r < 4.24303
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 243946699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.19138 +/- 0.00867243 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 4.19138 @ 95%CL (1 toyMC)
median expected limit: r < 4.19138 @ 95%CL (1 toyMC)
   68% expected band : 4.19138 < r < 4.19138
   95% expected band : 4.19138 < r < 4.19138
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1113483378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.31556 +/- 0.00517517 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.31556 @ 95%CL (1 toyMC)
median expected limit: r < 3.31556 @ 95%CL (1 toyMC)
   68% expected band : 3.31556 < r < 3.31556
   95% expected band : 3.31556 < r < 3.31556
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2086528546
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.33322 +/- 0.00529975 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.33322 @ 95%CL (1 toyMC)
median expected limit: r < 2.33322 @ 95%CL (1 toyMC)
   68% expected band : 2.33322 < r < 2.33322
   95% expected band : 2.33322 < r < 2.33322
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1415792904
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50233 +/- 0.00848443 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.50233 @ 95%CL (1 toyMC)
median expected limit: r < 5.50233 @ 95%CL (1 toyMC)
   68% expected band : 5.50233 < r < 5.50233
   95% expected band : 5.50233 < r < 5.50233
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1522860161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.50615 +/- 0.00655833 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.50615 @ 95%CL (1 toyMC)
median expected limit: r < 2.50615 @ 95%CL (1 toyMC)
   68% expected band : 2.50615 < r < 2.50615
   95% expected band : 2.50615 < r < 2.50615
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 611604489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.96225 +/- 0.00574608 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 3.96225 @ 95%CL (1 toyMC)
median expected limit: r < 3.96225 @ 95%CL (1 toyMC)
   68% expected band : 3.96225 < r < 3.96225
   95% expected band : 3.96225 < r < 3.96225
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1739169249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86904 +/- 0.0070154 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.86904 @ 95%CL (1 toyMC)
median expected limit: r < 2.86904 @ 95%CL (1 toyMC)
   68% expected band : 2.86904 < r < 2.86904
   95% expected band : 2.86904 < r < 2.86904
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680021450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.50576 +/- 0.00557235 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.50576 @ 95%CL (1 toyMC)
median expected limit: r < 2.50576 @ 95%CL (1 toyMC)
   68% expected band : 2.50576 < r < 2.50576
   95% expected band : 2.50576 < r < 2.50576
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1101903749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85814 +/- 0.00675541 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 2.85814 @ 95%CL (1 toyMC)
median expected limit: r < 2.85814 @ 95%CL (1 toyMC)
   68% expected band : 2.85814 < r < 2.85814
   95% expected band : 2.85814 < r < 2.85814
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -193988473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.19594 +/- 0.00994158 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 4.19594 @ 95%CL (1 toyMC)
median expected limit: r < 4.19594 @ 95%CL (1 toyMC)
   68% expected band : 4.19594 < r < 4.19594
   95% expected band : 4.19594 < r < 4.19594
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 54784353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08912 +/- 0.00706274 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.08912 @ 95%CL (1 toyMC)
median expected limit: r < 3.08912 @ 95%CL (1 toyMC)
   68% expected band : 3.08912 < r < 3.08912
   95% expected band : 3.08912 < r < 3.08912
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -130118602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.79943 +/- 0.00837517 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.79943 @ 95%CL (1 toyMC)
median expected limit: r < 4.79943 @ 95%CL (1 toyMC)
   68% expected band : 4.79943 < r < 4.79943
   95% expected band : 4.79943 < r < 4.79943
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -563485988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.94058 +/- 0.00912201 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.94058 @ 95%CL (1 toyMC)
median expected limit: r < 4.94058 @ 95%CL (1 toyMC)
   68% expected band : 4.94058 < r < 4.94058
   95% expected band : 4.94058 < r < 4.94058
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1857177380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.09105 +/- 0.00761721 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.09105 @ 95%CL (1 toyMC)
median expected limit: r < 3.09105 @ 95%CL (1 toyMC)
   68% expected band : 3.09105 < r < 3.09105
   95% expected band : 3.09105 < r < 3.09105
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1103151308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.20267 +/- 0.0094991 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 4.20267 @ 95%CL (1 toyMC)
median expected limit: r < 4.20267 @ 95%CL (1 toyMC)
   68% expected band : 4.20267 < r < 4.20267
   95% expected band : 4.20267 < r < 4.20267
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1728836515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.90042 +/- 0.00663389 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.90042 @ 95%CL (1 toyMC)
median expected limit: r < 3.90042 @ 95%CL (1 toyMC)
   68% expected band : 3.90042 < r < 3.90042
   95% expected band : 3.90042 < r < 3.90042
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1006937264
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.70103 +/- 0.00880261 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.70103 @ 95%CL (1 toyMC)
median expected limit: r < 3.70103 @ 95%CL (1 toyMC)
   68% expected band : 3.70103 < r < 3.70103
   95% expected band : 3.70103 < r < 3.70103
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1316032361
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.1551 +/- 0.00714878 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.1551 @ 95%CL (1 toyMC)
median expected limit: r < 5.1551 @ 95%CL (1 toyMC)
   68% expected band : 5.1551 < r < 5.1551
   95% expected band : 5.1551 < r < 5.1551
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 370851868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67899 +/- 0.00661264 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.67899 @ 95%CL (1 toyMC)
median expected limit: r < 3.67899 @ 95%CL (1 toyMC)
   68% expected band : 3.67899 < r < 3.67899
   95% expected band : 3.67899 < r < 3.67899
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1533221392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.89102 +/- 0.00954752 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.89102 @ 95%CL (1 toyMC)
median expected limit: r < 3.89102 @ 95%CL (1 toyMC)
   68% expected band : 3.89102 < r < 3.89102
   95% expected band : 3.89102 < r < 3.89102
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 636521016
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87505 +/- 0.00678287 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.87505 @ 95%CL (1 toyMC)
median expected limit: r < 2.87505 @ 95%CL (1 toyMC)
   68% expected band : 2.87505 < r < 2.87505
   95% expected band : 2.87505 < r < 2.87505
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1644953338
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08507 +/- 0.00761371 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.08507 @ 95%CL (1 toyMC)
median expected limit: r < 3.08507 @ 95%CL (1 toyMC)
   68% expected band : 3.08507 < r < 3.08507
   95% expected band : 3.08507 < r < 3.08507
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1892202825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.94291 +/- 0.00798887 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.94291 @ 95%CL (1 toyMC)
median expected limit: r < 3.94291 @ 95%CL (1 toyMC)
   68% expected band : 3.94291 < r < 3.94291
   95% expected band : 3.94291 < r < 3.94291
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 693609340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87604 +/- 0.00597939 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.87604 @ 95%CL (1 toyMC)
median expected limit: r < 2.87604 @ 95%CL (1 toyMC)
   68% expected band : 2.87604 < r < 2.87604
   95% expected band : 2.87604 < r < 2.87604
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -265918384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.45608 +/- 0.00636707 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.45608 @ 95%CL (1 toyMC)
median expected limit: r < 3.45608 @ 95%CL (1 toyMC)
   68% expected band : 3.45608 < r < 3.45608
   95% expected band : 3.45608 < r < 3.45608
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1241621801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.32534 +/- 0.00734489 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 5.32534 @ 95%CL (1 toyMC)
median expected limit: r < 5.32534 @ 95%CL (1 toyMC)
   68% expected band : 5.32534 < r < 5.32534
   95% expected band : 5.32534 < r < 5.32534
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2126237483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85099 +/- 0.00625084 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.85099 @ 95%CL (1 toyMC)
median expected limit: r < 2.85099 @ 95%CL (1 toyMC)
   68% expected band : 2.85099 < r < 2.85099
   95% expected band : 2.85099 < r < 2.85099
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1045161369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56604 +/- 0.00854788 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.56604 @ 95%CL (1 toyMC)
median expected limit: r < 3.56604 @ 95%CL (1 toyMC)
   68% expected band : 3.56604 < r < 3.56604
   95% expected band : 3.56604 < r < 3.56604
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1411595710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.94021 +/- 0.00896104 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 3.94021 @ 95%CL (1 toyMC)
median expected limit: r < 3.94021 @ 95%CL (1 toyMC)
   68% expected band : 3.94021 < r < 3.94021
   95% expected band : 3.94021 < r < 3.94021
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 619775702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86507 +/- 0.00702912 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.86507 @ 95%CL (1 toyMC)
median expected limit: r < 2.86507 @ 95%CL (1 toyMC)
   68% expected band : 2.86507 < r < 2.86507
   95% expected band : 2.86507 < r < 2.86507
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -506204417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60029 +/- 0.0104052 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.60029 @ 95%CL (1 toyMC)
median expected limit: r < 4.60029 @ 95%CL (1 toyMC)
   68% expected band : 4.60029 < r < 4.60029
   95% expected band : 4.60029 < r < 4.60029
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 771382096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61512 +/- 0.00717183 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.61512 @ 95%CL (1 toyMC)
median expected limit: r < 3.61512 @ 95%CL (1 toyMC)
   68% expected band : 3.61512 < r < 3.61512
   95% expected band : 3.61512 < r < 3.61512
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1316670696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8716 +/- 0.00571318 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.8716 @ 95%CL (1 toyMC)
median expected limit: r < 2.8716 @ 95%CL (1 toyMC)
   68% expected band : 2.8716 < r < 2.8716
   95% expected band : 2.8716 < r < 2.8716
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1491175173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.02457 +/- 0.00719 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.02457 @ 95%CL (1 toyMC)
median expected limit: r < 3.02457 @ 95%CL (1 toyMC)
   68% expected band : 3.02457 < r < 3.02457
   95% expected band : 3.02457 < r < 3.02457
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 736196419
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8718 +/- 0.00828921 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.8718 @ 95%CL (1 toyMC)
median expected limit: r < 2.8718 @ 95%CL (1 toyMC)
   68% expected band : 2.8718 < r < 2.8718
   95% expected band : 2.8718 < r < 2.8718
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1972805370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3355 +/- 0.00934551 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.3355 @ 95%CL (1 toyMC)
median expected limit: r < 3.3355 @ 95%CL (1 toyMC)
   68% expected band : 3.3355 < r < 3.3355
   95% expected band : 3.3355 < r < 3.3355
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1478873156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.0811 +/- 0.00830319 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.0811 @ 95%CL (1 toyMC)
median expected limit: r < 3.0811 @ 95%CL (1 toyMC)
   68% expected band : 3.0811 < r < 3.0811
   95% expected band : 3.0811 < r < 3.0811
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1422130433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.23798 +/- 0.0101246 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 4.23798 @ 95%CL (1 toyMC)
median expected limit: r < 4.23798 @ 95%CL (1 toyMC)
   68% expected band : 4.23798 < r < 4.23798
   95% expected band : 4.23798 < r < 4.23798
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 117928656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68402 +/- 0.00705165 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.68402 @ 95%CL (1 toyMC)
median expected limit: r < 2.68402 @ 95%CL (1 toyMC)
   68% expected band : 2.68402 < r < 2.68402
   95% expected band : 2.68402 < r < 2.68402
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367124269
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.34882 +/- 0.00920815 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.34882 @ 95%CL (1 toyMC)
median expected limit: r < 6.34882 @ 95%CL (1 toyMC)
   68% expected band : 6.34882 < r < 6.34882
   95% expected band : 6.34882 < r < 6.34882
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1030690644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.90003 +/- 0.0101548 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.90003 @ 95%CL (1 toyMC)
median expected limit: r < 3.90003 @ 95%CL (1 toyMC)
   68% expected band : 3.90003 < r < 3.90003
   95% expected band : 3.90003 < r < 3.90003
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1455480384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67293 +/- 0.0052351 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.67293 @ 95%CL (1 toyMC)
median expected limit: r < 3.67293 @ 95%CL (1 toyMC)
   68% expected band : 3.67293 < r < 3.67293
   95% expected band : 3.67293 < r < 3.67293
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 969167875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06312 +/- 0.00841609 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.06312 @ 95%CL (1 toyMC)
median expected limit: r < 3.06312 @ 95%CL (1 toyMC)
   68% expected band : 3.06312 < r < 3.06312
   95% expected band : 3.06312 < r < 3.06312
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1955900469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06495 +/- 0.0053666 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.06495 @ 95%CL (1 toyMC)
median expected limit: r < 3.06495 @ 95%CL (1 toyMC)
   68% expected band : 3.06495 < r < 3.06495
   95% expected band : 3.06495 < r < 3.06495
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -790295563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.59732 +/- 0.00678027 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 3.59732 @ 95%CL (1 toyMC)
median expected limit: r < 3.59732 @ 95%CL (1 toyMC)
   68% expected band : 3.59732 < r < 3.59732
   95% expected band : 3.59732 < r < 3.59732
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1352510790
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.70474 +/- 0.00877279 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.70474 @ 95%CL (1 toyMC)
median expected limit: r < 3.70474 @ 95%CL (1 toyMC)
   68% expected band : 3.70474 < r < 3.70474
   95% expected band : 3.70474 < r < 3.70474
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1203886284
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3457 +/- 0.00577979 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.3457 @ 95%CL (1 toyMC)
median expected limit: r < 2.3457 @ 95%CL (1 toyMC)
   68% expected band : 2.3457 < r < 2.3457
   95% expected band : 2.3457 < r < 2.3457
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1319011771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.22274 +/- 0.00633195 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.22274 @ 95%CL (1 toyMC)
median expected limit: r < 3.22274 @ 95%CL (1 toyMC)
   68% expected band : 3.22274 < r < 3.22274
   95% expected band : 3.22274 < r < 3.22274
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2012903110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.89574 +/- 0.0078195 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.89574 @ 95%CL (1 toyMC)
median expected limit: r < 4.89574 @ 95%CL (1 toyMC)
   68% expected band : 4.89574 < r < 4.89574
   95% expected band : 4.89574 < r < 4.89574
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1453179848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.32822 +/- 0.00821013 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.32822 @ 95%CL (1 toyMC)
median expected limit: r < 3.32822 @ 95%CL (1 toyMC)
   68% expected band : 3.32822 < r < 3.32822
   95% expected band : 3.32822 < r < 3.32822
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -348293077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86481 +/- 0.0072587 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.86481 @ 95%CL (1 toyMC)
median expected limit: r < 2.86481 @ 95%CL (1 toyMC)
   68% expected band : 2.86481 < r < 2.86481
   95% expected band : 2.86481 < r < 2.86481
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1635473051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.35663 +/- 0.00550558 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.35663 @ 95%CL (1 toyMC)
median expected limit: r < 2.35663 @ 95%CL (1 toyMC)
   68% expected band : 2.35663 < r < 2.35663
   95% expected band : 2.35663 < r < 2.35663
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -88314369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85663 +/- 0.00802887 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 2.85663 @ 95%CL (1 toyMC)
median expected limit: r < 2.85663 @ 95%CL (1 toyMC)
   68% expected band : 2.85663 < r < 2.85663
   95% expected band : 2.85663 < r < 2.85663
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1219357350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85639 +/- 0.006656 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.85639 @ 95%CL (1 toyMC)
median expected limit: r < 2.85639 @ 95%CL (1 toyMC)
   68% expected band : 2.85639 < r < 2.85639
   95% expected band : 2.85639 < r < 2.85639
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 293224487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85211 +/- 0.00627611 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.85211 @ 95%CL (1 toyMC)
median expected limit: r < 2.85211 @ 95%CL (1 toyMC)
   68% expected band : 2.85211 < r < 2.85211
   95% expected band : 2.85211 < r < 2.85211
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -922879542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.3198 +/- 0.009601 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.3198 @ 95%CL (1 toyMC)
median expected limit: r < 5.3198 @ 95%CL (1 toyMC)
   68% expected band : 5.3198 < r < 5.3198
   95% expected band : 5.3198 < r < 5.3198
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -832329526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52085 +/- 0.00616111 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.52085 @ 95%CL (1 toyMC)
median expected limit: r < 2.52085 @ 95%CL (1 toyMC)
   68% expected band : 2.52085 < r < 2.52085
   95% expected band : 2.52085 < r < 2.52085
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -418412343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.61208 +/- 0.00769224 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.61208 @ 95%CL (1 toyMC)
median expected limit: r < 4.61208 @ 95%CL (1 toyMC)
   68% expected band : 4.61208 < r < 4.61208
   95% expected band : 4.61208 < r < 4.61208
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1650154430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49953 +/- 0.00600836 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.49953 @ 95%CL (1 toyMC)
median expected limit: r < 2.49953 @ 95%CL (1 toyMC)
   68% expected band : 2.49953 < r < 2.49953
   95% expected band : 2.49953 < r < 2.49953
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -552977019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87469 +/- 0.00588754 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.87469 @ 95%CL (1 toyMC)
median expected limit: r < 2.87469 @ 95%CL (1 toyMC)
   68% expected band : 2.87469 < r < 2.87469
   95% expected band : 2.87469 < r < 2.87469
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1322188988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87459 +/- 0.0062112 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.87459 @ 95%CL (1 toyMC)
median expected limit: r < 2.87459 @ 95%CL (1 toyMC)
   68% expected band : 2.87459 < r < 2.87459
   95% expected band : 2.87459 < r < 2.87459
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -797864140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.21596 +/- 0.0040696 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.21596 @ 95%CL (1 toyMC)
median expected limit: r < 2.21596 @ 95%CL (1 toyMC)
   68% expected band : 2.21596 < r < 2.21596
   95% expected band : 2.21596 < r < 2.21596
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1883312055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.54563 +/- 0.00837899 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 4.54563 @ 95%CL (1 toyMC)
median expected limit: r < 4.54563 @ 95%CL (1 toyMC)
   68% expected band : 4.54563 < r < 4.54563
   95% expected band : 4.54563 < r < 4.54563
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 889861447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77517 +/- 0.010399 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.77517 @ 95%CL (1 toyMC)
median expected limit: r < 6.77517 @ 95%CL (1 toyMC)
   68% expected band : 6.77517 < r < 6.77517
   95% expected band : 6.77517 < r < 6.77517
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -24746851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.09716 +/- 0.0069052 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.09716 @ 95%CL (1 toyMC)
median expected limit: r < 3.09716 @ 95%CL (1 toyMC)
   68% expected band : 3.09716 < r < 3.09716
   95% expected band : 3.09716 < r < 3.09716
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1892228398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56323 +/- 0.00791444 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.56323 @ 95%CL (1 toyMC)
median expected limit: r < 3.56323 @ 95%CL (1 toyMC)
   68% expected band : 3.56323 < r < 3.56323
   95% expected band : 3.56323 < r < 3.56323
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1055544439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49585 +/- 0.00716565 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.49585 @ 95%CL (1 toyMC)
median expected limit: r < 2.49585 @ 95%CL (1 toyMC)
   68% expected band : 2.49585 < r < 2.49585
   95% expected band : 2.49585 < r < 2.49585
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 159852635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.35477 +/- 0.00581026 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.35477 @ 95%CL (1 toyMC)
median expected limit: r < 2.35477 @ 95%CL (1 toyMC)
   68% expected band : 2.35477 < r < 2.35477
   95% expected band : 2.35477 < r < 2.35477
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2026541133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34768 +/- 0.00694008 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.34768 @ 95%CL (1 toyMC)
median expected limit: r < 2.34768 @ 95%CL (1 toyMC)
   68% expected band : 2.34768 < r < 2.34768
   95% expected band : 2.34768 < r < 2.34768
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1177219675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.68395 +/- 0.00720898 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.68395 @ 95%CL (1 toyMC)
median expected limit: r < 3.68395 @ 95%CL (1 toyMC)
   68% expected band : 3.68395 < r < 3.68395
   95% expected band : 3.68395 < r < 3.68395
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1908861368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.57928 +/- 0.00792639 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.57928 @ 95%CL (1 toyMC)
median expected limit: r < 3.57928 @ 95%CL (1 toyMC)
   68% expected band : 3.57928 < r < 3.57928
   95% expected band : 3.57928 < r < 3.57928
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946779083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.31028 +/- 0.00711243 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.31028 @ 95%CL (1 toyMC)
median expected limit: r < 4.31028 @ 95%CL (1 toyMC)
   68% expected band : 4.31028 < r < 4.31028
   95% expected band : 4.31028 < r < 4.31028
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1188582241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.32786 +/- 0.00638875 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.32786 @ 95%CL (1 toyMC)
median expected limit: r < 3.32786 @ 95%CL (1 toyMC)
   68% expected band : 3.32786 < r < 3.32786
   95% expected band : 3.32786 < r < 3.32786
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 279578700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06637 +/- 0.00890557 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.06637 @ 95%CL (1 toyMC)
median expected limit: r < 3.06637 @ 95%CL (1 toyMC)
   68% expected band : 3.06637 < r < 3.06637
   95% expected band : 3.06637 < r < 3.06637
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -495618537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87944 +/- 0.00584398 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.87944 @ 95%CL (1 toyMC)
median expected limit: r < 2.87944 @ 95%CL (1 toyMC)
   68% expected band : 2.87944 < r < 2.87944
   95% expected band : 2.87944 < r < 2.87944
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -597868644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.33204 +/- 0.0105307 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.33204 @ 95%CL (1 toyMC)
median expected limit: r < 5.33204 @ 95%CL (1 toyMC)
   68% expected band : 5.33204 < r < 5.33204
   95% expected band : 5.33204 < r < 5.33204
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1392533635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87985 +/- 0.00600047 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 2.87985 @ 95%CL (1 toyMC)
median expected limit: r < 2.87985 @ 95%CL (1 toyMC)
   68% expected band : 2.87985 < r < 2.87985
   95% expected band : 2.87985 < r < 2.87985
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1220682966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.94736 +/- 0.00750613 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 3.94736 @ 95%CL (1 toyMC)
median expected limit: r < 3.94736 @ 95%CL (1 toyMC)
   68% expected band : 3.94736 < r < 3.94736
   95% expected band : 3.94736 < r < 3.94736
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 652275788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.20218 +/- 0.00716251 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.20218 @ 95%CL (1 toyMC)
median expected limit: r < 3.20218 @ 95%CL (1 toyMC)
   68% expected band : 3.20218 < r < 3.20218
   95% expected band : 3.20218 < r < 3.20218
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1480453644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69416 +/- 0.00563584 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.69416 @ 95%CL (1 toyMC)
median expected limit: r < 2.69416 @ 95%CL (1 toyMC)
   68% expected band : 2.69416 < r < 2.69416
   95% expected band : 2.69416 < r < 2.69416
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1716546132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.58978 +/- 0.00896189 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.58978 @ 95%CL (1 toyMC)
median expected limit: r < 3.58978 @ 95%CL (1 toyMC)
   68% expected band : 3.58978 < r < 3.58978
   95% expected band : 3.58978 < r < 3.58978
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 5199505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67542 +/- 0.00637882 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.67542 @ 95%CL (1 toyMC)
median expected limit: r < 2.67542 @ 95%CL (1 toyMC)
   68% expected band : 2.67542 < r < 2.67542
   95% expected band : 2.67542 < r < 2.67542
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1653278401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8486 +/- 0.00684144 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.8486 @ 95%CL (1 toyMC)
median expected limit: r < 2.8486 @ 95%CL (1 toyMC)
   68% expected band : 2.8486 < r < 2.8486
   95% expected band : 2.8486 < r < 2.8486
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1028373278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86489 +/- 0.00719149 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.86489 @ 95%CL (1 toyMC)
median expected limit: r < 2.86489 @ 95%CL (1 toyMC)
   68% expected band : 2.86489 < r < 2.86489
   95% expected band : 2.86489 < r < 2.86489
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 199337651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3715 +/- 0.00650935 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.3715 @ 95%CL (1 toyMC)
median expected limit: r < 2.3715 @ 95%CL (1 toyMC)
   68% expected band : 2.3715 < r < 2.3715
   95% expected band : 2.3715 < r < 2.3715
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1286880062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08203 +/- 0.00849783 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.08203 @ 95%CL (1 toyMC)
median expected limit: r < 3.08203 @ 95%CL (1 toyMC)
   68% expected band : 3.08203 < r < 3.08203
   95% expected band : 3.08203 < r < 3.08203
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1217225063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77658 +/- 0.01458 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 6.77658 @ 95%CL (1 toyMC)
median expected limit: r < 6.77658 @ 95%CL (1 toyMC)
   68% expected band : 6.77658 < r < 6.77658
   95% expected band : 6.77658 < r < 6.77658
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -945347937
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.99008 +/- 0.0131351 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.99008 @ 95%CL (1 toyMC)
median expected limit: r < 7.99008 @ 95%CL (1 toyMC)
   68% expected band : 7.99008 < r < 7.99008
   95% expected band : 7.99008 < r < 7.99008
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -424190841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1271 +/- 0.0178877 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 10.1271 @ 95%CL (1 toyMC)
median expected limit: r < 10.1271 @ 95%CL (1 toyMC)
   68% expected band : 10.1271 < r < 10.1271
   95% expected band : 10.1271 < r < 10.1271
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1263240314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.184 +/- 0.0119935 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 16.184 @ 95%CL (1 toyMC)
median expected limit: r < 16.184 @ 95%CL (1 toyMC)
   68% expected band : 16.184 < r < 16.184
   95% expected band : 16.184 < r < 16.184
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1632335253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.01502 +/- 0.0147156 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.01502 @ 95%CL (1 toyMC)
median expected limit: r < 8.01502 @ 95%CL (1 toyMC)
   68% expected band : 8.01502 < r < 8.01502
   95% expected band : 8.01502 < r < 8.01502
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -86351095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.48593 +/- 0.0203813 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.48593 @ 95%CL (1 toyMC)
median expected limit: r < 9.48593 @ 95%CL (1 toyMC)
   68% expected band : 9.48593 < r < 9.48593
   95% expected band : 9.48593 < r < 9.48593
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1932145744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.95875 +/- 0.0158901 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.95875 @ 95%CL (1 toyMC)
median expected limit: r < 8.95875 @ 95%CL (1 toyMC)
   68% expected band : 8.95875 < r < 8.95875
   95% expected band : 8.95875 < r < 8.95875
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -971325569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5973 +/- 0.0185682 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 11.5973 @ 95%CL (1 toyMC)
median expected limit: r < 11.5973 @ 95%CL (1 toyMC)
   68% expected band : 11.5973 < r < 11.5973
   95% expected band : 11.5973 < r < 11.5973
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2056077004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5042 +/- 0.0164044 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 11.5042 @ 95%CL (1 toyMC)
median expected limit: r < 11.5042 @ 95%CL (1 toyMC)
   68% expected band : 11.5042 < r < 11.5042
   95% expected band : 11.5042 < r < 11.5042
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1959989975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.47692 +/- 0.019257 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.47692 @ 95%CL (1 toyMC)
median expected limit: r < 8.47692 @ 95%CL (1 toyMC)
   68% expected band : 8.47692 < r < 8.47692
   95% expected band : 8.47692 < r < 8.47692
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -241968551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.814 +/- 0.01743 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 12.814 @ 95%CL (1 toyMC)
median expected limit: r < 12.814 @ 95%CL (1 toyMC)
   68% expected band : 12.814 < r < 12.814
   95% expected band : 12.814 < r < 12.814
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -11665748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1001 +/- 0.0164062 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 14.1001 @ 95%CL (1 toyMC)
median expected limit: r < 14.1001 @ 95%CL (1 toyMC)
   68% expected band : 14.1001 < r < 14.1001
   95% expected band : 14.1001 < r < 14.1001
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1647873013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.43033 +/- 0.0206812 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.43033 @ 95%CL (1 toyMC)
median expected limit: r < 8.43033 @ 95%CL (1 toyMC)
   68% expected band : 8.43033 < r < 8.43033
   95% expected band : 8.43033 < r < 8.43033
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -697915800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.53422 +/- 0.0129243 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.53422 @ 95%CL (1 toyMC)
median expected limit: r < 7.53422 @ 95%CL (1 toyMC)
   68% expected band : 7.53422 < r < 7.53422
   95% expected band : 7.53422 < r < 7.53422
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1197307995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.54018 +/- 0.01731 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 9.54018 @ 95%CL (1 toyMC)
median expected limit: r < 9.54018 @ 95%CL (1 toyMC)
   68% expected band : 9.54018 < r < 9.54018
   95% expected band : 9.54018 < r < 9.54018
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 866100611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0464 +/- 0.01452 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 15.0464 @ 95%CL (1 toyMC)
median expected limit: r < 15.0464 @ 95%CL (1 toyMC)
   68% expected band : 15.0464 < r < 15.0464
   95% expected band : 15.0464 < r < 15.0464
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1022736833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.51807 +/- 0.0177585 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.51807 @ 95%CL (1 toyMC)
median expected limit: r < 8.51807 @ 95%CL (1 toyMC)
   68% expected band : 8.51807 < r < 8.51807
   95% expected band : 8.51807 < r < 8.51807
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -306087327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7032 +/- 0.0224969 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.7032 @ 95%CL (1 toyMC)
median expected limit: r < 10.7032 @ 95%CL (1 toyMC)
   68% expected band : 10.7032 < r < 10.7032
   95% expected band : 10.7032 < r < 10.7032
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 336253342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.94397 +/- 0.0165828 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.94397 @ 95%CL (1 toyMC)
median expected limit: r < 7.94397 @ 95%CL (1 toyMC)
   68% expected band : 7.94397 < r < 7.94397
   95% expected band : 7.94397 < r < 7.94397
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1121434359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.98712 +/- 0.0184186 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.98712 @ 95%CL (1 toyMC)
median expected limit: r < 7.98712 @ 95%CL (1 toyMC)
   68% expected band : 7.98712 < r < 7.98712
   95% expected band : 7.98712 < r < 7.98712
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -994780391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.94782 +/- 0.0182235 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.94782 @ 95%CL (1 toyMC)
median expected limit: r < 7.94782 @ 95%CL (1 toyMC)
   68% expected band : 7.94782 < r < 7.94782
   95% expected band : 7.94782 < r < 7.94782
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1340430277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.02115 +/- 0.0154951 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.02115 @ 95%CL (1 toyMC)
median expected limit: r < 8.02115 @ 95%CL (1 toyMC)
   68% expected band : 8.02115 < r < 8.02115
   95% expected band : 8.02115 < r < 8.02115
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2121947966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.02497 +/- 0.0201546 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.02497 @ 95%CL (1 toyMC)
median expected limit: r < 8.02497 @ 95%CL (1 toyMC)
   68% expected band : 8.02497 < r < 8.02497
   95% expected band : 8.02497 < r < 8.02497
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1212062732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.4647 +/- 0.0130166 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.4647 @ 95%CL (1 toyMC)
median expected limit: r < 6.4647 @ 95%CL (1 toyMC)
   68% expected band : 6.4647 < r < 6.4647
   95% expected band : 6.4647 < r < 6.4647
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -698695104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4844 +/- 0.0177899 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.4844 @ 95%CL (1 toyMC)
median expected limit: r < 13.4844 @ 95%CL (1 toyMC)
   68% expected band : 13.4844 < r < 13.4844
   95% expected band : 13.4844 < r < 13.4844
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -133941662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9367 +/- 0.0122019 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 15.9367 @ 95%CL (1 toyMC)
median expected limit: r < 15.9367 @ 95%CL (1 toyMC)
   68% expected band : 15.9367 < r < 15.9367
   95% expected band : 15.9367 < r < 15.9367
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -367397374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.52707 +/- 0.0183086 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.52707 @ 95%CL (1 toyMC)
median expected limit: r < 9.52707 @ 95%CL (1 toyMC)
   68% expected band : 9.52707 < r < 9.52707
   95% expected band : 9.52707 < r < 9.52707
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -277866734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.16714 +/- 0.01605 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.16714 @ 95%CL (1 toyMC)
median expected limit: r < 7.16714 @ 95%CL (1 toyMC)
   68% expected band : 7.16714 < r < 7.16714
   95% expected band : 7.16714 < r < 7.16714
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 557229347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.00039 +/- 0.0183646 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.00039 @ 95%CL (1 toyMC)
median expected limit: r < 8.00039 @ 95%CL (1 toyMC)
   68% expected band : 8.00039 < r < 8.00039
   95% expected band : 8.00039 < r < 8.00039
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1441349899
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.98989 +/- 0.0175745 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.98989 @ 95%CL (1 toyMC)
median expected limit: r < 8.98989 @ 95%CL (1 toyMC)
   68% expected band : 8.98989 < r < 8.98989
   95% expected band : 8.98989 < r < 8.98989
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 611644322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1402 +/- 0.0192436 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.1402 @ 95%CL (1 toyMC)
median expected limit: r < 12.1402 @ 95%CL (1 toyMC)
   68% expected band : 12.1402 < r < 12.1402
   95% expected band : 12.1402 < r < 12.1402
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 431846709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.35893 +/- 0.0134614 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.35893 @ 95%CL (1 toyMC)
median expected limit: r < 9.35893 @ 95%CL (1 toyMC)
   68% expected band : 9.35893 < r < 9.35893
   95% expected band : 9.35893 < r < 9.35893
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1557849796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.30745 +/- 0.0192561 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.30745 @ 95%CL (1 toyMC)
median expected limit: r < 9.30745 @ 95%CL (1 toyMC)
   68% expected band : 9.30745 < r < 9.30745
   95% expected band : 9.30745 < r < 9.30745
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1720276154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9412 +/- 0.0165181 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.9412 @ 95%CL (1 toyMC)
median expected limit: r < 10.9412 @ 95%CL (1 toyMC)
   68% expected band : 10.9412 < r < 10.9412
   95% expected band : 10.9412 < r < 10.9412
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1771564635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4196 +/- 0.0208291 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.4196 @ 95%CL (1 toyMC)
median expected limit: r < 10.4196 @ 95%CL (1 toyMC)
   68% expected band : 10.4196 < r < 10.4196
   95% expected band : 10.4196 < r < 10.4196
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 677594758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.59604 +/- 0.0191214 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.59604 @ 95%CL (1 toyMC)
median expected limit: r < 7.59604 @ 95%CL (1 toyMC)
   68% expected band : 7.59604 < r < 7.59604
   95% expected band : 7.59604 < r < 7.59604
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1377736665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.47158 +/- 0.0202272 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.47158 @ 95%CL (1 toyMC)
median expected limit: r < 8.47158 @ 95%CL (1 toyMC)
   68% expected band : 8.47158 < r < 8.47158
   95% expected band : 8.47158 < r < 8.47158
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -538262502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.57139 +/- 0.0144054 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.57139 @ 95%CL (1 toyMC)
median expected limit: r < 7.57139 @ 95%CL (1 toyMC)
   68% expected band : 7.57139 < r < 7.57139
   95% expected band : 7.57139 < r < 7.57139
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1406788407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4178 +/- 0.0127285 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.4178 @ 95%CL (1 toyMC)
median expected limit: r < 10.4178 @ 95%CL (1 toyMC)
   68% expected band : 10.4178 < r < 10.4178
   95% expected band : 10.4178 < r < 10.4178
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2089338634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1146 +/- 0.016626 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 10.1146 @ 95%CL (1 toyMC)
median expected limit: r < 10.1146 @ 95%CL (1 toyMC)
   68% expected band : 10.1146 < r < 10.1146
   95% expected band : 10.1146 < r < 10.1146
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1452478062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4489 +/- 0.015335 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.4489 @ 95%CL (1 toyMC)
median expected limit: r < 12.4489 @ 95%CL (1 toyMC)
   68% expected band : 12.4489 < r < 12.4489
   95% expected band : 12.4489 < r < 12.4489
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 554819978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5091 +/- 0.0145096 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 14.5091 @ 95%CL (1 toyMC)
median expected limit: r < 14.5091 @ 95%CL (1 toyMC)
   68% expected band : 14.5091 < r < 14.5091
   95% expected band : 14.5091 < r < 14.5091
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1196409404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.91167 +/- 0.0168259 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.91167 @ 95%CL (1 toyMC)
median expected limit: r < 8.91167 @ 95%CL (1 toyMC)
   68% expected band : 8.91167 < r < 8.91167
   95% expected band : 8.91167 < r < 8.91167
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -217099730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.98362 +/- 0.0146557 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.98362 @ 95%CL (1 toyMC)
median expected limit: r < 7.98362 @ 95%CL (1 toyMC)
   68% expected band : 7.98362 < r < 7.98362
   95% expected band : 7.98362 < r < 7.98362
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 578846533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1445 +/- 0.016089 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 10.1445 @ 95%CL (1 toyMC)
median expected limit: r < 10.1445 @ 95%CL (1 toyMC)
   68% expected band : 10.1445 < r < 10.1445
   95% expected band : 10.1445 < r < 10.1445
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1827957821
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.89968 +/- 0.0169016 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.89968 @ 95%CL (1 toyMC)
median expected limit: r < 8.89968 @ 95%CL (1 toyMC)
   68% expected band : 8.89968 < r < 8.89968
   95% expected band : 8.89968 < r < 8.89968
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 81334351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.94545 +/- 0.0166451 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.94545 @ 95%CL (1 toyMC)
median expected limit: r < 8.94545 @ 95%CL (1 toyMC)
   68% expected band : 8.94545 < r < 8.94545
   95% expected band : 8.94545 < r < 8.94545
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1653563805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1996 +/- 0.0132035 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.1996 @ 95%CL (1 toyMC)
median expected limit: r < 12.1996 @ 95%CL (1 toyMC)
   68% expected band : 12.1996 < r < 12.1996
   95% expected band : 12.1996 < r < 12.1996
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -445177914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.57376 +/- 0.0156878 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.57376 @ 95%CL (1 toyMC)
median expected limit: r < 7.57376 @ 95%CL (1 toyMC)
   68% expected band : 7.57376 < r < 7.57376
   95% expected band : 7.57376 < r < 7.57376
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2051497168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.46383 +/- 0.0164057 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.46383 @ 95%CL (1 toyMC)
median expected limit: r < 8.46383 @ 95%CL (1 toyMC)
   68% expected band : 8.46383 < r < 8.46383
   95% expected band : 8.46383 < r < 8.46383
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 878565910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.46342 +/- 0.0137547 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.46342 @ 95%CL (1 toyMC)
median expected limit: r < 8.46342 @ 95%CL (1 toyMC)
   68% expected band : 8.46342 < r < 8.46342
   95% expected band : 8.46342 < r < 8.46342
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2113977831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.59146 +/- 0.0159497 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.59146 @ 95%CL (1 toyMC)
median expected limit: r < 7.59146 @ 95%CL (1 toyMC)
   68% expected band : 7.59146 < r < 7.59146
   95% expected band : 7.59146 < r < 7.59146
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -825506900
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.13 +/- 0.0170108 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.13 @ 95%CL (1 toyMC)
median expected limit: r < 13.13 @ 95%CL (1 toyMC)
   68% expected band : 13.13 < r < 13.13
   95% expected band : 13.13 < r < 13.13
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -696828244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.0009 +/- 0.0155868 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.0009 @ 95%CL (1 toyMC)
median expected limit: r < 8.0009 @ 95%CL (1 toyMC)
   68% expected band : 8.0009 < r < 8.0009
   95% expected band : 8.0009 < r < 8.0009
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 353965003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.48108 +/- 0.0177437 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.48108 @ 95%CL (1 toyMC)
median expected limit: r < 8.48108 @ 95%CL (1 toyMC)
   68% expected band : 8.48108 < r < 8.48108
   95% expected band : 8.48108 < r < 8.48108
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -379883494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.49994 +/- 0.0202201 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.49994 @ 95%CL (1 toyMC)
median expected limit: r < 9.49994 @ 95%CL (1 toyMC)
   68% expected band : 9.49994 < r < 9.49994
   95% expected band : 9.49994 < r < 9.49994
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 225179762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7994 +/- 0.0166495 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.7994 @ 95%CL (1 toyMC)
median expected limit: r < 12.7994 @ 95%CL (1 toyMC)
   68% expected band : 12.7994 < r < 12.7994
   95% expected band : 12.7994 < r < 12.7994
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2036832523
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8009 +/- 0.0151458 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 14.8009 @ 95%CL (1 toyMC)
median expected limit: r < 14.8009 @ 95%CL (1 toyMC)
   68% expected band : 14.8009 < r < 14.8009
   95% expected band : 14.8009 < r < 14.8009
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -365029124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.541 +/- 0.0193822 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.541 @ 95%CL (1 toyMC)
median expected limit: r < 11.541 @ 95%CL (1 toyMC)
   68% expected band : 11.541 < r < 11.541
   95% expected band : 11.541 < r < 11.541
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 996231801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.99702 +/- 0.0161762 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.99702 @ 95%CL (1 toyMC)
median expected limit: r < 7.99702 @ 95%CL (1 toyMC)
   68% expected band : 7.99702 < r < 7.99702
   95% expected band : 7.99702 < r < 7.99702
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 859876414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.753 +/- 0.0126509 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 15.753 @ 95%CL (1 toyMC)
median expected limit: r < 15.753 @ 95%CL (1 toyMC)
   68% expected band : 15.753 < r < 15.753
   95% expected band : 15.753 < r < 15.753
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1945926002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.5945 +/- 0.0145824 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.5945 @ 95%CL (1 toyMC)
median expected limit: r < 7.5945 @ 95%CL (1 toyMC)
   68% expected band : 7.5945 < r < 7.5945
   95% expected band : 7.5945 < r < 7.5945
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1073156881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.066 +/- 0.0132743 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 15.066 @ 95%CL (1 toyMC)
median expected limit: r < 15.066 @ 95%CL (1 toyMC)
   68% expected band : 15.066 < r < 15.066
   95% expected band : 15.066 < r < 15.066
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -619846151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1285 +/- 0.0120622 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 16.1285 @ 95%CL (1 toyMC)
median expected limit: r < 16.1285 @ 95%CL (1 toyMC)
   68% expected band : 16.1285 < r < 16.1285
   95% expected band : 16.1285 < r < 16.1285
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1323720988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0866 +/- 0.019771 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.0866 @ 95%CL (1 toyMC)
median expected limit: r < 10.0866 @ 95%CL (1 toyMC)
   68% expected band : 10.0866 < r < 10.0866
   95% expected band : 10.0866 < r < 10.0866
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -483417114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.01958 +/- 0.0156521 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 8.01958 @ 95%CL (1 toyMC)
median expected limit: r < 8.01958 @ 95%CL (1 toyMC)
   68% expected band : 8.01958 < r < 8.01958
   95% expected band : 8.01958 < r < 8.01958
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 90377821
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0887 +/- 0.0221575 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 12.0887 @ 95%CL (1 toyMC)
median expected limit: r < 12.0887 @ 95%CL (1 toyMC)
   68% expected band : 12.0887 < r < 12.0887
   95% expected band : 12.0887 < r < 12.0887
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -539194872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7085 +/- 0.019864 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 10.7085 @ 95%CL (1 toyMC)
median expected limit: r < 10.7085 @ 95%CL (1 toyMC)
   68% expected band : 10.7085 < r < 10.7085
   95% expected band : 10.7085 < r < 10.7085
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1032698723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.9521 +/- 0.0174811 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.9521 @ 95%CL (1 toyMC)
median expected limit: r < 8.9521 @ 95%CL (1 toyMC)
   68% expected band : 8.9521 < r < 8.9521
   95% expected band : 8.9521 < r < 8.9521
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -992624784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.14194 +/- 0.0143298 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.14194 @ 95%CL (1 toyMC)
median expected limit: r < 7.14194 @ 95%CL (1 toyMC)
   68% expected band : 7.14194 < r < 7.14194
   95% expected band : 7.14194 < r < 7.14194
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2067939057
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.51923 +/- 0.0143681 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.51923 @ 95%CL (1 toyMC)
median expected limit: r < 7.51923 @ 95%CL (1 toyMC)
   68% expected band : 7.51923 < r < 7.51923
   95% expected band : 7.51923 < r < 7.51923
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1714269887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7476 +/- 0.0249022 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.7476 @ 95%CL (1 toyMC)
median expected limit: r < 10.7476 @ 95%CL (1 toyMC)
   68% expected band : 10.7476 < r < 10.7476
   95% expected band : 10.7476 < r < 10.7476
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 578124876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.02218 +/- 0.0177156 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.02218 @ 95%CL (1 toyMC)
median expected limit: r < 9.02218 @ 95%CL (1 toyMC)
   68% expected band : 9.02218 < r < 9.02218
   95% expected band : 9.02218 < r < 9.02218
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1607185979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.55945 +/- 0.0157444 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.55945 @ 95%CL (1 toyMC)
median expected limit: r < 8.55945 @ 95%CL (1 toyMC)
   68% expected band : 8.55945 < r < 8.55945
   95% expected band : 8.55945 < r < 8.55945
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1662514073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2421 +/- 0.016611 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 12.2421 @ 95%CL (1 toyMC)
median expected limit: r < 12.2421 @ 95%CL (1 toyMC)
   68% expected band : 12.2421 < r < 12.2421
   95% expected band : 12.2421 < r < 12.2421
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1316346023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.51751 +/- 0.0192799 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.51751 @ 95%CL (1 toyMC)
median expected limit: r < 9.51751 @ 95%CL (1 toyMC)
   68% expected band : 9.51751 < r < 9.51751
   95% expected band : 9.51751 < r < 9.51751
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -537715514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.45979 +/- 0.0184021 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.45979 @ 95%CL (1 toyMC)
median expected limit: r < 8.45979 @ 95%CL (1 toyMC)
   68% expected band : 8.45979 < r < 8.45979
   95% expected band : 8.45979 < r < 8.45979
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -622042860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79782 +/- 0.0140789 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 6.79782 @ 95%CL (1 toyMC)
median expected limit: r < 6.79782 @ 95%CL (1 toyMC)
   68% expected band : 6.79782 < r < 6.79782
   95% expected band : 6.79782 < r < 6.79782
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -709749688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.9381 +/- 0.0219285 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.9381 @ 95%CL (1 toyMC)
median expected limit: r < 8.9381 @ 95%CL (1 toyMC)
   68% expected band : 8.9381 < r < 8.9381
   95% expected band : 8.9381 < r < 8.9381
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 774918757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.82149 +/- 0.0147944 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.82149 @ 95%CL (1 toyMC)
median expected limit: r < 6.82149 @ 95%CL (1 toyMC)
   68% expected band : 6.82149 < r < 6.82149
   95% expected band : 6.82149 < r < 6.82149
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 898732029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8797 +/- 0.0144494 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 13.8797 @ 95%CL (1 toyMC)
median expected limit: r < 13.8797 @ 95%CL (1 toyMC)
   68% expected band : 13.8797 < r < 13.8797
   95% expected band : 13.8797 < r < 13.8797
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -584600865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.82157 +/- 0.0157328 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.82157 @ 95%CL (1 toyMC)
median expected limit: r < 6.82157 @ 95%CL (1 toyMC)
   68% expected band : 6.82157 < r < 6.82157
   95% expected band : 6.82157 < r < 6.82157
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1367657605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.54176 +/- 0.0213117 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.54176 @ 95%CL (1 toyMC)
median expected limit: r < 9.54176 @ 95%CL (1 toyMC)
   68% expected band : 9.54176 < r < 9.54176
   95% expected band : 9.54176 < r < 9.54176
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 652807044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.46312 +/- 0.017991 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 8.46312 @ 95%CL (1 toyMC)
median expected limit: r < 8.46312 @ 95%CL (1 toyMC)
   68% expected band : 8.46312 < r < 8.46312
   95% expected band : 8.46312 < r < 8.46312
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 540453560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3987 +/- 0.0169475 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 10.3987 @ 95%CL (1 toyMC)
median expected limit: r < 10.3987 @ 95%CL (1 toyMC)
   68% expected band : 10.3987 < r < 10.3987
   95% expected band : 10.3987 < r < 10.3987
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -225596946
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5089 +/- 0.0119255 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 13.5089 @ 95%CL (1 toyMC)
median expected limit: r < 13.5089 @ 95%CL (1 toyMC)
   68% expected band : 13.5089 < r < 13.5089
   95% expected band : 13.5089 < r < 13.5089
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 922674373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.22181 +/- 0.0161108 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.22181 @ 95%CL (1 toyMC)
median expected limit: r < 7.22181 @ 95%CL (1 toyMC)
   68% expected band : 7.22181 < r < 7.22181
   95% expected band : 7.22181 < r < 7.22181
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -592324085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3745 +/- 0.0191174 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.3745 @ 95%CL (1 toyMC)
median expected limit: r < 10.3745 @ 95%CL (1 toyMC)
   68% expected band : 10.3745 < r < 10.3745
   95% expected band : 10.3745 < r < 10.3745
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1036908034
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3941 +/- 0.0203049 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.3941 @ 95%CL (1 toyMC)
median expected limit: r < 11.3941 @ 95%CL (1 toyMC)
   68% expected band : 11.3941 < r < 11.3941
   95% expected band : 11.3941 < r < 11.3941
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1546710668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.98517 +/- 0.0150345 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.98517 @ 95%CL (1 toyMC)
median expected limit: r < 7.98517 @ 95%CL (1 toyMC)
   68% expected band : 7.98517 < r < 7.98517
   95% expected band : 7.98517 < r < 7.98517
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -91255864
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3913 +/- 0.0153419 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 15.3913 @ 95%CL (1 toyMC)
median expected limit: r < 15.3913 @ 95%CL (1 toyMC)
   68% expected band : 15.3913 < r < 15.3913
   95% expected band : 15.3913 < r < 15.3913
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1446833753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.40087 +/- 0.0161488 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.40087 @ 95%CL (1 toyMC)
median expected limit: r < 8.40087 @ 95%CL (1 toyMC)
   68% expected band : 8.40087 < r < 8.40087
   95% expected band : 8.40087 < r < 8.40087
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1467191861
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6928 +/- 0.0142494 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.6928 @ 95%CL (1 toyMC)
median expected limit: r < 10.6928 @ 95%CL (1 toyMC)
   68% expected band : 10.6928 < r < 10.6928
   95% expected band : 10.6928 < r < 10.6928
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1968822667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.14966 +/- 0.0198524 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.14966 @ 95%CL (1 toyMC)
median expected limit: r < 7.14966 @ 95%CL (1 toyMC)
   68% expected band : 7.14966 < r < 7.14966
   95% expected band : 7.14966 < r < 7.14966
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -232119841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9859 +/- 0.0180477 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.9859 @ 95%CL (1 toyMC)
median expected limit: r < 10.9859 @ 95%CL (1 toyMC)
   68% expected band : 10.9859 < r < 10.9859
   95% expected band : 10.9859 < r < 10.9859
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 706434596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0496 +/- 0.0167171 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.0496 @ 95%CL (1 toyMC)
median expected limit: r < 10.0496 @ 95%CL (1 toyMC)
   68% expected band : 10.0496 < r < 10.0496
   95% expected band : 10.0496 < r < 10.0496
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 730632654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4786 +/- 0.0172333 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.4786 @ 95%CL (1 toyMC)
median expected limit: r < 13.4786 @ 95%CL (1 toyMC)
   68% expected band : 13.4786 < r < 13.4786
   95% expected band : 13.4786 < r < 13.4786
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1006090764
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1223 +/- 0.0205139 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 12.1223 @ 95%CL (1 toyMC)
median expected limit: r < 12.1223 @ 95%CL (1 toyMC)
   68% expected band : 12.1223 < r < 12.1223
   95% expected band : 12.1223 < r < 12.1223
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2086709169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7486 +/- 0.016952 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.7486 @ 95%CL (1 toyMC)
median expected limit: r < 10.7486 @ 95%CL (1 toyMC)
   68% expected band : 10.7486 < r < 10.7486
   95% expected band : 10.7486 < r < 10.7486
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 22963932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4772 +/- 0.0170931 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.4772 @ 95%CL (1 toyMC)
median expected limit: r < 11.4772 @ 95%CL (1 toyMC)
   68% expected band : 11.4772 < r < 11.4772
   95% expected band : 11.4772 < r < 11.4772
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1684322175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.17355 +/- 0.00870901 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 6.17355 @ 95%CL (1 toyMC)
median expected limit: r < 6.17355 @ 95%CL (1 toyMC)
   68% expected band : 6.17355 < r < 6.17355
   95% expected band : 6.17355 < r < 6.17355
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -960981645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0807 +/- 0.0148053 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.0807 @ 95%CL (1 toyMC)
median expected limit: r < 10.0807 @ 95%CL (1 toyMC)
   68% expected band : 10.0807 < r < 10.0807
   95% expected band : 10.0807 < r < 10.0807
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1767121065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.5645 +/- 0.00682262 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 3.5645 @ 95%CL (1 toyMC)
median expected limit: r < 3.5645 @ 95%CL (1 toyMC)
   68% expected band : 3.5645 < r < 3.5645
   95% expected band : 3.5645 < r < 3.5645
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1239828659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.70486 +/- 0.012023 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.70486 @ 95%CL (1 toyMC)
median expected limit: r < 7.70486 @ 95%CL (1 toyMC)
   68% expected band : 7.70486 < r < 7.70486
   95% expected band : 7.70486 < r < 7.70486
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1481077177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.25683 +/- 0.0113901 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.25683 @ 95%CL (1 toyMC)
median expected limit: r < 9.25683 @ 95%CL (1 toyMC)
   68% expected band : 9.25683 < r < 9.25683
   95% expected band : 9.25683 < r < 9.25683
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1395027028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1111 +/- 0.0147074 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.1111 @ 95%CL (1 toyMC)
median expected limit: r < 10.1111 @ 95%CL (1 toyMC)
   68% expected band : 10.1111 < r < 10.1111
   95% expected band : 10.1111 < r < 10.1111
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1101323903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.26503 +/- 0.0106607 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.26503 @ 95%CL (1 toyMC)
median expected limit: r < 9.26503 @ 95%CL (1 toyMC)
   68% expected band : 9.26503 < r < 9.26503
   95% expected band : 9.26503 < r < 9.26503
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1132781766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.57838 +/- 0.00874929 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.57838 @ 95%CL (1 toyMC)
median expected limit: r < 4.57838 @ 95%CL (1 toyMC)
   68% expected band : 4.57838 < r < 4.57838
   95% expected band : 4.57838 < r < 4.57838
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -203614043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.2882 +/- 0.0102771 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 7.2882 @ 95%CL (1 toyMC)
median expected limit: r < 7.2882 @ 95%CL (1 toyMC)
   68% expected band : 7.2882 < r < 7.2882
   95% expected band : 7.2882 < r < 7.2882
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -578328682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.93576 +/- 0.0134801 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.93576 @ 95%CL (1 toyMC)
median expected limit: r < 5.93576 @ 95%CL (1 toyMC)
   68% expected band : 5.93576 < r < 5.93576
   95% expected band : 5.93576 < r < 5.93576
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1952166210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56517 +/- 0.00792303 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 4.56517 @ 95%CL (1 toyMC)
median expected limit: r < 4.56517 @ 95%CL (1 toyMC)
   68% expected band : 4.56517 < r < 4.56517
   95% expected band : 4.56517 < r < 4.56517
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -608336232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79867 +/- 0.00935968 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 6.79867 @ 95%CL (1 toyMC)
median expected limit: r < 6.79867 @ 95%CL (1 toyMC)
   68% expected band : 6.79867 < r < 6.79867
   95% expected band : 6.79867 < r < 6.79867
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -982244055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0983 +/- 0.00894613 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.0983 @ 95%CL (1 toyMC)
median expected limit: r < 10.0983 @ 95%CL (1 toyMC)
   68% expected band : 10.0983 < r < 10.0983
   95% expected band : 10.0983 < r < 10.0983
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1774274690
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9918 +/- 0.0135984 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.9918 @ 95%CL (1 toyMC)
median expected limit: r < 10.9918 @ 95%CL (1 toyMC)
   68% expected band : 10.9918 < r < 10.9918
   95% expected band : 10.9918 < r < 10.9918
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -698097213
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.78258 +/- 0.0102228 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 6.78258 @ 95%CL (1 toyMC)
median expected limit: r < 6.78258 @ 95%CL (1 toyMC)
   68% expected band : 6.78258 < r < 6.78258
   95% expected band : 6.78258 < r < 6.78258
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1116674497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.94557 +/- 0.0111554 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 5.94557 @ 95%CL (1 toyMC)
median expected limit: r < 5.94557 @ 95%CL (1 toyMC)
   68% expected band : 5.94557 < r < 5.94557
   95% expected band : 5.94557 < r < 5.94557
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1808669705
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.73342 +/- 0.0118779 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.73342 @ 95%CL (1 toyMC)
median expected limit: r < 7.73342 @ 95%CL (1 toyMC)
   68% expected band : 7.73342 < r < 7.73342
   95% expected band : 7.73342 < r < 7.73342
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1165211297
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2321 +/- 0.0126055 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.2321 @ 95%CL (1 toyMC)
median expected limit: r < 11.2321 @ 95%CL (1 toyMC)
   68% expected band : 11.2321 < r < 11.2321
   95% expected band : 11.2321 < r < 11.2321
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1144950389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6402 +/- 0.0125943 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 12.6402 @ 95%CL (1 toyMC)
median expected limit: r < 12.6402 @ 95%CL (1 toyMC)
   68% expected band : 12.6402 < r < 12.6402
   95% expected band : 12.6402 < r < 12.6402
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1230801972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2354 +/- 0.0128134 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.2354 @ 95%CL (1 toyMC)
median expected limit: r < 11.2354 @ 95%CL (1 toyMC)
   68% expected band : 11.2354 < r < 11.2354
   95% expected band : 11.2354 < r < 11.2354
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 16571442
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3489 +/- 0.0137711 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.3489 @ 95%CL (1 toyMC)
median expected limit: r < 10.3489 @ 95%CL (1 toyMC)
   68% expected band : 10.3489 < r < 10.3489
   95% expected band : 10.3489 < r < 10.3489
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -588843753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.24415 +/- 0.00927981 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.24415 @ 95%CL (1 toyMC)
median expected limit: r < 5.24415 @ 95%CL (1 toyMC)
   68% expected band : 5.24415 < r < 5.24415
   95% expected band : 5.24415 < r < 5.24415
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1744291721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.02794 +/- 0.0105473 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.02794 @ 95%CL (1 toyMC)
median expected limit: r < 7.02794 @ 95%CL (1 toyMC)
   68% expected band : 7.02794 < r < 7.02794
   95% expected band : 7.02794 < r < 7.02794
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1016391320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.95127 +/- 0.0117958 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.95127 @ 95%CL (1 toyMC)
median expected limit: r < 5.95127 @ 95%CL (1 toyMC)
   68% expected band : 5.95127 < r < 5.95127
   95% expected band : 5.95127 < r < 5.95127
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 157875688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.17555 +/- 0.0115652 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.17555 @ 95%CL (1 toyMC)
median expected limit: r < 6.17555 @ 95%CL (1 toyMC)
   68% expected band : 6.17555 < r < 6.17555
   95% expected band : 6.17555 < r < 6.17555
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1741195075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.46815 +/- 0.00886776 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.46815 @ 95%CL (1 toyMC)
median expected limit: r < 5.46815 @ 95%CL (1 toyMC)
   68% expected band : 5.46815 < r < 5.46815
   95% expected band : 5.46815 < r < 5.46815
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 326046995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56777 +/- 0.00702194 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.56777 @ 95%CL (1 toyMC)
median expected limit: r < 3.56777 @ 95%CL (1 toyMC)
   68% expected band : 3.56777 < r < 3.56777
   95% expected band : 3.56777 < r < 3.56777
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -81480726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.58761 +/- 0.00779025 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.58761 @ 95%CL (1 toyMC)
median expected limit: r < 4.58761 @ 95%CL (1 toyMC)
   68% expected band : 4.58761 < r < 4.58761
   95% expected band : 4.58761 < r < 4.58761
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -212862806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.01036 +/- 0.00970776 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.01036 @ 95%CL (1 toyMC)
median expected limit: r < 4.01036 @ 95%CL (1 toyMC)
   68% expected band : 4.01036 < r < 4.01036
   95% expected band : 4.01036 < r < 4.01036
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1730278905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.80092 +/- 0.0101301 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.80092 @ 95%CL (1 toyMC)
median expected limit: r < 6.80092 @ 95%CL (1 toyMC)
   68% expected band : 6.80092 < r < 6.80092
   95% expected band : 6.80092 < r < 6.80092
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1284153674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.9217 +/- 0.0112648 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 5.9217 @ 95%CL (1 toyMC)
median expected limit: r < 5.9217 @ 95%CL (1 toyMC)
   68% expected band : 5.9217 < r < 5.9217
   95% expected band : 5.9217 < r < 5.9217
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -426158431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.83816 +/- 0.0108012 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 9.83816 @ 95%CL (1 toyMC)
median expected limit: r < 9.83816 @ 95%CL (1 toyMC)
   68% expected band : 9.83816 < r < 9.83816
   95% expected band : 9.83816 < r < 9.83816
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -521576244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79701 +/- 0.0105539 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.79701 @ 95%CL (1 toyMC)
median expected limit: r < 6.79701 @ 95%CL (1 toyMC)
   68% expected band : 6.79701 < r < 6.79701
   95% expected band : 6.79701 < r < 6.79701
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1173666948
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.83966 +/- 0.0144228 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 9.83966 @ 95%CL (1 toyMC)
median expected limit: r < 9.83966 @ 95%CL (1 toyMC)
   68% expected band : 9.83966 < r < 9.83966
   95% expected band : 9.83966 < r < 9.83966
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2052978999
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.00248 +/- 0.00971872 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.00248 @ 95%CL (1 toyMC)
median expected limit: r < 8.00248 @ 95%CL (1 toyMC)
   68% expected band : 8.00248 < r < 8.00248
   95% expected band : 8.00248 < r < 8.00248
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2122835789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79574 +/- 0.0110715 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.79574 @ 95%CL (1 toyMC)
median expected limit: r < 6.79574 @ 95%CL (1 toyMC)
   68% expected band : 6.79574 < r < 6.79574
   95% expected band : 6.79574 < r < 6.79574
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1763730034
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.75105 +/- 0.0108985 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.75105 @ 95%CL (1 toyMC)
median expected limit: r < 7.75105 @ 95%CL (1 toyMC)
   68% expected band : 7.75105 < r < 7.75105
   95% expected band : 7.75105 < r < 7.75105
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1349442092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.04874 +/- 0.0101512 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.04874 @ 95%CL (1 toyMC)
median expected limit: r < 4.04874 @ 95%CL (1 toyMC)
   68% expected band : 4.04874 < r < 4.04874
   95% expected band : 4.04874 < r < 4.04874
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -377410272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6205 +/- 0.0128477 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.6205 @ 95%CL (1 toyMC)
median expected limit: r < 12.6205 @ 95%CL (1 toyMC)
   68% expected band : 12.6205 < r < 12.6205
   95% expected band : 12.6205 < r < 12.6205
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 750251177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.2201 +/- 0.0112125 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 5.2201 @ 95%CL (1 toyMC)
median expected limit: r < 5.2201 @ 95%CL (1 toyMC)
   68% expected band : 5.2201 < r < 5.2201
   95% expected band : 5.2201 < r < 5.2201
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1375957564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.0006 +/- 0.010077 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.0006 @ 95%CL (1 toyMC)
median expected limit: r < 7.0006 @ 95%CL (1 toyMC)
   68% expected band : 7.0006 < r < 7.0006
   95% expected band : 7.0006 < r < 7.0006
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1822029963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2029 +/- 0.0125539 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 12.2029 @ 95%CL (1 toyMC)
median expected limit: r < 12.2029 @ 95%CL (1 toyMC)
   68% expected band : 12.2029 < r < 12.2029
   95% expected band : 12.2029 < r < 12.2029
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 744957344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77454 +/- 0.0112837 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.77454 @ 95%CL (1 toyMC)
median expected limit: r < 6.77454 @ 95%CL (1 toyMC)
   68% expected band : 6.77454 < r < 6.77454
   95% expected band : 6.77454 < r < 6.77454
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 261479847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.68037 +/- 0.012307 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.68037 @ 95%CL (1 toyMC)
median expected limit: r < 7.68037 @ 95%CL (1 toyMC)
   68% expected band : 7.68037 < r < 7.68037
   95% expected band : 7.68037 < r < 7.68037
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1989117460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.707 +/- 0.0141734 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.707 @ 95%CL (1 toyMC)
median expected limit: r < 7.707 @ 95%CL (1 toyMC)
   68% expected band : 7.707 < r < 7.707
   95% expected band : 7.707 < r < 7.707
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -699104739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8913 +/- 0.0110479 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 13.8913 @ 95%CL (1 toyMC)
median expected limit: r < 13.8913 @ 95%CL (1 toyMC)
   68% expected band : 13.8913 < r < 13.8913
   95% expected band : 13.8913 < r < 13.8913
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1204211352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.88616 +/- 0.0121059 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.88616 @ 95%CL (1 toyMC)
median expected limit: r < 9.88616 @ 95%CL (1 toyMC)
   68% expected band : 9.88616 < r < 9.88616
   95% expected band : 9.88616 < r < 9.88616
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -470428341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87768 +/- 0.0121911 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.87768 @ 95%CL (1 toyMC)
median expected limit: r < 9.87768 @ 95%CL (1 toyMC)
   68% expected band : 9.87768 < r < 9.87768
   95% expected band : 9.87768 < r < 9.87768
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 34980393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.97914 +/- 0.0147239 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.97914 @ 95%CL (1 toyMC)
median expected limit: r < 7.97914 @ 95%CL (1 toyMC)
   68% expected band : 7.97914 < r < 7.97914
   95% expected band : 7.97914 < r < 7.97914
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1474116978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.83096 +/- 0.0126243 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 9.83096 @ 95%CL (1 toyMC)
median expected limit: r < 9.83096 @ 95%CL (1 toyMC)
   68% expected band : 9.83096 < r < 9.83096
   95% expected band : 9.83096 < r < 9.83096
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1427825680
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.71219 +/- 0.0128948 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.71219 @ 95%CL (1 toyMC)
median expected limit: r < 7.71219 @ 95%CL (1 toyMC)
   68% expected band : 7.71219 < r < 7.71219
   95% expected band : 7.71219 < r < 7.71219
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1654035387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.99768 +/- 0.0123561 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 8.99768 @ 95%CL (1 toyMC)
median expected limit: r < 8.99768 @ 95%CL (1 toyMC)
   68% expected band : 8.99768 < r < 8.99768
   95% expected band : 8.99768 < r < 8.99768
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 223940336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.20468 +/- 0.00938677 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 5.20468 @ 95%CL (1 toyMC)
median expected limit: r < 5.20468 @ 95%CL (1 toyMC)
   68% expected band : 5.20468 < r < 5.20468
   95% expected band : 5.20468 < r < 5.20468
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -598401089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.04345 +/- 0.00942849 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 4.04345 @ 95%CL (1 toyMC)
median expected limit: r < 4.04345 @ 95%CL (1 toyMC)
   68% expected band : 4.04345 < r < 4.04345
   95% expected band : 4.04345 < r < 4.04345
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -555424841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.271 +/- 0.0117791 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 11.271 @ 95%CL (1 toyMC)
median expected limit: r < 11.271 @ 95%CL (1 toyMC)
   68% expected band : 11.271 < r < 11.271
   95% expected band : 11.271 < r < 11.271
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2095392693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.16613 +/- 0.01053 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 7.16613 @ 95%CL (1 toyMC)
median expected limit: r < 7.16613 @ 95%CL (1 toyMC)
   68% expected band : 7.16613 < r < 7.16613
   95% expected band : 7.16613 < r < 7.16613
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -602078886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.424 +/- 0.0129248 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 12.424 @ 95%CL (1 toyMC)
median expected limit: r < 12.424 @ 95%CL (1 toyMC)
   68% expected band : 12.424 < r < 12.424
   95% expected band : 12.424 < r < 12.424
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2075258872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03639 +/- 0.00760093 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 4.03639 @ 95%CL (1 toyMC)
median expected limit: r < 4.03639 @ 95%CL (1 toyMC)
   68% expected band : 4.03639 < r < 4.03639
   95% expected band : 4.03639 < r < 4.03639
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2045526011
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9817 +/- 0.0112033 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.9817 @ 95%CL (1 toyMC)
median expected limit: r < 10.9817 @ 95%CL (1 toyMC)
   68% expected band : 10.9817 < r < 10.9817
   95% expected band : 10.9817 < r < 10.9817
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1188752791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1253 +/- 0.0146338 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.1253 @ 95%CL (1 toyMC)
median expected limit: r < 10.1253 @ 95%CL (1 toyMC)
   68% expected band : 10.1253 < r < 10.1253
   95% expected band : 10.1253 < r < 10.1253
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1539248164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.74313 +/- 0.0143856 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.74313 @ 95%CL (1 toyMC)
median expected limit: r < 7.74313 @ 95%CL (1 toyMC)
   68% expected band : 7.74313 < r < 7.74313
   95% expected band : 7.74313 < r < 7.74313
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 846214048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.75838 +/- 0.014285 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 8.75838 @ 95%CL (1 toyMC)
median expected limit: r < 8.75838 @ 95%CL (1 toyMC)
   68% expected band : 8.75838 < r < 8.75838
   95% expected band : 8.75838 < r < 8.75838
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1528314766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.7299 +/- 0.0117963 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.7299 @ 95%CL (1 toyMC)
median expected limit: r < 7.7299 @ 95%CL (1 toyMC)
   68% expected band : 7.7299 < r < 7.7299
   95% expected band : 7.7299 < r < 7.7299
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1241006730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.21596 +/- 0.00960844 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 5.21596 @ 95%CL (1 toyMC)
median expected limit: r < 5.21596 @ 95%CL (1 toyMC)
   68% expected band : 5.21596 < r < 5.21596
   95% expected band : 5.21596 < r < 5.21596
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -862202508
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.92058 +/- 0.0116841 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.92058 @ 95%CL (1 toyMC)
median expected limit: r < 5.92058 @ 95%CL (1 toyMC)
   68% expected band : 5.92058 < r < 5.92058
   95% expected band : 5.92058 < r < 5.92058
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1154575112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.88998 +/- 0.0131576 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.88998 @ 95%CL (1 toyMC)
median expected limit: r < 9.88998 @ 95%CL (1 toyMC)
   68% expected band : 9.88998 < r < 9.88998
   95% expected band : 9.88998 < r < 9.88998
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 347453839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6504 +/- 0.0117199 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 14.6504 @ 95%CL (1 toyMC)
median expected limit: r < 14.6504 @ 95%CL (1 toyMC)
   68% expected band : 14.6504 < r < 14.6504
   95% expected band : 14.6504 < r < 14.6504
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -724243417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.01616 +/- 0.0101941 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.01616 @ 95%CL (1 toyMC)
median expected limit: r < 7.01616 @ 95%CL (1 toyMC)
   68% expected band : 7.01616 < r < 7.01616
   95% expected band : 7.01616 < r < 7.01616
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1592843055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.71897 +/- 0.0103546 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.71897 @ 95%CL (1 toyMC)
median expected limit: r < 7.71897 @ 95%CL (1 toyMC)
   68% expected band : 7.71897 < r < 7.71897
   95% expected band : 7.71897 < r < 7.71897
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -162975613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03899 +/- 0.00815438 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 4.03899 @ 95%CL (1 toyMC)
median expected limit: r < 4.03899 @ 95%CL (1 toyMC)
   68% expected band : 4.03899 < r < 4.03899
   95% expected band : 4.03899 < r < 4.03899
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 705986739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79914 +/- 0.0122668 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.79914 @ 95%CL (1 toyMC)
median expected limit: r < 6.79914 @ 95%CL (1 toyMC)
   68% expected band : 6.79914 < r < 6.79914
   95% expected band : 6.79914 < r < 6.79914
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1084075465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.55438 +/- 0.0082779 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 4.55438 @ 95%CL (1 toyMC)
median expected limit: r < 4.55438 @ 95%CL (1 toyMC)
   68% expected band : 4.55438 < r < 4.55438
   95% expected band : 4.55438 < r < 4.55438
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1146462116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6764 +/- 0.0147926 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.56 min (real)
mean   expected limit: r < 14.6764 @ 95%CL (1 toyMC)
median expected limit: r < 14.6764 @ 95%CL (1 toyMC)
   68% expected band : 14.6764 < r < 14.6764
   95% expected band : 14.6764 < r < 14.6764
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1824200103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.77363 +/- 0.0120871 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.77363 @ 95%CL (1 toyMC)
median expected limit: r < 8.77363 @ 95%CL (1 toyMC)
   68% expected band : 8.77363 < r < 8.77363
   95% expected band : 8.77363 < r < 8.77363
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1947295228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5523 +/- 0.0133412 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 13.5523 @ 95%CL (1 toyMC)
median expected limit: r < 13.5523 @ 95%CL (1 toyMC)
   68% expected band : 13.5523 < r < 13.5523
   95% expected band : 13.5523 < r < 13.5523
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2066444316
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.96179 +/- 0.0105639 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.96179 @ 95%CL (1 toyMC)
median expected limit: r < 5.96179 @ 95%CL (1 toyMC)
   68% expected band : 5.96179 < r < 5.96179
   95% expected band : 5.96179 < r < 5.96179
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 851415483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.95492 +/- 0.0130969 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.95492 @ 95%CL (1 toyMC)
median expected limit: r < 5.95492 @ 95%CL (1 toyMC)
   68% expected band : 5.95492 < r < 5.95492
   95% expected band : 5.95492 < r < 5.95492
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -916839614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.70015 +/- 0.0125382 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.70015 @ 95%CL (1 toyMC)
median expected limit: r < 7.70015 @ 95%CL (1 toyMC)
   68% expected band : 7.70015 < r < 7.70015
   95% expected band : 7.70015 < r < 7.70015
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1748800943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.76937 +/- 0.0076643 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 4.76937 @ 95%CL (1 toyMC)
median expected limit: r < 4.76937 @ 95%CL (1 toyMC)
   68% expected band : 4.76937 < r < 4.76937
   95% expected band : 4.76937 < r < 4.76937
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -981196023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.00877 +/- 0.0146018 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 9.00877 @ 95%CL (1 toyMC)
median expected limit: r < 9.00877 @ 95%CL (1 toyMC)
   68% expected band : 9.00877 < r < 9.00877
   95% expected band : 9.00877 < r < 9.00877
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 114376513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.76843 +/- 0.00896001 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 7.76843 @ 95%CL (1 toyMC)
median expected limit: r < 7.76843 @ 95%CL (1 toyMC)
   68% expected band : 7.76843 < r < 7.76843
   95% expected band : 7.76843 < r < 7.76843
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -981923803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.19079 +/- 0.00910059 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 5.19079 @ 95%CL (1 toyMC)
median expected limit: r < 5.19079 @ 95%CL (1 toyMC)
   68% expected band : 5.19079 < r < 5.19079
   95% expected band : 5.19079 < r < 5.19079
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 434776249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.21122 +/- 0.0115844 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.21122 @ 95%CL (1 toyMC)
median expected limit: r < 5.21122 @ 95%CL (1 toyMC)
   68% expected band : 5.21122 < r < 5.21122
   95% expected band : 5.21122 < r < 5.21122
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1693653828
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.77869 +/- 0.00955562 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.77869 @ 95%CL (1 toyMC)
median expected limit: r < 7.77869 @ 95%CL (1 toyMC)
   68% expected band : 7.77869 < r < 7.77869
   95% expected band : 7.77869 < r < 7.77869
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -733260595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6994 +/- 0.0099225 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.6994 @ 95%CL (1 toyMC)
median expected limit: r < 10.6994 @ 95%CL (1 toyMC)
   68% expected band : 10.6994 < r < 10.6994
   95% expected band : 10.6994 < r < 10.6994
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -856362853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.02924 +/- 0.0123605 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.02924 @ 95%CL (1 toyMC)
median expected limit: r < 9.02924 @ 95%CL (1 toyMC)
   68% expected band : 9.02924 < r < 9.02924
   95% expected band : 9.02924 < r < 9.02924
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2073145499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.42389 +/- 0.0107776 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.42389 @ 95%CL (1 toyMC)
median expected limit: r < 5.42389 @ 95%CL (1 toyMC)
   68% expected band : 5.42389 < r < 5.42389
   95% expected band : 5.42389 < r < 5.42389
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1984483130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.95636 +/- 0.0107308 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 5.95636 @ 95%CL (1 toyMC)
median expected limit: r < 5.95636 @ 95%CL (1 toyMC)
   68% expected band : 5.95636 < r < 5.95636
   95% expected band : 5.95636 < r < 5.95636
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -14372081
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.122 +/- 0.0126153 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.122 @ 95%CL (1 toyMC)
median expected limit: r < 10.122 @ 95%CL (1 toyMC)
   68% expected band : 10.122 < r < 10.122
   95% expected band : 10.122 < r < 10.122
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1152202096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9105 +/- 0.0133464 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 12.9105 @ 95%CL (1 toyMC)
median expected limit: r < 12.9105 @ 95%CL (1 toyMC)
   68% expected band : 12.9105 < r < 12.9105
   95% expected band : 12.9105 < r < 12.9105
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1327232344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.97405 +/- 0.012149 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 8.97405 @ 95%CL (1 toyMC)
median expected limit: r < 8.97405 @ 95%CL (1 toyMC)
   68% expected band : 8.97405 < r < 8.97405
   95% expected band : 8.97405 < r < 8.97405
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1492216156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.73682 +/- 0.0134393 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.73682 @ 95%CL (1 toyMC)
median expected limit: r < 8.73682 @ 95%CL (1 toyMC)
   68% expected band : 8.73682 < r < 8.73682
   95% expected band : 8.73682 < r < 8.73682
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 279647459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.83285 +/- 0.012806 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.83285 @ 95%CL (1 toyMC)
median expected limit: r < 9.83285 @ 95%CL (1 toyMC)
   68% expected band : 9.83285 < r < 9.83285
   95% expected band : 9.83285 < r < 9.83285
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -660520094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.0432 +/- 0.0121909 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.0432 @ 95%CL (1 toyMC)
median expected limit: r < 9.0432 @ 95%CL (1 toyMC)
   68% expected band : 9.0432 < r < 9.0432
   95% expected band : 9.0432 < r < 9.0432
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -554780862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.21477 +/- 0.0097886 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 6.21477 @ 95%CL (1 toyMC)
median expected limit: r < 6.21477 @ 95%CL (1 toyMC)
   68% expected band : 6.21477 < r < 6.21477
   95% expected band : 6.21477 < r < 6.21477
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -420991460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.24826 +/- 0.0123537 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 8.24826 @ 95%CL (1 toyMC)
median expected limit: r < 8.24826 @ 95%CL (1 toyMC)
   68% expected band : 8.24826 < r < 8.24826
   95% expected band : 8.24826 < r < 8.24826
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1127506757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.67165 +/- 0.0130783 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.67165 @ 95%CL (1 toyMC)
median expected limit: r < 9.67165 @ 95%CL (1 toyMC)
   68% expected band : 9.67165 < r < 9.67165
   95% expected band : 9.67165 < r < 9.67165
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 554443558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.94241 +/- 0.00850169 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 5.94241 @ 95%CL (1 toyMC)
median expected limit: r < 5.94241 @ 95%CL (1 toyMC)
   68% expected band : 5.94241 < r < 5.94241
   95% expected band : 5.94241 < r < 5.94241
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1281057937
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3721 +/- 0.012248 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.3721 @ 95%CL (1 toyMC)
median expected limit: r < 10.3721 @ 95%CL (1 toyMC)
   68% expected band : 10.3721 < r < 10.3721
   95% expected band : 10.3721 < r < 10.3721
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1702994244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79892 +/- 0.0137522 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 6.79892 @ 95%CL (1 toyMC)
median expected limit: r < 6.79892 @ 95%CL (1 toyMC)
   68% expected band : 6.79892 < r < 6.79892
   95% expected band : 6.79892 < r < 6.79892
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -532589716
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5855 +/- 0.0187173 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 11.5855 @ 95%CL (1 toyMC)
median expected limit: r < 11.5855 @ 95%CL (1 toyMC)
   68% expected band : 11.5855 < r < 11.5855
   95% expected band : 11.5855 < r < 11.5855
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -433068896
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9117 +/- 0.0156886 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 12.9117 @ 95%CL (1 toyMC)
median expected limit: r < 12.9117 @ 95%CL (1 toyMC)
   68% expected band : 12.9117 < r < 12.9117
   95% expected band : 12.9117 < r < 12.9117
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1094165071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7632 +/- 0.0125083 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 14.7632 @ 95%CL (1 toyMC)
median expected limit: r < 14.7632 @ 95%CL (1 toyMC)
   68% expected band : 14.7632 < r < 14.7632
   95% expected band : 14.7632 < r < 14.7632
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2038970648
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0096 +/- 0.00664414 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 18.0096 @ 95%CL (1 toyMC)
median expected limit: r < 18.0096 @ 95%CL (1 toyMC)
   68% expected band : 18.0096 < r < 18.0096
   95% expected band : 18.0096 < r < 18.0096
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2125010833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8898 +/- 0.0162794 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.8898 @ 95%CL (1 toyMC)
median expected limit: r < 10.8898 @ 95%CL (1 toyMC)
   68% expected band : 10.8898 < r < 10.8898
   95% expected band : 10.8898 < r < 10.8898
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1601964885
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4202 +/- 0.0183739 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 13.4202 @ 95%CL (1 toyMC)
median expected limit: r < 13.4202 @ 95%CL (1 toyMC)
   68% expected band : 13.4202 < r < 13.4202
   95% expected band : 13.4202 < r < 13.4202
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1197530550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7672 +/- 0.0149964 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 14.7672 @ 95%CL (1 toyMC)
median expected limit: r < 14.7672 @ 95%CL (1 toyMC)
   68% expected band : 14.7672 < r < 14.7672
   95% expected band : 14.7672 < r < 14.7672
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2129081348
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.539 +/- 0.0114943 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 15.539 @ 95%CL (1 toyMC)
median expected limit: r < 15.539 @ 95%CL (1 toyMC)
   68% expected band : 15.539 < r < 15.539
   95% expected band : 15.539 < r < 15.539
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1200595979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.5082 +/- 0.0155712 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.5082 @ 95%CL (1 toyMC)
median expected limit: r < 9.5082 @ 95%CL (1 toyMC)
   68% expected band : 9.5082 < r < 9.5082
   95% expected band : 9.5082 < r < 9.5082
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 278255458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.48613 +/- 0.0170389 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.48613 @ 95%CL (1 toyMC)
median expected limit: r < 9.48613 @ 95%CL (1 toyMC)
   68% expected band : 9.48613 < r < 9.48613
   95% expected band : 9.48613 < r < 9.48613
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -244371605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9212 +/- 0.0156594 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.9212 @ 95%CL (1 toyMC)
median expected limit: r < 12.9212 @ 95%CL (1 toyMC)
   68% expected band : 12.9212 < r < 12.9212
   95% expected band : 12.9212 < r < 12.9212
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1250398840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.741 +/- 0.0141381 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.741 @ 95%CL (1 toyMC)
median expected limit: r < 10.741 @ 95%CL (1 toyMC)
   68% expected band : 10.741 < r < 10.741
   95% expected band : 10.741 < r < 10.741
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1044719351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.40278 +/- 0.0162115 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 8.40278 @ 95%CL (1 toyMC)
median expected limit: r < 8.40278 @ 95%CL (1 toyMC)
   68% expected band : 8.40278 < r < 8.40278
   95% expected band : 8.40278 < r < 8.40278
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1588419563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7151 +/- 0.0198331 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.7151 @ 95%CL (1 toyMC)
median expected limit: r < 10.7151 @ 95%CL (1 toyMC)
   68% expected band : 10.7151 < r < 10.7151
   95% expected band : 10.7151 < r < 10.7151
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1516289195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.33983 +/- 0.0166847 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.33983 @ 95%CL (1 toyMC)
median expected limit: r < 8.33983 @ 95%CL (1 toyMC)
   68% expected band : 8.33983 < r < 8.33983
   95% expected band : 8.33983 < r < 8.33983
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -469974785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7207 +/- 0.0194246 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.7207 @ 95%CL (1 toyMC)
median expected limit: r < 10.7207 @ 95%CL (1 toyMC)
   68% expected band : 10.7207 < r < 10.7207
   95% expected band : 10.7207 < r < 10.7207
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -55473650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.723 +/- 0.019033 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.723 @ 95%CL (1 toyMC)
median expected limit: r < 10.723 @ 95%CL (1 toyMC)
   68% expected band : 10.723 < r < 10.723
   95% expected band : 10.723 < r < 10.723
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1812782111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9194 +/- 0.0115492 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 15.9194 @ 95%CL (1 toyMC)
median expected limit: r < 15.9194 @ 95%CL (1 toyMC)
   68% expected band : 15.9194 < r < 15.9194
   95% expected band : 15.9194 < r < 15.9194
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -559827286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.714 +/- 0.0161954 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.714 @ 95%CL (1 toyMC)
median expected limit: r < 10.714 @ 95%CL (1 toyMC)
   68% expected band : 10.714 < r < 10.714
   95% expected band : 10.714 < r < 10.714
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1555814992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.4613 +/- 0.0176285 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.4613 @ 95%CL (1 toyMC)
median expected limit: r < 7.4613 @ 95%CL (1 toyMC)
   68% expected band : 7.4613 < r < 7.4613
   95% expected band : 7.4613 < r < 7.4613
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1336045373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.4543 +/- 0.0167872 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.4543 @ 95%CL (1 toyMC)
median expected limit: r < 9.4543 @ 95%CL (1 toyMC)
   68% expected band : 9.4543 < r < 9.4543
   95% expected band : 9.4543 < r < 9.4543
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1801318174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9386 +/- 0.00916084 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 16.9386 @ 95%CL (1 toyMC)
median expected limit: r < 16.9386 @ 95%CL (1 toyMC)
   68% expected band : 16.9386 < r < 16.9386
   95% expected band : 16.9386 < r < 16.9386
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1086884967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2159 +/- 0.0151146 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 14.2159 @ 95%CL (1 toyMC)
median expected limit: r < 14.2159 @ 95%CL (1 toyMC)
   68% expected band : 14.2159 < r < 14.2159
   95% expected band : 14.2159 < r < 14.2159
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1647301375
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.478 +/- 0.0178961 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.478 @ 95%CL (1 toyMC)
median expected limit: r < 9.478 @ 95%CL (1 toyMC)
   68% expected band : 9.478 < r < 9.478
   95% expected band : 9.478 < r < 9.478
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1007444977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.45777 +/- 0.0165159 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.45777 @ 95%CL (1 toyMC)
median expected limit: r < 7.45777 @ 95%CL (1 toyMC)
   68% expected band : 7.45777 < r < 7.45777
   95% expected band : 7.45777 < r < 7.45777
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1174600922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6786 +/- 0.015166 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.6786 @ 95%CL (1 toyMC)
median expected limit: r < 10.6786 @ 95%CL (1 toyMC)
   68% expected band : 10.6786 < r < 10.6786
   95% expected band : 10.6786 < r < 10.6786
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1088741377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3219 +/- 0.0164613 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.3219 @ 95%CL (1 toyMC)
median expected limit: r < 10.3219 @ 95%CL (1 toyMC)
   68% expected band : 10.3219 < r < 10.3219
   95% expected band : 10.3219 < r < 10.3219
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1165349678
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.40657 +/- 0.0140633 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.40657 @ 95%CL (1 toyMC)
median expected limit: r < 8.40657 @ 95%CL (1 toyMC)
   68% expected band : 8.40657 < r < 8.40657
   95% expected band : 8.40657 < r < 8.40657
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1224500443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0593 +/- 0.01647 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 12.0593 @ 95%CL (1 toyMC)
median expected limit: r < 12.0593 @ 95%CL (1 toyMC)
   68% expected band : 12.0593 < r < 12.0593
   95% expected band : 12.0593 < r < 12.0593
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 296269837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6997 +/- 0.0160625 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.6997 @ 95%CL (1 toyMC)
median expected limit: r < 10.6997 @ 95%CL (1 toyMC)
   68% expected band : 10.6997 < r < 10.6997
   95% expected band : 10.6997 < r < 10.6997
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -449617157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4643 +/- 0.0124743 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 15.4643 @ 95%CL (1 toyMC)
median expected limit: r < 15.4643 @ 95%CL (1 toyMC)
   68% expected band : 15.4643 < r < 15.4643
   95% expected band : 15.4643 < r < 15.4643
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1527038799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7732 +/- 0.0151888 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 14.7732 @ 95%CL (1 toyMC)
median expected limit: r < 14.7732 @ 95%CL (1 toyMC)
   68% expected band : 14.7732 < r < 14.7732
   95% expected band : 14.7732 < r < 14.7732
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 156068742
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.3672 +/- 0.0152101 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 8.3672 @ 95%CL (1 toyMC)
median expected limit: r < 8.3672 @ 95%CL (1 toyMC)
   68% expected band : 8.3672 < r < 8.3672
   95% expected band : 8.3672 < r < 8.3672
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1600994630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.50323 +/- 0.020552 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.50323 @ 95%CL (1 toyMC)
median expected limit: r < 9.50323 @ 95%CL (1 toyMC)
   68% expected band : 9.50323 < r < 9.50323
   95% expected band : 9.50323 < r < 9.50323
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1681551528
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3804 +/- 0.0143779 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 13.3804 @ 95%CL (1 toyMC)
median expected limit: r < 13.3804 @ 95%CL (1 toyMC)
   68% expected band : 13.3804 < r < 13.3804
   95% expected band : 13.3804 < r < 13.3804
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1281326693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5237 +/- 0.008499 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 16.5237 @ 95%CL (1 toyMC)
median expected limit: r < 16.5237 @ 95%CL (1 toyMC)
   68% expected band : 16.5237 < r < 16.5237
   95% expected band : 16.5237 < r < 16.5237
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -806792499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7017 +/- 0.00509385 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 17.7017 @ 95%CL (1 toyMC)
median expected limit: r < 17.7017 @ 95%CL (1 toyMC)
   68% expected band : 17.7017 < r < 17.7017
   95% expected band : 17.7017 < r < 17.7017
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 334878509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.23034 +/- 0.0128882 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.23034 @ 95%CL (1 toyMC)
median expected limit: r < 7.23034 @ 95%CL (1 toyMC)
   68% expected band : 7.23034 < r < 7.23034
   95% expected band : 7.23034 < r < 7.23034
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -139732405
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0439 +/- 0.0152668 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 12.0439 @ 95%CL (1 toyMC)
median expected limit: r < 12.0439 @ 95%CL (1 toyMC)
   68% expected band : 12.0439 < r < 12.0439
   95% expected band : 12.0439 < r < 12.0439
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -617044444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7121 +/- 0.00449113 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 18.7121 @ 95%CL (1 toyMC)
median expected limit: r < 18.7121 @ 95%CL (1 toyMC)
   68% expected band : 18.7121 < r < 18.7121
   95% expected band : 18.7121 < r < 18.7121
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 452532472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3535 +/- 0.0078097 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 17.3535 @ 95%CL (1 toyMC)
median expected limit: r < 17.3535 @ 95%CL (1 toyMC)
   68% expected band : 17.3535 < r < 17.3535
   95% expected band : 17.3535 < r < 17.3535
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1724557314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7624 +/- 0.0161838 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 10.7624 @ 95%CL (1 toyMC)
median expected limit: r < 10.7624 @ 95%CL (1 toyMC)
   68% expected band : 10.7624 < r < 10.7624
   95% expected band : 10.7624 < r < 10.7624
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -130173319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.51239 +/- 0.018413 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.51239 @ 95%CL (1 toyMC)
median expected limit: r < 9.51239 @ 95%CL (1 toyMC)
   68% expected band : 9.51239 < r < 9.51239
   95% expected band : 9.51239 < r < 9.51239
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1280098296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6851 +/- 0.0183044 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.6851 @ 95%CL (1 toyMC)
median expected limit: r < 10.6851 @ 95%CL (1 toyMC)
   68% expected band : 10.6851 < r < 10.6851
   95% expected band : 10.6851 < r < 10.6851
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -918413086
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.40525 +/- 0.012932 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.40525 @ 95%CL (1 toyMC)
median expected limit: r < 8.40525 @ 95%CL (1 toyMC)
   68% expected band : 8.40525 < r < 8.40525
   95% expected band : 8.40525 < r < 8.40525
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1819447413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.20315 +/- 0.0168762 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.20315 @ 95%CL (1 toyMC)
median expected limit: r < 9.20315 @ 95%CL (1 toyMC)
   68% expected band : 9.20315 < r < 9.20315
   95% expected band : 9.20315 < r < 9.20315
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1989342439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.49675 +/- 0.0175634 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.49675 @ 95%CL (1 toyMC)
median expected limit: r < 9.49675 @ 95%CL (1 toyMC)
   68% expected band : 9.49675 < r < 9.49675
   95% expected band : 9.49675 < r < 9.49675
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 668485242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8974 +/- 0.00803394 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 16.8974 @ 95%CL (1 toyMC)
median expected limit: r < 16.8974 @ 95%CL (1 toyMC)
   68% expected band : 16.8974 < r < 16.8974
   95% expected band : 16.8974 < r < 16.8974
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1321343048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.673 +/- 0.0192014 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.673 @ 95%CL (1 toyMC)
median expected limit: r < 10.673 @ 95%CL (1 toyMC)
   68% expected band : 10.673 < r < 10.673
   95% expected band : 10.673 < r < 10.673
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 225310161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.50366 +/- 0.0165511 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.50366 @ 95%CL (1 toyMC)
median expected limit: r < 9.50366 @ 95%CL (1 toyMC)
   68% expected band : 9.50366 < r < 9.50366
   95% expected band : 9.50366 < r < 9.50366
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -364803467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.42582 +/- 0.0132332 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.42582 @ 95%CL (1 toyMC)
median expected limit: r < 8.42582 @ 95%CL (1 toyMC)
   68% expected band : 8.42582 < r < 8.42582
   95% expected band : 8.42582 < r < 8.42582
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1490663495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7221 +/- 0.0147225 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.7221 @ 95%CL (1 toyMC)
median expected limit: r < 10.7221 @ 95%CL (1 toyMC)
   68% expected band : 10.7221 < r < 10.7221
   95% expected band : 10.7221 < r < 10.7221
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1398861321
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2913 +/- 0.0126575 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 14.2913 @ 95%CL (1 toyMC)
median expected limit: r < 14.2913 @ 95%CL (1 toyMC)
   68% expected band : 14.2913 < r < 14.2913
   95% expected band : 14.2913 < r < 14.2913
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1748320144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7173 +/- 0.0147055 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.7173 @ 95%CL (1 toyMC)
median expected limit: r < 10.7173 @ 95%CL (1 toyMC)
   68% expected band : 10.7173 < r < 10.7173
   95% expected band : 10.7173 < r < 10.7173
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 259891305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3829 +/- 0.0165515 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.3829 @ 95%CL (1 toyMC)
median expected limit: r < 10.3829 @ 95%CL (1 toyMC)
   68% expected band : 10.3829 < r < 10.3829
   95% expected band : 10.3829 < r < 10.3829
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1478612221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1946 +/- 0.0136834 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 14.1946 @ 95%CL (1 toyMC)
median expected limit: r < 14.1946 @ 95%CL (1 toyMC)
   68% expected band : 14.1946 < r < 14.1946
   95% expected band : 14.1946 < r < 14.1946
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1520444718
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4394 +/- 0.0128358 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 13.4394 @ 95%CL (1 toyMC)
median expected limit: r < 13.4394 @ 95%CL (1 toyMC)
   68% expected band : 13.4394 < r < 13.4394
   95% expected band : 13.4394 < r < 13.4394
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -979045691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8983 +/- 0.0191502 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.8983 @ 95%CL (1 toyMC)
median expected limit: r < 12.8983 @ 95%CL (1 toyMC)
   68% expected band : 12.8983 < r < 12.8983
   95% expected band : 12.8983 < r < 12.8983
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -501314722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4212 +/- 0.0100907 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 15.4212 @ 95%CL (1 toyMC)
median expected limit: r < 15.4212 @ 95%CL (1 toyMC)
   68% expected band : 15.4212 < r < 15.4212
   95% expected band : 15.4212 < r < 15.4212
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1541546277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3374 +/- 0.0151944 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 10.3374 @ 95%CL (1 toyMC)
median expected limit: r < 10.3374 @ 95%CL (1 toyMC)
   68% expected band : 10.3374 < r < 10.3374
   95% expected band : 10.3374 < r < 10.3374
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 960015191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.446 +/- 0.0134028 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.446 @ 95%CL (1 toyMC)
median expected limit: r < 12.446 @ 95%CL (1 toyMC)
   68% expected band : 12.446 < r < 12.446
   95% expected band : 12.446 < r < 12.446
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -549041540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0765 +/- 0.0217083 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 12.0765 @ 95%CL (1 toyMC)
median expected limit: r < 12.0765 @ 95%CL (1 toyMC)
   68% expected band : 12.0765 < r < 12.0765
   95% expected band : 12.0765 < r < 12.0765
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 289806874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9349 +/- 0.0142021 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 12.9349 @ 95%CL (1 toyMC)
median expected limit: r < 12.9349 @ 95%CL (1 toyMC)
   68% expected band : 12.9349 < r < 12.9349
   95% expected band : 12.9349 < r < 12.9349
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1375494154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7432 +/- 0.0161045 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.7432 @ 95%CL (1 toyMC)
median expected limit: r < 10.7432 @ 95%CL (1 toyMC)
   68% expected band : 10.7432 < r < 10.7432
   95% expected band : 10.7432 < r < 10.7432
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -163980851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.994 +/- 0.0154618 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.994 @ 95%CL (1 toyMC)
median expected limit: r < 11.994 @ 95%CL (1 toyMC)
   68% expected band : 11.994 < r < 11.994
   95% expected band : 11.994 < r < 11.994
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 300928407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4231 +/- 0.0165831 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.4231 @ 95%CL (1 toyMC)
median expected limit: r < 13.4231 @ 95%CL (1 toyMC)
   68% expected band : 13.4231 < r < 13.4231
   95% expected band : 13.4231 < r < 13.4231
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1151271455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.61812 +/- 0.0148271 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.61812 @ 95%CL (1 toyMC)
median expected limit: r < 6.61812 @ 95%CL (1 toyMC)
   68% expected band : 6.61812 < r < 6.61812
   95% expected band : 6.61812 < r < 6.61812
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1989282650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8981 +/- 0.0137956 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.8981 @ 95%CL (1 toyMC)
median expected limit: r < 12.8981 @ 95%CL (1 toyMC)
   68% expected band : 12.8981 < r < 12.8981
   95% expected band : 12.8981 < r < 12.8981
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2000969517
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.39 +/- 0.0150582 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.39 @ 95%CL (1 toyMC)
median expected limit: r < 13.39 @ 95%CL (1 toyMC)
   68% expected band : 13.39 < r < 13.39
   95% expected band : 13.39 < r < 13.39
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1297965459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.49778 +/- 0.0182312 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.49778 @ 95%CL (1 toyMC)
median expected limit: r < 9.49778 @ 95%CL (1 toyMC)
   68% expected band : 9.49778 < r < 9.49778
   95% expected band : 9.49778 < r < 9.49778
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 968632037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.51075 +/- 0.014858 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 9.51075 @ 95%CL (1 toyMC)
median expected limit: r < 9.51075 @ 95%CL (1 toyMC)
   68% expected band : 9.51075 < r < 9.51075
   95% expected band : 9.51075 < r < 9.51075
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 469611733
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3484 +/- 0.00613786 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 17.3484 @ 95%CL (1 toyMC)
median expected limit: r < 17.3484 @ 95%CL (1 toyMC)
   68% expected band : 17.3484 < r < 17.3484
   95% expected band : 17.3484 < r < 17.3484
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -266426298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4417 +/- 0.0102937 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 15.4417 @ 95%CL (1 toyMC)
median expected limit: r < 15.4417 @ 95%CL (1 toyMC)
   68% expected band : 15.4417 < r < 15.4417
   95% expected band : 15.4417 < r < 15.4417
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -174604429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8883 +/- 0.0139532 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.8883 @ 95%CL (1 toyMC)
median expected limit: r < 12.8883 @ 95%CL (1 toyMC)
   68% expected band : 12.8883 < r < 12.8883
   95% expected band : 12.8883 < r < 12.8883
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 680223627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0715 +/- 0.0160854 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 12.0715 @ 95%CL (1 toyMC)
median expected limit: r < 12.0715 @ 95%CL (1 toyMC)
   68% expected band : 12.0715 < r < 12.0715
   95% expected band : 12.0715 < r < 12.0715
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1503986947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4622 +/- 0.0150802 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.4622 @ 95%CL (1 toyMC)
median expected limit: r < 13.4622 @ 95%CL (1 toyMC)
   68% expected band : 13.4622 < r < 13.4622
   95% expected band : 13.4622 < r < 13.4622
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -272003294
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.46457 +/- 0.0135957 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.46457 @ 95%CL (1 toyMC)
median expected limit: r < 9.46457 @ 95%CL (1 toyMC)
   68% expected band : 9.46457 < r < 9.46457
   95% expected band : 9.46457 < r < 9.46457
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1196621352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6976 +/- 0.00589943 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 17.6976 @ 95%CL (1 toyMC)
median expected limit: r < 17.6976 @ 95%CL (1 toyMC)
   68% expected band : 17.6976 < r < 17.6976
   95% expected band : 17.6976 < r < 17.6976
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -709280364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.43859 +/- 0.0177223 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.43859 @ 95%CL (1 toyMC)
median expected limit: r < 9.43859 @ 95%CL (1 toyMC)
   68% expected band : 9.43859 < r < 9.43859
   95% expected band : 9.43859 < r < 9.43859
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -454255319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9587 +/- 0.00629379 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 16.9587 @ 95%CL (1 toyMC)
median expected limit: r < 16.9587 @ 95%CL (1 toyMC)
   68% expected band : 16.9587 < r < 16.9587
   95% expected band : 16.9587 < r < 16.9587
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -582980887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9104 +/- 0.0116707 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.9104 @ 95%CL (1 toyMC)
median expected limit: r < 12.9104 @ 95%CL (1 toyMC)
   68% expected band : 12.9104 < r < 12.9104
   95% expected band : 12.9104 < r < 12.9104
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1217096807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3844 +/- 0.0123815 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.3844 @ 95%CL (1 toyMC)
median expected limit: r < 13.3844 @ 95%CL (1 toyMC)
   68% expected band : 13.3844 < r < 13.3844
   95% expected band : 13.3844 < r < 13.3844
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 958036454
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7847 +/- 0.00998707 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 15.7847 @ 95%CL (1 toyMC)
median expected limit: r < 15.7847 @ 95%CL (1 toyMC)
   68% expected band : 15.7847 < r < 15.7847
   95% expected band : 15.7847 < r < 15.7847
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1382261765
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.41315 +/- 0.0140202 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.41315 @ 95%CL (1 toyMC)
median expected limit: r < 7.41315 @ 95%CL (1 toyMC)
   68% expected band : 7.41315 < r < 7.41315
   95% expected band : 7.41315 < r < 7.41315
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1211152279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4565 +/- 0.0142847 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.4565 @ 95%CL (1 toyMC)
median expected limit: r < 13.4565 @ 95%CL (1 toyMC)
   68% expected band : 13.4565 < r < 13.4565
   95% expected band : 13.4565 < r < 13.4565
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 666028798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.286 +/- 0.00516575 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 18.286 @ 95%CL (1 toyMC)
median expected limit: r < 18.286 @ 95%CL (1 toyMC)
   68% expected band : 18.286 < r < 18.286
   95% expected band : 18.286 < r < 18.286
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1142122438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2034 +/- 0.0119364 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 14.2034 @ 95%CL (1 toyMC)
median expected limit: r < 14.2034 @ 95%CL (1 toyMC)
   68% expected band : 14.2034 < r < 14.2034
   95% expected band : 14.2034 < r < 14.2034
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1197794184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.80567 +/- 0.0158796 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 9.80567 @ 95%CL (1 toyMC)
median expected limit: r < 9.80567 @ 95%CL (1 toyMC)
   68% expected band : 9.80567 < r < 9.80567
   95% expected band : 9.80567 < r < 9.80567
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1351549669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7214 +/- 0.0136458 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 14.7214 @ 95%CL (1 toyMC)
median expected limit: r < 14.7214 @ 95%CL (1 toyMC)
   68% expected band : 14.7214 < r < 14.7214
   95% expected band : 14.7214 < r < 14.7214
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -638836192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4669 +/- 0.00528319 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 18.4669 @ 95%CL (1 toyMC)
median expected limit: r < 18.4669 @ 95%CL (1 toyMC)
   68% expected band : 18.4669 < r < 18.4669
   95% expected band : 18.4669 < r < 18.4669
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -699502924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7633 +/- 0.0129401 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 14.7633 @ 95%CL (1 toyMC)
median expected limit: r < 14.7633 @ 95%CL (1 toyMC)
   68% expected band : 14.7633 < r < 14.7633
   95% expected band : 14.7633 < r < 14.7633
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 728152973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2263 +/- 0.0114678 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 14.2263 @ 95%CL (1 toyMC)
median expected limit: r < 14.2263 @ 95%CL (1 toyMC)
   68% expected band : 14.2263 < r < 14.2263
   95% expected band : 14.2263 < r < 14.2263
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1678273329
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2511 +/- 0.00549293 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 18.2511 @ 95%CL (1 toyMC)
median expected limit: r < 18.2511 @ 95%CL (1 toyMC)
   68% expected band : 18.2511 < r < 18.2511
   95% expected band : 18.2511 < r < 18.2511
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1616307566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.43183 +/- 0.0122136 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.43183 @ 95%CL (1 toyMC)
median expected limit: r < 7.43183 @ 95%CL (1 toyMC)
   68% expected band : 7.43183 < r < 7.43183
   95% expected band : 7.43183 < r < 7.43183
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1946543640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0705 +/- 0.0160689 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.0705 @ 95%CL (1 toyMC)
median expected limit: r < 12.0705 @ 95%CL (1 toyMC)
   68% expected band : 12.0705 < r < 12.0705
   95% expected band : 12.0705 < r < 12.0705
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1555508292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7409 +/- 0.0168594 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.7409 @ 95%CL (1 toyMC)
median expected limit: r < 10.7409 @ 95%CL (1 toyMC)
   68% expected band : 10.7409 < r < 10.7409
   95% expected band : 10.7409 < r < 10.7409
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1183759609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9262 +/- 0.00951163 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 15.9262 @ 95%CL (1 toyMC)
median expected limit: r < 15.9262 @ 95%CL (1 toyMC)
   68% expected band : 15.9262 < r < 15.9262
   95% expected band : 15.9262 < r < 15.9262
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1675742414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3414 +/- 0.0179912 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 10.3414 @ 95%CL (1 toyMC)
median expected limit: r < 10.3414 @ 95%CL (1 toyMC)
   68% expected band : 10.3414 < r < 10.3414
   95% expected band : 10.3414 < r < 10.3414
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -25037810
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.49084 +/- 0.019199 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.49084 @ 95%CL (1 toyMC)
median expected limit: r < 9.49084 @ 95%CL (1 toyMC)
   68% expected band : 9.49084 < r < 9.49084
   95% expected band : 9.49084 < r < 9.49084
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1976356938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6985 +/- 0.0193119 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.6985 @ 95%CL (1 toyMC)
median expected limit: r < 10.6985 @ 95%CL (1 toyMC)
   68% expected band : 10.6985 < r < 10.6985
   95% expected band : 10.6985 < r < 10.6985
>>>> Finished computing CI MCMC with Lambda = 100
