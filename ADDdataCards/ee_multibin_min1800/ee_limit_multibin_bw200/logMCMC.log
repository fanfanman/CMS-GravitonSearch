 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 782868368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.177551 +/- 0.00346163 @ 95% CL (98 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 0.177551 @ 95%CL (1 toyMC)
median expected limit: r < 0.177551 @ 95%CL (1 toyMC)
   68% expected band : 0.177551 < r < 0.177551
   95% expected band : 0.177551 < r < 0.177551
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1490744384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.212874 +/- 0.00250684 @ 95% CL (100 tries)
Done in 0.74 min (cpu), 0.74 min (real)
mean   expected limit: r < 0.212874 @ 95%CL (1 toyMC)
median expected limit: r < 0.212874 @ 95%CL (1 toyMC)
   68% expected band : 0.212874 < r < 0.212874
   95% expected band : 0.212874 < r < 0.212874
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1378579478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.244236 +/- 0.00221737 @ 95% CL (100 tries)
Done in 0.74 min (cpu), 0.74 min (real)
mean   expected limit: r < 0.244236 @ 95%CL (1 toyMC)
median expected limit: r < 0.244236 @ 95%CL (1 toyMC)
   68% expected band : 0.244236 < r < 0.244236
   95% expected band : 0.244236 < r < 0.244236
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1592680940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.21953 +/- 0.00333932 @ 95% CL (100 tries)
Done in 0.75 min (cpu), 0.76 min (real)
mean   expected limit: r < 0.21953 @ 95%CL (1 toyMC)
median expected limit: r < 0.21953 @ 95%CL (1 toyMC)
   68% expected band : 0.21953 < r < 0.21953
   95% expected band : 0.21953 < r < 0.21953
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 746316040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.334057 +/- 0.00234831 @ 95% CL (100 tries)
Done in 0.75 min (cpu), 0.75 min (real)
mean   expected limit: r < 0.334057 @ 95%CL (1 toyMC)
median expected limit: r < 0.334057 @ 95%CL (1 toyMC)
   68% expected band : 0.334057 < r < 0.334057
   95% expected band : 0.334057 < r < 0.334057
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 259670548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.17366 +/- 0.00378211 @ 95% CL (96 tries)
Done in 1.65 min (cpu), 1.66 min (real)
mean   expected limit: r < 0.17366 @ 95%CL (1 toyMC)
median expected limit: r < 0.17366 @ 95%CL (1 toyMC)
   68% expected band : 0.17366 < r < 0.17366
   95% expected band : 0.17366 < r < 0.17366
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1562734710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.227683 +/- 0.00227035 @ 95% CL (100 tries)
Done in 0.76 min (cpu), 0.76 min (real)
mean   expected limit: r < 0.227683 @ 95%CL (1 toyMC)
median expected limit: r < 0.227683 @ 95%CL (1 toyMC)
   68% expected band : 0.227683 < r < 0.227683
   95% expected band : 0.227683 < r < 0.227683
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 473097149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.404607 +/- 0.0021329 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.404607 @ 95%CL (1 toyMC)
median expected limit: r < 0.404607 @ 95%CL (1 toyMC)
   68% expected band : 0.404607 < r < 0.404607
   95% expected band : 0.404607 < r < 0.404607
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -892125626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.304689 +/- 0.00267552 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.304689 @ 95%CL (1 toyMC)
median expected limit: r < 0.304689 @ 95%CL (1 toyMC)
   68% expected band : 0.304689 < r < 0.304689
   95% expected band : 0.304689 < r < 0.304689
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -489283402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.352941 +/- 0.00210969 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.352941 @ 95%CL (1 toyMC)
median expected limit: r < 0.352941 @ 95%CL (1 toyMC)
   68% expected band : 0.352941 < r < 0.352941
   95% expected band : 0.352941 < r < 0.352941
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1717170436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.190233 +/- 0.00347101 @ 95% CL (99 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.190233 @ 95%CL (1 toyMC)
median expected limit: r < 0.190233 @ 95%CL (1 toyMC)
   68% expected band : 0.190233 < r < 0.190233
   95% expected band : 0.190233 < r < 0.190233
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1565348805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.283052 +/- 0.00209242 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.283052 @ 95%CL (1 toyMC)
median expected limit: r < 0.283052 @ 95%CL (1 toyMC)
   68% expected band : 0.283052 < r < 0.283052
   95% expected band : 0.283052 < r < 0.283052
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 662243635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.241966 +/- 0.00225252 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.241966 @ 95%CL (1 toyMC)
median expected limit: r < 0.241966 @ 95%CL (1 toyMC)
   68% expected band : 0.241966 < r < 0.241966
   95% expected band : 0.241966 < r < 0.241966
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1285391713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.252944 +/- 0.00203855 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.252944 @ 95%CL (1 toyMC)
median expected limit: r < 0.252944 @ 95%CL (1 toyMC)
   68% expected band : 0.252944 < r < 0.252944
   95% expected band : 0.252944 < r < 0.252944
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1082649638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.187089 +/- 0.00359298 @ 95% CL (98 tries)
Done in 1.17 min (cpu), 1.18 min (real)
mean   expected limit: r < 0.187089 @ 95%CL (1 toyMC)
median expected limit: r < 0.187089 @ 95%CL (1 toyMC)
   68% expected band : 0.187089 < r < 0.187089
   95% expected band : 0.187089 < r < 0.187089
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1626091998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.26121 +/- 0.00203221 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.26121 @ 95%CL (1 toyMC)
median expected limit: r < 0.26121 @ 95%CL (1 toyMC)
   68% expected band : 0.26121 < r < 0.26121
   95% expected band : 0.26121 < r < 0.26121
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -861667787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.251657 +/- 0.0020108 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.251657 @ 95%CL (1 toyMC)
median expected limit: r < 0.251657 @ 95%CL (1 toyMC)
   68% expected band : 0.251657 < r < 0.251657
   95% expected band : 0.251657 < r < 0.251657
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1923124847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.194655 +/- 0.00342307 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.194655 @ 95%CL (1 toyMC)
median expected limit: r < 0.194655 @ 95%CL (1 toyMC)
   68% expected band : 0.194655 < r < 0.194655
   95% expected band : 0.194655 < r < 0.194655
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -872234509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.188337 +/- 0.00397183 @ 95% CL (100 tries)
Done in 0.77 min (cpu), 0.77 min (real)
mean   expected limit: r < 0.188337 @ 95%CL (1 toyMC)
median expected limit: r < 0.188337 @ 95%CL (1 toyMC)
   68% expected band : 0.188337 < r < 0.188337
   95% expected band : 0.188337 < r < 0.188337
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 308278247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.328503 +/- 0.00228299 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.328503 @ 95%CL (1 toyMC)
median expected limit: r < 0.328503 @ 95%CL (1 toyMC)
   68% expected band : 0.328503 < r < 0.328503
   95% expected band : 0.328503 < r < 0.328503
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 506306462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.215169 +/- 0.00355053 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.215169 @ 95%CL (1 toyMC)
median expected limit: r < 0.215169 @ 95%CL (1 toyMC)
   68% expected band : 0.215169 < r < 0.215169
   95% expected band : 0.215169 < r < 0.215169
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1470164913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.375643 +/- 0.00242507 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.375643 @ 95%CL (1 toyMC)
median expected limit: r < 0.375643 @ 95%CL (1 toyMC)
   68% expected band : 0.375643 < r < 0.375643
   95% expected band : 0.375643 < r < 0.375643
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1216843804
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.165057 +/- 0.00305456 @ 95% CL (95 tries)
Done in 1.46 min (cpu), 1.47 min (real)
mean   expected limit: r < 0.165057 @ 95%CL (1 toyMC)
median expected limit: r < 0.165057 @ 95%CL (1 toyMC)
   68% expected band : 0.165057 < r < 0.165057
   95% expected band : 0.165057 < r < 0.165057
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1056488250
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.334687 +/- 0.00287819 @ 95% CL (100 tries)
Done in 0.77 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.334687 @ 95%CL (1 toyMC)
median expected limit: r < 0.334687 @ 95%CL (1 toyMC)
   68% expected band : 0.334687 < r < 0.334687
   95% expected band : 0.334687 < r < 0.334687
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1540907168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.25331 +/- 0.00257549 @ 95% CL (100 tries)
Done in 0.77 min (cpu), 0.77 min (real)
mean   expected limit: r < 0.25331 @ 95%CL (1 toyMC)
median expected limit: r < 0.25331 @ 95%CL (1 toyMC)
   68% expected band : 0.25331 < r < 0.25331
   95% expected band : 0.25331 < r < 0.25331
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1665176268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.227852 +/- 0.00312038 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.227852 @ 95%CL (1 toyMC)
median expected limit: r < 0.227852 @ 95%CL (1 toyMC)
   68% expected band : 0.227852 < r < 0.227852
   95% expected band : 0.227852 < r < 0.227852
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1924338301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.231843 +/- 0.0029717 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.231843 @ 95%CL (1 toyMC)
median expected limit: r < 0.231843 @ 95%CL (1 toyMC)
   68% expected band : 0.231843 < r < 0.231843
   95% expected band : 0.231843 < r < 0.231843
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 922606638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.187895 +/- 0.00407115 @ 95% CL (99 tries)
Done in 0.97 min (cpu), 0.98 min (real)
mean   expected limit: r < 0.187895 @ 95%CL (1 toyMC)
median expected limit: r < 0.187895 @ 95%CL (1 toyMC)
   68% expected band : 0.187895 < r < 0.187895
   95% expected band : 0.187895 < r < 0.187895
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1087626296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.218201 +/- 0.0025247 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.218201 @ 95%CL (1 toyMC)
median expected limit: r < 0.218201 @ 95%CL (1 toyMC)
   68% expected band : 0.218201 < r < 0.218201
   95% expected band : 0.218201 < r < 0.218201
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1375585816
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.175953 +/- 0.00422392 @ 95% CL (98 tries)
Done in 1.17 min (cpu), 1.17 min (real)
mean   expected limit: r < 0.175953 @ 95%CL (1 toyMC)
median expected limit: r < 0.175953 @ 95%CL (1 toyMC)
   68% expected band : 0.175953 < r < 0.175953
   95% expected band : 0.175953 < r < 0.175953
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2130800936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.174104 +/- 0.0037877 @ 95% CL (95 tries)
Done in 1.21 min (cpu), 1.22 min (real)
mean   expected limit: r < 0.174104 @ 95%CL (1 toyMC)
median expected limit: r < 0.174104 @ 95%CL (1 toyMC)
   68% expected band : 0.174104 < r < 0.174104
   95% expected band : 0.174104 < r < 0.174104
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1326780115
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.354004 +/- 0.00211928 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.354004 @ 95%CL (1 toyMC)
median expected limit: r < 0.354004 @ 95%CL (1 toyMC)
   68% expected band : 0.354004 < r < 0.354004
   95% expected band : 0.354004 < r < 0.354004
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1137630072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.196429 +/- 0.00315133 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.196429 @ 95%CL (1 toyMC)
median expected limit: r < 0.196429 @ 95%CL (1 toyMC)
   68% expected band : 0.196429 < r < 0.196429
   95% expected band : 0.196429 < r < 0.196429
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -63740786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.202076 +/- 0.00302632 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.202076 @ 95%CL (1 toyMC)
median expected limit: r < 0.202076 @ 95%CL (1 toyMC)
   68% expected band : 0.202076 < r < 0.202076
   95% expected band : 0.202076 < r < 0.202076
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 177795844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.32153 +/- 0.00248238 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.32153 @ 95%CL (1 toyMC)
median expected limit: r < 0.32153 @ 95%CL (1 toyMC)
   68% expected band : 0.32153 < r < 0.32153
   95% expected band : 0.32153 < r < 0.32153
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 525124201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.177674 +/- 0.00329866 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.177674 @ 95%CL (1 toyMC)
median expected limit: r < 0.177674 @ 95%CL (1 toyMC)
   68% expected band : 0.177674 < r < 0.177674
   95% expected band : 0.177674 < r < 0.177674
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -768169869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.470366 +/- 0.00223476 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.470366 @ 95%CL (1 toyMC)
median expected limit: r < 0.470366 @ 95%CL (1 toyMC)
   68% expected band : 0.470366 < r < 0.470366
   95% expected band : 0.470366 < r < 0.470366
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 344398559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.199221 +/- 0.00333584 @ 95% CL (100 tries)
Done in 0.77 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.199221 @ 95%CL (1 toyMC)
median expected limit: r < 0.199221 @ 95%CL (1 toyMC)
   68% expected band : 0.199221 < r < 0.199221
   95% expected band : 0.199221 < r < 0.199221
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2097479627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.319081 +/- 0.00213811 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.319081 @ 95%CL (1 toyMC)
median expected limit: r < 0.319081 @ 95%CL (1 toyMC)
   68% expected band : 0.319081 < r < 0.319081
   95% expected band : 0.319081 < r < 0.319081
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1297908200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.22417 +/- 0.00322756 @ 95% CL (100 tries)
Done in 0.77 min (cpu), 0.77 min (real)
mean   expected limit: r < 0.22417 @ 95%CL (1 toyMC)
median expected limit: r < 0.22417 @ 95%CL (1 toyMC)
   68% expected band : 0.22417 < r < 0.22417
   95% expected band : 0.22417 < r < 0.22417
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -653693778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.223634 +/- 0.00316018 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.223634 @ 95%CL (1 toyMC)
median expected limit: r < 0.223634 @ 95%CL (1 toyMC)
   68% expected band : 0.223634 < r < 0.223634
   95% expected band : 0.223634 < r < 0.223634
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -807281154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.215869 +/- 0.00273408 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.215869 @ 95%CL (1 toyMC)
median expected limit: r < 0.215869 @ 95%CL (1 toyMC)
   68% expected band : 0.215869 < r < 0.215869
   95% expected band : 0.215869 < r < 0.215869
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2076390328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.221917 +/- 0.0029686 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.221917 @ 95%CL (1 toyMC)
median expected limit: r < 0.221917 @ 95%CL (1 toyMC)
   68% expected band : 0.221917 < r < 0.221917
   95% expected band : 0.221917 < r < 0.221917
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2083939366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.226579 +/- 0.00286453 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.226579 @ 95%CL (1 toyMC)
median expected limit: r < 0.226579 @ 95%CL (1 toyMC)
   68% expected band : 0.226579 < r < 0.226579
   95% expected band : 0.226579 < r < 0.226579
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1090091129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.214281 +/- 0.00292 @ 95% CL (100 tries)
Done in 0.77 min (cpu), 0.77 min (real)
mean   expected limit: r < 0.214281 @ 95%CL (1 toyMC)
median expected limit: r < 0.214281 @ 95%CL (1 toyMC)
   68% expected band : 0.214281 < r < 0.214281
   95% expected band : 0.214281 < r < 0.214281
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1566986731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.239398 +/- 0.00294821 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.239398 @ 95%CL (1 toyMC)
median expected limit: r < 0.239398 @ 95%CL (1 toyMC)
   68% expected band : 0.239398 < r < 0.239398
   95% expected band : 0.239398 < r < 0.239398
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1193012815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.162717 +/- 0.00402564 @ 95% CL (88 tries)
Done in 4.22 min (cpu), 4.25 min (real)
mean   expected limit: r < 0.162717 @ 95%CL (1 toyMC)
median expected limit: r < 0.162717 @ 95%CL (1 toyMC)
   68% expected band : 0.162717 < r < 0.162717
   95% expected band : 0.162717 < r < 0.162717
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1051503572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.21227 +/- 0.00293149 @ 95% CL (100 tries)
Done in 0.77 min (cpu), 0.77 min (real)
mean   expected limit: r < 0.21227 @ 95%CL (1 toyMC)
median expected limit: r < 0.21227 @ 95%CL (1 toyMC)
   68% expected band : 0.21227 < r < 0.21227
   95% expected band : 0.21227 < r < 0.21227
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1299238061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.241149 +/- 0.0025641 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.241149 @ 95%CL (1 toyMC)
median expected limit: r < 0.241149 @ 95%CL (1 toyMC)
   68% expected band : 0.241149 < r < 0.241149
   95% expected band : 0.241149 < r < 0.241149
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1534195479
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.266823 +/- 0.0023842 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.266823 @ 95%CL (1 toyMC)
median expected limit: r < 0.266823 @ 95%CL (1 toyMC)
   68% expected band : 0.266823 < r < 0.266823
   95% expected band : 0.266823 < r < 0.266823
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -652442569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.286024 +/- 0.00231775 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.286024 @ 95%CL (1 toyMC)
median expected limit: r < 0.286024 @ 95%CL (1 toyMC)
   68% expected band : 0.286024 < r < 0.286024
   95% expected band : 0.286024 < r < 0.286024
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1178041378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.259271 +/- 0.00223042 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.259271 @ 95%CL (1 toyMC)
median expected limit: r < 0.259271 @ 95%CL (1 toyMC)
   68% expected band : 0.259271 < r < 0.259271
   95% expected band : 0.259271 < r < 0.259271
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1142094176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.216698 +/- 0.00333767 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.216698 @ 95%CL (1 toyMC)
median expected limit: r < 0.216698 @ 95%CL (1 toyMC)
   68% expected band : 0.216698 < r < 0.216698
   95% expected band : 0.216698 < r < 0.216698
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1870579438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.306159 +/- 0.00220021 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.306159 @ 95%CL (1 toyMC)
median expected limit: r < 0.306159 @ 95%CL (1 toyMC)
   68% expected band : 0.306159 < r < 0.306159
   95% expected band : 0.306159 < r < 0.306159
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1705717376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.40238 +/- 0.0026138 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.40238 @ 95%CL (1 toyMC)
median expected limit: r < 0.40238 @ 95%CL (1 toyMC)
   68% expected band : 0.40238 < r < 0.40238
   95% expected band : 0.40238 < r < 0.40238
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2140862700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.279155 +/- 0.00309954 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.279155 @ 95%CL (1 toyMC)
median expected limit: r < 0.279155 @ 95%CL (1 toyMC)
   68% expected band : 0.279155 < r < 0.279155
   95% expected band : 0.279155 < r < 0.279155
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2029951592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.26124 +/- 0.00290299 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.26124 @ 95%CL (1 toyMC)
median expected limit: r < 0.26124 @ 95%CL (1 toyMC)
   68% expected band : 0.26124 < r < 0.26124
   95% expected band : 0.26124 < r < 0.26124
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1155287983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.183524 +/- 0.00485258 @ 95% CL (91 tries)
Done in 2.80 min (cpu), 2.82 min (real)
mean   expected limit: r < 0.183524 @ 95%CL (1 toyMC)
median expected limit: r < 0.183524 @ 95%CL (1 toyMC)
   68% expected band : 0.183524 < r < 0.183524
   95% expected band : 0.183524 < r < 0.183524
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1225072807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.186285 +/- 0.00282594 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.186285 @ 95%CL (1 toyMC)
median expected limit: r < 0.186285 @ 95%CL (1 toyMC)
   68% expected band : 0.186285 < r < 0.186285
   95% expected band : 0.186285 < r < 0.186285
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 851360502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.24805 +/- 0.00223239 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.24805 @ 95%CL (1 toyMC)
median expected limit: r < 0.24805 @ 95%CL (1 toyMC)
   68% expected band : 0.24805 < r < 0.24805
   95% expected band : 0.24805 < r < 0.24805
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1554596864
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203173 +/- 0.00255357 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.203173 @ 95%CL (1 toyMC)
median expected limit: r < 0.203173 @ 95%CL (1 toyMC)
   68% expected band : 0.203173 < r < 0.203173
   95% expected band : 0.203173 < r < 0.203173
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 926852737
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.159325 +/- 0.00445452 @ 95% CL (95 tries)
Done in 1.30 min (cpu), 1.30 min (real)
mean   expected limit: r < 0.159325 @ 95%CL (1 toyMC)
median expected limit: r < 0.159325 @ 95%CL (1 toyMC)
   68% expected band : 0.159325 < r < 0.159325
   95% expected band : 0.159325 < r < 0.159325
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1182456243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.171534 +/- 0.0040493 @ 95% CL (98 tries)
Done in 1.13 min (cpu), 1.14 min (real)
mean   expected limit: r < 0.171534 @ 95%CL (1 toyMC)
median expected limit: r < 0.171534 @ 95%CL (1 toyMC)
   68% expected band : 0.171534 < r < 0.171534
   95% expected band : 0.171534 < r < 0.171534
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 640630080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.401386 +/- 0.00197755 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.401386 @ 95%CL (1 toyMC)
median expected limit: r < 0.401386 @ 95%CL (1 toyMC)
   68% expected band : 0.401386 < r < 0.401386
   95% expected band : 0.401386 < r < 0.401386
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2036525784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.162836 +/- 0.00443735 @ 95% CL (78 tries)
Done in 9.32 min (cpu), 9.37 min (real)
mean   expected limit: r < 0.162836 @ 95%CL (1 toyMC)
median expected limit: r < 0.162836 @ 95%CL (1 toyMC)
   68% expected band : 0.162836 < r < 0.162836
   95% expected band : 0.162836 < r < 0.162836
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 903806042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.306115 +/- 0.00261095 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.306115 @ 95%CL (1 toyMC)
median expected limit: r < 0.306115 @ 95%CL (1 toyMC)
   68% expected band : 0.306115 < r < 0.306115
   95% expected band : 0.306115 < r < 0.306115
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -6808117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.144858 +/- 0.00729368 @ 95% CL (53 tries)
Done in 16.45 min (cpu), 16.53 min (real)
mean   expected limit: r < 0.144858 @ 95%CL (1 toyMC)
median expected limit: r < 0.144858 @ 95%CL (1 toyMC)
   68% expected band : 0.144858 < r < 0.144858
   95% expected band : 0.144858 < r < 0.144858
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1595353658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.222788 +/- 0.00302594 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.222788 @ 95%CL (1 toyMC)
median expected limit: r < 0.222788 @ 95%CL (1 toyMC)
   68% expected band : 0.222788 < r < 0.222788
   95% expected band : 0.222788 < r < 0.222788
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1932430957
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.32319 +/- 0.00228702 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.32319 @ 95%CL (1 toyMC)
median expected limit: r < 0.32319 @ 95%CL (1 toyMC)
   68% expected band : 0.32319 < r < 0.32319
   95% expected band : 0.32319 < r < 0.32319
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1104117826
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.194256 +/- 0.00222407 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.194256 @ 95%CL (1 toyMC)
median expected limit: r < 0.194256 @ 95%CL (1 toyMC)
   68% expected band : 0.194256 < r < 0.194256
   95% expected band : 0.194256 < r < 0.194256
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -193848807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.196068 +/- 0.00341848 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.196068 @ 95%CL (1 toyMC)
median expected limit: r < 0.196068 @ 95%CL (1 toyMC)
   68% expected band : 0.196068 < r < 0.196068
   95% expected band : 0.196068 < r < 0.196068
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1971037026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.152624 +/- 0.00443997 @ 95% CL (81 tries)
Done in 6.71 min (cpu), 6.75 min (real)
mean   expected limit: r < 0.152624 @ 95%CL (1 toyMC)
median expected limit: r < 0.152624 @ 95%CL (1 toyMC)
   68% expected band : 0.152624 < r < 0.152624
   95% expected band : 0.152624 < r < 0.152624
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1606151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.165297 +/- 0.00645995 @ 95% CL (71 tries)
Done in 11.45 min (cpu), 11.52 min (real)
mean   expected limit: r < 0.165297 @ 95%CL (1 toyMC)
median expected limit: r < 0.165297 @ 95%CL (1 toyMC)
   68% expected band : 0.165297 < r < 0.165297
   95% expected band : 0.165297 < r < 0.165297
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -256780485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.392436 +/- 0.00254662 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.392436 @ 95%CL (1 toyMC)
median expected limit: r < 0.392436 @ 95%CL (1 toyMC)
   68% expected band : 0.392436 < r < 0.392436
   95% expected band : 0.392436 < r < 0.392436
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -714961179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.187112 +/- 0.00351255 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.187112 @ 95%CL (1 toyMC)
median expected limit: r < 0.187112 @ 95%CL (1 toyMC)
   68% expected band : 0.187112 < r < 0.187112
   95% expected band : 0.187112 < r < 0.187112
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 109075078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.290182 +/- 0.00189492 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.290182 @ 95%CL (1 toyMC)
median expected limit: r < 0.290182 @ 95%CL (1 toyMC)
   68% expected band : 0.290182 < r < 0.290182
   95% expected band : 0.290182 < r < 0.290182
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1943101759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.217732 +/- 0.00292821 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.217732 @ 95%CL (1 toyMC)
median expected limit: r < 0.217732 @ 95%CL (1 toyMC)
   68% expected band : 0.217732 < r < 0.217732
   95% expected band : 0.217732 < r < 0.217732
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -448517378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.160842 +/- 0.00602234 @ 95% CL (74 tries)
Done in 8.95 min (cpu), 9.01 min (real)
mean   expected limit: r < 0.160842 @ 95%CL (1 toyMC)
median expected limit: r < 0.160842 @ 95%CL (1 toyMC)
   68% expected band : 0.160842 < r < 0.160842
   95% expected band : 0.160842 < r < 0.160842
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1432139290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.259318 +/- 0.00292186 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.259318 @ 95%CL (1 toyMC)
median expected limit: r < 0.259318 @ 95%CL (1 toyMC)
   68% expected band : 0.259318 < r < 0.259318
   95% expected band : 0.259318 < r < 0.259318
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 42506628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.235718 +/- 0.00185804 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.235718 @ 95%CL (1 toyMC)
median expected limit: r < 0.235718 @ 95%CL (1 toyMC)
   68% expected band : 0.235718 < r < 0.235718
   95% expected band : 0.235718 < r < 0.235718
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 358764249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.181237 +/- 0.00368447 @ 95% CL (98 tries)
Done in 1.18 min (cpu), 1.18 min (real)
mean   expected limit: r < 0.181237 @ 95%CL (1 toyMC)
median expected limit: r < 0.181237 @ 95%CL (1 toyMC)
   68% expected band : 0.181237 < r < 0.181237
   95% expected band : 0.181237 < r < 0.181237
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1674532146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.373134 +/- 0.0021155 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.373134 @ 95%CL (1 toyMC)
median expected limit: r < 0.373134 @ 95%CL (1 toyMC)
   68% expected band : 0.373134 < r < 0.373134
   95% expected band : 0.373134 < r < 0.373134
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1323906336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.313856 +/- 0.00231764 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.313856 @ 95%CL (1 toyMC)
median expected limit: r < 0.313856 @ 95%CL (1 toyMC)
   68% expected band : 0.313856 < r < 0.313856
   95% expected band : 0.313856 < r < 0.313856
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1698402122
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.288738 +/- 0.0019872 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 0.288738 @ 95%CL (1 toyMC)
median expected limit: r < 0.288738 @ 95%CL (1 toyMC)
   68% expected band : 0.288738 < r < 0.288738
   95% expected band : 0.288738 < r < 0.288738
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 418193016
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.204341 +/- 0.003364 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.204341 @ 95%CL (1 toyMC)
median expected limit: r < 0.204341 @ 95%CL (1 toyMC)
   68% expected band : 0.204341 < r < 0.204341
   95% expected band : 0.204341 < r < 0.204341
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 937699312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.211649 +/- 0.00253053 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.211649 @ 95%CL (1 toyMC)
median expected limit: r < 0.211649 @ 95%CL (1 toyMC)
   68% expected band : 0.211649 < r < 0.211649
   95% expected band : 0.211649 < r < 0.211649
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2129203889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.270023 +/- 0.00195645 @ 95% CL (100 tries)
Done in 0.78 min (cpu), 0.79 min (real)
mean   expected limit: r < 0.270023 @ 95%CL (1 toyMC)
median expected limit: r < 0.270023 @ 95%CL (1 toyMC)
   68% expected band : 0.270023 < r < 0.270023
   95% expected band : 0.270023 < r < 0.270023
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -254896871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.174379 +/- 0.00323688 @ 95% CL (98 tries)
Done in 1.01 min (cpu), 1.02 min (real)
mean   expected limit: r < 0.174379 @ 95%CL (1 toyMC)
median expected limit: r < 0.174379 @ 95%CL (1 toyMC)
   68% expected band : 0.174379 < r < 0.174379
   95% expected band : 0.174379 < r < 0.174379
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -909530435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.241932 +/- 0.00284555 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.241932 @ 95%CL (1 toyMC)
median expected limit: r < 0.241932 @ 95%CL (1 toyMC)
   68% expected band : 0.241932 < r < 0.241932
   95% expected band : 0.241932 < r < 0.241932
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1447588595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.316775 +/- 0.00252879 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.316775 @ 95%CL (1 toyMC)
median expected limit: r < 0.316775 @ 95%CL (1 toyMC)
   68% expected band : 0.316775 < r < 0.316775
   95% expected band : 0.316775 < r < 0.316775
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 457586827
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.160665 +/- 0.00414522 @ 95% CL (90 tries)
Done in 2.97 min (cpu), 2.99 min (real)
mean   expected limit: r < 0.160665 @ 95%CL (1 toyMC)
median expected limit: r < 0.160665 @ 95%CL (1 toyMC)
   68% expected band : 0.160665 < r < 0.160665
   95% expected band : 0.160665 < r < 0.160665
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 281731820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.187563 +/- 0.00349395 @ 95% CL (99 tries)
Done in 1.07 min (cpu), 1.07 min (real)
mean   expected limit: r < 0.187563 @ 95%CL (1 toyMC)
median expected limit: r < 0.187563 @ 95%CL (1 toyMC)
   68% expected band : 0.187563 < r < 0.187563
   95% expected band : 0.187563 < r < 0.187563
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1900742965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.190807 +/- 0.00366898 @ 95% CL (99 tries)
Done in 1.02 min (cpu), 1.03 min (real)
mean   expected limit: r < 0.190807 @ 95%CL (1 toyMC)
median expected limit: r < 0.190807 @ 95%CL (1 toyMC)
   68% expected band : 0.190807 < r < 0.190807
   95% expected band : 0.190807 < r < 0.190807
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 934211143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.182491 +/- 0.00274599 @ 95% CL (99 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 0.182491 @ 95%CL (1 toyMC)
median expected limit: r < 0.182491 @ 95%CL (1 toyMC)
   68% expected band : 0.182491 < r < 0.182491
   95% expected band : 0.182491 < r < 0.182491
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2052806009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.37006 +/- 0.00223246 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 0.37006 @ 95%CL (1 toyMC)
median expected limit: r < 0.37006 @ 95%CL (1 toyMC)
   68% expected band : 0.37006 < r < 0.37006
   95% expected band : 0.37006 < r < 0.37006
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -314529378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.22082 +/- 0.00302495 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.22082 @ 95%CL (1 toyMC)
median expected limit: r < 0.22082 @ 95%CL (1 toyMC)
   68% expected band : 0.22082 < r < 0.22082
   95% expected band : 0.22082 < r < 0.22082
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -717496983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.288773 +/- 0.00285051 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.288773 @ 95%CL (1 toyMC)
median expected limit: r < 0.288773 @ 95%CL (1 toyMC)
   68% expected band : 0.288773 < r < 0.288773
   95% expected band : 0.288773 < r < 0.288773
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1864217847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.190908 +/- 0.00399484 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.190908 @ 95%CL (1 toyMC)
median expected limit: r < 0.190908 @ 95%CL (1 toyMC)
   68% expected band : 0.190908 < r < 0.190908
   95% expected band : 0.190908 < r < 0.190908
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1514029952
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.180644 +/- 0.0040779 @ 95% CL (98 tries)
Done in 1.21 min (cpu), 1.22 min (real)
mean   expected limit: r < 0.180644 @ 95%CL (1 toyMC)
median expected limit: r < 0.180644 @ 95%CL (1 toyMC)
   68% expected band : 0.180644 < r < 0.180644
   95% expected band : 0.180644 < r < 0.180644
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2066088919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.560663 +/- 0.00241445 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 0.560663 @ 95%CL (1 toyMC)
median expected limit: r < 0.560663 @ 95%CL (1 toyMC)
   68% expected band : 0.560663 < r < 0.560663
   95% expected band : 0.560663 < r < 0.560663
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 862709877
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.866003 +/- 0.00329374 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.866003 @ 95%CL (1 toyMC)
median expected limit: r < 0.866003 @ 95%CL (1 toyMC)
   68% expected band : 0.866003 < r < 0.866003
   95% expected band : 0.866003 < r < 0.866003
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -430141376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.866681 +/- 0.00325076 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.866681 @ 95%CL (1 toyMC)
median expected limit: r < 0.866681 @ 95%CL (1 toyMC)
   68% expected band : 0.866681 < r < 0.866681
   95% expected band : 0.866681 < r < 0.866681
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1482665470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.677629 +/- 0.00342781 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.677629 @ 95%CL (1 toyMC)
median expected limit: r < 0.677629 @ 95%CL (1 toyMC)
   68% expected band : 0.677629 < r < 0.677629
   95% expected band : 0.677629 < r < 0.677629
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1681849776
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16183 +/- 0.00341033 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 1.16183 @ 95%CL (1 toyMC)
median expected limit: r < 1.16183 @ 95%CL (1 toyMC)
   68% expected band : 1.16183 < r < 1.16183
   95% expected band : 1.16183 < r < 1.16183
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1432371836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21887 +/- 0.00354679 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 1.21887 @ 95%CL (1 toyMC)
median expected limit: r < 1.21887 @ 95%CL (1 toyMC)
   68% expected band : 1.21887 < r < 1.21887
   95% expected band : 1.21887 < r < 1.21887
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 338346854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04252 +/- 0.00350939 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 1.04252 @ 95%CL (1 toyMC)
median expected limit: r < 1.04252 @ 95%CL (1 toyMC)
   68% expected band : 1.04252 < r < 1.04252
   95% expected band : 1.04252 < r < 1.04252
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1643900691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.866001 +/- 0.00317794 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.866001 @ 95%CL (1 toyMC)
median expected limit: r < 0.866001 @ 95%CL (1 toyMC)
   68% expected band : 0.866001 < r < 0.866001
   95% expected band : 0.866001 < r < 0.866001
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1546645151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.6122 +/- 0.00376744 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 0.6122 @ 95%CL (1 toyMC)
median expected limit: r < 0.6122 @ 95%CL (1 toyMC)
   68% expected band : 0.6122 < r < 0.6122
   95% expected band : 0.6122 < r < 0.6122
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1493891187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.874724 +/- 0.00368361 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 0.874724 @ 95%CL (1 toyMC)
median expected limit: r < 0.874724 @ 95%CL (1 toyMC)
   68% expected band : 0.874724 < r < 0.874724
   95% expected band : 0.874724 < r < 0.874724
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -158897550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.936231 +/- 0.00300233 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.936231 @ 95%CL (1 toyMC)
median expected limit: r < 0.936231 @ 95%CL (1 toyMC)
   68% expected band : 0.936231 < r < 0.936231
   95% expected band : 0.936231 < r < 0.936231
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1047108307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20039 +/- 0.00353424 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 1.20039 @ 95%CL (1 toyMC)
median expected limit: r < 1.20039 @ 95%CL (1 toyMC)
   68% expected band : 1.20039 < r < 1.20039
   95% expected band : 1.20039 < r < 1.20039
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1337968505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20148 +/- 0.00317281 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 1.20148 @ 95%CL (1 toyMC)
median expected limit: r < 1.20148 @ 95%CL (1 toyMC)
   68% expected band : 1.20148 < r < 1.20148
   95% expected band : 1.20148 < r < 1.20148
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 552945943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.69317 +/- 0.00400512 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.69317 @ 95%CL (1 toyMC)
median expected limit: r < 0.69317 @ 95%CL (1 toyMC)
   68% expected band : 0.69317 < r < 0.69317
   95% expected band : 0.69317 < r < 0.69317
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1070130106
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.863387 +/- 0.00324777 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 0.863387 @ 95%CL (1 toyMC)
median expected limit: r < 0.863387 @ 95%CL (1 toyMC)
   68% expected band : 0.863387 < r < 0.863387
   95% expected band : 0.863387 < r < 0.863387
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 729710865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.88093 +/- 0.00375143 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 0.88093 @ 95%CL (1 toyMC)
median expected limit: r < 0.88093 @ 95%CL (1 toyMC)
   68% expected band : 0.88093 < r < 0.88093
   95% expected band : 0.88093 < r < 0.88093
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1747523047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.73199 +/- 0.00370973 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 0.73199 @ 95%CL (1 toyMC)
median expected limit: r < 0.73199 @ 95%CL (1 toyMC)
   68% expected band : 0.73199 < r < 0.73199
   95% expected band : 0.73199 < r < 0.73199
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1387514196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.825482 +/- 0.00367286 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 0.825482 @ 95%CL (1 toyMC)
median expected limit: r < 0.825482 @ 95%CL (1 toyMC)
   68% expected band : 0.825482 < r < 0.825482
   95% expected band : 0.825482 < r < 0.825482
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1422827068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.728809 +/- 0.00322392 @ 95% CL (100 tries)
Done in 0.79 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.728809 @ 95%CL (1 toyMC)
median expected limit: r < 0.728809 @ 95%CL (1 toyMC)
   68% expected band : 0.728809 < r < 0.728809
   95% expected band : 0.728809 < r < 0.728809
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1278114611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.67744 +/- 0.00407196 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.67744 @ 95%CL (1 toyMC)
median expected limit: r < 0.67744 @ 95%CL (1 toyMC)
   68% expected band : 0.67744 < r < 0.67744
   95% expected band : 0.67744 < r < 0.67744
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 123151274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.754312 +/- 0.00339765 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.754312 @ 95%CL (1 toyMC)
median expected limit: r < 0.754312 @ 95%CL (1 toyMC)
   68% expected band : 0.754312 < r < 0.754312
   95% expected band : 0.754312 < r < 0.754312
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 744540287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01198 +/- 0.00444639 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 1.01198 @ 95%CL (1 toyMC)
median expected limit: r < 1.01198 @ 95%CL (1 toyMC)
   68% expected band : 1.01198 < r < 1.01198
   95% expected band : 1.01198 < r < 1.01198
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 37771986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.823836 +/- 0.00403615 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.80 min (real)
mean   expected limit: r < 0.823836 @ 95%CL (1 toyMC)
median expected limit: r < 0.823836 @ 95%CL (1 toyMC)
   68% expected band : 0.823836 < r < 0.823836
   95% expected band : 0.823836 < r < 0.823836
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1096887835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1264 +/- 0.00420545 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 1.1264 @ 95%CL (1 toyMC)
median expected limit: r < 1.1264 @ 95%CL (1 toyMC)
   68% expected band : 1.1264 < r < 1.1264
   95% expected band : 1.1264 < r < 1.1264
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 169179763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.687821 +/- 0.00310789 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.687821 @ 95%CL (1 toyMC)
median expected limit: r < 0.687821 @ 95%CL (1 toyMC)
   68% expected band : 0.687821 < r < 0.687821
   95% expected band : 0.687821 < r < 0.687821
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 872909818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.811229 +/- 0.00418647 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.811229 @ 95%CL (1 toyMC)
median expected limit: r < 0.811229 @ 95%CL (1 toyMC)
   68% expected band : 0.811229 < r < 0.811229
   95% expected band : 0.811229 < r < 0.811229
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2126729173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.69013 +/- 0.00289103 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 1.69013 @ 95%CL (1 toyMC)
median expected limit: r < 1.69013 @ 95%CL (1 toyMC)
   68% expected band : 1.69013 < r < 1.69013
   95% expected band : 1.69013 < r < 1.69013
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 139802378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.819222 +/- 0.00331101 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.819222 @ 95%CL (1 toyMC)
median expected limit: r < 0.819222 @ 95%CL (1 toyMC)
   68% expected band : 0.819222 < r < 0.819222
   95% expected band : 0.819222 < r < 0.819222
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 257934372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.988372 +/- 0.00371966 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.988372 @ 95%CL (1 toyMC)
median expected limit: r < 0.988372 @ 95%CL (1 toyMC)
   68% expected band : 0.988372 < r < 0.988372
   95% expected band : 0.988372 < r < 0.988372
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 780113111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21194 +/- 0.00426871 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 1.21194 @ 95%CL (1 toyMC)
median expected limit: r < 1.21194 @ 95%CL (1 toyMC)
   68% expected band : 1.21194 < r < 1.21194
   95% expected band : 1.21194 < r < 1.21194
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1637515417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.992114 +/- 0.00380655 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 0.992114 @ 95%CL (1 toyMC)
median expected limit: r < 0.992114 @ 95%CL (1 toyMC)
   68% expected band : 0.992114 < r < 0.992114
   95% expected band : 0.992114 < r < 0.992114
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1306098314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.705303 +/- 0.00328228 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.705303 @ 95%CL (1 toyMC)
median expected limit: r < 0.705303 @ 95%CL (1 toyMC)
   68% expected band : 0.705303 < r < 0.705303
   95% expected band : 0.705303 < r < 0.705303
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1116107017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.839746 +/- 0.00368043 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 0.839746 @ 95%CL (1 toyMC)
median expected limit: r < 0.839746 @ 95%CL (1 toyMC)
   68% expected band : 0.839746 < r < 0.839746
   95% expected band : 0.839746 < r < 0.839746
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 371239656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08585 +/- 0.00344649 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 1.08585 @ 95%CL (1 toyMC)
median expected limit: r < 1.08585 @ 95%CL (1 toyMC)
   68% expected band : 1.08585 < r < 1.08585
   95% expected band : 1.08585 < r < 1.08585
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1560740979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.965639 +/- 0.00354758 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.965639 @ 95%CL (1 toyMC)
median expected limit: r < 0.965639 @ 95%CL (1 toyMC)
   68% expected band : 0.965639 < r < 0.965639
   95% expected band : 0.965639 < r < 0.965639
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 306863174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.831163 +/- 0.00320072 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.831163 @ 95%CL (1 toyMC)
median expected limit: r < 0.831163 @ 95%CL (1 toyMC)
   68% expected band : 0.831163 < r < 0.831163
   95% expected band : 0.831163 < r < 0.831163
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2020490329
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33493 +/- 0.0038356 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 1.33493 @ 95%CL (1 toyMC)
median expected limit: r < 1.33493 @ 95%CL (1 toyMC)
   68% expected band : 1.33493 < r < 1.33493
   95% expected band : 1.33493 < r < 1.33493
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 760494970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1739 +/- 0.0035668 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 1.1739 @ 95%CL (1 toyMC)
median expected limit: r < 1.1739 @ 95%CL (1 toyMC)
   68% expected band : 1.1739 < r < 1.1739
   95% expected band : 1.1739 < r < 1.1739
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1996955930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13269 +/- 0.00398641 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 1.13269 @ 95%CL (1 toyMC)
median expected limit: r < 1.13269 @ 95%CL (1 toyMC)
   68% expected band : 1.13269 < r < 1.13269
   95% expected band : 1.13269 < r < 1.13269
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1676525254
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.649379 +/- 0.0035686 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.649379 @ 95%CL (1 toyMC)
median expected limit: r < 0.649379 @ 95%CL (1 toyMC)
   68% expected band : 0.649379 < r < 0.649379
   95% expected band : 0.649379 < r < 0.649379
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -272036240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.680449 +/- 0.00345009 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.680449 @ 95%CL (1 toyMC)
median expected limit: r < 0.680449 @ 95%CL (1 toyMC)
   68% expected band : 0.680449 < r < 0.680449
   95% expected band : 0.680449 < r < 0.680449
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1608832058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.824401 +/- 0.00292096 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 0.824401 @ 95%CL (1 toyMC)
median expected limit: r < 0.824401 @ 95%CL (1 toyMC)
   68% expected band : 0.824401 < r < 0.824401
   95% expected band : 0.824401 < r < 0.824401
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1005951249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.837917 +/- 0.00346931 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 0.837917 @ 95%CL (1 toyMC)
median expected limit: r < 0.837917 @ 95%CL (1 toyMC)
   68% expected band : 0.837917 < r < 0.837917
   95% expected band : 0.837917 < r < 0.837917
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1396814129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.774891 +/- 0.00373684 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 0.774891 @ 95%CL (1 toyMC)
median expected limit: r < 0.774891 @ 95%CL (1 toyMC)
   68% expected band : 0.774891 < r < 0.774891
   95% expected band : 0.774891 < r < 0.774891
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1681653442
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08015 +/- 0.00445629 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 1.08015 @ 95%CL (1 toyMC)
median expected limit: r < 1.08015 @ 95%CL (1 toyMC)
   68% expected band : 1.08015 < r < 1.08015
   95% expected band : 1.08015 < r < 1.08015
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1034982369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.680892 +/- 0.00428112 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.680892 @ 95%CL (1 toyMC)
median expected limit: r < 0.680892 @ 95%CL (1 toyMC)
   68% expected band : 0.680892 < r < 0.680892
   95% expected band : 0.680892 < r < 0.680892
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -560457676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.586113 +/- 0.00346952 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.586113 @ 95%CL (1 toyMC)
median expected limit: r < 0.586113 @ 95%CL (1 toyMC)
   68% expected band : 0.586113 < r < 0.586113
   95% expected band : 0.586113 < r < 0.586113
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -323954872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09283 +/- 0.00313109 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 1.09283 @ 95%CL (1 toyMC)
median expected limit: r < 1.09283 @ 95%CL (1 toyMC)
   68% expected band : 1.09283 < r < 1.09283
   95% expected band : 1.09283 < r < 1.09283
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1241717910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.913732 +/- 0.00372909 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 0.913732 @ 95%CL (1 toyMC)
median expected limit: r < 0.913732 @ 95%CL (1 toyMC)
   68% expected band : 0.913732 < r < 0.913732
   95% expected band : 0.913732 < r < 0.913732
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1386184201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.850442 +/- 0.00462815 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.850442 @ 95%CL (1 toyMC)
median expected limit: r < 0.850442 @ 95%CL (1 toyMC)
   68% expected band : 0.850442 < r < 0.850442
   95% expected band : 0.850442 < r < 0.850442
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -231395581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.819015 +/- 0.00353065 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.819015 @ 95%CL (1 toyMC)
median expected limit: r < 0.819015 @ 95%CL (1 toyMC)
   68% expected band : 0.819015 < r < 0.819015
   95% expected band : 0.819015 < r < 0.819015
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -486831118
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06468 +/- 0.00324993 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 1.06468 @ 95%CL (1 toyMC)
median expected limit: r < 1.06468 @ 95%CL (1 toyMC)
   68% expected band : 1.06468 < r < 1.06468
   95% expected band : 1.06468 < r < 1.06468
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -589041577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.700302 +/- 0.00381903 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 0.700302 @ 95%CL (1 toyMC)
median expected limit: r < 0.700302 @ 95%CL (1 toyMC)
   68% expected band : 0.700302 < r < 0.700302
   95% expected band : 0.700302 < r < 0.700302
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -635929167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.614073 +/- 0.0035531 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 0.614073 @ 95%CL (1 toyMC)
median expected limit: r < 0.614073 @ 95%CL (1 toyMC)
   68% expected band : 0.614073 < r < 0.614073
   95% expected band : 0.614073 < r < 0.614073
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 477005577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.98354 +/- 0.00420087 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.98354 @ 95%CL (1 toyMC)
median expected limit: r < 0.98354 @ 95%CL (1 toyMC)
   68% expected band : 0.98354 < r < 0.98354
   95% expected band : 0.98354 < r < 0.98354
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1221832887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28716 +/- 0.00297296 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 1.28716 @ 95%CL (1 toyMC)
median expected limit: r < 1.28716 @ 95%CL (1 toyMC)
   68% expected band : 1.28716 < r < 1.28716
   95% expected band : 1.28716 < r < 1.28716
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 213062761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.579121 +/- 0.00323326 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.579121 @ 95%CL (1 toyMC)
median expected limit: r < 0.579121 @ 95%CL (1 toyMC)
   68% expected band : 0.579121 < r < 0.579121
   95% expected band : 0.579121 < r < 0.579121
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -35360798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73579 +/- 0.00438804 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 1.73579 @ 95%CL (1 toyMC)
median expected limit: r < 1.73579 @ 95%CL (1 toyMC)
   68% expected band : 1.73579 < r < 1.73579
   95% expected band : 1.73579 < r < 1.73579
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -985814759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44958 +/- 0.00408299 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 1.44958 @ 95%CL (1 toyMC)
median expected limit: r < 1.44958 @ 95%CL (1 toyMC)
   68% expected band : 1.44958 < r < 1.44958
   95% expected band : 1.44958 < r < 1.44958
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 518326234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23821 +/- 0.00444603 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 1.23821 @ 95%CL (1 toyMC)
median expected limit: r < 1.23821 @ 95%CL (1 toyMC)
   68% expected band : 1.23821 < r < 1.23821
   95% expected band : 1.23821 < r < 1.23821
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -850968104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.736903 +/- 0.00324158 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.736903 @ 95%CL (1 toyMC)
median expected limit: r < 0.736903 @ 95%CL (1 toyMC)
   68% expected band : 0.736903 < r < 0.736903
   95% expected band : 0.736903 < r < 0.736903
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -578549388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17998 +/- 0.00306769 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 1.17998 @ 95%CL (1 toyMC)
median expected limit: r < 1.17998 @ 95%CL (1 toyMC)
   68% expected band : 1.17998 < r < 1.17998
   95% expected band : 1.17998 < r < 1.17998
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1594780614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.856232 +/- 0.00332639 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.856232 @ 95%CL (1 toyMC)
median expected limit: r < 0.856232 @ 95%CL (1 toyMC)
   68% expected band : 0.856232 < r < 0.856232
   95% expected band : 0.856232 < r < 0.856232
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1428308642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.879626 +/- 0.00463814 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 0.879626 @ 95%CL (1 toyMC)
median expected limit: r < 0.879626 @ 95%CL (1 toyMC)
   68% expected band : 0.879626 < r < 0.879626
   95% expected band : 0.879626 < r < 0.879626
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 916128506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09848 +/- 0.00369036 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 1.09848 @ 95%CL (1 toyMC)
median expected limit: r < 1.09848 @ 95%CL (1 toyMC)
   68% expected band : 1.09848 < r < 1.09848
   95% expected band : 1.09848 < r < 1.09848
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -626337182
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.983736 +/- 0.00338466 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.983736 @ 95%CL (1 toyMC)
median expected limit: r < 0.983736 @ 95%CL (1 toyMC)
   68% expected band : 0.983736 < r < 0.983736
   95% expected band : 0.983736 < r < 0.983736
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1760203360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11142 +/- 0.00287148 @ 95% CL (100 tries)
Done in 0.98 min (cpu), 0.98 min (real)
mean   expected limit: r < 1.11142 @ 95%CL (1 toyMC)
median expected limit: r < 1.11142 @ 95%CL (1 toyMC)
   68% expected band : 1.11142 < r < 1.11142
   95% expected band : 1.11142 < r < 1.11142
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1958719222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.798475 +/- 0.00361901 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.798475 @ 95%CL (1 toyMC)
median expected limit: r < 0.798475 @ 95%CL (1 toyMC)
   68% expected band : 0.798475 < r < 0.798475
   95% expected band : 0.798475 < r < 0.798475
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -752987010
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04233 +/- 0.00315837 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 1.04233 @ 95%CL (1 toyMC)
median expected limit: r < 1.04233 @ 95%CL (1 toyMC)
   68% expected band : 1.04233 < r < 1.04233
   95% expected band : 1.04233 < r < 1.04233
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1785427954
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.711937 +/- 0.00336594 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 0.711937 @ 95%CL (1 toyMC)
median expected limit: r < 0.711937 @ 95%CL (1 toyMC)
   68% expected band : 0.711937 < r < 0.711937
   95% expected band : 0.711937 < r < 0.711937
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1897856776
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.660935 +/- 0.00350726 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.660935 @ 95%CL (1 toyMC)
median expected limit: r < 0.660935 @ 95%CL (1 toyMC)
   68% expected band : 0.660935 < r < 0.660935
   95% expected band : 0.660935 < r < 0.660935
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1518438978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.99509 +/- 0.00469874 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 0.99509 @ 95%CL (1 toyMC)
median expected limit: r < 0.99509 @ 95%CL (1 toyMC)
   68% expected band : 0.99509 < r < 0.99509
   95% expected band : 0.99509 < r < 0.99509
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1927975134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.740997 +/- 0.0033181 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 0.740997 @ 95%CL (1 toyMC)
median expected limit: r < 0.740997 @ 95%CL (1 toyMC)
   68% expected band : 0.740997 < r < 0.740997
   95% expected band : 0.740997 < r < 0.740997
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 520481869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.61412 +/- 0.00334556 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 0.61412 @ 95%CL (1 toyMC)
median expected limit: r < 0.61412 @ 95%CL (1 toyMC)
   68% expected band : 0.61412 < r < 0.61412
   95% expected band : 0.61412 < r < 0.61412
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 472678828
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.913584 +/- 0.00402902 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.913584 @ 95%CL (1 toyMC)
median expected limit: r < 0.913584 @ 95%CL (1 toyMC)
   68% expected band : 0.913584 < r < 0.913584
   95% expected band : 0.913584 < r < 0.913584
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 18411951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.661226 +/- 0.00365606 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.661226 @ 95%CL (1 toyMC)
median expected limit: r < 0.661226 @ 95%CL (1 toyMC)
   68% expected band : 0.661226 < r < 0.661226
   95% expected band : 0.661226 < r < 0.661226
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1986835109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.915752 +/- 0.00462031 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 0.915752 @ 95%CL (1 toyMC)
median expected limit: r < 0.915752 @ 95%CL (1 toyMC)
   68% expected band : 0.915752 < r < 0.915752
   95% expected band : 0.915752 < r < 0.915752
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1199792879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.650094 +/- 0.00345636 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 0.650094 @ 95%CL (1 toyMC)
median expected limit: r < 0.650094 @ 95%CL (1 toyMC)
   68% expected band : 0.650094 < r < 0.650094
   95% expected band : 0.650094 < r < 0.650094
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 819415386
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15775 +/- 0.00378084 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 1.15775 @ 95%CL (1 toyMC)
median expected limit: r < 1.15775 @ 95%CL (1 toyMC)
   68% expected band : 1.15775 < r < 1.15775
   95% expected band : 1.15775 < r < 1.15775
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 396383627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.974697 +/- 0.00291415 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 0.974697 @ 95%CL (1 toyMC)
median expected limit: r < 0.974697 @ 95%CL (1 toyMC)
   68% expected band : 0.974697 < r < 0.974697
   95% expected band : 0.974697 < r < 0.974697
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1807597939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.809199 +/- 0.00397209 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.809199 @ 95%CL (1 toyMC)
median expected limit: r < 0.809199 @ 95%CL (1 toyMC)
   68% expected band : 0.809199 < r < 0.809199
   95% expected band : 0.809199 < r < 0.809199
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1344055393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.809628 +/- 0.00433324 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.809628 @ 95%CL (1 toyMC)
median expected limit: r < 0.809628 @ 95%CL (1 toyMC)
   68% expected band : 0.809628 < r < 0.809628
   95% expected band : 0.809628 < r < 0.809628
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 914115200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.590916 +/- 0.00289837 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 0.590916 @ 95%CL (1 toyMC)
median expected limit: r < 0.590916 @ 95%CL (1 toyMC)
   68% expected band : 0.590916 < r < 0.590916
   95% expected band : 0.590916 < r < 0.590916
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 44779536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45705 +/- 0.00435636 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 1.45705 @ 95%CL (1 toyMC)
median expected limit: r < 1.45705 @ 95%CL (1 toyMC)
   68% expected band : 1.45705 < r < 1.45705
   95% expected band : 1.45705 < r < 1.45705
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -615163592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.915737 +/- 0.00303709 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.915737 @ 95%CL (1 toyMC)
median expected limit: r < 0.915737 @ 95%CL (1 toyMC)
   68% expected band : 0.915737 < r < 0.915737
   95% expected band : 0.915737 < r < 0.915737
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1664948143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.824563 +/- 0.00310618 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.824563 @ 95%CL (1 toyMC)
median expected limit: r < 0.824563 @ 95%CL (1 toyMC)
   68% expected band : 0.824563 < r < 0.824563
   95% expected band : 0.824563 < r < 0.824563
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1820193064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.81705 +/- 0.00397537 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.81705 @ 95%CL (1 toyMC)
median expected limit: r < 0.81705 @ 95%CL (1 toyMC)
   68% expected band : 0.81705 < r < 0.81705
   95% expected band : 0.81705 < r < 0.81705
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1062811496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.652271 +/- 0.00366478 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.652271 @ 95%CL (1 toyMC)
median expected limit: r < 0.652271 @ 95%CL (1 toyMC)
   68% expected band : 0.652271 < r < 0.652271
   95% expected band : 0.652271 < r < 0.652271
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 295642069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.643466 +/- 0.00317676 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.643466 @ 95%CL (1 toyMC)
median expected limit: r < 0.643466 @ 95%CL (1 toyMC)
   68% expected band : 0.643466 < r < 0.643466
   95% expected band : 0.643466 < r < 0.643466
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -687241428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.721722 +/- 0.00322989 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 0.721722 @ 95%CL (1 toyMC)
median expected limit: r < 0.721722 @ 95%CL (1 toyMC)
   68% expected band : 0.721722 < r < 0.721722
   95% expected band : 0.721722 < r < 0.721722
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1819999176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.757764 +/- 0.00342953 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 0.757764 @ 95%CL (1 toyMC)
median expected limit: r < 0.757764 @ 95%CL (1 toyMC)
   68% expected band : 0.757764 < r < 0.757764
   95% expected band : 0.757764 < r < 0.757764
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 893711168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.757851 +/- 0.00307425 @ 95% CL (100 tries)
Done in 0.80 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.757851 @ 95%CL (1 toyMC)
median expected limit: r < 0.757851 @ 95%CL (1 toyMC)
   68% expected band : 0.757851 < r < 0.757851
   95% expected band : 0.757851 < r < 0.757851
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -581060319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.786614 +/- 0.0035993 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.786614 @ 95%CL (1 toyMC)
median expected limit: r < 0.786614 @ 95%CL (1 toyMC)
   68% expected band : 0.786614 < r < 0.786614
   95% expected band : 0.786614 < r < 0.786614
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 973107374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.697211 +/- 0.00308621 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 0.697211 @ 95%CL (1 toyMC)
median expected limit: r < 0.697211 @ 95%CL (1 toyMC)
   68% expected band : 0.697211 < r < 0.697211
   95% expected band : 0.697211 < r < 0.697211
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1645011425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17378 +/- 0.00327198 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 1.17378 @ 95%CL (1 toyMC)
median expected limit: r < 1.17378 @ 95%CL (1 toyMC)
   68% expected band : 1.17378 < r < 1.17378
   95% expected band : 1.17378 < r < 1.17378
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1181296508
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.722681 +/- 0.0034814 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.722681 @ 95%CL (1 toyMC)
median expected limit: r < 0.722681 @ 95%CL (1 toyMC)
   68% expected band : 0.722681 < r < 0.722681
   95% expected band : 0.722681 < r < 0.722681
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -648242550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16599 +/- 0.00353672 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 1.16599 @ 95%CL (1 toyMC)
median expected limit: r < 1.16599 @ 95%CL (1 toyMC)
   68% expected band : 1.16599 < r < 1.16599
   95% expected band : 1.16599 < r < 1.16599
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1049532793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17049 +/- 0.00406116 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 1.17049 @ 95%CL (1 toyMC)
median expected limit: r < 1.17049 @ 95%CL (1 toyMC)
   68% expected band : 1.17049 < r < 1.17049
   95% expected band : 1.17049 < r < 1.17049
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1965354609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.835814 +/- 0.00403909 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.835814 @ 95%CL (1 toyMC)
median expected limit: r < 0.835814 @ 95%CL (1 toyMC)
   68% expected band : 0.835814 < r < 0.835814
   95% expected band : 0.835814 < r < 0.835814
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1353236541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.656045 +/- 0.00317775 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 0.656045 @ 95%CL (1 toyMC)
median expected limit: r < 0.656045 @ 95%CL (1 toyMC)
   68% expected band : 0.656045 < r < 0.656045
   95% expected band : 0.656045 < r < 0.656045
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 540519604
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05658 +/- 0.00510256 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 1.05658 @ 95%CL (1 toyMC)
median expected limit: r < 1.05658 @ 95%CL (1 toyMC)
   68% expected band : 1.05658 < r < 1.05658
   95% expected band : 1.05658 < r < 1.05658
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 192313797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.53194 +/- 0.00763413 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 3.53194 @ 95%CL (1 toyMC)
median expected limit: r < 3.53194 @ 95%CL (1 toyMC)
   68% expected band : 3.53194 < r < 3.53194
   95% expected band : 3.53194 < r < 3.53194
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -834727961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.88164 +/- 0.00668376 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 3.88164 @ 95%CL (1 toyMC)
median expected limit: r < 3.88164 @ 95%CL (1 toyMC)
   68% expected band : 3.88164 < r < 3.88164
   95% expected band : 3.88164 < r < 3.88164
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946786913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3403 +/- 0.00773818 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.3403 @ 95%CL (1 toyMC)
median expected limit: r < 3.3403 @ 95%CL (1 toyMC)
   68% expected band : 3.3403 < r < 3.3403
   95% expected band : 3.3403 < r < 3.3403
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 533026114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.33449 +/- 0.00624543 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 3.33449 @ 95%CL (1 toyMC)
median expected limit: r < 3.33449 @ 95%CL (1 toyMC)
   68% expected band : 3.33449 < r < 3.33449
   95% expected band : 3.33449 < r < 3.33449
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -403423924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49542 +/- 0.00783451 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 3.49542 @ 95%CL (1 toyMC)
median expected limit: r < 3.49542 @ 95%CL (1 toyMC)
   68% expected band : 3.49542 < r < 3.49542
   95% expected band : 3.49542 < r < 3.49542
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1802141870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89879 +/- 0.00876343 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.89879 @ 95%CL (1 toyMC)
median expected limit: r < 2.89879 @ 95%CL (1 toyMC)
   68% expected band : 2.89879 < r < 2.89879
   95% expected band : 2.89879 < r < 2.89879
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -660968208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85616 +/- 0.00658181 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 1.85616 @ 95%CL (1 toyMC)
median expected limit: r < 1.85616 @ 95%CL (1 toyMC)
   68% expected band : 1.85616 < r < 1.85616
   95% expected band : 1.85616 < r < 1.85616
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1164879385
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29506 +/- 0.00416025 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 2.29506 @ 95%CL (1 toyMC)
median expected limit: r < 2.29506 @ 95%CL (1 toyMC)
   68% expected band : 2.29506 < r < 2.29506
   95% expected band : 2.29506 < r < 2.29506
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 921876745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75632 +/- 0.00689409 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 2.75632 @ 95%CL (1 toyMC)
median expected limit: r < 2.75632 @ 95%CL (1 toyMC)
   68% expected band : 2.75632 < r < 2.75632
   95% expected band : 2.75632 < r < 2.75632
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 33549437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08973 +/- 0.00596547 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 3.08973 @ 95%CL (1 toyMC)
median expected limit: r < 3.08973 @ 95%CL (1 toyMC)
   68% expected band : 3.08973 < r < 3.08973
   95% expected band : 3.08973 < r < 3.08973
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1639117471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.30835 +/- 0.00800494 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 3.30835 @ 95%CL (1 toyMC)
median expected limit: r < 3.30835 @ 95%CL (1 toyMC)
   68% expected band : 3.30835 < r < 3.30835
   95% expected band : 3.30835 < r < 3.30835
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1618190799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.817 +/- 0.00615069 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 2.817 @ 95%CL (1 toyMC)
median expected limit: r < 2.817 @ 95%CL (1 toyMC)
   68% expected band : 2.817 < r < 2.817
   95% expected band : 2.817 < r < 2.817
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1614958095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.97067 +/- 0.00649727 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 2.97067 @ 95%CL (1 toyMC)
median expected limit: r < 2.97067 @ 95%CL (1 toyMC)
   68% expected band : 2.97067 < r < 2.97067
   95% expected band : 2.97067 < r < 2.97067
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2074899431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.5587 +/- 0.00560452 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 2.5587 @ 95%CL (1 toyMC)
median expected limit: r < 2.5587 @ 95%CL (1 toyMC)
   68% expected band : 2.5587 < r < 2.5587
   95% expected band : 2.5587 < r < 2.5587
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1017875814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.714 +/- 0.00589954 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 3.714 @ 95%CL (1 toyMC)
median expected limit: r < 3.714 @ 95%CL (1 toyMC)
   68% expected band : 3.714 < r < 3.714
   95% expected band : 3.714 < r < 3.714
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1210989850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.2107 +/- 0.00731762 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 3.2107 @ 95%CL (1 toyMC)
median expected limit: r < 3.2107 @ 95%CL (1 toyMC)
   68% expected band : 3.2107 < r < 3.2107
   95% expected band : 3.2107 < r < 3.2107
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 740949272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2934 +/- 0.00551637 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.2934 @ 95%CL (1 toyMC)
median expected limit: r < 2.2934 @ 95%CL (1 toyMC)
   68% expected band : 2.2934 < r < 2.2934
   95% expected band : 2.2934 < r < 2.2934
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2129923502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.16525 +/- 0.00583854 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 3.16525 @ 95%CL (1 toyMC)
median expected limit: r < 3.16525 @ 95%CL (1 toyMC)
   68% expected band : 3.16525 < r < 3.16525
   95% expected band : 3.16525 < r < 3.16525
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -459662816
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.42886 +/- 0.00490568 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.42886 @ 95%CL (1 toyMC)
median expected limit: r < 3.42886 @ 95%CL (1 toyMC)
   68% expected band : 3.42886 < r < 3.42886
   95% expected band : 3.42886 < r < 3.42886
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2007650378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47466 +/- 0.00660155 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.47466 @ 95%CL (1 toyMC)
median expected limit: r < 2.47466 @ 95%CL (1 toyMC)
   68% expected band : 2.47466 < r < 2.47466
   95% expected band : 2.47466 < r < 2.47466
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1103139485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77776 +/- 0.0060589 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.77776 @ 95%CL (1 toyMC)
median expected limit: r < 2.77776 @ 95%CL (1 toyMC)
   68% expected band : 2.77776 < r < 2.77776
   95% expected band : 2.77776 < r < 2.77776
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -195145022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.66821 +/- 0.00798857 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 3.66821 @ 95%CL (1 toyMC)
median expected limit: r < 3.66821 @ 95%CL (1 toyMC)
   68% expected band : 3.66821 < r < 3.66821
   95% expected band : 3.66821 < r < 3.66821
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -235213518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20323 +/- 0.00545366 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 2.20323 @ 95%CL (1 toyMC)
median expected limit: r < 2.20323 @ 95%CL (1 toyMC)
   68% expected band : 2.20323 < r < 2.20323
   95% expected band : 2.20323 < r < 2.20323
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 952453282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12208 +/- 0.00590006 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 2.12208 @ 95%CL (1 toyMC)
median expected limit: r < 2.12208 @ 95%CL (1 toyMC)
   68% expected band : 2.12208 < r < 2.12208
   95% expected band : 2.12208 < r < 2.12208
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1456612157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10833 +/- 0.00575656 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 2.10833 @ 95%CL (1 toyMC)
median expected limit: r < 2.10833 @ 95%CL (1 toyMC)
   68% expected band : 2.10833 < r < 2.10833
   95% expected band : 2.10833 < r < 2.10833
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1861394504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97517 +/- 0.00603696 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 3.97517 @ 95%CL (1 toyMC)
median expected limit: r < 3.97517 @ 95%CL (1 toyMC)
   68% expected band : 3.97517 < r < 3.97517
   95% expected band : 3.97517 < r < 3.97517
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -770739078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61721 +/- 0.00567932 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 3.61721 @ 95%CL (1 toyMC)
median expected limit: r < 3.61721 @ 95%CL (1 toyMC)
   68% expected band : 3.61721 < r < 3.61721
   95% expected band : 3.61721 < r < 3.61721
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1218257191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51037 +/- 0.00696946 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.51037 @ 95%CL (1 toyMC)
median expected limit: r < 2.51037 @ 95%CL (1 toyMC)
   68% expected band : 2.51037 < r < 2.51037
   95% expected band : 2.51037 < r < 2.51037
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -53237135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74057 +/- 0.00666127 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 2.74057 @ 95%CL (1 toyMC)
median expected limit: r < 2.74057 @ 95%CL (1 toyMC)
   68% expected band : 2.74057 < r < 2.74057
   95% expected band : 2.74057 < r < 2.74057
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -567451048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91631 +/- 0.00521085 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 1.91631 @ 95%CL (1 toyMC)
median expected limit: r < 1.91631 @ 95%CL (1 toyMC)
   68% expected band : 1.91631 < r < 1.91631
   95% expected band : 1.91631 < r < 1.91631
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1302720694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.302 +/- 0.00780524 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.302 @ 95%CL (1 toyMC)
median expected limit: r < 5.302 @ 95%CL (1 toyMC)
   68% expected band : 5.302 < r < 5.302
   95% expected band : 5.302 < r < 5.302
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1623853794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65754 +/- 0.00785826 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.65754 @ 95%CL (1 toyMC)
median expected limit: r < 2.65754 @ 95%CL (1 toyMC)
   68% expected band : 2.65754 < r < 2.65754
   95% expected band : 2.65754 < r < 2.65754
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1671373392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46398 +/- 0.00761597 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.46398 @ 95%CL (1 toyMC)
median expected limit: r < 2.46398 @ 95%CL (1 toyMC)
   68% expected band : 2.46398 < r < 2.46398
   95% expected band : 2.46398 < r < 2.46398
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1277521685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77001 +/- 0.00569947 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.77001 @ 95%CL (1 toyMC)
median expected limit: r < 2.77001 @ 95%CL (1 toyMC)
   68% expected band : 2.77001 < r < 2.77001
   95% expected band : 2.77001 < r < 2.77001
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2113186234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.14142 +/- 0.00854705 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.14142 @ 95%CL (1 toyMC)
median expected limit: r < 5.14142 @ 95%CL (1 toyMC)
   68% expected band : 5.14142 < r < 5.14142
   95% expected band : 5.14142 < r < 5.14142
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -689776232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8201 +/- 0.00661774 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.8201 @ 95%CL (1 toyMC)
median expected limit: r < 2.8201 @ 95%CL (1 toyMC)
   68% expected band : 2.8201 < r < 2.8201
   95% expected band : 2.8201 < r < 2.8201
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1951125901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8847 +/- 0.00879915 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.8847 @ 95%CL (1 toyMC)
median expected limit: r < 2.8847 @ 95%CL (1 toyMC)
   68% expected band : 2.8847 < r < 2.8847
   95% expected band : 2.8847 < r < 2.8847
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1313154388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2789 +/- 0.00649839 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.2789 @ 95%CL (1 toyMC)
median expected limit: r < 2.2789 @ 95%CL (1 toyMC)
   68% expected band : 2.2789 < r < 2.2789
   95% expected band : 2.2789 < r < 2.2789
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -59486145
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.59515 +/- 0.00700394 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.59515 @ 95%CL (1 toyMC)
median expected limit: r < 2.59515 @ 95%CL (1 toyMC)
   68% expected band : 2.59515 < r < 2.59515
   95% expected band : 2.59515 < r < 2.59515
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1063575148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32305 +/- 0.00561423 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.32305 @ 95%CL (1 toyMC)
median expected limit: r < 2.32305 @ 95%CL (1 toyMC)
   68% expected band : 2.32305 < r < 2.32305
   95% expected band : 2.32305 < r < 2.32305
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2052985133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.28546 +/- 0.00863949 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.28546 @ 95%CL (1 toyMC)
median expected limit: r < 6.28546 @ 95%CL (1 toyMC)
   68% expected band : 6.28546 < r < 6.28546
   95% expected band : 6.28546 < r < 6.28546
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1222516843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.10083 +/- 0.00706201 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.10083 @ 95%CL (1 toyMC)
median expected limit: r < 3.10083 @ 95%CL (1 toyMC)
   68% expected band : 3.10083 < r < 3.10083
   95% expected band : 3.10083 < r < 3.10083
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -403851324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1791 +/- 0.00653098 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 2.1791 @ 95%CL (1 toyMC)
median expected limit: r < 2.1791 @ 95%CL (1 toyMC)
   68% expected band : 2.1791 < r < 2.1791
   95% expected band : 2.1791 < r < 2.1791
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -404702797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.17757 +/- 0.00636162 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 3.17757 @ 95%CL (1 toyMC)
median expected limit: r < 3.17757 @ 95%CL (1 toyMC)
   68% expected band : 3.17757 < r < 3.17757
   95% expected band : 3.17757 < r < 3.17757
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -883523364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.07461 +/- 0.00537932 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 2.07461 @ 95%CL (1 toyMC)
median expected limit: r < 2.07461 @ 95%CL (1 toyMC)
   68% expected band : 2.07461 < r < 2.07461
   95% expected band : 2.07461 < r < 2.07461
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 77387829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.34477 +/- 0.00774618 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 3.34477 @ 95%CL (1 toyMC)
median expected limit: r < 3.34477 @ 95%CL (1 toyMC)
   68% expected band : 3.34477 < r < 3.34477
   95% expected band : 3.34477 < r < 3.34477
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2082242710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86423 +/- 0.00649286 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.86423 @ 95%CL (1 toyMC)
median expected limit: r < 2.86423 @ 95%CL (1 toyMC)
   68% expected band : 2.86423 < r < 2.86423
   95% expected band : 2.86423 < r < 2.86423
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -773634406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.60366 +/- 0.0115454 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 6.60366 @ 95%CL (1 toyMC)
median expected limit: r < 6.60366 @ 95%CL (1 toyMC)
   68% expected band : 6.60366 < r < 6.60366
   95% expected band : 6.60366 < r < 6.60366
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 649260342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.83215 +/- 0.00704983 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 2.83215 @ 95%CL (1 toyMC)
median expected limit: r < 2.83215 @ 95%CL (1 toyMC)
   68% expected band : 2.83215 < r < 2.83215
   95% expected band : 2.83215 < r < 2.83215
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1920864641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.30353 +/- 0.0103492 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.30353 @ 95%CL (1 toyMC)
median expected limit: r < 5.30353 @ 95%CL (1 toyMC)
   68% expected band : 5.30353 < r < 5.30353
   95% expected band : 5.30353 < r < 5.30353
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1305076579
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.55185 +/- 0.00584405 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.55185 @ 95%CL (1 toyMC)
median expected limit: r < 2.55185 @ 95%CL (1 toyMC)
   68% expected band : 2.55185 < r < 2.55185
   95% expected band : 2.55185 < r < 2.55185
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1238141050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.98715 +/- 0.00682298 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.98715 @ 95%CL (1 toyMC)
median expected limit: r < 2.98715 @ 95%CL (1 toyMC)
   68% expected band : 2.98715 < r < 2.98715
   95% expected band : 2.98715 < r < 2.98715
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1822465618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.57613 +/- 0.00649283 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 2.57613 @ 95%CL (1 toyMC)
median expected limit: r < 2.57613 @ 95%CL (1 toyMC)
   68% expected band : 2.57613 < r < 2.57613
   95% expected band : 2.57613 < r < 2.57613
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1984836110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.9926 +/- 0.00715416 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 4.9926 @ 95%CL (1 toyMC)
median expected limit: r < 4.9926 @ 95%CL (1 toyMC)
   68% expected band : 4.9926 < r < 4.9926
   95% expected band : 4.9926 < r < 4.9926
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1029120321
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.28401 +/- 0.00790837 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.28401 @ 95%CL (1 toyMC)
median expected limit: r < 5.28401 @ 95%CL (1 toyMC)
   68% expected band : 5.28401 < r < 5.28401
   95% expected band : 5.28401 < r < 5.28401
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -858832422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25219 +/- 0.00807458 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 3.25219 @ 95%CL (1 toyMC)
median expected limit: r < 3.25219 @ 95%CL (1 toyMC)
   68% expected band : 3.25219 < r < 3.25219
   95% expected band : 3.25219 < r < 3.25219
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1057585513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89439 +/- 0.00486839 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 2.89439 @ 95%CL (1 toyMC)
median expected limit: r < 2.89439 @ 95%CL (1 toyMC)
   68% expected band : 2.89439 < r < 2.89439
   95% expected band : 2.89439 < r < 2.89439
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -707665262
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03379 +/- 0.0060454 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 2.03379 @ 95%CL (1 toyMC)
median expected limit: r < 2.03379 @ 95%CL (1 toyMC)
   68% expected band : 2.03379 < r < 2.03379
   95% expected band : 2.03379 < r < 2.03379
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2146808217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77975 +/- 0.00708898 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.77975 @ 95%CL (1 toyMC)
median expected limit: r < 2.77975 @ 95%CL (1 toyMC)
   68% expected band : 2.77975 < r < 2.77975
   95% expected band : 2.77975 < r < 2.77975
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1793207867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.76356 +/- 0.0101372 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 4.76356 @ 95%CL (1 toyMC)
median expected limit: r < 4.76356 @ 95%CL (1 toyMC)
   68% expected band : 4.76356 < r < 4.76356
   95% expected band : 4.76356 < r < 4.76356
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1065108788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9554 +/- 0.0067365 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 3.9554 @ 95%CL (1 toyMC)
median expected limit: r < 3.9554 @ 95%CL (1 toyMC)
   68% expected band : 3.9554 < r < 3.9554
   95% expected band : 3.9554 < r < 3.9554
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1008527219
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.09708 +/- 0.0061828 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 3.09708 @ 95%CL (1 toyMC)
median expected limit: r < 3.09708 @ 95%CL (1 toyMC)
   68% expected band : 3.09708 < r < 3.09708
   95% expected band : 3.09708 < r < 3.09708
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 651006818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67102 +/- 0.00752036 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.67102 @ 95%CL (1 toyMC)
median expected limit: r < 2.67102 @ 95%CL (1 toyMC)
   68% expected band : 2.67102 < r < 2.67102
   95% expected band : 2.67102 < r < 2.67102
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -635707601
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67073 +/- 0.00652594 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.67073 @ 95%CL (1 toyMC)
median expected limit: r < 2.67073 @ 95%CL (1 toyMC)
   68% expected band : 2.67073 < r < 2.67073
   95% expected band : 2.67073 < r < 2.67073
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 710696774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.84615 +/- 0.00485699 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.84615 @ 95%CL (1 toyMC)
median expected limit: r < 2.84615 @ 95%CL (1 toyMC)
   68% expected band : 2.84615 < r < 2.84615
   95% expected band : 2.84615 < r < 2.84615
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 654598059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47712 +/- 0.00666726 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 2.47712 @ 95%CL (1 toyMC)
median expected limit: r < 2.47712 @ 95%CL (1 toyMC)
   68% expected band : 2.47712 < r < 2.47712
   95% expected band : 2.47712 < r < 2.47712
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -381671287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.38872 +/- 0.00786589 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 3.38872 @ 95%CL (1 toyMC)
median expected limit: r < 3.38872 @ 95%CL (1 toyMC)
   68% expected band : 3.38872 < r < 3.38872
   95% expected band : 3.38872 < r < 3.38872
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -974704643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.36581 +/- 0.00596002 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.36581 @ 95%CL (1 toyMC)
median expected limit: r < 3.36581 @ 95%CL (1 toyMC)
   68% expected band : 3.36581 < r < 3.36581
   95% expected band : 3.36581 < r < 3.36581
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 849279876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18951 +/- 0.00777724 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 3.18951 @ 95%CL (1 toyMC)
median expected limit: r < 3.18951 @ 95%CL (1 toyMC)
   68% expected band : 3.18951 < r < 3.18951
   95% expected band : 3.18951 < r < 3.18951
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1192256996
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.78899 +/- 0.00882161 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 2.78899 @ 95%CL (1 toyMC)
median expected limit: r < 2.78899 @ 95%CL (1 toyMC)
   68% expected band : 2.78899 < r < 2.78899
   95% expected band : 2.78899 < r < 2.78899
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1059264373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.28869 +/- 0.00972717 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.28869 @ 95%CL (1 toyMC)
median expected limit: r < 4.28869 @ 95%CL (1 toyMC)
   68% expected band : 4.28869 < r < 4.28869
   95% expected band : 4.28869 < r < 4.28869
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1889662360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.75737 +/- 0.00649695 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 4.75737 @ 95%CL (1 toyMC)
median expected limit: r < 4.75737 @ 95%CL (1 toyMC)
   68% expected band : 4.75737 < r < 4.75737
   95% expected band : 4.75737 < r < 4.75737
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -185356587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85202 +/- 0.00712812 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 2.85202 @ 95%CL (1 toyMC)
median expected limit: r < 2.85202 @ 95%CL (1 toyMC)
   68% expected band : 2.85202 < r < 2.85202
   95% expected band : 2.85202 < r < 2.85202
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1994913624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74551 +/- 0.00644965 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 2.74551 @ 95%CL (1 toyMC)
median expected limit: r < 2.74551 @ 95%CL (1 toyMC)
   68% expected band : 2.74551 < r < 2.74551
   95% expected band : 2.74551 < r < 2.74551
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -659529262
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.351 +/- 0.00649048 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 2.351 @ 95%CL (1 toyMC)
median expected limit: r < 2.351 @ 95%CL (1 toyMC)
   68% expected band : 2.351 < r < 2.351
   95% expected band : 2.351 < r < 2.351
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1124441354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67266 +/- 0.0062216 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.67266 @ 95%CL (1 toyMC)
median expected limit: r < 2.67266 @ 95%CL (1 toyMC)
   68% expected band : 2.67266 < r < 2.67266
   95% expected band : 2.67266 < r < 2.67266
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 654106252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76237 +/- 0.00691285 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.76237 @ 95%CL (1 toyMC)
median expected limit: r < 2.76237 @ 95%CL (1 toyMC)
   68% expected band : 2.76237 < r < 2.76237
   95% expected band : 2.76237 < r < 2.76237
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2886414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.29686 +/- 0.00753481 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.29686 @ 95%CL (1 toyMC)
median expected limit: r < 5.29686 @ 95%CL (1 toyMC)
   68% expected band : 5.29686 < r < 5.29686
   95% expected band : 5.29686 < r < 5.29686
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -527515179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08112 +/- 0.00670733 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.84 min (real)
mean   expected limit: r < 3.08112 @ 95%CL (1 toyMC)
median expected limit: r < 3.08112 @ 95%CL (1 toyMC)
   68% expected band : 3.08112 < r < 3.08112
   95% expected band : 3.08112 < r < 3.08112
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2013819486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.08851 +/- 0.00713321 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.08851 @ 95%CL (1 toyMC)
median expected limit: r < 4.08851 @ 95%CL (1 toyMC)
   68% expected band : 4.08851 < r < 4.08851
   95% expected band : 4.08851 < r < 4.08851
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -46614842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9412 +/- 0.00526911 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 1.9412 @ 95%CL (1 toyMC)
median expected limit: r < 1.9412 @ 95%CL (1 toyMC)
   68% expected band : 1.9412 < r < 1.9412
   95% expected band : 1.9412 < r < 1.9412
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 788650362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.31462 +/- 0.00733541 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 3.31462 @ 95%CL (1 toyMC)
median expected limit: r < 3.31462 @ 95%CL (1 toyMC)
   68% expected band : 3.31462 < r < 3.31462
   95% expected band : 3.31462 < r < 3.31462
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1109701469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19422 +/- 0.00670036 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.19422 @ 95%CL (1 toyMC)
median expected limit: r < 2.19422 @ 95%CL (1 toyMC)
   68% expected band : 2.19422 < r < 2.19422
   95% expected band : 2.19422 < r < 2.19422
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1308138193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03796 +/- 0.00886546 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 4.03796 @ 95%CL (1 toyMC)
median expected limit: r < 4.03796 @ 95%CL (1 toyMC)
   68% expected band : 4.03796 < r < 4.03796
   95% expected band : 4.03796 < r < 4.03796
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1166077140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77318 +/- 0.00655991 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.77318 @ 95%CL (1 toyMC)
median expected limit: r < 2.77318 @ 95%CL (1 toyMC)
   68% expected band : 2.77318 < r < 2.77318
   95% expected band : 2.77318 < r < 2.77318
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1331913741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11011 +/- 0.00530741 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 2.11011 @ 95%CL (1 toyMC)
median expected limit: r < 2.11011 @ 95%CL (1 toyMC)
   68% expected band : 2.11011 < r < 2.11011
   95% expected band : 2.11011 < r < 2.11011
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1908214688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65648 +/- 0.00551165 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 2.65648 @ 95%CL (1 toyMC)
median expected limit: r < 2.65648 @ 95%CL (1 toyMC)
   68% expected band : 2.65648 < r < 2.65648
   95% expected band : 2.65648 < r < 2.65648
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2132905160
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.73183 +/- 0.00541338 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 2.73183 @ 95%CL (1 toyMC)
median expected limit: r < 2.73183 @ 95%CL (1 toyMC)
   68% expected band : 2.73183 < r < 2.73183
   95% expected band : 2.73183 < r < 2.73183
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1250981065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.69322 +/- 0.00652235 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.69322 @ 95%CL (1 toyMC)
median expected limit: r < 4.69322 @ 95%CL (1 toyMC)
   68% expected band : 4.69322 < r < 4.69322
   95% expected band : 4.69322 < r < 4.69322
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -428448632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.05384 +/- 0.00853359 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 3.05384 @ 95%CL (1 toyMC)
median expected limit: r < 3.05384 @ 95%CL (1 toyMC)
   68% expected band : 3.05384 < r < 3.05384
   95% expected band : 3.05384 < r < 3.05384
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1061177905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.68069 +/- 0.0069012 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.68069 @ 95%CL (1 toyMC)
median expected limit: r < 3.68069 @ 95%CL (1 toyMC)
   68% expected band : 3.68069 < r < 3.68069
   95% expected band : 3.68069 < r < 3.68069
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 222723188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18673 +/- 0.00748587 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 3.18673 @ 95%CL (1 toyMC)
median expected limit: r < 3.18673 @ 95%CL (1 toyMC)
   68% expected band : 3.18673 < r < 3.18673
   95% expected band : 3.18673 < r < 3.18673
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1135193331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.6628 +/- 0.00586669 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 2.6628 @ 95%CL (1 toyMC)
median expected limit: r < 2.6628 @ 95%CL (1 toyMC)
   68% expected band : 2.6628 < r < 2.6628
   95% expected band : 2.6628 < r < 2.6628
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1128939698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.6383 +/- 0.00829674 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.6383 @ 95%CL (1 toyMC)
median expected limit: r < 4.6383 @ 95%CL (1 toyMC)
   68% expected band : 4.6383 < r < 4.6383
   95% expected band : 4.6383 < r < 4.6383
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1800186685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.24415 +/- 0.00596821 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 3.24415 @ 95%CL (1 toyMC)
median expected limit: r < 3.24415 @ 95%CL (1 toyMC)
   68% expected band : 3.24415 < r < 3.24415
   95% expected band : 3.24415 < r < 3.24415
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1333675470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.55241 +/- 0.00633462 @ 95% CL (100 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 2.55241 @ 95%CL (1 toyMC)
median expected limit: r < 2.55241 @ 95%CL (1 toyMC)
   68% expected band : 2.55241 < r < 2.55241
   95% expected band : 2.55241 < r < 2.55241
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2104137666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.44486 +/- 0.00834891 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.44486 @ 95%CL (1 toyMC)
median expected limit: r < 4.44486 @ 95%CL (1 toyMC)
   68% expected band : 4.44486 < r < 4.44486
   95% expected band : 4.44486 < r < 4.44486
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2143452700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56345 +/- 0.00643196 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 2.56345 @ 95%CL (1 toyMC)
median expected limit: r < 2.56345 @ 95%CL (1 toyMC)
   68% expected band : 2.56345 < r < 2.56345
   95% expected band : 2.56345 < r < 2.56345
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -671855635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.69375 +/- 0.00826049 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.69375 @ 95%CL (1 toyMC)
median expected limit: r < 4.69375 @ 95%CL (1 toyMC)
   68% expected band : 4.69375 < r < 4.69375
   95% expected band : 4.69375 < r < 4.69375
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -234801461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.72117 +/- 0.00699333 @ 95% CL (100 tries)
Done in 0.82 min (cpu), 0.82 min (real)
mean   expected limit: r < 2.72117 @ 95%CL (1 toyMC)
median expected limit: r < 2.72117 @ 95%CL (1 toyMC)
   68% expected band : 2.72117 < r < 2.72117
   95% expected band : 2.72117 < r < 2.72117
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1587992181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1676 +/- 0.0152249 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.98 min (real)
mean   expected limit: r < 12.1676 @ 95%CL (1 toyMC)
median expected limit: r < 12.1676 @ 95%CL (1 toyMC)
   68% expected band : 12.1676 < r < 12.1676
   95% expected band : 12.1676 < r < 12.1676
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -414853522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.29841 +/- 0.0166718 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 9.29841 @ 95%CL (1 toyMC)
median expected limit: r < 9.29841 @ 95%CL (1 toyMC)
   68% expected band : 9.29841 < r < 9.29841
   95% expected band : 9.29841 < r < 9.29841
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1840775021
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.18351 +/- 0.0178608 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 9.18351 @ 95%CL (1 toyMC)
median expected limit: r < 9.18351 @ 95%CL (1 toyMC)
   68% expected band : 9.18351 < r < 9.18351
   95% expected band : 9.18351 < r < 9.18351
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1362473086
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.58997 +/- 0.0139707 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.58997 @ 95%CL (1 toyMC)
median expected limit: r < 6.58997 @ 95%CL (1 toyMC)
   68% expected band : 6.58997 < r < 6.58997
   95% expected band : 6.58997 < r < 6.58997
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1038608486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.69631 +/- 0.0157085 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 9.69631 @ 95%CL (1 toyMC)
median expected limit: r < 9.69631 @ 95%CL (1 toyMC)
   68% expected band : 9.69631 < r < 9.69631
   95% expected band : 9.69631 < r < 9.69631
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 585499427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.27951 +/- 0.0164118 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.27951 @ 95%CL (1 toyMC)
median expected limit: r < 7.27951 @ 95%CL (1 toyMC)
   68% expected band : 7.27951 < r < 7.27951
   95% expected band : 7.27951 < r < 7.27951
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2015323415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.11168 +/- 0.0151125 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.11168 @ 95%CL (1 toyMC)
median expected limit: r < 7.11168 @ 95%CL (1 toyMC)
   68% expected band : 7.11168 < r < 7.11168
   95% expected band : 7.11168 < r < 7.11168
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1597329043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.67332 +/- 0.0170959 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 9.67332 @ 95%CL (1 toyMC)
median expected limit: r < 9.67332 @ 95%CL (1 toyMC)
   68% expected band : 9.67332 < r < 9.67332
   95% expected band : 9.67332 < r < 9.67332
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1218674469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50021 +/- 0.011106 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.50021 @ 95%CL (1 toyMC)
median expected limit: r < 5.50021 @ 95%CL (1 toyMC)
   68% expected band : 5.50021 < r < 5.50021
   95% expected band : 5.50021 < r < 5.50021
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 758220359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.60421 +/- 0.0136592 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.60421 @ 95%CL (1 toyMC)
median expected limit: r < 6.60421 @ 95%CL (1 toyMC)
   68% expected band : 6.60421 < r < 6.60421
   95% expected band : 6.60421 < r < 6.60421
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -5538197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.62943 +/- 0.0136225 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.62943 @ 95%CL (1 toyMC)
median expected limit: r < 6.62943 @ 95%CL (1 toyMC)
   68% expected band : 6.62943 < r < 6.62943
   95% expected band : 6.62943 < r < 6.62943
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 547783376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.00778 +/- 0.01559 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.00778 @ 95%CL (1 toyMC)
median expected limit: r < 6.00778 @ 95%CL (1 toyMC)
   68% expected band : 6.00778 < r < 6.00778
   95% expected band : 6.00778 < r < 6.00778
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2097215512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4325 +/- 0.0178204 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 12.4325 @ 95%CL (1 toyMC)
median expected limit: r < 12.4325 @ 95%CL (1 toyMC)
   68% expected band : 12.4325 < r < 12.4325
   95% expected band : 12.4325 < r < 12.4325
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1240718545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.88869 +/- 0.015912 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.88869 @ 95%CL (1 toyMC)
median expected limit: r < 7.88869 @ 95%CL (1 toyMC)
   68% expected band : 7.88869 < r < 7.88869
   95% expected band : 7.88869 < r < 7.88869
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1447037109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0393 +/- 0.0162532 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 11.0393 @ 95%CL (1 toyMC)
median expected limit: r < 11.0393 @ 95%CL (1 toyMC)
   68% expected band : 11.0393 < r < 11.0393
   95% expected band : 11.0393 < r < 11.0393
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2102530593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.31388 +/- 0.0177417 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 9.31388 @ 95%CL (1 toyMC)
median expected limit: r < 9.31388 @ 95%CL (1 toyMC)
   68% expected band : 9.31388 < r < 9.31388
   95% expected band : 9.31388 < r < 9.31388
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 568703892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.02867 +/- 0.0123823 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.02867 @ 95%CL (1 toyMC)
median expected limit: r < 6.02867 @ 95%CL (1 toyMC)
   68% expected band : 6.02867 < r < 6.02867
   95% expected band : 6.02867 < r < 6.02867
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2102091490
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.59071 +/- 0.0146781 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.59071 @ 95%CL (1 toyMC)
median expected limit: r < 6.59071 @ 95%CL (1 toyMC)
   68% expected band : 6.59071 < r < 6.59071
   95% expected band : 6.59071 < r < 6.59071
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1033199710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.94515 +/- 0.0118497 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.94515 @ 95%CL (1 toyMC)
median expected limit: r < 5.94515 @ 95%CL (1 toyMC)
   68% expected band : 5.94515 < r < 5.94515
   95% expected band : 5.94515 < r < 5.94515
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1820505089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.51795 +/- 0.0156824 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.51795 @ 95%CL (1 toyMC)
median expected limit: r < 7.51795 @ 95%CL (1 toyMC)
   68% expected band : 7.51795 < r < 7.51795
   95% expected band : 7.51795 < r < 7.51795
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -162464922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.6775 +/- 0.0174704 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.6775 @ 95%CL (1 toyMC)
median expected limit: r < 7.6775 @ 95%CL (1 toyMC)
   68% expected band : 7.6775 < r < 7.6775
   95% expected band : 7.6775 < r < 7.6775
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1451351097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51189 +/- 0.0116187 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 5.51189 @ 95%CL (1 toyMC)
median expected limit: r < 5.51189 @ 95%CL (1 toyMC)
   68% expected band : 5.51189 < r < 5.51189
   95% expected band : 5.51189 < r < 5.51189
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 4418982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.47777 +/- 0.0127494 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 5.47777 @ 95%CL (1 toyMC)
median expected limit: r < 5.47777 @ 95%CL (1 toyMC)
   68% expected band : 5.47777 < r < 5.47777
   95% expected band : 5.47777 < r < 5.47777
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -397370318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.16709 +/- 0.014944 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 7.16709 @ 95%CL (1 toyMC)
median expected limit: r < 7.16709 @ 95%CL (1 toyMC)
   68% expected band : 7.16709 < r < 7.16709
   95% expected band : 7.16709 < r < 7.16709
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -757161178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.81362 +/- 0.0165168 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.81362 @ 95%CL (1 toyMC)
median expected limit: r < 7.81362 @ 95%CL (1 toyMC)
   68% expected band : 7.81362 < r < 7.81362
   95% expected band : 7.81362 < r < 7.81362
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1395770258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.09423 +/- 0.0163396 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 9.09423 @ 95%CL (1 toyMC)
median expected limit: r < 9.09423 @ 95%CL (1 toyMC)
   68% expected band : 9.09423 < r < 9.09423
   95% expected band : 9.09423 < r < 9.09423
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 464290568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.46741 +/- 0.012976 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 5.46741 @ 95%CL (1 toyMC)
median expected limit: r < 5.46741 @ 95%CL (1 toyMC)
   68% expected band : 5.46741 < r < 5.46741
   95% expected band : 5.46741 < r < 5.46741
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -749984504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.49398 +/- 0.0109962 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.49398 @ 95%CL (1 toyMC)
median expected limit: r < 5.49398 @ 95%CL (1 toyMC)
   68% expected band : 5.49398 < r < 5.49398
   95% expected band : 5.49398 < r < 5.49398
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 42992712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3435 +/- 0.0166643 @ 95% CL (100 tries)
Done in 0.98 min (cpu), 0.99 min (real)
mean   expected limit: r < 13.3435 @ 95%CL (1 toyMC)
median expected limit: r < 13.3435 @ 95%CL (1 toyMC)
   68% expected band : 13.3435 < r < 13.3435
   95% expected band : 13.3435 < r < 13.3435
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -262700828
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5356 +/- 0.0114655 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 10.5356 @ 95%CL (1 toyMC)
median expected limit: r < 10.5356 @ 95%CL (1 toyMC)
   68% expected band : 10.5356 < r < 10.5356
   95% expected band : 10.5356 < r < 10.5356
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1758638270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.9002 +/- 0.0200207 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.9002 @ 95%CL (1 toyMC)
median expected limit: r < 7.9002 @ 95%CL (1 toyMC)
   68% expected band : 7.9002 < r < 7.9002
   95% expected band : 7.9002 < r < 7.9002
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1941769237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1331 +/- 0.0138646 @ 95% CL (100 tries)
Done in 1.00 min (cpu), 1.00 min (real)
mean   expected limit: r < 16.1331 @ 95%CL (1 toyMC)
median expected limit: r < 16.1331 @ 95%CL (1 toyMC)
   68% expected band : 16.1331 < r < 16.1331
   95% expected band : 16.1331 < r < 16.1331
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 846552798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.80804 +/- 0.0136815 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.80804 @ 95%CL (1 toyMC)
median expected limit: r < 6.80804 @ 95%CL (1 toyMC)
   68% expected band : 6.80804 < r < 6.80804
   95% expected band : 6.80804 < r < 6.80804
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1894108072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.97495 +/- 0.0123113 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.97495 @ 95%CL (1 toyMC)
median expected limit: r < 5.97495 @ 95%CL (1 toyMC)
   68% expected band : 5.97495 < r < 5.97495
   95% expected band : 5.97495 < r < 5.97495
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1331915334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.61458 +/- 0.0159799 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.61458 @ 95%CL (1 toyMC)
median expected limit: r < 6.61458 @ 95%CL (1 toyMC)
   68% expected band : 6.61458 < r < 6.61458
   95% expected band : 6.61458 < r < 6.61458
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1390647438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.76584 +/- 0.0159864 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.76584 @ 95%CL (1 toyMC)
median expected limit: r < 8.76584 @ 95%CL (1 toyMC)
   68% expected band : 8.76584 < r < 8.76584
   95% expected band : 8.76584 < r < 8.76584
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 661109959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.49742 +/- 0.0118391 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.49742 @ 95%CL (1 toyMC)
median expected limit: r < 5.49742 @ 95%CL (1 toyMC)
   68% expected band : 5.49742 < r < 5.49742
   95% expected band : 5.49742 < r < 5.49742
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -355739013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.41345 +/- 0.0152249 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 9.41345 @ 95%CL (1 toyMC)
median expected limit: r < 9.41345 @ 95%CL (1 toyMC)
   68% expected band : 9.41345 < r < 9.41345
   95% expected band : 9.41345 < r < 9.41345
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2114455196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.65759 +/- 0.0134989 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.65759 @ 95%CL (1 toyMC)
median expected limit: r < 6.65759 @ 95%CL (1 toyMC)
   68% expected band : 6.65759 < r < 6.65759
   95% expected band : 6.65759 < r < 6.65759
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 728634008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.71847 +/- 0.0125212 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.71847 @ 95%CL (1 toyMC)
median expected limit: r < 8.71847 @ 95%CL (1 toyMC)
   68% expected band : 8.71847 < r < 8.71847
   95% expected band : 8.71847 < r < 8.71847
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1571883867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7863 +/- 0.017593 @ 95% CL (100 tries)
Done in 0.98 min (cpu), 0.98 min (real)
mean   expected limit: r < 10.7863 @ 95%CL (1 toyMC)
median expected limit: r < 10.7863 @ 95%CL (1 toyMC)
   68% expected band : 10.7863 < r < 10.7863
   95% expected band : 10.7863 < r < 10.7863
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1353463635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.65518 +/- 0.0171369 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.65518 @ 95%CL (1 toyMC)
median expected limit: r < 7.65518 @ 95%CL (1 toyMC)
   68% expected band : 7.65518 < r < 7.65518
   95% expected band : 7.65518 < r < 7.65518
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1694218911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.39094 +/- 0.0181364 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.39094 @ 95%CL (1 toyMC)
median expected limit: r < 8.39094 @ 95%CL (1 toyMC)
   68% expected band : 8.39094 < r < 8.39094
   95% expected band : 8.39094 < r < 8.39094
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 80114979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.43364 +/- 0.0125071 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 5.43364 @ 95%CL (1 toyMC)
median expected limit: r < 5.43364 @ 95%CL (1 toyMC)
   68% expected band : 5.43364 < r < 5.43364
   95% expected band : 5.43364 < r < 5.43364
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1961857218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.11691 +/- 0.0165616 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 8.11691 @ 95%CL (1 toyMC)
median expected limit: r < 8.11691 @ 95%CL (1 toyMC)
   68% expected band : 8.11691 < r < 8.11691
   95% expected band : 8.11691 < r < 8.11691
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1266261349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6507 +/- 0.0157235 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.6507 @ 95%CL (1 toyMC)
median expected limit: r < 10.6507 @ 95%CL (1 toyMC)
   68% expected band : 10.6507 < r < 10.6507
   95% expected band : 10.6507 < r < 10.6507
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 128740543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3489 +/- 0.014839 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 11.3489 @ 95%CL (1 toyMC)
median expected limit: r < 11.3489 @ 95%CL (1 toyMC)
   68% expected band : 11.3489 < r < 11.3489
   95% expected band : 11.3489 < r < 11.3489
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1613098895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7314 +/- 0.00942594 @ 95% CL (100 tries)
Done in 1.00 min (cpu), 1.00 min (real)
mean   expected limit: r < 14.7314 @ 95%CL (1 toyMC)
median expected limit: r < 14.7314 @ 95%CL (1 toyMC)
   68% expected band : 14.7314 < r < 14.7314
   95% expected band : 14.7314 < r < 14.7314
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1010895721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.66144 +/- 0.0150499 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.66144 @ 95%CL (1 toyMC)
median expected limit: r < 6.66144 @ 95%CL (1 toyMC)
   68% expected band : 6.66144 < r < 6.66144
   95% expected band : 6.66144 < r < 6.66144
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2043866914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.62095 +/- 0.0141832 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.62095 @ 95%CL (1 toyMC)
median expected limit: r < 8.62095 @ 95%CL (1 toyMC)
   68% expected band : 8.62095 < r < 8.62095
   95% expected band : 8.62095 < r < 8.62095
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -974826686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.87718 +/- 0.0149683 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.87718 @ 95%CL (1 toyMC)
median expected limit: r < 7.87718 @ 95%CL (1 toyMC)
   68% expected band : 7.87718 < r < 7.87718
   95% expected band : 7.87718 < r < 7.87718
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -285850111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.46545 +/- 0.0122157 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.46545 @ 95%CL (1 toyMC)
median expected limit: r < 5.46545 @ 95%CL (1 toyMC)
   68% expected band : 5.46545 < r < 5.46545
   95% expected band : 5.46545 < r < 5.46545
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1221171547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.33443 +/- 0.012675 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 7.33443 @ 95%CL (1 toyMC)
median expected limit: r < 7.33443 @ 95%CL (1 toyMC)
   68% expected band : 7.33443 < r < 7.33443
   95% expected band : 7.33443 < r < 7.33443
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1150370770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.39243 +/- 0.0110892 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 5.39243 @ 95%CL (1 toyMC)
median expected limit: r < 5.39243 @ 95%CL (1 toyMC)
   68% expected band : 5.39243 < r < 5.39243
   95% expected band : 5.39243 < r < 5.39243
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1916308553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.90865 +/- 0.0133929 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 5.90865 @ 95%CL (1 toyMC)
median expected limit: r < 5.90865 @ 95%CL (1 toyMC)
   68% expected band : 5.90865 < r < 5.90865
   95% expected band : 5.90865 < r < 5.90865
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 130925482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.02827 +/- 0.0112256 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.02827 @ 95%CL (1 toyMC)
median expected limit: r < 6.02827 @ 95%CL (1 toyMC)
   68% expected band : 6.02827 < r < 6.02827
   95% expected band : 6.02827 < r < 6.02827
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 493839247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.35342 +/- 0.0158899 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.35342 @ 95%CL (1 toyMC)
median expected limit: r < 7.35342 @ 95%CL (1 toyMC)
   68% expected band : 7.35342 < r < 7.35342
   95% expected band : 7.35342 < r < 7.35342
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -413865474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.30645 +/- 0.0161028 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.30645 @ 95%CL (1 toyMC)
median expected limit: r < 7.30645 @ 95%CL (1 toyMC)
   68% expected band : 7.30645 < r < 7.30645
   95% expected band : 7.30645 < r < 7.30645
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2064803994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.18801 +/- 0.0172696 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.18801 @ 95%CL (1 toyMC)
median expected limit: r < 7.18801 @ 95%CL (1 toyMC)
   68% expected band : 7.18801 < r < 7.18801
   95% expected band : 7.18801 < r < 7.18801
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1979804040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.45762 +/- 0.0157346 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.45762 @ 95%CL (1 toyMC)
median expected limit: r < 8.45762 @ 95%CL (1 toyMC)
   68% expected band : 8.45762 < r < 8.45762
   95% expected band : 8.45762 < r < 8.45762
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1753068944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.95307 +/- 0.0136012 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.95307 @ 95%CL (1 toyMC)
median expected limit: r < 5.95307 @ 95%CL (1 toyMC)
   68% expected band : 5.95307 < r < 5.95307
   95% expected band : 5.95307 < r < 5.95307
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1412919790
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.28996 +/- 0.0142648 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.28996 @ 95%CL (1 toyMC)
median expected limit: r < 7.28996 @ 95%CL (1 toyMC)
   68% expected band : 7.28996 < r < 7.28996
   95% expected band : 7.28996 < r < 7.28996
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2108637015
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.44152 +/- 0.00944559 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.44152 @ 95%CL (1 toyMC)
median expected limit: r < 5.44152 @ 95%CL (1 toyMC)
   68% expected band : 5.44152 < r < 5.44152
   95% expected band : 5.44152 < r < 5.44152
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -182137202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.9785 +/- 0.0124335 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.9785 @ 95%CL (1 toyMC)
median expected limit: r < 5.9785 @ 95%CL (1 toyMC)
   68% expected band : 5.9785 < r < 5.9785
   95% expected band : 5.9785 < r < 5.9785
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1806232836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.66674 +/- 0.0165656 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.66674 @ 95%CL (1 toyMC)
median expected limit: r < 8.66674 @ 95%CL (1 toyMC)
   68% expected band : 8.66674 < r < 8.66674
   95% expected band : 8.66674 < r < 8.66674
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -657647129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.80255 +/- 0.0167822 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.80255 @ 95%CL (1 toyMC)
median expected limit: r < 7.80255 @ 95%CL (1 toyMC)
   68% expected band : 7.80255 < r < 7.80255
   95% expected band : 7.80255 < r < 7.80255
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -325496093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.63087 +/- 0.0148789 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.63087 @ 95%CL (1 toyMC)
median expected limit: r < 6.63087 @ 95%CL (1 toyMC)
   68% expected band : 6.63087 < r < 6.63087
   95% expected band : 6.63087 < r < 6.63087
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1632524448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.94908 +/- 0.0135502 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.94908 @ 95%CL (1 toyMC)
median expected limit: r < 5.94908 @ 95%CL (1 toyMC)
   68% expected band : 5.94908 < r < 5.94908
   95% expected band : 5.94908 < r < 5.94908
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -354800018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.72603 +/- 0.0142532 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.72603 @ 95%CL (1 toyMC)
median expected limit: r < 7.72603 @ 95%CL (1 toyMC)
   68% expected band : 7.72603 < r < 7.72603
   95% expected band : 7.72603 < r < 7.72603
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1264379232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01674 +/- 0.0137594 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.01674 @ 95%CL (1 toyMC)
median expected limit: r < 6.01674 @ 95%CL (1 toyMC)
   68% expected band : 6.01674 < r < 6.01674
   95% expected band : 6.01674 < r < 6.01674
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 476197277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2716 +/- 0.0205421 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 10.2716 @ 95%CL (1 toyMC)
median expected limit: r < 10.2716 @ 95%CL (1 toyMC)
   68% expected band : 10.2716 < r < 10.2716
   95% expected band : 10.2716 < r < 10.2716
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 896863581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3338 +/- 0.0150483 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 11.3338 @ 95%CL (1 toyMC)
median expected limit: r < 11.3338 @ 95%CL (1 toyMC)
   68% expected band : 11.3338 < r < 11.3338
   95% expected band : 11.3338 < r < 11.3338
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1595288773
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.199 +/- 0.0143383 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 10.199 @ 95%CL (1 toyMC)
median expected limit: r < 10.199 @ 95%CL (1 toyMC)
   68% expected band : 10.199 < r < 10.199
   95% expected band : 10.199 < r < 10.199
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2007022066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.463 +/- 0.00981398 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.463 @ 95%CL (1 toyMC)
median expected limit: r < 5.463 @ 95%CL (1 toyMC)
   68% expected band : 5.463 < r < 5.463
   95% expected band : 5.463 < r < 5.463
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -934942994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1647 +/- 0.0156241 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.1647 @ 95%CL (1 toyMC)
median expected limit: r < 10.1647 @ 95%CL (1 toyMC)
   68% expected band : 10.1647 < r < 10.1647
   95% expected band : 10.1647 < r < 10.1647
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 496091661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.37539 +/- 0.0110763 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.37539 @ 95%CL (1 toyMC)
median expected limit: r < 5.37539 @ 95%CL (1 toyMC)
   68% expected band : 5.37539 < r < 5.37539
   95% expected band : 5.37539 < r < 5.37539
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1606828944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.65446 +/- 0.0153828 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.65446 @ 95%CL (1 toyMC)
median expected limit: r < 6.65446 @ 95%CL (1 toyMC)
   68% expected band : 6.65446 < r < 6.65446
   95% expected band : 6.65446 < r < 6.65446
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1116900068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.65192 +/- 0.0144088 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.65192 @ 95%CL (1 toyMC)
median expected limit: r < 7.65192 @ 95%CL (1 toyMC)
   68% expected band : 7.65192 < r < 7.65192
   95% expected band : 7.65192 < r < 7.65192
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1096500022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.62649 +/- 0.0158637 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 8.62649 @ 95%CL (1 toyMC)
median expected limit: r < 8.62649 @ 95%CL (1 toyMC)
   68% expected band : 8.62649 < r < 8.62649
   95% expected band : 8.62649 < r < 8.62649
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2041366522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.54597 +/- 0.0147852 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.54597 @ 95%CL (1 toyMC)
median expected limit: r < 7.54597 @ 95%CL (1 toyMC)
   68% expected band : 7.54597 < r < 7.54597
   95% expected band : 7.54597 < r < 7.54597
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1284989111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.0138 +/- 0.0155987 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 6.0138 @ 95%CL (1 toyMC)
median expected limit: r < 6.0138 @ 95%CL (1 toyMC)
   68% expected band : 6.0138 < r < 6.0138
   95% expected band : 6.0138 < r < 6.0138
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 753876569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.77549 +/- 0.0133271 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.77549 @ 95%CL (1 toyMC)
median expected limit: r < 7.77549 @ 95%CL (1 toyMC)
   68% expected band : 7.77549 < r < 7.77549
   95% expected band : 7.77549 < r < 7.77549
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -518304950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.87328 +/- 0.0146007 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 7.87328 @ 95%CL (1 toyMC)
median expected limit: r < 7.87328 @ 95%CL (1 toyMC)
   68% expected band : 7.87328 < r < 7.87328
   95% expected band : 7.87328 < r < 7.87328
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1738544010
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2365 +/- 0.0119001 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 13.2365 @ 95%CL (1 toyMC)
median expected limit: r < 13.2365 @ 95%CL (1 toyMC)
   68% expected band : 13.2365 < r < 13.2365
   95% expected band : 13.2365 < r < 13.2365
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -6208463
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4677 +/- 0.0125136 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 11.4677 @ 95%CL (1 toyMC)
median expected limit: r < 11.4677 @ 95%CL (1 toyMC)
   68% expected band : 11.4677 < r < 11.4677
   95% expected band : 11.4677 < r < 11.4677
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1966978665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.2898 +/- 0.0158048 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 8.2898 @ 95%CL (1 toyMC)
median expected limit: r < 8.2898 @ 95%CL (1 toyMC)
   68% expected band : 8.2898 < r < 8.2898
   95% expected band : 8.2898 < r < 8.2898
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -618526705
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1196 +/- 0.015606 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.96 min (real)
mean   expected limit: r < 11.1196 @ 95%CL (1 toyMC)
median expected limit: r < 11.1196 @ 95%CL (1 toyMC)
   68% expected band : 11.1196 < r < 11.1196
   95% expected band : 11.1196 < r < 11.1196
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -216603605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.07546 +/- 0.0144437 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.07546 @ 95%CL (1 toyMC)
median expected limit: r < 7.07546 @ 95%CL (1 toyMC)
   68% expected band : 7.07546 < r < 7.07546
   95% expected band : 7.07546 < r < 7.07546
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -228303805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.44969 +/- 0.0164104 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.44969 @ 95%CL (1 toyMC)
median expected limit: r < 7.44969 @ 95%CL (1 toyMC)
   68% expected band : 7.44969 < r < 7.44969
   95% expected band : 7.44969 < r < 7.44969
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 649371743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.62558 +/- 0.0155736 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.62558 @ 95%CL (1 toyMC)
median expected limit: r < 6.62558 @ 95%CL (1 toyMC)
   68% expected band : 6.62558 < r < 6.62558
   95% expected band : 6.62558 < r < 6.62558
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -262128361
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8819 +/- 0.0138845 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.8819 @ 95%CL (1 toyMC)
median expected limit: r < 10.8819 @ 95%CL (1 toyMC)
   68% expected band : 10.8819 < r < 10.8819
   95% expected band : 10.8819 < r < 10.8819
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 333015811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0611 +/- 0.0175838 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.0611 @ 95%CL (1 toyMC)
median expected limit: r < 10.0611 @ 95%CL (1 toyMC)
   68% expected band : 10.0611 < r < 10.0611
   95% expected band : 10.0611 < r < 10.0611
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2137274925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.00885 +/- 0.0146463 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.00885 @ 95%CL (1 toyMC)
median expected limit: r < 6.00885 @ 95%CL (1 toyMC)
   68% expected band : 6.00885 < r < 6.00885
   95% expected band : 6.00885 < r < 6.00885
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -962154616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.42468 +/- 0.0173515 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 8.42468 @ 95%CL (1 toyMC)
median expected limit: r < 8.42468 @ 95%CL (1 toyMC)
   68% expected band : 8.42468 < r < 8.42468
   95% expected band : 8.42468 < r < 8.42468
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1766430544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.11837 +/- 0.0144591 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 7.11837 @ 95%CL (1 toyMC)
median expected limit: r < 7.11837 @ 95%CL (1 toyMC)
   68% expected band : 7.11837 < r < 7.11837
   95% expected band : 7.11837 < r < 7.11837
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1961909679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.014 +/- 0.0147817 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.014 @ 95%CL (1 toyMC)
median expected limit: r < 6.014 @ 95%CL (1 toyMC)
   68% expected band : 6.014 < r < 6.014
   95% expected band : 6.014 < r < 6.014
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -264178289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.62252 +/- 0.0133331 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.62252 @ 95%CL (1 toyMC)
median expected limit: r < 6.62252 @ 95%CL (1 toyMC)
   68% expected band : 6.62252 < r < 6.62252
   95% expected band : 6.62252 < r < 6.62252
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 13450798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.61093 +/- 0.0117933 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.61093 @ 95%CL (1 toyMC)
median expected limit: r < 6.61093 @ 95%CL (1 toyMC)
   68% expected band : 6.61093 < r < 6.61093
   95% expected band : 6.61093 < r < 6.61093
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1761900256
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.65862 +/- 0.0156003 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 8.65862 @ 95%CL (1 toyMC)
median expected limit: r < 8.65862 @ 95%CL (1 toyMC)
   68% expected band : 8.65862 < r < 8.65862
   95% expected band : 8.65862 < r < 8.65862
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1735101874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.62291 +/- 0.0152256 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.62291 @ 95%CL (1 toyMC)
median expected limit: r < 6.62291 @ 95%CL (1 toyMC)
   68% expected band : 6.62291 < r < 6.62291
   95% expected band : 6.62291 < r < 6.62291
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 302262534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.81993 +/- 0.0104804 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 9.81993 @ 95%CL (1 toyMC)
median expected limit: r < 9.81993 @ 95%CL (1 toyMC)
   68% expected band : 9.81993 < r < 9.81993
   95% expected band : 9.81993 < r < 9.81993
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -421112084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.28524 +/- 0.0117583 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 8.28524 @ 95%CL (1 toyMC)
median expected limit: r < 8.28524 @ 95%CL (1 toyMC)
   68% expected band : 8.28524 < r < 8.28524
   95% expected band : 8.28524 < r < 8.28524
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1178169347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90858 +/- 0.00768235 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 4.90858 @ 95%CL (1 toyMC)
median expected limit: r < 4.90858 @ 95%CL (1 toyMC)
   68% expected band : 4.90858 < r < 4.90858
   95% expected band : 4.90858 < r < 4.90858
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1071722967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.2199 +/- 0.00797679 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.2199 @ 95%CL (1 toyMC)
median expected limit: r < 4.2199 @ 95%CL (1 toyMC)
   68% expected band : 4.2199 < r < 4.2199
   95% expected band : 4.2199 < r < 4.2199
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1676213114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.18774 +/- 0.00975924 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 7.18774 @ 95%CL (1 toyMC)
median expected limit: r < 7.18774 @ 95%CL (1 toyMC)
   68% expected band : 7.18774 < r < 7.18774
   95% expected band : 7.18774 < r < 7.18774
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 853623989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.06771 +/- 0.00944429 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.06771 @ 95%CL (1 toyMC)
median expected limit: r < 6.06771 @ 95%CL (1 toyMC)
   68% expected band : 6.06771 < r < 6.06771
   95% expected band : 6.06771 < r < 6.06771
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 419562359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.89088 +/- 0.00819472 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.89088 @ 95%CL (1 toyMC)
median expected limit: r < 4.89088 @ 95%CL (1 toyMC)
   68% expected band : 4.89088 < r < 4.89088
   95% expected band : 4.89088 < r < 4.89088
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1176822426
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.29562 +/- 0.0134269 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 7.29562 @ 95%CL (1 toyMC)
median expected limit: r < 7.29562 @ 95%CL (1 toyMC)
   68% expected band : 7.29562 < r < 7.29562
   95% expected band : 7.29562 < r < 7.29562
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 499023203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2487 +/- 0.0102043 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.2487 @ 95%CL (1 toyMC)
median expected limit: r < 10.2487 @ 95%CL (1 toyMC)
   68% expected band : 10.2487 < r < 10.2487
   95% expected band : 10.2487 < r < 10.2487
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1198378139
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10082 +/- 0.00948369 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 7.10082 @ 95%CL (1 toyMC)
median expected limit: r < 7.10082 @ 95%CL (1 toyMC)
   68% expected band : 7.10082 < r < 7.10082
   95% expected band : 7.10082 < r < 7.10082
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 289734273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.46402 +/- 0.00616556 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.46402 @ 95%CL (1 toyMC)
median expected limit: r < 3.46402 @ 95%CL (1 toyMC)
   68% expected band : 3.46402 < r < 3.46402
   95% expected band : 3.46402 < r < 3.46402
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -470248897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.93294 +/- 0.00878418 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 5.93294 @ 95%CL (1 toyMC)
median expected limit: r < 5.93294 @ 95%CL (1 toyMC)
   68% expected band : 5.93294 < r < 5.93294
   95% expected band : 5.93294 < r < 5.93294
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 796639265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.7013 +/- 0.00826411 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 4.7013 @ 95%CL (1 toyMC)
median expected limit: r < 4.7013 @ 95%CL (1 toyMC)
   68% expected band : 4.7013 < r < 4.7013
   95% expected band : 4.7013 < r < 4.7013
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -975751847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.56826 +/- 0.00666538 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 5.56826 @ 95%CL (1 toyMC)
median expected limit: r < 5.56826 @ 95%CL (1 toyMC)
   68% expected band : 5.56826 < r < 5.56826
   95% expected band : 5.56826 < r < 5.56826
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -148284496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.83241 +/- 0.00762951 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.83241 @ 95%CL (1 toyMC)
median expected limit: r < 4.83241 @ 95%CL (1 toyMC)
   68% expected band : 4.83241 < r < 4.83241
   95% expected band : 4.83241 < r < 4.83241
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 20661045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77717 +/- 0.00815128 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 6.77717 @ 95%CL (1 toyMC)
median expected limit: r < 6.77717 @ 95%CL (1 toyMC)
   68% expected band : 6.77717 < r < 6.77717
   95% expected band : 6.77717 < r < 6.77717
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1158827355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.19292 +/- 0.0117476 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.19292 @ 95%CL (1 toyMC)
median expected limit: r < 7.19292 @ 95%CL (1 toyMC)
   68% expected band : 7.19292 < r < 7.19292
   95% expected band : 7.19292 < r < 7.19292
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1805768679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.59986 +/- 0.0102706 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.59986 @ 95%CL (1 toyMC)
median expected limit: r < 6.59986 @ 95%CL (1 toyMC)
   68% expected band : 6.59986 < r < 6.59986
   95% expected band : 6.59986 < r < 6.59986
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2084262641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.84926 +/- 0.00955144 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.84926 @ 95%CL (1 toyMC)
median expected limit: r < 4.84926 @ 95%CL (1 toyMC)
   68% expected band : 4.84926 < r < 4.84926
   95% expected band : 4.84926 < r < 4.84926
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1098777605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.57455 +/- 0.0121267 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.57455 @ 95%CL (1 toyMC)
median expected limit: r < 7.57455 @ 95%CL (1 toyMC)
   68% expected band : 7.57455 < r < 7.57455
   95% expected band : 7.57455 < r < 7.57455
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1608389671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.45648 +/- 0.0109524 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.45648 @ 95%CL (1 toyMC)
median expected limit: r < 6.45648 @ 95%CL (1 toyMC)
   68% expected band : 6.45648 < r < 6.45648
   95% expected band : 6.45648 < r < 6.45648
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -371427155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.73943 +/- 0.00879642 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 3.73943 @ 95%CL (1 toyMC)
median expected limit: r < 3.73943 @ 95%CL (1 toyMC)
   68% expected band : 3.73943 < r < 3.73943
   95% expected band : 3.73943 < r < 3.73943
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1589351547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.40102 +/- 0.00783555 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.40102 @ 95%CL (1 toyMC)
median expected limit: r < 4.40102 @ 95%CL (1 toyMC)
   68% expected band : 4.40102 < r < 4.40102
   95% expected band : 4.40102 < r < 4.40102
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 737194853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.1137 +/- 0.0110934 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.1137 @ 95%CL (1 toyMC)
median expected limit: r < 6.1137 @ 95%CL (1 toyMC)
   68% expected band : 6.1137 < r < 6.1137
   95% expected band : 6.1137 < r < 6.1137
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2145457515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.96489 +/- 0.00904819 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 6.96489 @ 95%CL (1 toyMC)
median expected limit: r < 6.96489 @ 95%CL (1 toyMC)
   68% expected band : 6.96489 < r < 6.96489
   95% expected band : 6.96489 < r < 6.96489
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1343500188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.00243 +/- 0.0134199 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.00243 @ 95%CL (1 toyMC)
median expected limit: r < 8.00243 @ 95%CL (1 toyMC)
   68% expected band : 8.00243 < r < 8.00243
   95% expected band : 8.00243 < r < 8.00243
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -673938149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.36429 +/- 0.0119967 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.36429 @ 95%CL (1 toyMC)
median expected limit: r < 6.36429 @ 95%CL (1 toyMC)
   68% expected band : 6.36429 < r < 6.36429
   95% expected band : 6.36429 < r < 6.36429
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1012756576
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.72123 +/- 0.00814128 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.72123 @ 95%CL (1 toyMC)
median expected limit: r < 5.72123 @ 95%CL (1 toyMC)
   68% expected band : 5.72123 < r < 5.72123
   95% expected band : 5.72123 < r < 5.72123
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 867808247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.42046 +/- 0.00911484 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 4.42046 @ 95%CL (1 toyMC)
median expected limit: r < 4.42046 @ 95%CL (1 toyMC)
   68% expected band : 4.42046 < r < 4.42046
   95% expected band : 4.42046 < r < 4.42046
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1980470058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60972 +/- 0.00814516 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.60972 @ 95%CL (1 toyMC)
median expected limit: r < 4.60972 @ 95%CL (1 toyMC)
   68% expected band : 4.60972 < r < 4.60972
   95% expected band : 4.60972 < r < 4.60972
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1710950346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.32533 +/- 0.0105294 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.32533 @ 95%CL (1 toyMC)
median expected limit: r < 5.32533 @ 95%CL (1 toyMC)
   68% expected band : 5.32533 < r < 5.32533
   95% expected band : 5.32533 < r < 5.32533
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1991781659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.09533 +/- 0.00945951 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.09533 @ 95%CL (1 toyMC)
median expected limit: r < 5.09533 @ 95%CL (1 toyMC)
   68% expected band : 5.09533 < r < 5.09533
   95% expected band : 5.09533 < r < 5.09533
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1292802363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.68249 +/- 0.00817273 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.90 min (real)
mean   expected limit: r < 5.68249 @ 95%CL (1 toyMC)
median expected limit: r < 5.68249 @ 95%CL (1 toyMC)
   68% expected band : 5.68249 < r < 5.68249
   95% expected band : 5.68249 < r < 5.68249
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -910369997
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.00978 +/- 0.00990582 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.00978 @ 95%CL (1 toyMC)
median expected limit: r < 5.00978 @ 95%CL (1 toyMC)
   68% expected band : 5.00978 < r < 5.00978
   95% expected band : 5.00978 < r < 5.00978
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1074974917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.72629 +/- 0.0101587 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 6.72629 @ 95%CL (1 toyMC)
median expected limit: r < 6.72629 @ 95%CL (1 toyMC)
   68% expected band : 6.72629 < r < 6.72629
   95% expected band : 6.72629 < r < 6.72629
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -880777435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.1606 +/- 0.00922605 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.1606 @ 95%CL (1 toyMC)
median expected limit: r < 6.1606 @ 95%CL (1 toyMC)
   68% expected band : 6.1606 < r < 6.1606
   95% expected band : 6.1606 < r < 6.1606
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1708490354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.26276 +/- 0.00981909 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 8.26276 @ 95%CL (1 toyMC)
median expected limit: r < 8.26276 @ 95%CL (1 toyMC)
   68% expected band : 8.26276 < r < 8.26276
   95% expected band : 8.26276 < r < 8.26276
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 61730146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.93048 +/- 0.0116069 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 7.93048 @ 95%CL (1 toyMC)
median expected limit: r < 7.93048 @ 95%CL (1 toyMC)
   68% expected band : 7.93048 < r < 7.93048
   95% expected band : 7.93048 < r < 7.93048
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2145477150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.3846 +/- 0.0107828 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 8.3846 @ 95%CL (1 toyMC)
median expected limit: r < 8.3846 @ 95%CL (1 toyMC)
   68% expected band : 8.3846 < r < 8.3846
   95% expected band : 8.3846 < r < 8.3846
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 809382247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.40319 +/- 0.0120294 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.40319 @ 95%CL (1 toyMC)
median expected limit: r < 7.40319 @ 95%CL (1 toyMC)
   68% expected band : 7.40319 < r < 7.40319
   95% expected band : 7.40319 < r < 7.40319
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1376590765
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.64662 +/- 0.00948003 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.64662 @ 95%CL (1 toyMC)
median expected limit: r < 4.64662 @ 95%CL (1 toyMC)
   68% expected band : 4.64662 < r < 4.64662
   95% expected band : 4.64662 < r < 4.64662
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -578942249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.03259 +/- 0.0112905 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 7.03259 @ 95%CL (1 toyMC)
median expected limit: r < 7.03259 @ 95%CL (1 toyMC)
   68% expected band : 7.03259 < r < 7.03259
   95% expected band : 7.03259 < r < 7.03259
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 619405498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.11436 +/- 0.012672 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 8.11436 @ 95%CL (1 toyMC)
median expected limit: r < 8.11436 @ 95%CL (1 toyMC)
   68% expected band : 8.11436 < r < 8.11436
   95% expected band : 8.11436 < r < 8.11436
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -939668622
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.6315 +/- 0.00973087 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 6.6315 @ 95%CL (1 toyMC)
median expected limit: r < 6.6315 @ 95%CL (1 toyMC)
   68% expected band : 6.6315 < r < 6.6315
   95% expected band : 6.6315 < r < 6.6315
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1535597263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.20758 +/- 0.00941806 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 7.20758 @ 95%CL (1 toyMC)
median expected limit: r < 7.20758 @ 95%CL (1 toyMC)
   68% expected band : 7.20758 < r < 7.20758
   95% expected band : 7.20758 < r < 7.20758
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1485264552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.19543 +/- 0.0117221 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 9.19543 @ 95%CL (1 toyMC)
median expected limit: r < 9.19543 @ 95%CL (1 toyMC)
   68% expected band : 9.19543 < r < 9.19543
   95% expected band : 9.19543 < r < 9.19543
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 813225249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.3139 +/- 0.00961991 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 4.3139 @ 95%CL (1 toyMC)
median expected limit: r < 4.3139 @ 95%CL (1 toyMC)
   68% expected band : 4.3139 < r < 4.3139
   95% expected band : 4.3139 < r < 4.3139
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 977273030
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.08056 +/- 0.00788889 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.08056 @ 95%CL (1 toyMC)
median expected limit: r < 5.08056 @ 95%CL (1 toyMC)
   68% expected band : 5.08056 < r < 5.08056
   95% expected band : 5.08056 < r < 5.08056
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 684372197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.13686 +/- 0.0112241 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 8.13686 @ 95%CL (1 toyMC)
median expected limit: r < 8.13686 @ 95%CL (1 toyMC)
   68% expected band : 8.13686 < r < 8.13686
   95% expected band : 8.13686 < r < 8.13686
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1262129025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.93948 +/- 0.00902494 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.93948 @ 95%CL (1 toyMC)
median expected limit: r < 7.93948 @ 95%CL (1 toyMC)
   68% expected band : 7.93948 < r < 7.93948
   95% expected band : 7.93948 < r < 7.93948
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 284196961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.41513 +/- 0.00675112 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.41513 @ 95%CL (1 toyMC)
median expected limit: r < 4.41513 @ 95%CL (1 toyMC)
   68% expected band : 4.41513 < r < 4.41513
   95% expected band : 4.41513 < r < 4.41513
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -702091467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.43615 +/- 0.0125475 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.43615 @ 95%CL (1 toyMC)
median expected limit: r < 6.43615 @ 95%CL (1 toyMC)
   68% expected band : 6.43615 < r < 6.43615
   95% expected band : 6.43615 < r < 6.43615
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1226418676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.8864 +/- 0.0122949 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 7.8864 @ 95%CL (1 toyMC)
median expected limit: r < 7.8864 @ 95%CL (1 toyMC)
   68% expected band : 7.8864 < r < 7.8864
   95% expected band : 7.8864 < r < 7.8864
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1323697768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.5804 +/- 0.00895803 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.5804 @ 95%CL (1 toyMC)
median expected limit: r < 5.5804 @ 95%CL (1 toyMC)
   68% expected band : 5.5804 < r < 5.5804
   95% expected band : 5.5804 < r < 5.5804
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -792382105
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.43154 +/- 0.00874933 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 6.43154 @ 95%CL (1 toyMC)
median expected limit: r < 6.43154 @ 95%CL (1 toyMC)
   68% expected band : 6.43154 < r < 6.43154
   95% expected band : 6.43154 < r < 6.43154
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1132961048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.17797 +/- 0.00793532 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.17797 @ 95%CL (1 toyMC)
median expected limit: r < 6.17797 @ 95%CL (1 toyMC)
   68% expected band : 6.17797 < r < 6.17797
   95% expected band : 6.17797 < r < 6.17797
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1219637455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.26818 +/- 0.00732137 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 4.26818 @ 95%CL (1 toyMC)
median expected limit: r < 4.26818 @ 95%CL (1 toyMC)
   68% expected band : 4.26818 < r < 4.26818
   95% expected band : 4.26818 < r < 4.26818
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -205913529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.54668 +/- 0.0107696 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.54668 @ 95%CL (1 toyMC)
median expected limit: r < 6.54668 @ 95%CL (1 toyMC)
   68% expected band : 6.54668 < r < 6.54668
   95% expected band : 6.54668 < r < 6.54668
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1443338392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9841 +/- 0.00999565 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.9841 @ 95%CL (1 toyMC)
median expected limit: r < 10.9841 @ 95%CL (1 toyMC)
   68% expected band : 10.9841 < r < 10.9841
   95% expected band : 10.9841 < r < 10.9841
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -316877230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.99925 +/- 0.0112358 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 7.99925 @ 95%CL (1 toyMC)
median expected limit: r < 7.99925 @ 95%CL (1 toyMC)
   68% expected band : 7.99925 < r < 7.99925
   95% expected band : 7.99925 < r < 7.99925
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1190254511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.07898 +/- 0.0118168 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 7.07898 @ 95%CL (1 toyMC)
median expected limit: r < 7.07898 @ 95%CL (1 toyMC)
   68% expected band : 7.07898 < r < 7.07898
   95% expected band : 7.07898 < r < 7.07898
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1682800713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.80051 +/- 0.0107463 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.80051 @ 95%CL (1 toyMC)
median expected limit: r < 6.80051 @ 95%CL (1 toyMC)
   68% expected band : 6.80051 < r < 6.80051
   95% expected band : 6.80051 < r < 6.80051
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1337739251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7034 +/- 0.00939618 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.96 min (real)
mean   expected limit: r < 10.7034 @ 95%CL (1 toyMC)
median expected limit: r < 10.7034 @ 95%CL (1 toyMC)
   68% expected band : 10.7034 < r < 10.7034
   95% expected band : 10.7034 < r < 10.7034
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1643666686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.14794 +/- 0.0113604 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.14794 @ 95%CL (1 toyMC)
median expected limit: r < 6.14794 @ 95%CL (1 toyMC)
   68% expected band : 6.14794 < r < 6.14794
   95% expected band : 6.14794 < r < 6.14794
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1598211147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.95781 +/- 0.0113683 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 7.95781 @ 95%CL (1 toyMC)
median expected limit: r < 7.95781 @ 95%CL (1 toyMC)
   68% expected band : 7.95781 < r < 7.95781
   95% expected band : 7.95781 < r < 7.95781
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1361951641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.40681 +/- 0.00785479 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.40681 @ 95%CL (1 toyMC)
median expected limit: r < 5.40681 @ 95%CL (1 toyMC)
   68% expected band : 5.40681 < r < 5.40681
   95% expected band : 5.40681 < r < 5.40681
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 445113905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.39951 +/- 0.0075403 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 4.39951 @ 95%CL (1 toyMC)
median expected limit: r < 4.39951 @ 95%CL (1 toyMC)
   68% expected band : 4.39951 < r < 4.39951
   95% expected band : 4.39951 < r < 4.39951
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1833452693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.32018 +/- 0.0115484 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 8.32018 @ 95%CL (1 toyMC)
median expected limit: r < 8.32018 @ 95%CL (1 toyMC)
   68% expected band : 8.32018 < r < 8.32018
   95% expected band : 8.32018 < r < 8.32018
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1580786447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.00945 +/- 0.012072 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.00945 @ 95%CL (1 toyMC)
median expected limit: r < 7.00945 @ 95%CL (1 toyMC)
   68% expected band : 7.00945 < r < 7.00945
   95% expected band : 7.00945 < r < 7.00945
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -749616362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.40791 +/- 0.00764424 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 3.40791 @ 95%CL (1 toyMC)
median expected limit: r < 3.40791 @ 95%CL (1 toyMC)
   68% expected band : 3.40791 < r < 3.40791
   95% expected band : 3.40791 < r < 3.40791
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1612672687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.8846 +/- 0.00924488 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 4.8846 @ 95%CL (1 toyMC)
median expected limit: r < 4.8846 @ 95%CL (1 toyMC)
   68% expected band : 4.8846 < r < 4.8846
   95% expected band : 4.8846 < r < 4.8846
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1846932533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.9021 +/- 0.00761511 @ 95% CL (100 tries)
Done in 0.85 min (cpu), 0.86 min (real)
mean   expected limit: r < 4.9021 @ 95%CL (1 toyMC)
median expected limit: r < 4.9021 @ 95%CL (1 toyMC)
   68% expected band : 4.9021 < r < 4.9021
   95% expected band : 4.9021 < r < 4.9021
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1617269746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.06851 +/- 0.00882045 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 5.06851 @ 95%CL (1 toyMC)
median expected limit: r < 5.06851 @ 95%CL (1 toyMC)
   68% expected band : 5.06851 < r < 5.06851
   95% expected band : 5.06851 < r < 5.06851
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -825832544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.65563 +/- 0.0104551 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.65563 @ 95%CL (1 toyMC)
median expected limit: r < 6.65563 @ 95%CL (1 toyMC)
   68% expected band : 6.65563 < r < 6.65563
   95% expected band : 6.65563 < r < 6.65563
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1796059858
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.9934 +/- 0.0100554 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 8.9934 @ 95%CL (1 toyMC)
median expected limit: r < 8.9934 @ 95%CL (1 toyMC)
   68% expected band : 8.9934 < r < 8.9934
   95% expected band : 8.9934 < r < 8.9934
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1163750847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50549 +/- 0.0110096 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.50549 @ 95%CL (1 toyMC)
median expected limit: r < 5.50549 @ 95%CL (1 toyMC)
   68% expected band : 5.50549 < r < 5.50549
   95% expected band : 5.50549 < r < 5.50549
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1877004864
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.94433 +/- 0.00954048 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.94433 @ 95%CL (1 toyMC)
median expected limit: r < 4.94433 @ 95%CL (1 toyMC)
   68% expected band : 4.94433 < r < 4.94433
   95% expected band : 4.94433 < r < 4.94433
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -185613252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.36438 +/- 0.0104727 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.36438 @ 95%CL (1 toyMC)
median expected limit: r < 6.36438 @ 95%CL (1 toyMC)
   68% expected band : 6.36438 < r < 6.36438
   95% expected band : 6.36438 < r < 6.36438
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -627767791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.87988 +/- 0.00870875 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 5.87988 @ 95%CL (1 toyMC)
median expected limit: r < 5.87988 @ 95%CL (1 toyMC)
   68% expected band : 5.87988 < r < 5.87988
   95% expected band : 5.87988 < r < 5.87988
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -814180068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.27664 +/- 0.00824671 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 8.27664 @ 95%CL (1 toyMC)
median expected limit: r < 8.27664 @ 95%CL (1 toyMC)
   68% expected band : 8.27664 < r < 8.27664
   95% expected band : 8.27664 < r < 8.27664
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -4036028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.48594 +/- 0.00944212 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.48594 @ 95%CL (1 toyMC)
median expected limit: r < 5.48594 @ 95%CL (1 toyMC)
   68% expected band : 5.48594 < r < 5.48594
   95% expected band : 5.48594 < r < 5.48594
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1408915665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.13271 +/- 0.0099971 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.13271 @ 95%CL (1 toyMC)
median expected limit: r < 6.13271 @ 95%CL (1 toyMC)
   68% expected band : 6.13271 < r < 6.13271
   95% expected band : 6.13271 < r < 6.13271
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1086052988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.59556 +/- 0.00917757 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 4.59556 @ 95%CL (1 toyMC)
median expected limit: r < 4.59556 @ 95%CL (1 toyMC)
   68% expected band : 4.59556 < r < 4.59556
   95% expected band : 4.59556 < r < 4.59556
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1266679475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.75346 +/- 0.00787401 @ 95% CL (100 tries)
Done in 0.86 min (cpu), 0.86 min (real)
mean   expected limit: r < 4.75346 @ 95%CL (1 toyMC)
median expected limit: r < 4.75346 @ 95%CL (1 toyMC)
   68% expected band : 4.75346 < r < 4.75346
   95% expected band : 4.75346 < r < 4.75346
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1617842281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.76624 +/- 0.0078423 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.76624 @ 95%CL (1 toyMC)
median expected limit: r < 3.76624 @ 95%CL (1 toyMC)
   68% expected band : 3.76624 < r < 3.76624
   95% expected band : 3.76624 < r < 3.76624
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1322384887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.9468 +/- 0.00878026 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.9468 @ 95%CL (1 toyMC)
median expected limit: r < 4.9468 @ 95%CL (1 toyMC)
   68% expected band : 4.9468 < r < 4.9468
   95% expected band : 4.9468 < r < 4.9468
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 427439638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.8775 +/- 0.0100315 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 9.8775 @ 95%CL (1 toyMC)
median expected limit: r < 9.8775 @ 95%CL (1 toyMC)
   68% expected band : 9.8775 < r < 9.8775
   95% expected band : 9.8775 < r < 9.8775
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1273753083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.77467 +/- 0.00803357 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.85 min (real)
mean   expected limit: r < 3.77467 @ 95%CL (1 toyMC)
median expected limit: r < 3.77467 @ 95%CL (1 toyMC)
   68% expected band : 3.77467 < r < 3.77467
   95% expected band : 3.77467 < r < 3.77467
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -374320492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.27813 +/- 0.0107191 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 7.27813 @ 95%CL (1 toyMC)
median expected limit: r < 7.27813 @ 95%CL (1 toyMC)
   68% expected band : 7.27813 < r < 7.27813
   95% expected band : 7.27813 < r < 7.27813
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1344545081
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.39989 +/- 0.0106572 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.39989 @ 95%CL (1 toyMC)
median expected limit: r < 5.39989 @ 95%CL (1 toyMC)
   68% expected band : 5.39989 < r < 5.39989
   95% expected band : 5.39989 < r < 5.39989
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 649611097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.74927 +/- 0.0109536 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.74927 @ 95%CL (1 toyMC)
median expected limit: r < 6.74927 @ 95%CL (1 toyMC)
   68% expected band : 6.74927 < r < 6.74927
   95% expected band : 6.74927 < r < 6.74927
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -98716895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.83579 +/- 0.0135348 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 8.83579 @ 95%CL (1 toyMC)
median expected limit: r < 8.83579 @ 95%CL (1 toyMC)
   68% expected band : 8.83579 < r < 8.83579
   95% expected band : 8.83579 < r < 8.83579
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1679844433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.37757 +/- 0.00975927 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 6.37757 @ 95%CL (1 toyMC)
median expected limit: r < 6.37757 @ 95%CL (1 toyMC)
   68% expected band : 6.37757 < r < 6.37757
   95% expected band : 6.37757 < r < 6.37757
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -594732487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.43302 +/- 0.00728533 @ 95% CL (100 tries)
Done in 0.83 min (cpu), 0.83 min (real)
mean   expected limit: r < 3.43302 @ 95%CL (1 toyMC)
median expected limit: r < 3.43302 @ 95%CL (1 toyMC)
   68% expected band : 3.43302 < r < 3.43302
   95% expected band : 3.43302 < r < 3.43302
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1974680580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.028 +/- 0.0113102 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.028 @ 95%CL (1 toyMC)
median expected limit: r < 6.028 @ 95%CL (1 toyMC)
   68% expected band : 6.028 < r < 6.028
   95% expected band : 6.028 < r < 6.028
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 929040381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.64439 +/- 0.0106338 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.64439 @ 95%CL (1 toyMC)
median expected limit: r < 6.64439 @ 95%CL (1 toyMC)
   68% expected band : 6.64439 < r < 6.64439
   95% expected band : 6.64439 < r < 6.64439
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1732242707
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.80838 +/- 0.008467 @ 95% CL (100 tries)
Done in 0.84 min (cpu), 0.84 min (real)
mean   expected limit: r < 3.80838 @ 95%CL (1 toyMC)
median expected limit: r < 3.80838 @ 95%CL (1 toyMC)
   68% expected band : 3.80838 < r < 3.80838
   95% expected band : 3.80838 < r < 3.80838
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -996118202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.73681 +/- 0.0109898 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 6.73681 @ 95%CL (1 toyMC)
median expected limit: r < 6.73681 @ 95%CL (1 toyMC)
   68% expected band : 6.73681 < r < 6.73681
   95% expected band : 6.73681 < r < 6.73681
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 940993116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.869 +/- 0.00787105 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 4.869 @ 95%CL (1 toyMC)
median expected limit: r < 4.869 @ 95%CL (1 toyMC)
   68% expected band : 4.869 < r < 4.869
   95% expected band : 4.869 < r < 4.869
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -277969681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.13892 +/- 0.00896792 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.13892 @ 95%CL (1 toyMC)
median expected limit: r < 5.13892 @ 95%CL (1 toyMC)
   68% expected band : 5.13892 < r < 5.13892
   95% expected band : 5.13892 < r < 5.13892
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -776204135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5999 +/- 0.0152408 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 10.5999 @ 95%CL (1 toyMC)
median expected limit: r < 10.5999 @ 95%CL (1 toyMC)
   68% expected band : 10.5999 < r < 10.5999
   95% expected band : 10.5999 < r < 10.5999
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1968352288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.97383 +/- 0.0133419 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 8.97383 @ 95%CL (1 toyMC)
median expected limit: r < 8.97383 @ 95%CL (1 toyMC)
   68% expected band : 8.97383 < r < 8.97383
   95% expected band : 8.97383 < r < 8.97383
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 719233263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6952 +/- 0.0145637 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 10.6952 @ 95%CL (1 toyMC)
median expected limit: r < 10.6952 @ 95%CL (1 toyMC)
   68% expected band : 10.6952 < r < 10.6952
   95% expected band : 10.6952 < r < 10.6952
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1177411192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.92962 +/- 0.0107738 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.92962 @ 95%CL (1 toyMC)
median expected limit: r < 6.92962 @ 95%CL (1 toyMC)
   68% expected band : 6.92962 < r < 6.92962
   95% expected band : 6.92962 < r < 6.92962
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2047940287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.84485 +/- 0.0167935 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.94 min (real)
mean   expected limit: r < 9.84485 @ 95%CL (1 toyMC)
median expected limit: r < 9.84485 @ 95%CL (1 toyMC)
   68% expected band : 9.84485 < r < 9.84485
   95% expected band : 9.84485 < r < 9.84485
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 952943853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7683 +/- 0.0192994 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.96 min (real)
mean   expected limit: r < 11.7683 @ 95%CL (1 toyMC)
median expected limit: r < 11.7683 @ 95%CL (1 toyMC)
   68% expected band : 11.7683 < r < 11.7683
   95% expected band : 11.7683 < r < 11.7683
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1903302656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8893 +/- 0.0172941 @ 95% CL (100 tries)
Done in 1.00 min (cpu), 1.00 min (real)
mean   expected limit: r < 12.8893 @ 95%CL (1 toyMC)
median expected limit: r < 12.8893 @ 95%CL (1 toyMC)
   68% expected band : 12.8893 < r < 12.8893
   95% expected band : 12.8893 < r < 12.8893
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -630758564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4922 +/- 0.0200049 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.4922 @ 95%CL (1 toyMC)
median expected limit: r < 10.4922 @ 95%CL (1 toyMC)
   68% expected band : 10.4922 < r < 10.4922
   95% expected band : 10.4922 < r < 10.4922
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 251551797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.34381 +/- 0.0135052 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.34381 @ 95%CL (1 toyMC)
median expected limit: r < 6.34381 @ 95%CL (1 toyMC)
   68% expected band : 6.34381 < r < 6.34381
   95% expected band : 6.34381 < r < 6.34381
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2032780212
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.48152 +/- 0.014704 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 7.48152 @ 95%CL (1 toyMC)
median expected limit: r < 7.48152 @ 95%CL (1 toyMC)
   68% expected band : 7.48152 < r < 7.48152
   95% expected band : 7.48152 < r < 7.48152
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1671600429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5131 +/- 0.0124453 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 11.5131 @ 95%CL (1 toyMC)
median expected limit: r < 11.5131 @ 95%CL (1 toyMC)
   68% expected band : 11.5131 < r < 11.5131
   95% expected band : 11.5131 < r < 11.5131
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -356968825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0498 +/- 0.00878462 @ 95% CL (100 tries)
Done in 1.01 min (cpu), 1.01 min (real)
mean   expected limit: r < 16.0498 @ 95%CL (1 toyMC)
median expected limit: r < 16.0498 @ 95%CL (1 toyMC)
   68% expected band : 16.0498 < r < 16.0498
   95% expected band : 16.0498 < r < 16.0498
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -85594110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.95851 +/- 0.0146649 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.95851 @ 95%CL (1 toyMC)
median expected limit: r < 6.95851 @ 95%CL (1 toyMC)
   68% expected band : 6.95851 < r < 6.95851
   95% expected band : 6.95851 < r < 6.95851
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -505645470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.93348 +/- 0.0102588 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.93348 @ 95%CL (1 toyMC)
median expected limit: r < 6.93348 @ 95%CL (1 toyMC)
   68% expected band : 6.93348 < r < 6.93348
   95% expected band : 6.93348 < r < 6.93348
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -864852187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9708 +/- 0.0129193 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.96 min (real)
mean   expected limit: r < 10.9708 @ 95%CL (1 toyMC)
median expected limit: r < 10.9708 @ 95%CL (1 toyMC)
   68% expected band : 10.9708 < r < 10.9708
   95% expected band : 10.9708 < r < 10.9708
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1698466555
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.64622 +/- 0.0135815 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 9.64622 @ 95%CL (1 toyMC)
median expected limit: r < 9.64622 @ 95%CL (1 toyMC)
   68% expected band : 9.64622 < r < 9.64622
   95% expected band : 9.64622 < r < 9.64622
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399000581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6952 +/- 0.0173918 @ 95% CL (100 tries)
Done in 0.98 min (cpu), 0.98 min (real)
mean   expected limit: r < 11.6952 @ 95%CL (1 toyMC)
median expected limit: r < 11.6952 @ 95%CL (1 toyMC)
   68% expected band : 11.6952 < r < 11.6952
   95% expected band : 11.6952 < r < 11.6952
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1986164552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.759 +/- 0.0159627 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.759 @ 95%CL (1 toyMC)
median expected limit: r < 10.759 @ 95%CL (1 toyMC)
   68% expected band : 10.759 < r < 10.759
   95% expected band : 10.759 < r < 10.759
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 489447835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.88198 +/- 0.0119918 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.88198 @ 95%CL (1 toyMC)
median expected limit: r < 5.88198 @ 95%CL (1 toyMC)
   68% expected band : 5.88198 < r < 5.88198
   95% expected band : 5.88198 < r < 5.88198
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1001380034
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4437 +/- 0.00813711 @ 95% CL (100 tries)
Done in 1.02 min (cpu), 1.02 min (real)
mean   expected limit: r < 17.4437 @ 95%CL (1 toyMC)
median expected limit: r < 17.4437 @ 95%CL (1 toyMC)
   68% expected band : 17.4437 < r < 17.4437
   95% expected band : 17.4437 < r < 17.4437
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1774470948
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8926 +/- 0.0165021 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 12.8926 @ 95%CL (1 toyMC)
median expected limit: r < 12.8926 @ 95%CL (1 toyMC)
   68% expected band : 12.8926 < r < 12.8926
   95% expected band : 12.8926 < r < 12.8926
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1619487438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.46721 +/- 0.0149025 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.46721 @ 95%CL (1 toyMC)
median expected limit: r < 8.46721 @ 95%CL (1 toyMC)
   68% expected band : 8.46721 < r < 8.46721
   95% expected band : 8.46721 < r < 8.46721
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1581700375
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.453 +/- 0.0112965 @ 95% CL (100 tries)
Done in 1.01 min (cpu), 1.01 min (real)
mean   expected limit: r < 16.453 @ 95%CL (1 toyMC)
median expected limit: r < 16.453 @ 95%CL (1 toyMC)
   68% expected band : 16.453 < r < 16.453
   95% expected band : 16.453 < r < 16.453
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 300075052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.18724 +/- 0.0145398 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 8.18724 @ 95%CL (1 toyMC)
median expected limit: r < 8.18724 @ 95%CL (1 toyMC)
   68% expected band : 8.18724 < r < 8.18724
   95% expected band : 8.18724 < r < 8.18724
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1573365504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3985 +/- 0.016128 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.3985 @ 95%CL (1 toyMC)
median expected limit: r < 10.3985 @ 95%CL (1 toyMC)
   68% expected band : 10.3985 < r < 10.3985
   95% expected band : 10.3985 < r < 10.3985
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1799632395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0392 +/- 0.016772 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 12.0392 @ 95%CL (1 toyMC)
median expected limit: r < 12.0392 @ 95%CL (1 toyMC)
   68% expected band : 12.0392 < r < 12.0392
   95% expected band : 12.0392 < r < 12.0392
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1231869223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.97783 +/- 0.0134304 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 6.97783 @ 95%CL (1 toyMC)
median expected limit: r < 6.97783 @ 95%CL (1 toyMC)
   68% expected band : 6.97783 < r < 6.97783
   95% expected band : 6.97783 < r < 6.97783
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1997266201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6901 +/- 0.0157161 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 12.6901 @ 95%CL (1 toyMC)
median expected limit: r < 12.6901 @ 95%CL (1 toyMC)
   68% expected band : 12.6901 < r < 12.6901
   95% expected band : 12.6901 < r < 12.6901
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1382762602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.76088 +/- 0.0117534 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.76088 @ 95%CL (1 toyMC)
median expected limit: r < 6.76088 @ 95%CL (1 toyMC)
   68% expected band : 6.76088 < r < 6.76088
   95% expected band : 6.76088 < r < 6.76088
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1178105704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.86327 +/- 0.0173742 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 9.86327 @ 95%CL (1 toyMC)
median expected limit: r < 9.86327 @ 95%CL (1 toyMC)
   68% expected band : 9.86327 < r < 9.86327
   95% expected band : 9.86327 < r < 9.86327
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1065522624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7089 +/- 0.013202 @ 95% CL (100 tries)
Done in 0.98 min (cpu), 0.98 min (real)
mean   expected limit: r < 13.7089 @ 95%CL (1 toyMC)
median expected limit: r < 13.7089 @ 95%CL (1 toyMC)
   68% expected band : 13.7089 < r < 13.7089
   95% expected band : 13.7089 < r < 13.7089
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 803474574
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8978 +/- 0.0101469 @ 95% CL (100 tries)
Done in 1.01 min (cpu), 1.01 min (real)
mean   expected limit: r < 15.8978 @ 95%CL (1 toyMC)
median expected limit: r < 15.8978 @ 95%CL (1 toyMC)
   68% expected band : 15.8978 < r < 15.8978
   95% expected band : 15.8978 < r < 15.8978
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1561127662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2051 +/- 0.0135337 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 12.2051 @ 95%CL (1 toyMC)
median expected limit: r < 12.2051 @ 95%CL (1 toyMC)
   68% expected band : 12.2051 < r < 12.2051
   95% expected band : 12.2051 < r < 12.2051
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 40224929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3445 +/- 0.0149867 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.96 min (real)
mean   expected limit: r < 12.3445 @ 95%CL (1 toyMC)
median expected limit: r < 12.3445 @ 95%CL (1 toyMC)
   68% expected band : 12.3445 < r < 12.3445
   95% expected band : 12.3445 < r < 12.3445
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -204600273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7738 +/- 0.0119223 @ 95% CL (100 tries)
Done in 1.00 min (cpu), 1.00 min (real)
mean   expected limit: r < 15.7738 @ 95%CL (1 toyMC)
median expected limit: r < 15.7738 @ 95%CL (1 toyMC)
   68% expected band : 15.7738 < r < 15.7738
   95% expected band : 15.7738 < r < 15.7738
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 555313317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5128 +/- 0.0159512 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 11.5128 @ 95%CL (1 toyMC)
median expected limit: r < 11.5128 @ 95%CL (1 toyMC)
   68% expected band : 11.5128 < r < 11.5128
   95% expected band : 11.5128 < r < 11.5128
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -901704985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87616 +/- 0.01303 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 9.87616 @ 95%CL (1 toyMC)
median expected limit: r < 9.87616 @ 95%CL (1 toyMC)
   68% expected band : 9.87616 < r < 9.87616
   95% expected band : 9.87616 < r < 9.87616
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 856533277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.552 +/- 0.0090442 @ 95% CL (100 tries)
Done in 1.03 min (cpu), 1.03 min (real)
mean   expected limit: r < 17.552 @ 95%CL (1 toyMC)
median expected limit: r < 17.552 @ 95%CL (1 toyMC)
   68% expected band : 17.552 < r < 17.552
   95% expected band : 17.552 < r < 17.552
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1313010788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5163 +/- 0.014658 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 13.5163 @ 95%CL (1 toyMC)
median expected limit: r < 13.5163 @ 95%CL (1 toyMC)
   68% expected band : 13.5163 < r < 13.5163
   95% expected band : 13.5163 < r < 13.5163
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -11874354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.31141 +/- 0.0110465 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 8.31141 @ 95%CL (1 toyMC)
median expected limit: r < 8.31141 @ 95%CL (1 toyMC)
   68% expected band : 8.31141 < r < 8.31141
   95% expected band : 8.31141 < r < 8.31141
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1110623181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7997 +/- 0.0150907 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 14.7997 @ 95%CL (1 toyMC)
median expected limit: r < 14.7997 @ 95%CL (1 toyMC)
   68% expected band : 14.7997 < r < 14.7997
   95% expected band : 14.7997 < r < 14.7997
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 673265974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.86022 +/- 0.0128227 @ 95% CL (100 tries)
Done in 0.87 min (cpu), 0.87 min (real)
mean   expected limit: r < 5.86022 @ 95%CL (1 toyMC)
median expected limit: r < 5.86022 @ 95%CL (1 toyMC)
   68% expected band : 5.86022 < r < 5.86022
   95% expected band : 5.86022 < r < 5.86022
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -521284550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7643 +/- 0.0161242 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 10.7643 @ 95%CL (1 toyMC)
median expected limit: r < 10.7643 @ 95%CL (1 toyMC)
   68% expected band : 10.7643 < r < 10.7643
   95% expected band : 10.7643 < r < 10.7643
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1805148991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3284 +/- 0.0129207 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 14.3284 @ 95%CL (1 toyMC)
median expected limit: r < 14.3284 @ 95%CL (1 toyMC)
   68% expected band : 14.3284 < r < 14.3284
   95% expected band : 14.3284 < r < 14.3284
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 846863224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2045 +/- 0.0145272 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.2045 @ 95%CL (1 toyMC)
median expected limit: r < 10.2045 @ 95%CL (1 toyMC)
   68% expected band : 10.2045 < r < 10.2045
   95% expected band : 10.2045 < r < 10.2045
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1718532296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8174 +/- 0.0177752 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 12.8174 @ 95%CL (1 toyMC)
median expected limit: r < 12.8174 @ 95%CL (1 toyMC)
   68% expected band : 12.8174 < r < 12.8174
   95% expected band : 12.8174 < r < 12.8174
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1354385471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.91424 +/- 0.0146487 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.91424 @ 95%CL (1 toyMC)
median expected limit: r < 8.91424 @ 95%CL (1 toyMC)
   68% expected band : 8.91424 < r < 8.91424
   95% expected band : 8.91424 < r < 8.91424
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1685971502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.88263 +/- 0.014466 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 9.88263 @ 95%CL (1 toyMC)
median expected limit: r < 9.88263 @ 95%CL (1 toyMC)
   68% expected band : 9.88263 < r < 9.88263
   95% expected band : 9.88263 < r < 9.88263
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1032269575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3925 +/- 0.0118558 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 14.3925 @ 95%CL (1 toyMC)
median expected limit: r < 14.3925 @ 95%CL (1 toyMC)
   68% expected band : 14.3925 < r < 14.3925
   95% expected band : 14.3925 < r < 14.3925
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 907108047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.73249 +/- 0.018375 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 9.73249 @ 95%CL (1 toyMC)
median expected limit: r < 9.73249 @ 95%CL (1 toyMC)
   68% expected band : 9.73249 < r < 9.73249
   95% expected band : 9.73249 < r < 9.73249
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 598602485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.26271 +/- 0.0171312 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.26271 @ 95%CL (1 toyMC)
median expected limit: r < 8.26271 @ 95%CL (1 toyMC)
   68% expected band : 8.26271 < r < 8.26271
   95% expected band : 8.26271 < r < 8.26271
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1229656329
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0619 +/- 0.00808928 @ 95% CL (100 tries)
Done in 1.03 min (cpu), 1.03 min (real)
mean   expected limit: r < 17.0619 @ 95%CL (1 toyMC)
median expected limit: r < 17.0619 @ 95%CL (1 toyMC)
   68% expected band : 17.0619 < r < 17.0619
   95% expected band : 17.0619 < r < 17.0619
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1558267708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5404 +/- 0.015437 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 11.5404 @ 95%CL (1 toyMC)
median expected limit: r < 11.5404 @ 95%CL (1 toyMC)
   68% expected band : 11.5404 < r < 11.5404
   95% expected band : 11.5404 < r < 11.5404
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1545727239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4693 +/- 0.0116399 @ 95% CL (100 tries)
Done in 1.00 min (cpu), 1.00 min (real)
mean   expected limit: r < 15.4693 @ 95%CL (1 toyMC)
median expected limit: r < 15.4693 @ 95%CL (1 toyMC)
   68% expected band : 15.4693 < r < 15.4693
   95% expected band : 15.4693 < r < 15.4693
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1135460953
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.82773 +/- 0.0132643 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 9.82773 @ 95%CL (1 toyMC)
median expected limit: r < 9.82773 @ 95%CL (1 toyMC)
   68% expected band : 9.82773 < r < 9.82773
   95% expected band : 9.82773 < r < 9.82773
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 258072602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.15903 +/- 0.0180214 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 9.15903 @ 95%CL (1 toyMC)
median expected limit: r < 9.15903 @ 95%CL (1 toyMC)
   68% expected band : 9.15903 < r < 9.15903
   95% expected band : 9.15903 < r < 9.15903
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1906513844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5068 +/- 0.0192073 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 11.5068 @ 95%CL (1 toyMC)
median expected limit: r < 11.5068 @ 95%CL (1 toyMC)
   68% expected band : 11.5068 < r < 11.5068
   95% expected band : 11.5068 < r < 11.5068
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2035151437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.176 +/- 0.0161282 @ 95% CL (100 tries)
Done in 1.00 min (cpu), 1.01 min (real)
mean   expected limit: r < 11.176 @ 95%CL (1 toyMC)
median expected limit: r < 11.176 @ 95%CL (1 toyMC)
   68% expected band : 11.176 < r < 11.176
   95% expected band : 11.176 < r < 11.176
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1440420149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9414 +/- 0.0169362 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.9414 @ 95%CL (1 toyMC)
median expected limit: r < 10.9414 @ 95%CL (1 toyMC)
   68% expected band : 10.9414 < r < 10.9414
   95% expected band : 10.9414 < r < 10.9414
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 470357505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.44 +/- 0.00544424 @ 95% CL (100 tries)
Done in 1.03 min (cpu), 1.04 min (real)
mean   expected limit: r < 18.44 @ 95%CL (1 toyMC)
median expected limit: r < 18.44 @ 95%CL (1 toyMC)
   68% expected band : 18.44 < r < 18.44
   95% expected band : 18.44 < r < 18.44
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 173718447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4772 +/- 0.0136638 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 13.4772 @ 95%CL (1 toyMC)
median expected limit: r < 13.4772 @ 95%CL (1 toyMC)
   68% expected band : 13.4772 < r < 13.4772
   95% expected band : 13.4772 < r < 13.4772
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1887614063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1835 +/- 0.0127272 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 15.1835 @ 95%CL (1 toyMC)
median expected limit: r < 15.1835 @ 95%CL (1 toyMC)
   68% expected band : 15.1835 < r < 15.1835
   95% expected band : 15.1835 < r < 15.1835
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 981657352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.24038 +/- 0.0152865 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 8.24038 @ 95%CL (1 toyMC)
median expected limit: r < 8.24038 @ 95%CL (1 toyMC)
   68% expected band : 8.24038 < r < 8.24038
   95% expected band : 8.24038 < r < 8.24038
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1019636026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5267 +/- 0.017513 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 10.5267 @ 95%CL (1 toyMC)
median expected limit: r < 10.5267 @ 95%CL (1 toyMC)
   68% expected band : 10.5267 < r < 10.5267
   95% expected band : 10.5267 < r < 10.5267
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -959123809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.98943 +/- 0.01593 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.98943 @ 95%CL (1 toyMC)
median expected limit: r < 8.98943 @ 95%CL (1 toyMC)
   68% expected band : 8.98943 < r < 8.98943
   95% expected band : 8.98943 < r < 8.98943
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 868176793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2072 +/- 0.0157888 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 14.2072 @ 95%CL (1 toyMC)
median expected limit: r < 14.2072 @ 95%CL (1 toyMC)
   68% expected band : 14.2072 < r < 14.2072
   95% expected band : 14.2072 < r < 14.2072
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 768943512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.97761 +/- 0.013533 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 6.97761 @ 95%CL (1 toyMC)
median expected limit: r < 6.97761 @ 95%CL (1 toyMC)
   68% expected band : 6.97761 < r < 6.97761
   95% expected band : 6.97761 < r < 6.97761
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -277186366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0272 +/- 0.0182049 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.96 min (real)
mean   expected limit: r < 11.0272 @ 95%CL (1 toyMC)
median expected limit: r < 11.0272 @ 95%CL (1 toyMC)
   68% expected band : 11.0272 < r < 11.0272
   95% expected band : 11.0272 < r < 11.0272
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -629241890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8533 +/- 0.0176203 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.96 min (real)
mean   expected limit: r < 11.8533 @ 95%CL (1 toyMC)
median expected limit: r < 11.8533 @ 95%CL (1 toyMC)
   68% expected band : 11.8533 < r < 11.8533
   95% expected band : 11.8533 < r < 11.8533
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -258542620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0548 +/- 0.0117101 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.98 min (real)
mean   expected limit: r < 14.0548 @ 95%CL (1 toyMC)
median expected limit: r < 14.0548 @ 95%CL (1 toyMC)
   68% expected band : 14.0548 < r < 14.0548
   95% expected band : 14.0548 < r < 14.0548
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -746671000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7493 +/- 0.0133178 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 1.00 min (real)
mean   expected limit: r < 13.7493 @ 95%CL (1 toyMC)
median expected limit: r < 13.7493 @ 95%CL (1 toyMC)
   68% expected band : 13.7493 < r < 13.7493
   95% expected band : 13.7493 < r < 13.7493
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -255909975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.14493 +/- 0.0137426 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 9.14493 @ 95%CL (1 toyMC)
median expected limit: r < 9.14493 @ 95%CL (1 toyMC)
   68% expected band : 9.14493 < r < 9.14493
   95% expected band : 9.14493 < r < 9.14493
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1065939886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.53 +/- 0.0146902 @ 95% CL (100 tries)
Done in 0.88 min (cpu), 0.88 min (real)
mean   expected limit: r < 7.53 @ 95%CL (1 toyMC)
median expected limit: r < 7.53 @ 95%CL (1 toyMC)
   68% expected band : 7.53 < r < 7.53
   95% expected band : 7.53 < r < 7.53
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1468875164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6987 +/- 0.0165066 @ 95% CL (100 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 11.6987 @ 95%CL (1 toyMC)
median expected limit: r < 11.6987 @ 95%CL (1 toyMC)
   68% expected band : 11.6987 < r < 11.6987
   95% expected band : 11.6987 < r < 11.6987
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -606419795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1915 +/- 0.0152944 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.97 min (real)
mean   expected limit: r < 13.1915 @ 95%CL (1 toyMC)
median expected limit: r < 13.1915 @ 95%CL (1 toyMC)
   68% expected band : 13.1915 < r < 13.1915
   95% expected band : 13.1915 < r < 13.1915
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1212614289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.13184 +/- 0.0135786 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 8.13184 @ 95%CL (1 toyMC)
median expected limit: r < 8.13184 @ 95%CL (1 toyMC)
   68% expected band : 8.13184 < r < 8.13184
   95% expected band : 8.13184 < r < 8.13184
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -727530679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.611 +/- 0.0114566 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 10.611 @ 95%CL (1 toyMC)
median expected limit: r < 10.611 @ 95%CL (1 toyMC)
   68% expected band : 10.611 < r < 10.611
   95% expected band : 10.611 < r < 10.611
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1617551146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.33496 +/- 0.0164221 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.33496 @ 95%CL (1 toyMC)
median expected limit: r < 8.33496 @ 95%CL (1 toyMC)
   68% expected band : 8.33496 < r < 8.33496
   95% expected band : 8.33496 < r < 8.33496
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 241199843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.96262 +/- 0.0157035 @ 95% CL (100 tries)
Done in 0.89 min (cpu), 0.89 min (real)
mean   expected limit: r < 6.96262 @ 95%CL (1 toyMC)
median expected limit: r < 6.96262 @ 95%CL (1 toyMC)
   68% expected band : 6.96262 < r < 6.96262
   95% expected band : 6.96262 < r < 6.96262
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -518063628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.57248 +/- 0.0165833 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 7.57248 @ 95%CL (1 toyMC)
median expected limit: r < 7.57248 @ 95%CL (1 toyMC)
   68% expected band : 7.57248 < r < 7.57248
   95% expected band : 7.57248 < r < 7.57248
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1323488187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6825 +/- 0.011002 @ 95% CL (100 tries)
Done in 1.00 min (cpu), 1.00 min (real)
mean   expected limit: r < 15.6825 @ 95%CL (1 toyMC)
median expected limit: r < 15.6825 @ 95%CL (1 toyMC)
   68% expected band : 15.6825 < r < 15.6825
   95% expected band : 15.6825 < r < 15.6825
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1306715814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.777 +/- 0.0149895 @ 95% CL (100 tries)
Done in 0.99 min (cpu), 0.99 min (real)
mean   expected limit: r < 13.777 @ 95%CL (1 toyMC)
median expected limit: r < 13.777 @ 95%CL (1 toyMC)
   68% expected band : 13.777 < r < 13.777
   95% expected band : 13.777 < r < 13.777
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1229647446
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.85823 +/- 0.0215388 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 9.85823 @ 95%CL (1 toyMC)
median expected limit: r < 9.85823 @ 95%CL (1 toyMC)
   68% expected band : 9.85823 < r < 9.85823
   95% expected band : 9.85823 < r < 9.85823
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2009909387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.03885 +/- 0.0186795 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 8.03885 @ 95%CL (1 toyMC)
median expected limit: r < 8.03885 @ 95%CL (1 toyMC)
   68% expected band : 8.03885 < r < 8.03885
   95% expected band : 8.03885 < r < 8.03885
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 907889676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6603 +/- 0.016377 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.96 min (real)
mean   expected limit: r < 11.6603 @ 95%CL (1 toyMC)
median expected limit: r < 11.6603 @ 95%CL (1 toyMC)
   68% expected band : 11.6603 < r < 11.6603
   95% expected band : 11.6603 < r < 11.6603
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1374764399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4201 +/- 0.0160307 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 12.4201 @ 95%CL (1 toyMC)
median expected limit: r < 12.4201 @ 95%CL (1 toyMC)
   68% expected band : 12.4201 < r < 12.4201
   95% expected band : 12.4201 < r < 12.4201
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1523585695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.86127 +/- 0.0166211 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 9.86127 @ 95%CL (1 toyMC)
median expected limit: r < 9.86127 @ 95%CL (1 toyMC)
   68% expected band : 9.86127 < r < 9.86127
   95% expected band : 9.86127 < r < 9.86127
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -825364006
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.39476 +/- 0.0153135 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 8.39476 @ 95%CL (1 toyMC)
median expected limit: r < 8.39476 @ 95%CL (1 toyMC)
   68% expected band : 8.39476 < r < 8.39476
   95% expected band : 8.39476 < r < 8.39476
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1092904689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0949 +/- 0.0165551 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.93 min (real)
mean   expected limit: r < 10.0949 @ 95%CL (1 toyMC)
median expected limit: r < 10.0949 @ 95%CL (1 toyMC)
   68% expected band : 10.0949 < r < 10.0949
   95% expected band : 10.0949 < r < 10.0949
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 75800035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.865 +/- 0.0147413 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.865 @ 95%CL (1 toyMC)
median expected limit: r < 10.865 @ 95%CL (1 toyMC)
   68% expected band : 10.865 < r < 10.865
   95% expected band : 10.865 < r < 10.865
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1371646976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1967 +/- 0.0129747 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.95 min (real)
mean   expected limit: r < 10.1967 @ 95%CL (1 toyMC)
median expected limit: r < 10.1967 @ 95%CL (1 toyMC)
   68% expected band : 10.1967 < r < 10.1967
   95% expected band : 10.1967 < r < 10.1967
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1291506069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.21088 +/- 0.0133288 @ 95% CL (100 tries)
Done in 0.90 min (cpu), 0.90 min (real)
mean   expected limit: r < 8.21088 @ 95%CL (1 toyMC)
median expected limit: r < 8.21088 @ 95%CL (1 toyMC)
   68% expected band : 8.21088 < r < 8.21088
   95% expected band : 8.21088 < r < 8.21088
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1841762285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.90853 +/- 0.0196954 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 9.90853 @ 95%CL (1 toyMC)
median expected limit: r < 9.90853 @ 95%CL (1 toyMC)
   68% expected band : 9.90853 < r < 9.90853
   95% expected band : 9.90853 < r < 9.90853
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1774946260
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8084 +/- 0.0175088 @ 95% CL (100 tries)
Done in 0.96 min (cpu), 0.96 min (real)
mean   expected limit: r < 10.8084 @ 95%CL (1 toyMC)
median expected limit: r < 10.8084 @ 95%CL (1 toyMC)
   68% expected band : 10.8084 < r < 10.8084
   95% expected band : 10.8084 < r < 10.8084
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1796964482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.24116 +/- 0.014872 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 8.24116 @ 95%CL (1 toyMC)
median expected limit: r < 8.24116 @ 95%CL (1 toyMC)
   68% expected band : 8.24116 < r < 8.24116
   95% expected band : 8.24116 < r < 8.24116
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1800462056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.31491 +/- 0.0184307 @ 95% CL (100 tries)
Done in 0.91 min (cpu), 0.91 min (real)
mean   expected limit: r < 8.31491 @ 95%CL (1 toyMC)
median expected limit: r < 8.31491 @ 95%CL (1 toyMC)
   68% expected band : 8.31491 < r < 8.31491
   95% expected band : 8.31491 < r < 8.31491
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 60994597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7618 +/- 0.0148925 @ 95% CL (100 tries)
Done in 0.95 min (cpu), 0.96 min (real)
mean   expected limit: r < 10.7618 @ 95%CL (1 toyMC)
median expected limit: r < 10.7618 @ 95%CL (1 toyMC)
   68% expected band : 10.7618 < r < 10.7618
   95% expected band : 10.7618 < r < 10.7618
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1893277009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.799 +/- 0.0120234 @ 95% CL (100 tries)
Done in 0.97 min (cpu), 0.98 min (real)
mean   expected limit: r < 13.799 @ 95%CL (1 toyMC)
median expected limit: r < 13.799 @ 95%CL (1 toyMC)
   68% expected band : 13.799 < r < 13.799
   95% expected band : 13.799 < r < 13.799
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1112900841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.03825 +/- 0.0170133 @ 95% CL (100 tries)
Done in 0.93 min (cpu), 0.94 min (real)
mean   expected limit: r < 9.03825 @ 95%CL (1 toyMC)
median expected limit: r < 9.03825 @ 95%CL (1 toyMC)
   68% expected band : 9.03825 < r < 9.03825
   95% expected band : 9.03825 < r < 9.03825
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1293085878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0167 +/- 0.0199607 @ 95% CL (100 tries)
Done in 0.92 min (cpu), 0.92 min (real)
mean   expected limit: r < 10.0167 @ 95%CL (1 toyMC)
median expected limit: r < 10.0167 @ 95%CL (1 toyMC)
   68% expected band : 10.0167 < r < 10.0167
   95% expected band : 10.0167 < r < 10.0167
>>>> Finished computing CI MCMC with Lambda = 100
