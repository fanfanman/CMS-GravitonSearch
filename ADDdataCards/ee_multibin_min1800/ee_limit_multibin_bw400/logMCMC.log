 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2095970150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.580373 +/- 0.00279368 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.580373 @ 95%CL (1 toyMC)
median expected limit: r < 0.580373 @ 95%CL (1 toyMC)
   68% expected band : 0.580373 < r < 0.580373
   95% expected band : 0.580373 < r < 0.580373
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1347851083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.189287 +/- 0.00392033 @ 95% CL (99 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.189287 @ 95%CL (1 toyMC)
median expected limit: r < 0.189287 @ 95%CL (1 toyMC)
   68% expected band : 0.189287 < r < 0.189287
   95% expected band : 0.189287 < r < 0.189287
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1993079519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.194773 +/- 0.00382273 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 0.194773 @ 95%CL (1 toyMC)
median expected limit: r < 0.194773 @ 95%CL (1 toyMC)
   68% expected band : 0.194773 < r < 0.194773
   95% expected band : 0.194773 < r < 0.194773
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2009959489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.199857 +/- 0.00327675 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 0.199857 @ 95%CL (1 toyMC)
median expected limit: r < 0.199857 @ 95%CL (1 toyMC)
   68% expected band : 0.199857 < r < 0.199857
   95% expected band : 0.199857 < r < 0.199857
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1870215225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.347626 +/- 0.00229085 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.347626 @ 95%CL (1 toyMC)
median expected limit: r < 0.347626 @ 95%CL (1 toyMC)
   68% expected band : 0.347626 < r < 0.347626
   95% expected band : 0.347626 < r < 0.347626
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 854672854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.232508 +/- 0.00294542 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 0.232508 @ 95%CL (1 toyMC)
median expected limit: r < 0.232508 @ 95%CL (1 toyMC)
   68% expected band : 0.232508 < r < 0.232508
   95% expected band : 0.232508 < r < 0.232508
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -718355964
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.389349 +/- 0.00267661 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.389349 @ 95%CL (1 toyMC)
median expected limit: r < 0.389349 @ 95%CL (1 toyMC)
   68% expected band : 0.389349 < r < 0.389349
   95% expected band : 0.389349 < r < 0.389349
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1055045686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.216745 +/- 0.00342238 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.216745 @ 95%CL (1 toyMC)
median expected limit: r < 0.216745 @ 95%CL (1 toyMC)
   68% expected band : 0.216745 < r < 0.216745
   95% expected band : 0.216745 < r < 0.216745
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -30024247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.422227 +/- 0.00264336 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.422227 @ 95%CL (1 toyMC)
median expected limit: r < 0.422227 @ 95%CL (1 toyMC)
   68% expected band : 0.422227 < r < 0.422227
   95% expected band : 0.422227 < r < 0.422227
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -879945383
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.311903 +/- 0.00242821 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.311903 @ 95%CL (1 toyMC)
median expected limit: r < 0.311903 @ 95%CL (1 toyMC)
   68% expected band : 0.311903 < r < 0.311903
   95% expected band : 0.311903 < r < 0.311903
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1225302990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.44419 +/- 0.00233935 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.44419 @ 95%CL (1 toyMC)
median expected limit: r < 0.44419 @ 95%CL (1 toyMC)
   68% expected band : 0.44419 < r < 0.44419
   95% expected band : 0.44419 < r < 0.44419
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1557149847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.430978 +/- 0.00306735 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.430978 @ 95%CL (1 toyMC)
median expected limit: r < 0.430978 @ 95%CL (1 toyMC)
   68% expected band : 0.430978 < r < 0.430978
   95% expected band : 0.430978 < r < 0.430978
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1015310327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.230308 +/- 0.00352977 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.230308 @ 95%CL (1 toyMC)
median expected limit: r < 0.230308 @ 95%CL (1 toyMC)
   68% expected band : 0.230308 < r < 0.230308
   95% expected band : 0.230308 < r < 0.230308
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -84690239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.320548 +/- 0.00278762 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.320548 @ 95%CL (1 toyMC)
median expected limit: r < 0.320548 @ 95%CL (1 toyMC)
   68% expected band : 0.320548 < r < 0.320548
   95% expected band : 0.320548 < r < 0.320548
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 479870496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.28911 +/- 0.00387225 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.28911 @ 95%CL (1 toyMC)
median expected limit: r < 0.28911 @ 95%CL (1 toyMC)
   68% expected band : 0.28911 < r < 0.28911
   95% expected band : 0.28911 < r < 0.28911
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1931880288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.280443 +/- 0.00220309 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.280443 @ 95%CL (1 toyMC)
median expected limit: r < 0.280443 @ 95%CL (1 toyMC)
   68% expected band : 0.280443 < r < 0.280443
   95% expected band : 0.280443 < r < 0.280443
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1313537422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.23163 +/- 0.0035209 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 0.23163 @ 95%CL (1 toyMC)
median expected limit: r < 0.23163 @ 95%CL (1 toyMC)
   68% expected band : 0.23163 < r < 0.23163
   95% expected band : 0.23163 < r < 0.23163
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -566096270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.222189 +/- 0.00314184 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.222189 @ 95%CL (1 toyMC)
median expected limit: r < 0.222189 @ 95%CL (1 toyMC)
   68% expected band : 0.222189 < r < 0.222189
   95% expected band : 0.222189 < r < 0.222189
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 440694526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.221969 +/- 0.0028496 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.221969 @ 95%CL (1 toyMC)
median expected limit: r < 0.221969 @ 95%CL (1 toyMC)
   68% expected band : 0.221969 < r < 0.221969
   95% expected band : 0.221969 < r < 0.221969
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1257286902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.504007 +/- 0.00276855 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.504007 @ 95%CL (1 toyMC)
median expected limit: r < 0.504007 @ 95%CL (1 toyMC)
   68% expected band : 0.504007 < r < 0.504007
   95% expected band : 0.504007 < r < 0.504007
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2065495936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.243342 +/- 0.00346242 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.243342 @ 95%CL (1 toyMC)
median expected limit: r < 0.243342 @ 95%CL (1 toyMC)
   68% expected band : 0.243342 < r < 0.243342
   95% expected band : 0.243342 < r < 0.243342
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1570983100
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.341676 +/- 0.00291899 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.341676 @ 95%CL (1 toyMC)
median expected limit: r < 0.341676 @ 95%CL (1 toyMC)
   68% expected band : 0.341676 < r < 0.341676
   95% expected band : 0.341676 < r < 0.341676
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -773057183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.205869 +/- 0.0030988 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.205869 @ 95%CL (1 toyMC)
median expected limit: r < 0.205869 @ 95%CL (1 toyMC)
   68% expected band : 0.205869 < r < 0.205869
   95% expected band : 0.205869 < r < 0.205869
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -684865405
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.220773 +/- 0.00313311 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.220773 @ 95%CL (1 toyMC)
median expected limit: r < 0.220773 @ 95%CL (1 toyMC)
   68% expected band : 0.220773 < r < 0.220773
   95% expected band : 0.220773 < r < 0.220773
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2072777842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.211389 +/- 0.00346344 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.211389 @ 95%CL (1 toyMC)
median expected limit: r < 0.211389 @ 95%CL (1 toyMC)
   68% expected band : 0.211389 < r < 0.211389
   95% expected band : 0.211389 < r < 0.211389
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1304171068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.234565 +/- 0.00331322 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.234565 @ 95%CL (1 toyMC)
median expected limit: r < 0.234565 @ 95%CL (1 toyMC)
   68% expected band : 0.234565 < r < 0.234565
   95% expected band : 0.234565 < r < 0.234565
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1597020888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.38116 +/- 0.00227731 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.38116 @ 95%CL (1 toyMC)
median expected limit: r < 0.38116 @ 95%CL (1 toyMC)
   68% expected band : 0.38116 < r < 0.38116
   95% expected band : 0.38116 < r < 0.38116
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1129256036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.310491 +/- 0.00359988 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.310491 @ 95%CL (1 toyMC)
median expected limit: r < 0.310491 @ 95%CL (1 toyMC)
   68% expected band : 0.310491 < r < 0.310491
   95% expected band : 0.310491 < r < 0.310491
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 17445886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.201792 +/- 0.00361231 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.201792 @ 95%CL (1 toyMC)
median expected limit: r < 0.201792 @ 95%CL (1 toyMC)
   68% expected band : 0.201792 < r < 0.201792
   95% expected band : 0.201792 < r < 0.201792
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 986050290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.215522 +/- 0.00375235 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.215522 @ 95%CL (1 toyMC)
median expected limit: r < 0.215522 @ 95%CL (1 toyMC)
   68% expected band : 0.215522 < r < 0.215522
   95% expected band : 0.215522 < r < 0.215522
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -270286546
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.252097 +/- 0.00282473 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.252097 @ 95%CL (1 toyMC)
median expected limit: r < 0.252097 @ 95%CL (1 toyMC)
   68% expected band : 0.252097 < r < 0.252097
   95% expected band : 0.252097 < r < 0.252097
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1888214786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.476857 +/- 0.0032393 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.476857 @ 95%CL (1 toyMC)
median expected limit: r < 0.476857 @ 95%CL (1 toyMC)
   68% expected band : 0.476857 < r < 0.476857
   95% expected band : 0.476857 < r < 0.476857
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 898421052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.295631 +/- 0.0029134 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.295631 @ 95%CL (1 toyMC)
median expected limit: r < 0.295631 @ 95%CL (1 toyMC)
   68% expected band : 0.295631 < r < 0.295631
   95% expected band : 0.295631 < r < 0.295631
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 752530115
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.334395 +/- 0.0032805 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.334395 @ 95%CL (1 toyMC)
median expected limit: r < 0.334395 @ 95%CL (1 toyMC)
   68% expected band : 0.334395 < r < 0.334395
   95% expected band : 0.334395 < r < 0.334395
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -592343077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.226413 +/- 0.00261783 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.226413 @ 95%CL (1 toyMC)
median expected limit: r < 0.226413 @ 95%CL (1 toyMC)
   68% expected band : 0.226413 < r < 0.226413
   95% expected band : 0.226413 < r < 0.226413
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1044949032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.215544 +/- 0.00368284 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.215544 @ 95%CL (1 toyMC)
median expected limit: r < 0.215544 @ 95%CL (1 toyMC)
   68% expected band : 0.215544 < r < 0.215544
   95% expected band : 0.215544 < r < 0.215544
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 85435689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.334861 +/- 0.00299317 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.334861 @ 95%CL (1 toyMC)
median expected limit: r < 0.334861 @ 95%CL (1 toyMC)
   68% expected band : 0.334861 < r < 0.334861
   95% expected band : 0.334861 < r < 0.334861
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 549972134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.206456 +/- 0.00338969 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.206456 @ 95%CL (1 toyMC)
median expected limit: r < 0.206456 @ 95%CL (1 toyMC)
   68% expected band : 0.206456 < r < 0.206456
   95% expected band : 0.206456 < r < 0.206456
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 115418211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.661473 +/- 0.00295626 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.661473 @ 95%CL (1 toyMC)
median expected limit: r < 0.661473 @ 95%CL (1 toyMC)
   68% expected band : 0.661473 < r < 0.661473
   95% expected band : 0.661473 < r < 0.661473
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1107321985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.45635 +/- 0.00274917 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.45635 @ 95%CL (1 toyMC)
median expected limit: r < 0.45635 @ 95%CL (1 toyMC)
   68% expected band : 0.45635 < r < 0.45635
   95% expected band : 0.45635 < r < 0.45635
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1253465322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.250371 +/- 0.00325075 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.250371 @ 95%CL (1 toyMC)
median expected limit: r < 0.250371 @ 95%CL (1 toyMC)
   68% expected band : 0.250371 < r < 0.250371
   95% expected band : 0.250371 < r < 0.250371
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2126538361
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.180631 +/- 0.00371628 @ 95% CL (99 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.180631 @ 95%CL (1 toyMC)
median expected limit: r < 0.180631 @ 95%CL (1 toyMC)
   68% expected band : 0.180631 < r < 0.180631
   95% expected band : 0.180631 < r < 0.180631
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1450830720
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.309765 +/- 0.00308808 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.309765 @ 95%CL (1 toyMC)
median expected limit: r < 0.309765 @ 95%CL (1 toyMC)
   68% expected band : 0.309765 < r < 0.309765
   95% expected band : 0.309765 < r < 0.309765
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -921041562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.405698 +/- 0.00288798 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.405698 @ 95%CL (1 toyMC)
median expected limit: r < 0.405698 @ 95%CL (1 toyMC)
   68% expected band : 0.405698 < r < 0.405698
   95% expected band : 0.405698 < r < 0.405698
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 670099768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.42888 +/- 0.00312685 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.42888 @ 95%CL (1 toyMC)
median expected limit: r < 0.42888 @ 95%CL (1 toyMC)
   68% expected band : 0.42888 < r < 0.42888
   95% expected band : 0.42888 < r < 0.42888
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1054725353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.327776 +/- 0.00257488 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.327776 @ 95%CL (1 toyMC)
median expected limit: r < 0.327776 @ 95%CL (1 toyMC)
   68% expected band : 0.327776 < r < 0.327776
   95% expected band : 0.327776 < r < 0.327776
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -649155482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.553562 +/- 0.00304284 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.553562 @ 95%CL (1 toyMC)
median expected limit: r < 0.553562 @ 95%CL (1 toyMC)
   68% expected band : 0.553562 < r < 0.553562
   95% expected band : 0.553562 < r < 0.553562
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 592218797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.316261 +/- 0.00410619 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.316261 @ 95%CL (1 toyMC)
median expected limit: r < 0.316261 @ 95%CL (1 toyMC)
   68% expected band : 0.316261 < r < 0.316261
   95% expected band : 0.316261 < r < 0.316261
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -983382068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.262886 +/- 0.00294473 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.262886 @ 95%CL (1 toyMC)
median expected limit: r < 0.262886 @ 95%CL (1 toyMC)
   68% expected band : 0.262886 < r < 0.262886
   95% expected band : 0.262886 < r < 0.262886
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1851539511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.204076 +/- 0.00283605 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.204076 @ 95%CL (1 toyMC)
median expected limit: r < 0.204076 @ 95%CL (1 toyMC)
   68% expected band : 0.204076 < r < 0.204076
   95% expected band : 0.204076 < r < 0.204076
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 580667332
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.315302 +/- 0.00311168 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.315302 @ 95%CL (1 toyMC)
median expected limit: r < 0.315302 @ 95%CL (1 toyMC)
   68% expected band : 0.315302 < r < 0.315302
   95% expected band : 0.315302 < r < 0.315302
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -842978498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.426005 +/- 0.00243735 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.426005 @ 95%CL (1 toyMC)
median expected limit: r < 0.426005 @ 95%CL (1 toyMC)
   68% expected band : 0.426005 < r < 0.426005
   95% expected band : 0.426005 < r < 0.426005
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 336696279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.280723 +/- 0.00278483 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.280723 @ 95%CL (1 toyMC)
median expected limit: r < 0.280723 @ 95%CL (1 toyMC)
   68% expected band : 0.280723 < r < 0.280723
   95% expected band : 0.280723 < r < 0.280723
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 544802259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.308452 +/- 0.0031066 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.308452 @ 95%CL (1 toyMC)
median expected limit: r < 0.308452 @ 95%CL (1 toyMC)
   68% expected band : 0.308452 < r < 0.308452
   95% expected band : 0.308452 < r < 0.308452
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1585975308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.273589 +/- 0.00309792 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.273589 @ 95%CL (1 toyMC)
median expected limit: r < 0.273589 @ 95%CL (1 toyMC)
   68% expected band : 0.273589 < r < 0.273589
   95% expected band : 0.273589 < r < 0.273589
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2118995863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.238305 +/- 0.00352686 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.238305 @ 95%CL (1 toyMC)
median expected limit: r < 0.238305 @ 95%CL (1 toyMC)
   68% expected band : 0.238305 < r < 0.238305
   95% expected band : 0.238305 < r < 0.238305
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2013250225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.192502 +/- 0.00337605 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.192502 @ 95%CL (1 toyMC)
median expected limit: r < 0.192502 @ 95%CL (1 toyMC)
   68% expected band : 0.192502 < r < 0.192502
   95% expected band : 0.192502 < r < 0.192502
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1981449993
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.334847 +/- 0.00321395 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.334847 @ 95%CL (1 toyMC)
median expected limit: r < 0.334847 @ 95%CL (1 toyMC)
   68% expected band : 0.334847 < r < 0.334847
   95% expected band : 0.334847 < r < 0.334847
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1914211988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.199796 +/- 0.00351164 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.199796 @ 95%CL (1 toyMC)
median expected limit: r < 0.199796 @ 95%CL (1 toyMC)
   68% expected band : 0.199796 < r < 0.199796
   95% expected band : 0.199796 < r < 0.199796
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1756192487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.280657 +/- 0.00339008 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.280657 @ 95%CL (1 toyMC)
median expected limit: r < 0.280657 @ 95%CL (1 toyMC)
   68% expected band : 0.280657 < r < 0.280657
   95% expected band : 0.280657 < r < 0.280657
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 99264794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.352742 +/- 0.00348604 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.352742 @ 95%CL (1 toyMC)
median expected limit: r < 0.352742 @ 95%CL (1 toyMC)
   68% expected band : 0.352742 < r < 0.352742
   95% expected band : 0.352742 < r < 0.352742
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1327092995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.279186 +/- 0.00268771 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.279186 @ 95%CL (1 toyMC)
median expected limit: r < 0.279186 @ 95%CL (1 toyMC)
   68% expected band : 0.279186 < r < 0.279186
   95% expected band : 0.279186 < r < 0.279186
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 318129924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.467401 +/- 0.00255174 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.467401 @ 95%CL (1 toyMC)
median expected limit: r < 0.467401 @ 95%CL (1 toyMC)
   68% expected band : 0.467401 < r < 0.467401
   95% expected band : 0.467401 < r < 0.467401
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1158032036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.230781 +/- 0.00321105 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.230781 @ 95%CL (1 toyMC)
median expected limit: r < 0.230781 @ 95%CL (1 toyMC)
   68% expected band : 0.230781 < r < 0.230781
   95% expected band : 0.230781 < r < 0.230781
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 187088681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.296674 +/- 0.00369555 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.296674 @ 95%CL (1 toyMC)
median expected limit: r < 0.296674 @ 95%CL (1 toyMC)
   68% expected band : 0.296674 < r < 0.296674
   95% expected band : 0.296674 < r < 0.296674
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -614610468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.377324 +/- 0.00318425 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.377324 @ 95%CL (1 toyMC)
median expected limit: r < 0.377324 @ 95%CL (1 toyMC)
   68% expected band : 0.377324 < r < 0.377324
   95% expected band : 0.377324 < r < 0.377324
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1658486907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.306254 +/- 0.00267149 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.306254 @ 95%CL (1 toyMC)
median expected limit: r < 0.306254 @ 95%CL (1 toyMC)
   68% expected band : 0.306254 < r < 0.306254
   95% expected band : 0.306254 < r < 0.306254
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 994982599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.256038 +/- 0.00274505 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.256038 @ 95%CL (1 toyMC)
median expected limit: r < 0.256038 @ 95%CL (1 toyMC)
   68% expected band : 0.256038 < r < 0.256038
   95% expected band : 0.256038 < r < 0.256038
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1527384991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.195443 +/- 0.003805 @ 95% CL (99 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.195443 @ 95%CL (1 toyMC)
median expected limit: r < 0.195443 @ 95%CL (1 toyMC)
   68% expected band : 0.195443 < r < 0.195443
   95% expected band : 0.195443 < r < 0.195443
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 376347124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.498016 +/- 0.00212771 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.498016 @ 95%CL (1 toyMC)
median expected limit: r < 0.498016 @ 95%CL (1 toyMC)
   68% expected band : 0.498016 < r < 0.498016
   95% expected band : 0.498016 < r < 0.498016
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 287769759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.249068 +/- 0.00290605 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.249068 @ 95%CL (1 toyMC)
median expected limit: r < 0.249068 @ 95%CL (1 toyMC)
   68% expected band : 0.249068 < r < 0.249068
   95% expected band : 0.249068 < r < 0.249068
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -500314206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203199 +/- 0.00259198 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.203199 @ 95%CL (1 toyMC)
median expected limit: r < 0.203199 @ 95%CL (1 toyMC)
   68% expected band : 0.203199 < r < 0.203199
   95% expected band : 0.203199 < r < 0.203199
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1628616377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.280898 +/- 0.00330831 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.280898 @ 95%CL (1 toyMC)
median expected limit: r < 0.280898 @ 95%CL (1 toyMC)
   68% expected band : 0.280898 < r < 0.280898
   95% expected band : 0.280898 < r < 0.280898
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1621372962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.265184 +/- 0.00310681 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.265184 @ 95%CL (1 toyMC)
median expected limit: r < 0.265184 @ 95%CL (1 toyMC)
   68% expected band : 0.265184 < r < 0.265184
   95% expected band : 0.265184 < r < 0.265184
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -204060565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.28879 +/- 0.00309794 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.28879 @ 95%CL (1 toyMC)
median expected limit: r < 0.28879 @ 95%CL (1 toyMC)
   68% expected band : 0.28879 < r < 0.28879
   95% expected band : 0.28879 < r < 0.28879
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -802587195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.291195 +/- 0.0025708 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.291195 @ 95%CL (1 toyMC)
median expected limit: r < 0.291195 @ 95%CL (1 toyMC)
   68% expected band : 0.291195 < r < 0.291195
   95% expected band : 0.291195 < r < 0.291195
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -92282592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.260314 +/- 0.00362913 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.260314 @ 95%CL (1 toyMC)
median expected limit: r < 0.260314 @ 95%CL (1 toyMC)
   68% expected band : 0.260314 < r < 0.260314
   95% expected band : 0.260314 < r < 0.260314
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2040856753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.21071 +/- 0.00289257 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.21071 @ 95%CL (1 toyMC)
median expected limit: r < 0.21071 @ 95%CL (1 toyMC)
   68% expected band : 0.21071 < r < 0.21071
   95% expected band : 0.21071 < r < 0.21071
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 452305963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.405385 +/- 0.00202339 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.405385 @ 95%CL (1 toyMC)
median expected limit: r < 0.405385 @ 95%CL (1 toyMC)
   68% expected band : 0.405385 < r < 0.405385
   95% expected band : 0.405385 < r < 0.405385
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 7954781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.300668 +/- 0.00304622 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.300668 @ 95%CL (1 toyMC)
median expected limit: r < 0.300668 @ 95%CL (1 toyMC)
   68% expected band : 0.300668 < r < 0.300668
   95% expected band : 0.300668 < r < 0.300668
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1621126789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.391275 +/- 0.00209614 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.391275 @ 95%CL (1 toyMC)
median expected limit: r < 0.391275 @ 95%CL (1 toyMC)
   68% expected band : 0.391275 < r < 0.391275
   95% expected band : 0.391275 < r < 0.391275
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -927133916
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.3775 +/- 0.00323561 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.3775 @ 95%CL (1 toyMC)
median expected limit: r < 0.3775 @ 95%CL (1 toyMC)
   68% expected band : 0.3775 < r < 0.3775
   95% expected band : 0.3775 < r < 0.3775
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 177648196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.267849 +/- 0.00242048 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.267849 @ 95%CL (1 toyMC)
median expected limit: r < 0.267849 @ 95%CL (1 toyMC)
   68% expected band : 0.267849 < r < 0.267849
   95% expected band : 0.267849 < r < 0.267849
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 490025257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.306364 +/- 0.00357144 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.306364 @ 95%CL (1 toyMC)
median expected limit: r < 0.306364 @ 95%CL (1 toyMC)
   68% expected band : 0.306364 < r < 0.306364
   95% expected band : 0.306364 < r < 0.306364
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1715231668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.273249 +/- 0.00292214 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.273249 @ 95%CL (1 toyMC)
median expected limit: r < 0.273249 @ 95%CL (1 toyMC)
   68% expected band : 0.273249 < r < 0.273249
   95% expected band : 0.273249 < r < 0.273249
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -556978981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.270592 +/- 0.00286316 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.270592 @ 95%CL (1 toyMC)
median expected limit: r < 0.270592 @ 95%CL (1 toyMC)
   68% expected band : 0.270592 < r < 0.270592
   95% expected band : 0.270592 < r < 0.270592
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1669545136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.319967 +/- 0.00181911 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.319967 @ 95%CL (1 toyMC)
median expected limit: r < 0.319967 @ 95%CL (1 toyMC)
   68% expected band : 0.319967 < r < 0.319967
   95% expected band : 0.319967 < r < 0.319967
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1183428712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.435863 +/- 0.00282852 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.435863 @ 95%CL (1 toyMC)
median expected limit: r < 0.435863 @ 95%CL (1 toyMC)
   68% expected band : 0.435863 < r < 0.435863
   95% expected band : 0.435863 < r < 0.435863
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1123446392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.385148 +/- 0.00234774 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.385148 @ 95%CL (1 toyMC)
median expected limit: r < 0.385148 @ 95%CL (1 toyMC)
   68% expected band : 0.385148 < r < 0.385148
   95% expected band : 0.385148 < r < 0.385148
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2040720945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.360398 +/- 0.00239154 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.360398 @ 95%CL (1 toyMC)
median expected limit: r < 0.360398 @ 95%CL (1 toyMC)
   68% expected band : 0.360398 < r < 0.360398
   95% expected band : 0.360398 < r < 0.360398
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 725313126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.322574 +/- 0.0026282 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.322574 @ 95%CL (1 toyMC)
median expected limit: r < 0.322574 @ 95%CL (1 toyMC)
   68% expected band : 0.322574 < r < 0.322574
   95% expected band : 0.322574 < r < 0.322574
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -377123251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.298039 +/- 0.00266646 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.298039 @ 95%CL (1 toyMC)
median expected limit: r < 0.298039 @ 95%CL (1 toyMC)
   68% expected band : 0.298039 < r < 0.298039
   95% expected band : 0.298039 < r < 0.298039
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -602071211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.565518 +/- 0.00275128 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.565518 @ 95%CL (1 toyMC)
median expected limit: r < 0.565518 @ 95%CL (1 toyMC)
   68% expected band : 0.565518 < r < 0.565518
   95% expected band : 0.565518 < r < 0.565518
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1380759887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.359819 +/- 0.00305947 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.359819 @ 95%CL (1 toyMC)
median expected limit: r < 0.359819 @ 95%CL (1 toyMC)
   68% expected band : 0.359819 < r < 0.359819
   95% expected band : 0.359819 < r < 0.359819
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -549987554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.296464 +/- 0.00206936 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.296464 @ 95%CL (1 toyMC)
median expected limit: r < 0.296464 @ 95%CL (1 toyMC)
   68% expected band : 0.296464 < r < 0.296464
   95% expected band : 0.296464 < r < 0.296464
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -633038686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.294432 +/- 0.00286851 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.294432 @ 95%CL (1 toyMC)
median expected limit: r < 0.294432 @ 95%CL (1 toyMC)
   68% expected band : 0.294432 < r < 0.294432
   95% expected band : 0.294432 < r < 0.294432
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1460044879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.421638 +/- 0.00324359 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.421638 @ 95%CL (1 toyMC)
median expected limit: r < 0.421638 @ 95%CL (1 toyMC)
   68% expected band : 0.421638 < r < 0.421638
   95% expected band : 0.421638 < r < 0.421638
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1853564734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.25046 +/- 0.00281574 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.25046 @ 95%CL (1 toyMC)
median expected limit: r < 0.25046 @ 95%CL (1 toyMC)
   68% expected band : 0.25046 < r < 0.25046
   95% expected band : 0.25046 < r < 0.25046
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2147036706
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.248772 +/- 0.00320567 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.248772 @ 95%CL (1 toyMC)
median expected limit: r < 0.248772 @ 95%CL (1 toyMC)
   68% expected band : 0.248772 < r < 0.248772
   95% expected band : 0.248772 < r < 0.248772
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2069587185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.245403 +/- 0.00303157 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.245403 @ 95%CL (1 toyMC)
median expected limit: r < 0.245403 @ 95%CL (1 toyMC)
   68% expected band : 0.245403 < r < 0.245403
   95% expected band : 0.245403 < r < 0.245403
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 307804971
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.944907 +/- 0.00398157 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.944907 @ 95%CL (1 toyMC)
median expected limit: r < 0.944907 @ 95%CL (1 toyMC)
   68% expected band : 0.944907 < r < 0.944907
   95% expected band : 0.944907 < r < 0.944907
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1876927741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.965729 +/- 0.00424241 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.965729 @ 95%CL (1 toyMC)
median expected limit: r < 0.965729 @ 95%CL (1 toyMC)
   68% expected band : 0.965729 < r < 0.965729
   95% expected band : 0.965729 < r < 0.965729
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1970011380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08948 +/- 0.00427751 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.08948 @ 95%CL (1 toyMC)
median expected limit: r < 1.08948 @ 95%CL (1 toyMC)
   68% expected band : 1.08948 < r < 1.08948
   95% expected band : 1.08948 < r < 1.08948
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1287411636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.85263 +/- 0.00424834 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.85263 @ 95%CL (1 toyMC)
median expected limit: r < 0.85263 @ 95%CL (1 toyMC)
   68% expected band : 0.85263 < r < 0.85263
   95% expected band : 0.85263 < r < 0.85263
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 680563607
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01544 +/- 0.00414268 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.01544 @ 95%CL (1 toyMC)
median expected limit: r < 1.01544 @ 95%CL (1 toyMC)
   68% expected band : 1.01544 < r < 1.01544
   95% expected band : 1.01544 < r < 1.01544
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1308550731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22325 +/- 0.00402189 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.22325 @ 95%CL (1 toyMC)
median expected limit: r < 1.22325 @ 95%CL (1 toyMC)
   68% expected band : 1.22325 < r < 1.22325
   95% expected band : 1.22325 < r < 1.22325
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 43919511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.864817 +/- 0.00414057 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.864817 @ 95%CL (1 toyMC)
median expected limit: r < 0.864817 @ 95%CL (1 toyMC)
   68% expected band : 0.864817 < r < 0.864817
   95% expected band : 0.864817 < r < 0.864817
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -459800529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.882823 +/- 0.00458008 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.882823 @ 95%CL (1 toyMC)
median expected limit: r < 0.882823 @ 95%CL (1 toyMC)
   68% expected band : 0.882823 < r < 0.882823
   95% expected band : 0.882823 < r < 0.882823
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1562028730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.828211 +/- 0.00427406 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.828211 @ 95%CL (1 toyMC)
median expected limit: r < 0.828211 @ 95%CL (1 toyMC)
   68% expected band : 0.828211 < r < 0.828211
   95% expected band : 0.828211 < r < 0.828211
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1700533143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.959352 +/- 0.00453448 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.959352 @ 95%CL (1 toyMC)
median expected limit: r < 0.959352 @ 95%CL (1 toyMC)
   68% expected band : 0.959352 < r < 0.959352
   95% expected band : 0.959352 < r < 0.959352
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 669251175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17479 +/- 0.00438615 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.17479 @ 95%CL (1 toyMC)
median expected limit: r < 1.17479 @ 95%CL (1 toyMC)
   68% expected band : 1.17479 < r < 1.17479
   95% expected band : 1.17479 < r < 1.17479
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1426897453
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06829 +/- 0.00374461 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.06829 @ 95%CL (1 toyMC)
median expected limit: r < 1.06829 @ 95%CL (1 toyMC)
   68% expected band : 1.06829 < r < 1.06829
   95% expected band : 1.06829 < r < 1.06829
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1898710350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.962635 +/- 0.00424159 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.962635 @ 95%CL (1 toyMC)
median expected limit: r < 0.962635 @ 95%CL (1 toyMC)
   68% expected band : 0.962635 < r < 0.962635
   95% expected band : 0.962635 < r < 0.962635
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 511235455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07609 +/- 0.00446152 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.07609 @ 95%CL (1 toyMC)
median expected limit: r < 1.07609 @ 95%CL (1 toyMC)
   68% expected band : 1.07609 < r < 1.07609
   95% expected band : 1.07609 < r < 1.07609
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 842696732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03979 +/- 0.00383862 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.03979 @ 95%CL (1 toyMC)
median expected limit: r < 1.03979 @ 95%CL (1 toyMC)
   68% expected band : 1.03979 < r < 1.03979
   95% expected band : 1.03979 < r < 1.03979
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 308111954
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33913 +/- 0.00356452 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.33913 @ 95%CL (1 toyMC)
median expected limit: r < 1.33913 @ 95%CL (1 toyMC)
   68% expected band : 1.33913 < r < 1.33913
   95% expected band : 1.33913 < r < 1.33913
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 414820426
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03024 +/- 0.00668403 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.03024 @ 95%CL (1 toyMC)
median expected limit: r < 2.03024 @ 95%CL (1 toyMC)
   68% expected band : 2.03024 < r < 2.03024
   95% expected band : 2.03024 < r < 2.03024
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 603617840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28083 +/- 0.00489634 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.28083 @ 95%CL (1 toyMC)
median expected limit: r < 1.28083 @ 95%CL (1 toyMC)
   68% expected band : 1.28083 < r < 1.28083
   95% expected band : 1.28083 < r < 1.28083
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 845630825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.800943 +/- 0.00389594 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.800943 @ 95%CL (1 toyMC)
median expected limit: r < 0.800943 @ 95%CL (1 toyMC)
   68% expected band : 0.800943 < r < 0.800943
   95% expected band : 0.800943 < r < 0.800943
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1119824138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91322 +/- 0.00612044 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.91322 @ 95%CL (1 toyMC)
median expected limit: r < 1.91322 @ 95%CL (1 toyMC)
   68% expected band : 1.91322 < r < 1.91322
   95% expected band : 1.91322 < r < 1.91322
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 307456855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36329 +/- 0.00463244 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.36329 @ 95%CL (1 toyMC)
median expected limit: r < 1.36329 @ 95%CL (1 toyMC)
   68% expected band : 1.36329 < r < 1.36329
   95% expected band : 1.36329 < r < 1.36329
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -919887274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97879 +/- 0.00508216 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.97879 @ 95%CL (1 toyMC)
median expected limit: r < 1.97879 @ 95%CL (1 toyMC)
   68% expected band : 1.97879 < r < 1.97879
   95% expected band : 1.97879 < r < 1.97879
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -42971012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19065 +/- 0.00556233 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.19065 @ 95%CL (1 toyMC)
median expected limit: r < 1.19065 @ 95%CL (1 toyMC)
   68% expected band : 1.19065 < r < 1.19065
   95% expected band : 1.19065 < r < 1.19065
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1129579079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1287 +/- 0.00383421 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.1287 @ 95%CL (1 toyMC)
median expected limit: r < 1.1287 @ 95%CL (1 toyMC)
   68% expected band : 1.1287 < r < 1.1287
   95% expected band : 1.1287 < r < 1.1287
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -101124959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30589 +/- 0.00485426 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.30589 @ 95%CL (1 toyMC)
median expected limit: r < 1.30589 @ 95%CL (1 toyMC)
   68% expected band : 1.30589 < r < 1.30589
   95% expected band : 1.30589 < r < 1.30589
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -863060090
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04736 +/- 0.00466691 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.04736 @ 95%CL (1 toyMC)
median expected limit: r < 1.04736 @ 95%CL (1 toyMC)
   68% expected band : 1.04736 < r < 1.04736
   95% expected band : 1.04736 < r < 1.04736
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2106346640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.741153 +/- 0.00325838 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.741153 @ 95%CL (1 toyMC)
median expected limit: r < 0.741153 @ 95%CL (1 toyMC)
   68% expected band : 0.741153 < r < 0.741153
   95% expected band : 0.741153 < r < 0.741153
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1060301185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89865 +/- 0.00523881 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.89865 @ 95%CL (1 toyMC)
median expected limit: r < 1.89865 @ 95%CL (1 toyMC)
   68% expected band : 1.89865 < r < 1.89865
   95% expected band : 1.89865 < r < 1.89865
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1411597887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.964581 +/- 0.00455885 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.964581 @ 95%CL (1 toyMC)
median expected limit: r < 0.964581 @ 95%CL (1 toyMC)
   68% expected band : 0.964581 < r < 0.964581
   95% expected band : 0.964581 < r < 0.964581
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -811599511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18612 +/- 0.00338791 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.18612 @ 95%CL (1 toyMC)
median expected limit: r < 1.18612 @ 95%CL (1 toyMC)
   68% expected band : 1.18612 < r < 1.18612
   95% expected band : 1.18612 < r < 1.18612
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1947421233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76545 +/- 0.00476656 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.76545 @ 95%CL (1 toyMC)
median expected limit: r < 1.76545 @ 95%CL (1 toyMC)
   68% expected band : 1.76545 < r < 1.76545
   95% expected band : 1.76545 < r < 1.76545
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1273192197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80773 +/- 0.00415822 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.80773 @ 95%CL (1 toyMC)
median expected limit: r < 1.80773 @ 95%CL (1 toyMC)
   68% expected band : 1.80773 < r < 1.80773
   95% expected band : 1.80773 < r < 1.80773
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1579516075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51857 +/- 0.0050408 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.51857 @ 95%CL (1 toyMC)
median expected limit: r < 1.51857 @ 95%CL (1 toyMC)
   68% expected band : 1.51857 < r < 1.51857
   95% expected band : 1.51857 < r < 1.51857
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1752048435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28522 +/- 0.00560932 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.28522 @ 95%CL (1 toyMC)
median expected limit: r < 1.28522 @ 95%CL (1 toyMC)
   68% expected band : 1.28522 < r < 1.28522
   95% expected band : 1.28522 < r < 1.28522
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1739111208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.987241 +/- 0.0041301 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.987241 @ 95%CL (1 toyMC)
median expected limit: r < 0.987241 @ 95%CL (1 toyMC)
   68% expected band : 0.987241 < r < 0.987241
   95% expected band : 0.987241 < r < 0.987241
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -289996511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.898755 +/- 0.00342927 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.898755 @ 95%CL (1 toyMC)
median expected limit: r < 0.898755 @ 95%CL (1 toyMC)
   68% expected band : 0.898755 < r < 0.898755
   95% expected band : 0.898755 < r < 0.898755
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 862080198
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.775719 +/- 0.00320215 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.775719 @ 95%CL (1 toyMC)
median expected limit: r < 0.775719 @ 95%CL (1 toyMC)
   68% expected band : 0.775719 < r < 0.775719
   95% expected band : 0.775719 < r < 0.775719
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 274687051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.977589 +/- 0.00423576 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.977589 @ 95%CL (1 toyMC)
median expected limit: r < 0.977589 @ 95%CL (1 toyMC)
   68% expected band : 0.977589 < r < 0.977589
   95% expected band : 0.977589 < r < 0.977589
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1132891722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04568 +/- 0.0048552 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.04568 @ 95%CL (1 toyMC)
median expected limit: r < 1.04568 @ 95%CL (1 toyMC)
   68% expected band : 1.04568 < r < 1.04568
   95% expected band : 1.04568 < r < 1.04568
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1490458401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.803886 +/- 0.00452999 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.803886 @ 95%CL (1 toyMC)
median expected limit: r < 0.803886 @ 95%CL (1 toyMC)
   68% expected band : 0.803886 < r < 0.803886
   95% expected band : 0.803886 < r < 0.803886
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1282340855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76788 +/- 0.0039157 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.76788 @ 95%CL (1 toyMC)
median expected limit: r < 1.76788 @ 95%CL (1 toyMC)
   68% expected band : 1.76788 < r < 1.76788
   95% expected band : 1.76788 < r < 1.76788
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1067291945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42825 +/- 0.00483792 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.42825 @ 95%CL (1 toyMC)
median expected limit: r < 1.42825 @ 95%CL (1 toyMC)
   68% expected band : 1.42825 < r < 1.42825
   95% expected band : 1.42825 < r < 1.42825
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -149304560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14311 +/- 0.00349414 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.14311 @ 95%CL (1 toyMC)
median expected limit: r < 1.14311 @ 95%CL (1 toyMC)
   68% expected band : 1.14311 < r < 1.14311
   95% expected band : 1.14311 < r < 1.14311
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1864456869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.921757 +/- 0.00444599 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.921757 @ 95%CL (1 toyMC)
median expected limit: r < 0.921757 @ 95%CL (1 toyMC)
   68% expected band : 0.921757 < r < 0.921757
   95% expected band : 0.921757 < r < 0.921757
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -533881390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01036 +/- 0.00399024 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.01036 @ 95%CL (1 toyMC)
median expected limit: r < 1.01036 @ 95%CL (1 toyMC)
   68% expected band : 1.01036 < r < 1.01036
   95% expected band : 1.01036 < r < 1.01036
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1749061871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.963248 +/- 0.00411923 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.963248 @ 95%CL (1 toyMC)
median expected limit: r < 0.963248 @ 95%CL (1 toyMC)
   68% expected band : 0.963248 < r < 0.963248
   95% expected band : 0.963248 < r < 0.963248
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -808536955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28808 +/- 0.00466405 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.28808 @ 95%CL (1 toyMC)
median expected limit: r < 1.28808 @ 95%CL (1 toyMC)
   68% expected band : 1.28808 < r < 1.28808
   95% expected band : 1.28808 < r < 1.28808
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1817386465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89293 +/- 0.00510227 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.89293 @ 95%CL (1 toyMC)
median expected limit: r < 1.89293 @ 95%CL (1 toyMC)
   68% expected band : 1.89293 < r < 1.89293
   95% expected band : 1.89293 < r < 1.89293
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -431908764
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22453 +/- 0.00454543 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.22453 @ 95%CL (1 toyMC)
median expected limit: r < 1.22453 @ 95%CL (1 toyMC)
   68% expected band : 1.22453 < r < 1.22453
   95% expected band : 1.22453 < r < 1.22453
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1431445795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48395 +/- 0.00558271 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.48395 @ 95%CL (1 toyMC)
median expected limit: r < 1.48395 @ 95%CL (1 toyMC)
   68% expected band : 1.48395 < r < 1.48395
   95% expected band : 1.48395 < r < 1.48395
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -395569801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.64266 +/- 0.00531671 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.64266 @ 95%CL (1 toyMC)
median expected limit: r < 1.64266 @ 95%CL (1 toyMC)
   68% expected band : 1.64266 < r < 1.64266
   95% expected band : 1.64266 < r < 1.64266
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1849630769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16584 +/- 0.0045631 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.16584 @ 95%CL (1 toyMC)
median expected limit: r < 1.16584 @ 95%CL (1 toyMC)
   68% expected band : 1.16584 < r < 1.16584
   95% expected band : 1.16584 < r < 1.16584
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1350496715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69169 +/- 0.00841107 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.69169 @ 95%CL (1 toyMC)
median expected limit: r < 2.69169 @ 95%CL (1 toyMC)
   68% expected band : 2.69169 < r < 2.69169
   95% expected band : 2.69169 < r < 2.69169
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2106158265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57136 +/- 0.00505643 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.57136 @ 95%CL (1 toyMC)
median expected limit: r < 1.57136 @ 95%CL (1 toyMC)
   68% expected band : 1.57136 < r < 1.57136
   95% expected band : 1.57136 < r < 1.57136
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1648040836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08445 +/- 0.00470179 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.08445 @ 95%CL (1 toyMC)
median expected limit: r < 1.08445 @ 95%CL (1 toyMC)
   68% expected band : 1.08445 < r < 1.08445
   95% expected band : 1.08445 < r < 1.08445
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1299736286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4615 +/- 0.00597523 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.4615 @ 95%CL (1 toyMC)
median expected limit: r < 1.4615 @ 95%CL (1 toyMC)
   68% expected band : 1.4615 < r < 1.4615
   95% expected band : 1.4615 < r < 1.4615
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -146230224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57657 +/- 0.00442175 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.57657 @ 95%CL (1 toyMC)
median expected limit: r < 1.57657 @ 95%CL (1 toyMC)
   68% expected band : 1.57657 < r < 1.57657
   95% expected band : 1.57657 < r < 1.57657
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1241915863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.966472 +/- 0.00429566 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.966472 @ 95%CL (1 toyMC)
median expected limit: r < 0.966472 @ 95%CL (1 toyMC)
   68% expected band : 0.966472 < r < 0.966472
   95% expected band : 0.966472 < r < 0.966472
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -185089756
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08086 +/- 0.00376408 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.08086 @ 95%CL (1 toyMC)
median expected limit: r < 1.08086 @ 95%CL (1 toyMC)
   68% expected band : 1.08086 < r < 1.08086
   95% expected band : 1.08086 < r < 1.08086
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 864661028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23138 +/- 0.00548036 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.23138 @ 95%CL (1 toyMC)
median expected limit: r < 1.23138 @ 95%CL (1 toyMC)
   68% expected band : 1.23138 < r < 1.23138
   95% expected band : 1.23138 < r < 1.23138
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -122218477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92891 +/- 0.0048061 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.92891 @ 95%CL (1 toyMC)
median expected limit: r < 1.92891 @ 95%CL (1 toyMC)
   68% expected band : 1.92891 < r < 1.92891
   95% expected band : 1.92891 < r < 1.92891
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 429746855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14408 +/- 0.00439957 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.14408 @ 95%CL (1 toyMC)
median expected limit: r < 1.14408 @ 95%CL (1 toyMC)
   68% expected band : 1.14408 < r < 1.14408
   95% expected band : 1.14408 < r < 1.14408
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -876114243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01093 +/- 0.00391827 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.01093 @ 95%CL (1 toyMC)
median expected limit: r < 1.01093 @ 95%CL (1 toyMC)
   68% expected band : 1.01093 < r < 1.01093
   95% expected band : 1.01093 < r < 1.01093
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 22338391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16934 +/- 0.0039583 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.16934 @ 95%CL (1 toyMC)
median expected limit: r < 1.16934 @ 95%CL (1 toyMC)
   68% expected band : 1.16934 < r < 1.16934
   95% expected band : 1.16934 < r < 1.16934
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1090051473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.987908 +/- 0.00512081 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.987908 @ 95%CL (1 toyMC)
median expected limit: r < 0.987908 @ 95%CL (1 toyMC)
   68% expected band : 0.987908 < r < 0.987908
   95% expected band : 0.987908 < r < 0.987908
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1630360159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.840299 +/- 0.00362985 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.840299 @ 95%CL (1 toyMC)
median expected limit: r < 0.840299 @ 95%CL (1 toyMC)
   68% expected band : 0.840299 < r < 0.840299
   95% expected band : 0.840299 < r < 0.840299
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -645335208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14528 +/- 0.00281609 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.14528 @ 95%CL (1 toyMC)
median expected limit: r < 1.14528 @ 95%CL (1 toyMC)
   68% expected band : 1.14528 < r < 1.14528
   95% expected band : 1.14528 < r < 1.14528
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1817151668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.960655 +/- 0.0048051 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.960655 @ 95%CL (1 toyMC)
median expected limit: r < 0.960655 @ 95%CL (1 toyMC)
   68% expected band : 0.960655 < r < 0.960655
   95% expected band : 0.960655 < r < 0.960655
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -440258360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10091 +/- 0.00664168 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.10091 @ 95%CL (1 toyMC)
median expected limit: r < 2.10091 @ 95%CL (1 toyMC)
   68% expected band : 2.10091 < r < 2.10091
   95% expected band : 2.10091 < r < 2.10091
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 449539445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.847735 +/- 0.00516065 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.847735 @ 95%CL (1 toyMC)
median expected limit: r < 0.847735 @ 95%CL (1 toyMC)
   68% expected band : 0.847735 < r < 0.847735
   95% expected band : 0.847735 < r < 0.847735
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1020194094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77319 +/- 0.00537824 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.77319 @ 95%CL (1 toyMC)
median expected limit: r < 1.77319 @ 95%CL (1 toyMC)
   68% expected band : 1.77319 < r < 1.77319
   95% expected band : 1.77319 < r < 1.77319
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -54155687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50406 +/- 0.00435974 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.50406 @ 95%CL (1 toyMC)
median expected limit: r < 1.50406 @ 95%CL (1 toyMC)
   68% expected band : 1.50406 < r < 1.50406
   95% expected band : 1.50406 < r < 1.50406
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -635384667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18182 +/- 0.00485467 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.18182 @ 95%CL (1 toyMC)
median expected limit: r < 1.18182 @ 95%CL (1 toyMC)
   68% expected band : 1.18182 < r < 1.18182
   95% expected band : 1.18182 < r < 1.18182
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1768080364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09791 +/- 0.00447223 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.09791 @ 95%CL (1 toyMC)
median expected limit: r < 1.09791 @ 95%CL (1 toyMC)
   68% expected band : 1.09791 < r < 1.09791
   95% expected band : 1.09791 < r < 1.09791
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1933036071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35829 +/- 0.00453306 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.35829 @ 95%CL (1 toyMC)
median expected limit: r < 1.35829 @ 95%CL (1 toyMC)
   68% expected band : 1.35829 < r < 1.35829
   95% expected band : 1.35829 < r < 1.35829
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 693017979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.907722 +/- 0.00423325 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.907722 @ 95%CL (1 toyMC)
median expected limit: r < 0.907722 @ 95%CL (1 toyMC)
   68% expected band : 0.907722 < r < 0.907722
   95% expected band : 0.907722 < r < 0.907722
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1189652085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.769869 +/- 0.00378386 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.769869 @ 95%CL (1 toyMC)
median expected limit: r < 0.769869 @ 95%CL (1 toyMC)
   68% expected band : 0.769869 < r < 0.769869
   95% expected band : 0.769869 < r < 0.769869
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -201044521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.910902 +/- 0.00442949 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.910902 @ 95%CL (1 toyMC)
median expected limit: r < 0.910902 @ 95%CL (1 toyMC)
   68% expected band : 0.910902 < r < 0.910902
   95% expected band : 0.910902 < r < 0.910902
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -650395037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11951 +/- 0.00447056 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.11951 @ 95%CL (1 toyMC)
median expected limit: r < 1.11951 @ 95%CL (1 toyMC)
   68% expected band : 1.11951 < r < 1.11951
   95% expected band : 1.11951 < r < 1.11951
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1036807981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4251 +/- 0.00436243 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.4251 @ 95%CL (1 toyMC)
median expected limit: r < 1.4251 @ 95%CL (1 toyMC)
   68% expected band : 1.4251 < r < 1.4251
   95% expected band : 1.4251 < r < 1.4251
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -420781351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51204 +/- 0.00501413 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.51204 @ 95%CL (1 toyMC)
median expected limit: r < 1.51204 @ 95%CL (1 toyMC)
   68% expected band : 1.51204 < r < 1.51204
   95% expected band : 1.51204 < r < 1.51204
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1690273032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24538 +/- 0.00444732 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.24538 @ 95%CL (1 toyMC)
median expected limit: r < 1.24538 @ 95%CL (1 toyMC)
   68% expected band : 1.24538 < r < 1.24538
   95% expected band : 1.24538 < r < 1.24538
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1140190543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96563 +/- 0.00493015 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.96563 @ 95%CL (1 toyMC)
median expected limit: r < 1.96563 @ 95%CL (1 toyMC)
   68% expected band : 1.96563 < r < 1.96563
   95% expected band : 1.96563 < r < 1.96563
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -706116586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22654 +/- 0.00507523 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.22654 @ 95%CL (1 toyMC)
median expected limit: r < 1.22654 @ 95%CL (1 toyMC)
   68% expected band : 1.22654 < r < 1.22654
   95% expected band : 1.22654 < r < 1.22654
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -389034747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.17439 +/- 0.00694226 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.17439 @ 95%CL (1 toyMC)
median expected limit: r < 2.17439 @ 95%CL (1 toyMC)
   68% expected band : 2.17439 < r < 2.17439
   95% expected band : 2.17439 < r < 2.17439
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 185581290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.89193 +/- 0.00385722 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.89193 @ 95%CL (1 toyMC)
median expected limit: r < 0.89193 @ 95%CL (1 toyMC)
   68% expected band : 0.89193 < r < 0.89193
   95% expected band : 0.89193 < r < 0.89193
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1868217644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07785 +/- 0.00486262 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.07785 @ 95%CL (1 toyMC)
median expected limit: r < 1.07785 @ 95%CL (1 toyMC)
   68% expected band : 1.07785 < r < 1.07785
   95% expected band : 1.07785 < r < 1.07785
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1160183366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.8256 +/- 0.00449584 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.8256 @ 95%CL (1 toyMC)
median expected limit: r < 0.8256 @ 95%CL (1 toyMC)
   68% expected band : 0.8256 < r < 0.8256
   95% expected band : 0.8256 < r < 0.8256
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -376157244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.743451 +/- 0.00300629 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.743451 @ 95%CL (1 toyMC)
median expected limit: r < 0.743451 @ 95%CL (1 toyMC)
   68% expected band : 0.743451 < r < 0.743451
   95% expected band : 0.743451 < r < 0.743451
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -255009635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.822645 +/- 0.00513876 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.822645 @ 95%CL (1 toyMC)
median expected limit: r < 0.822645 @ 95%CL (1 toyMC)
   68% expected band : 0.822645 < r < 0.822645
   95% expected band : 0.822645 < r < 0.822645
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1261578936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.727693 +/- 0.00430422 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.727693 @ 95%CL (1 toyMC)
median expected limit: r < 0.727693 @ 95%CL (1 toyMC)
   68% expected band : 0.727693 < r < 0.727693
   95% expected band : 0.727693 < r < 0.727693
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1760157273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.797919 +/- 0.00325488 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.797919 @ 95%CL (1 toyMC)
median expected limit: r < 0.797919 @ 95%CL (1 toyMC)
   68% expected band : 0.797919 < r < 0.797919
   95% expected band : 0.797919 < r < 0.797919
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 571061782
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33145 +/- 0.00595589 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.33145 @ 95%CL (1 toyMC)
median expected limit: r < 1.33145 @ 95%CL (1 toyMC)
   68% expected band : 1.33145 < r < 1.33145
   95% expected band : 1.33145 < r < 1.33145
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1181406109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.814455 +/- 0.00346804 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.814455 @ 95%CL (1 toyMC)
median expected limit: r < 0.814455 @ 95%CL (1 toyMC)
   68% expected band : 0.814455 < r < 0.814455
   95% expected band : 0.814455 < r < 0.814455
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1021699530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.916852 +/- 0.00334415 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.916852 @ 95%CL (1 toyMC)
median expected limit: r < 0.916852 @ 95%CL (1 toyMC)
   68% expected band : 0.916852 < r < 0.916852
   95% expected band : 0.916852 < r < 0.916852
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -95001586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29186 +/- 0.00523765 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.29186 @ 95%CL (1 toyMC)
median expected limit: r < 1.29186 @ 95%CL (1 toyMC)
   68% expected band : 1.29186 < r < 1.29186
   95% expected band : 1.29186 < r < 1.29186
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 326606422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51855 +/- 0.00472068 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.51855 @ 95%CL (1 toyMC)
median expected limit: r < 1.51855 @ 95%CL (1 toyMC)
   68% expected band : 1.51855 < r < 1.51855
   95% expected band : 1.51855 < r < 1.51855
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 241589972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00826 +/- 0.00362209 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.00826 @ 95%CL (1 toyMC)
median expected limit: r < 1.00826 @ 95%CL (1 toyMC)
   68% expected band : 1.00826 < r < 1.00826
   95% expected band : 1.00826 < r < 1.00826
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 554141038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42867 +/- 0.00449615 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.42867 @ 95%CL (1 toyMC)
median expected limit: r < 1.42867 @ 95%CL (1 toyMC)
   68% expected band : 1.42867 < r < 1.42867
   95% expected band : 1.42867 < r < 1.42867
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1640233231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.787899 +/- 0.00420665 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.787899 @ 95%CL (1 toyMC)
median expected limit: r < 0.787899 @ 95%CL (1 toyMC)
   68% expected band : 0.787899 < r < 0.787899
   95% expected band : 0.787899 < r < 0.787899
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 497919505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.26869 +/- 0.0103551 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.26869 @ 95%CL (1 toyMC)
median expected limit: r < 6.26869 @ 95%CL (1 toyMC)
   68% expected band : 6.26869 < r < 6.26869
   95% expected band : 6.26869 < r < 6.26869
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1988855647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60515 +/- 0.0109779 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.60515 @ 95%CL (1 toyMC)
median expected limit: r < 4.60515 @ 95%CL (1 toyMC)
   68% expected band : 4.60515 < r < 4.60515
   95% expected band : 4.60515 < r < 4.60515
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -239599958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.32846 +/- 0.0124257 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.32846 @ 95%CL (1 toyMC)
median expected limit: r < 5.32846 @ 95%CL (1 toyMC)
   68% expected band : 5.32846 < r < 5.32846
   95% expected band : 5.32846 < r < 5.32846
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 68254903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06562 +/- 0.00875224 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.06562 @ 95%CL (1 toyMC)
median expected limit: r < 3.06562 @ 95%CL (1 toyMC)
   68% expected band : 3.06562 < r < 3.06562
   95% expected band : 3.06562 < r < 3.06562
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 603532227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.57141 +/- 0.0075361 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.57141 @ 95%CL (1 toyMC)
median expected limit: r < 3.57141 @ 95%CL (1 toyMC)
   68% expected band : 3.57141 < r < 3.57141
   95% expected band : 3.57141 < r < 3.57141
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -205111347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.20603 +/- 0.00834429 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.20603 @ 95%CL (1 toyMC)
median expected limit: r < 3.20603 @ 95%CL (1 toyMC)
   68% expected band : 3.20603 < r < 3.20603
   95% expected band : 3.20603 < r < 3.20603
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1716785153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.59053 +/- 0.0131894 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 4.59053 @ 95%CL (1 toyMC)
median expected limit: r < 4.59053 @ 95%CL (1 toyMC)
   68% expected band : 4.59053 < r < 4.59053
   95% expected band : 4.59053 < r < 4.59053
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -788504590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.39044 +/- 0.00681868 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.39044 @ 95%CL (1 toyMC)
median expected limit: r < 3.39044 @ 95%CL (1 toyMC)
   68% expected band : 3.39044 < r < 3.39044
   95% expected band : 3.39044 < r < 3.39044
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1227002180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.1293 +/- 0.00793488 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.1293 @ 95%CL (1 toyMC)
median expected limit: r < 3.1293 @ 95%CL (1 toyMC)
   68% expected band : 3.1293 < r < 3.1293
   95% expected band : 3.1293 < r < 3.1293
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 740341897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.77547 +/- 0.0118256 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.77547 @ 95%CL (1 toyMC)
median expected limit: r < 5.77547 @ 95%CL (1 toyMC)
   68% expected band : 5.77547 < r < 5.77547
   95% expected band : 5.77547 < r < 5.77547
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1241224355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.39722 +/- 0.00882826 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.39722 @ 95%CL (1 toyMC)
median expected limit: r < 3.39722 @ 95%CL (1 toyMC)
   68% expected band : 3.39722 < r < 3.39722
   95% expected band : 3.39722 < r < 3.39722
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2131671089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.17838 +/- 0.00923584 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.17838 @ 95%CL (1 toyMC)
median expected limit: r < 3.17838 @ 95%CL (1 toyMC)
   68% expected band : 3.17838 < r < 3.17838
   95% expected band : 3.17838 < r < 3.17838
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2137805659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.29201 +/- 0.0149467 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.29201 @ 95%CL (1 toyMC)
median expected limit: r < 9.29201 @ 95%CL (1 toyMC)
   68% expected band : 9.29201 < r < 9.29201
   95% expected band : 9.29201 < r < 9.29201
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -134409317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.859 +/- 0.00840185 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.859 @ 95%CL (1 toyMC)
median expected limit: r < 2.859 @ 95%CL (1 toyMC)
   68% expected band : 2.859 < r < 2.859
   95% expected band : 2.859 < r < 2.859
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1384361009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.82295 +/- 0.0104949 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.82295 @ 95%CL (1 toyMC)
median expected limit: r < 4.82295 @ 95%CL (1 toyMC)
   68% expected band : 4.82295 < r < 4.82295
   95% expected band : 4.82295 < r < 4.82295
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1657245252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65025 +/- 0.00786589 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.65025 @ 95%CL (1 toyMC)
median expected limit: r < 2.65025 @ 95%CL (1 toyMC)
   68% expected band : 2.65025 < r < 2.65025
   95% expected band : 2.65025 < r < 2.65025
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1358895576
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.80456 +/- 0.0081857 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 3.80456 @ 95%CL (1 toyMC)
median expected limit: r < 3.80456 @ 95%CL (1 toyMC)
   68% expected band : 3.80456 < r < 3.80456
   95% expected band : 3.80456 < r < 3.80456
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 166097247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.55411 +/- 0.00777647 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.55411 @ 95%CL (1 toyMC)
median expected limit: r < 3.55411 @ 95%CL (1 toyMC)
   68% expected band : 3.55411 < r < 3.55411
   95% expected band : 3.55411 < r < 3.55411
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 50492041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.57026 +/- 0.00765207 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 4.57026 @ 95%CL (1 toyMC)
median expected limit: r < 4.57026 @ 95%CL (1 toyMC)
   68% expected band : 4.57026 < r < 4.57026
   95% expected band : 4.57026 < r < 4.57026
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1155112567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.22772 +/- 0.00849561 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.22772 @ 95%CL (1 toyMC)
median expected limit: r < 3.22772 @ 95%CL (1 toyMC)
   68% expected band : 3.22772 < r < 3.22772
   95% expected band : 3.22772 < r < 3.22772
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1868410698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.38175 +/- 0.00605789 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.38175 @ 95%CL (1 toyMC)
median expected limit: r < 2.38175 @ 95%CL (1 toyMC)
   68% expected band : 2.38175 < r < 2.38175
   95% expected band : 2.38175 < r < 2.38175
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1132326662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.80255 +/- 0.0073395 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.80255 @ 95%CL (1 toyMC)
median expected limit: r < 2.80255 @ 95%CL (1 toyMC)
   68% expected band : 2.80255 < r < 2.80255
   95% expected band : 2.80255 < r < 2.80255
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -282125314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.80033 +/- 0.0116007 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.80033 @ 95%CL (1 toyMC)
median expected limit: r < 6.80033 @ 95%CL (1 toyMC)
   68% expected band : 6.80033 < r < 6.80033
   95% expected band : 6.80033 < r < 6.80033
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1759482043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.93117 +/- 0.00750426 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.93117 @ 95%CL (1 toyMC)
median expected limit: r < 3.93117 @ 95%CL (1 toyMC)
   68% expected band : 3.93117 < r < 3.93117
   95% expected band : 3.93117 < r < 3.93117
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1950275481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.6852 +/- 0.0108867 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.6852 @ 95%CL (1 toyMC)
median expected limit: r < 3.6852 @ 95%CL (1 toyMC)
   68% expected band : 3.6852 < r < 3.6852
   95% expected band : 3.6852 < r < 3.6852
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1780120478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.12421 +/- 0.00578196 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.12421 @ 95%CL (1 toyMC)
median expected limit: r < 4.12421 @ 95%CL (1 toyMC)
   68% expected band : 4.12421 < r < 4.12421
   95% expected band : 4.12421 < r < 4.12421
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1494249919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.07212 +/- 0.00812527 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 4.07212 @ 95%CL (1 toyMC)
median expected limit: r < 4.07212 @ 95%CL (1 toyMC)
   68% expected band : 4.07212 < r < 4.07212
   95% expected band : 4.07212 < r < 4.07212
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1139862558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.88303 +/- 0.0097948 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.88303 @ 95%CL (1 toyMC)
median expected limit: r < 4.88303 @ 95%CL (1 toyMC)
   68% expected band : 4.88303 < r < 4.88303
   95% expected band : 4.88303 < r < 4.88303
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 703120614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.32698 +/- 0.0117635 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.32698 @ 95%CL (1 toyMC)
median expected limit: r < 5.32698 @ 95%CL (1 toyMC)
   68% expected band : 5.32698 < r < 5.32698
   95% expected band : 5.32698 < r < 5.32698
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -722265857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.27113 +/- 0.00739594 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.27113 @ 95%CL (1 toyMC)
median expected limit: r < 5.27113 @ 95%CL (1 toyMC)
   68% expected band : 5.27113 < r < 5.27113
   95% expected band : 5.27113 < r < 5.27113
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1507713556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.91881 +/- 0.00796597 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.91881 @ 95%CL (1 toyMC)
median expected limit: r < 2.91881 @ 95%CL (1 toyMC)
   68% expected band : 2.91881 < r < 2.91881
   95% expected band : 2.91881 < r < 2.91881
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 51873253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.98617 +/- 0.00919629 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.98617 @ 95%CL (1 toyMC)
median expected limit: r < 3.98617 @ 95%CL (1 toyMC)
   68% expected band : 3.98617 < r < 3.98617
   95% expected band : 3.98617 < r < 3.98617
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 133082634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.19057 +/- 0.00824597 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.19057 @ 95%CL (1 toyMC)
median expected limit: r < 5.19057 @ 95%CL (1 toyMC)
   68% expected band : 5.19057 < r < 5.19057
   95% expected band : 5.19057 < r < 5.19057
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 954413837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36894 +/- 0.00659573 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.36894 @ 95%CL (1 toyMC)
median expected limit: r < 2.36894 @ 95%CL (1 toyMC)
   68% expected band : 2.36894 < r < 2.36894
   95% expected band : 2.36894 < r < 2.36894
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2108078434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.01344 +/- 0.0093894 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.01344 @ 95%CL (1 toyMC)
median expected limit: r < 3.01344 @ 95%CL (1 toyMC)
   68% expected band : 3.01344 < r < 3.01344
   95% expected band : 3.01344 < r < 3.01344
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1539246602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.59701 +/- 0.0106197 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.59701 @ 95%CL (1 toyMC)
median expected limit: r < 5.59701 @ 95%CL (1 toyMC)
   68% expected band : 5.59701 < r < 5.59701
   95% expected band : 5.59701 < r < 5.59701
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1764705588
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.03956 +/- 0.00867437 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.03956 @ 95%CL (1 toyMC)
median expected limit: r < 3.03956 @ 95%CL (1 toyMC)
   68% expected band : 3.03956 < r < 3.03956
   95% expected band : 3.03956 < r < 3.03956
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1270669520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.46497 +/- 0.00905239 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.46497 @ 95%CL (1 toyMC)
median expected limit: r < 3.46497 @ 95%CL (1 toyMC)
   68% expected band : 3.46497 < r < 3.46497
   95% expected band : 3.46497 < r < 3.46497
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -530854464
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.90161 +/- 0.0102364 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.90161 @ 95%CL (1 toyMC)
median expected limit: r < 3.90161 @ 95%CL (1 toyMC)
   68% expected band : 3.90161 < r < 3.90161
   95% expected band : 3.90161 < r < 3.90161
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1345045029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69185 +/- 0.00764709 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.69185 @ 95%CL (1 toyMC)
median expected limit: r < 2.69185 @ 95%CL (1 toyMC)
   68% expected band : 2.69185 < r < 2.69185
   95% expected band : 2.69185 < r < 2.69185
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -248147852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.64529 +/- 0.00723105 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.64529 @ 95%CL (1 toyMC)
median expected limit: r < 2.64529 @ 95%CL (1 toyMC)
   68% expected band : 2.64529 < r < 2.64529
   95% expected band : 2.64529 < r < 2.64529
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -719403142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.63849 +/- 0.00861205 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.63849 @ 95%CL (1 toyMC)
median expected limit: r < 4.63849 @ 95%CL (1 toyMC)
   68% expected band : 4.63849 < r < 4.63849
   95% expected band : 4.63849 < r < 4.63849
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2034671233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.21547 +/- 0.00690034 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.21547 @ 95%CL (1 toyMC)
median expected limit: r < 4.21547 @ 95%CL (1 toyMC)
   68% expected band : 4.21547 < r < 4.21547
   95% expected band : 4.21547 < r < 4.21547
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -364842303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75616 +/- 0.00924796 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 2.75616 @ 95%CL (1 toyMC)
median expected limit: r < 2.75616 @ 95%CL (1 toyMC)
   68% expected band : 2.75616 < r < 2.75616
   95% expected band : 2.75616 < r < 2.75616
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1541063180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.56043 +/- 0.012624 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.56043 @ 95%CL (1 toyMC)
median expected limit: r < 7.56043 @ 95%CL (1 toyMC)
   68% expected band : 7.56043 < r < 7.56043
   95% expected band : 7.56043 < r < 7.56043
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2110827448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.46555 +/- 0.00837508 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.46555 @ 95%CL (1 toyMC)
median expected limit: r < 3.46555 @ 95%CL (1 toyMC)
   68% expected band : 3.46555 < r < 3.46555
   95% expected band : 3.46555 < r < 3.46555
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1392932651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90867 +/- 0.0125216 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.90867 @ 95%CL (1 toyMC)
median expected limit: r < 4.90867 @ 95%CL (1 toyMC)
   68% expected band : 4.90867 < r < 4.90867
   95% expected band : 4.90867 < r < 4.90867
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1442695316
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.35826 +/- 0.0108252 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.35826 @ 95%CL (1 toyMC)
median expected limit: r < 3.35826 @ 95%CL (1 toyMC)
   68% expected band : 3.35826 < r < 3.35826
   95% expected band : 3.35826 < r < 3.35826
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 66659588
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70235 +/- 0.0089247 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.70235 @ 95%CL (1 toyMC)
median expected limit: r < 2.70235 @ 95%CL (1 toyMC)
   68% expected band : 2.70235 < r < 2.70235
   95% expected band : 2.70235 < r < 2.70235
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1212790393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.77896 +/- 0.00884031 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.77896 @ 95%CL (1 toyMC)
median expected limit: r < 3.77896 @ 95%CL (1 toyMC)
   68% expected band : 3.77896 < r < 3.77896
   95% expected band : 3.77896 < r < 3.77896
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2143189831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87112 +/- 0.0068533 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.87112 @ 95%CL (1 toyMC)
median expected limit: r < 2.87112 @ 95%CL (1 toyMC)
   68% expected band : 2.87112 < r < 2.87112
   95% expected band : 2.87112 < r < 2.87112
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1006679077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4947 +/- 0.00925323 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.4947 @ 95%CL (1 toyMC)
median expected limit: r < 3.4947 @ 95%CL (1 toyMC)
   68% expected band : 3.4947 < r < 3.4947
   95% expected band : 3.4947 < r < 3.4947
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 495267666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.35657 +/- 0.00776751 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.35657 @ 95%CL (1 toyMC)
median expected limit: r < 3.35657 @ 95%CL (1 toyMC)
   68% expected band : 3.35657 < r < 3.35657
   95% expected band : 3.35657 < r < 3.35657
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -451657020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.09084 +/- 0.0066709 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.09084 @ 95%CL (1 toyMC)
median expected limit: r < 3.09084 @ 95%CL (1 toyMC)
   68% expected band : 3.09084 < r < 3.09084
   95% expected band : 3.09084 < r < 3.09084
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 925524612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.37771 +/- 0.00858037 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.37771 @ 95%CL (1 toyMC)
median expected limit: r < 3.37771 @ 95%CL (1 toyMC)
   68% expected band : 3.37771 < r < 3.37771
   95% expected band : 3.37771 < r < 3.37771
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -601722106
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9253 +/- 0.0111818 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.9253 @ 95%CL (1 toyMC)
median expected limit: r < 3.9253 @ 95%CL (1 toyMC)
   68% expected band : 3.9253 < r < 3.9253
   95% expected band : 3.9253 < r < 3.9253
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1930833721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44675 +/- 0.0072162 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.44675 @ 95%CL (1 toyMC)
median expected limit: r < 2.44675 @ 95%CL (1 toyMC)
   68% expected band : 2.44675 < r < 2.44675
   95% expected band : 2.44675 < r < 2.44675
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -733947552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.68059 +/- 0.0114555 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.68059 @ 95%CL (1 toyMC)
median expected limit: r < 4.68059 @ 95%CL (1 toyMC)
   68% expected band : 4.68059 < r < 4.68059
   95% expected band : 4.68059 < r < 4.68059
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -871625594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.40834 +/- 0.006266 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.40834 @ 95%CL (1 toyMC)
median expected limit: r < 3.40834 @ 95%CL (1 toyMC)
   68% expected band : 3.40834 < r < 3.40834
   95% expected band : 3.40834 < r < 3.40834
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -935483253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49418 +/- 0.00855537 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.49418 @ 95%CL (1 toyMC)
median expected limit: r < 3.49418 @ 95%CL (1 toyMC)
   68% expected band : 3.49418 < r < 3.49418
   95% expected band : 3.49418 < r < 3.49418
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -175675768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.83743 +/- 0.0132953 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.83743 @ 95%CL (1 toyMC)
median expected limit: r < 5.83743 @ 95%CL (1 toyMC)
   68% expected band : 5.83743 < r < 5.83743
   95% expected band : 5.83743 < r < 5.83743
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1704045063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.03436 +/- 0.00697315 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.03436 @ 95%CL (1 toyMC)
median expected limit: r < 3.03436 @ 95%CL (1 toyMC)
   68% expected band : 3.03436 < r < 3.03436
   95% expected band : 3.03436 < r < 3.03436
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1033676069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.01478 +/- 0.00839945 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.01478 @ 95%CL (1 toyMC)
median expected limit: r < 3.01478 @ 95%CL (1 toyMC)
   68% expected band : 3.01478 < r < 3.01478
   95% expected band : 3.01478 < r < 3.01478
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -536864199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.54943 +/- 0.0098314 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.54943 @ 95%CL (1 toyMC)
median expected limit: r < 3.54943 @ 95%CL (1 toyMC)
   68% expected band : 3.54943 < r < 3.54943
   95% expected band : 3.54943 < r < 3.54943
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 137509758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.34294 +/- 0.0104518 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.34294 @ 95%CL (1 toyMC)
median expected limit: r < 7.34294 @ 95%CL (1 toyMC)
   68% expected band : 7.34294 < r < 7.34294
   95% expected band : 7.34294 < r < 7.34294
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1930799357
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.35977 +/- 0.00752431 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.35977 @ 95%CL (1 toyMC)
median expected limit: r < 3.35977 @ 95%CL (1 toyMC)
   68% expected band : 3.35977 < r < 3.35977
   95% expected band : 3.35977 < r < 3.35977
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -773521358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.95159 +/- 0.00885104 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.95159 @ 95%CL (1 toyMC)
median expected limit: r < 4.95159 @ 95%CL (1 toyMC)
   68% expected band : 4.95159 < r < 4.95159
   95% expected band : 4.95159 < r < 4.95159
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -26732338
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.026 +/- 0.00705866 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.026 @ 95%CL (1 toyMC)
median expected limit: r < 3.026 @ 95%CL (1 toyMC)
   68% expected band : 3.026 < r < 3.026
   95% expected band : 3.026 < r < 3.026
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -519356098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.67616 +/- 0.00966632 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.67616 @ 95%CL (1 toyMC)
median expected limit: r < 4.67616 @ 95%CL (1 toyMC)
   68% expected band : 4.67616 < r < 4.67616
   95% expected band : 4.67616 < r < 4.67616
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -133738876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.47039 +/- 0.00982406 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.47039 @ 95%CL (1 toyMC)
median expected limit: r < 3.47039 @ 95%CL (1 toyMC)
   68% expected band : 3.47039 < r < 3.47039
   95% expected band : 3.47039 < r < 3.47039
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -590824821
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67164 +/- 0.00719223 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.67164 @ 95%CL (1 toyMC)
median expected limit: r < 3.67164 @ 95%CL (1 toyMC)
   68% expected band : 3.67164 < r < 3.67164
   95% expected band : 3.67164 < r < 3.67164
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1299143132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.27012 +/- 0.00639661 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.27012 @ 95%CL (1 toyMC)
median expected limit: r < 2.27012 @ 95%CL (1 toyMC)
   68% expected band : 2.27012 < r < 2.27012
   95% expected band : 2.27012 < r < 2.27012
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1929993164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.13113 +/- 0.0146096 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 5.13113 @ 95%CL (1 toyMC)
median expected limit: r < 5.13113 @ 95%CL (1 toyMC)
   68% expected band : 5.13113 < r < 5.13113
   95% expected band : 5.13113 < r < 5.13113
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -543584263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.78591 +/- 0.00782884 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.78591 @ 95%CL (1 toyMC)
median expected limit: r < 3.78591 @ 95%CL (1 toyMC)
   68% expected band : 3.78591 < r < 3.78591
   95% expected band : 3.78591 < r < 3.78591
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 304755878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.48373 +/- 0.0132976 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 4.48373 @ 95%CL (1 toyMC)
median expected limit: r < 4.48373 @ 95%CL (1 toyMC)
   68% expected band : 4.48373 < r < 4.48373
   95% expected band : 4.48373 < r < 4.48373
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 810277179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.97144 +/- 0.0123693 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.97144 @ 95%CL (1 toyMC)
median expected limit: r < 5.97144 @ 95%CL (1 toyMC)
   68% expected band : 5.97144 < r < 5.97144
   95% expected band : 5.97144 < r < 5.97144
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1242612619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.84289 +/- 0.0075782 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.84289 @ 95%CL (1 toyMC)
median expected limit: r < 3.84289 @ 95%CL (1 toyMC)
   68% expected band : 3.84289 < r < 3.84289
   95% expected band : 3.84289 < r < 3.84289
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1307712439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47706 +/- 0.00664822 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.47706 @ 95%CL (1 toyMC)
median expected limit: r < 2.47706 @ 95%CL (1 toyMC)
   68% expected band : 2.47706 < r < 2.47706
   95% expected band : 2.47706 < r < 2.47706
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1357900066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.44711 +/- 0.00958274 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.44711 @ 95%CL (1 toyMC)
median expected limit: r < 4.44711 @ 95%CL (1 toyMC)
   68% expected band : 4.44711 < r < 4.44711
   95% expected band : 4.44711 < r < 4.44711
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1652956414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85775 +/- 0.00736804 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.85775 @ 95%CL (1 toyMC)
median expected limit: r < 2.85775 @ 95%CL (1 toyMC)
   68% expected band : 2.85775 < r < 2.85775
   95% expected band : 2.85775 < r < 2.85775
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1462888980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.7734 +/- 0.00683603 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.7734 @ 95%CL (1 toyMC)
median expected limit: r < 2.7734 @ 95%CL (1 toyMC)
   68% expected band : 2.7734 < r < 2.7734
   95% expected band : 2.7734 < r < 2.7734
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1721450359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.407 +/- 0.011973 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.407 @ 95%CL (1 toyMC)
median expected limit: r < 6.407 @ 95%CL (1 toyMC)
   68% expected band : 6.407 < r < 6.407
   95% expected band : 6.407 < r < 6.407
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1988659403
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.1903 +/- 0.0105539 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.1903 @ 95%CL (1 toyMC)
median expected limit: r < 5.1903 @ 95%CL (1 toyMC)
   68% expected band : 5.1903 < r < 5.1903
   95% expected band : 5.1903 < r < 5.1903
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1956146959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.83341 +/- 0.0111616 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 4.83341 @ 95%CL (1 toyMC)
median expected limit: r < 4.83341 @ 95%CL (1 toyMC)
   68% expected band : 4.83341 < r < 4.83341
   95% expected band : 4.83341 < r < 4.83341
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 485719602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88325 +/- 0.00800961 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.88325 @ 95%CL (1 toyMC)
median expected limit: r < 2.88325 @ 95%CL (1 toyMC)
   68% expected band : 2.88325 < r < 2.88325
   95% expected band : 2.88325 < r < 2.88325
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 814682566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.14052 +/- 0.00862896 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.14052 @ 95%CL (1 toyMC)
median expected limit: r < 3.14052 @ 95%CL (1 toyMC)
   68% expected band : 3.14052 < r < 3.14052
   95% expected band : 3.14052 < r < 3.14052
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1872959677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.17414 +/- 0.0124583 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.17414 @ 95%CL (1 toyMC)
median expected limit: r < 6.17414 @ 95%CL (1 toyMC)
   68% expected band : 6.17414 < r < 6.17414
   95% expected band : 6.17414 < r < 6.17414
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1690814009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.00632 +/- 0.0083869 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.00632 @ 95%CL (1 toyMC)
median expected limit: r < 3.00632 @ 95%CL (1 toyMC)
   68% expected band : 3.00632 < r < 3.00632
   95% expected band : 3.00632 < r < 3.00632
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -698522978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.29369 +/- 0.0127498 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.29369 @ 95%CL (1 toyMC)
median expected limit: r < 6.29369 @ 95%CL (1 toyMC)
   68% expected band : 6.29369 < r < 6.29369
   95% expected band : 6.29369 < r < 6.29369
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 26578197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.79079 +/- 0.00830457 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.79079 @ 95%CL (1 toyMC)
median expected limit: r < 3.79079 @ 95%CL (1 toyMC)
   68% expected band : 3.79079 < r < 3.79079
   95% expected band : 3.79079 < r < 3.79079
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -562343810
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.34019 +/- 0.00917916 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.34019 @ 95%CL (1 toyMC)
median expected limit: r < 3.34019 @ 95%CL (1 toyMC)
   68% expected band : 3.34019 < r < 3.34019
   95% expected band : 3.34019 < r < 3.34019
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -951888628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.6777 +/- 0.00679264 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.6777 @ 95%CL (1 toyMC)
median expected limit: r < 2.6777 @ 95%CL (1 toyMC)
   68% expected band : 2.6777 < r < 2.6777
   95% expected band : 2.6777 < r < 2.6777
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1292804434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48532 +/- 0.00680651 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.48532 @ 95%CL (1 toyMC)
median expected limit: r < 2.48532 @ 95%CL (1 toyMC)
   68% expected band : 2.48532 < r < 2.48532
   95% expected band : 2.48532 < r < 2.48532
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -106809418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.16328 +/- 0.00739738 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.16328 @ 95%CL (1 toyMC)
median expected limit: r < 3.16328 @ 95%CL (1 toyMC)
   68% expected band : 3.16328 < r < 3.16328
   95% expected band : 3.16328 < r < 3.16328
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1820179150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.94542 +/- 0.00817717 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.94542 @ 95%CL (1 toyMC)
median expected limit: r < 2.94542 @ 95%CL (1 toyMC)
   68% expected band : 2.94542 < r < 2.94542
   95% expected band : 2.94542 < r < 2.94542
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1693490467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.46658 +/- 0.00857901 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.46658 @ 95%CL (1 toyMC)
median expected limit: r < 3.46658 @ 95%CL (1 toyMC)
   68% expected band : 3.46658 < r < 3.46658
   95% expected band : 3.46658 < r < 3.46658
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 782135953
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.61179 +/- 0.010007 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.61179 @ 95%CL (1 toyMC)
median expected limit: r < 4.61179 @ 95%CL (1 toyMC)
   68% expected band : 4.61179 < r < 4.61179
   95% expected band : 4.61179 < r < 4.61179
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1006194036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1273 +/- 0.00755085 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.1273 @ 95%CL (1 toyMC)
median expected limit: r < 4.1273 @ 95%CL (1 toyMC)
   68% expected band : 4.1273 < r < 4.1273
   95% expected band : 4.1273 < r < 4.1273
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1014163086
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.24477 +/- 0.0117069 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.24477 @ 95%CL (1 toyMC)
median expected limit: r < 5.24477 @ 95%CL (1 toyMC)
   68% expected band : 5.24477 < r < 5.24477
   95% expected band : 5.24477 < r < 5.24477
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 587762952
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.28512 +/- 0.00899096 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.28512 @ 95%CL (1 toyMC)
median expected limit: r < 6.28512 @ 95%CL (1 toyMC)
   68% expected band : 6.28512 < r < 6.28512
   95% expected band : 6.28512 < r < 6.28512
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1417436119
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5019 +/- 0.0205245 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.5019 @ 95%CL (1 toyMC)
median expected limit: r < 10.5019 @ 95%CL (1 toyMC)
   68% expected band : 10.5019 < r < 10.5019
   95% expected band : 10.5019 < r < 10.5019
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1489315628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.97966 +/- 0.0238158 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.97966 @ 95%CL (1 toyMC)
median expected limit: r < 9.97966 @ 95%CL (1 toyMC)
   68% expected band : 9.97966 < r < 9.97966
   95% expected band : 9.97966 < r < 9.97966
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1328786344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.09824 +/- 0.0173861 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 9.09824 @ 95%CL (1 toyMC)
median expected limit: r < 9.09824 @ 95%CL (1 toyMC)
   68% expected band : 9.09824 < r < 9.09824
   95% expected band : 9.09824 < r < 9.09824
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 23721241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1753 +/- 0.0197599 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.1753 @ 95%CL (1 toyMC)
median expected limit: r < 10.1753 @ 95%CL (1 toyMC)
   68% expected band : 10.1753 < r < 10.1753
   95% expected band : 10.1753 < r < 10.1753
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1259449169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8216 +/- 0.0161342 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.8216 @ 95%CL (1 toyMC)
median expected limit: r < 13.8216 @ 95%CL (1 toyMC)
   68% expected band : 13.8216 < r < 13.8216
   95% expected band : 13.8216 < r < 13.8216
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1183715509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.88552 +/- 0.0181634 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.88552 @ 95%CL (1 toyMC)
median expected limit: r < 7.88552 @ 95%CL (1 toyMC)
   68% expected band : 7.88552 < r < 7.88552
   95% expected band : 7.88552 < r < 7.88552
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1324305573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.6956 +/- 0.0157681 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.6956 @ 95%CL (1 toyMC)
median expected limit: r < 7.6956 @ 95%CL (1 toyMC)
   68% expected band : 7.6956 < r < 7.6956
   95% expected band : 7.6956 < r < 7.6956
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1223281485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3701 +/- 0.0192305 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 10.3701 @ 95%CL (1 toyMC)
median expected limit: r < 10.3701 @ 95%CL (1 toyMC)
   68% expected band : 10.3701 < r < 10.3701
   95% expected band : 10.3701 < r < 10.3701
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -573327556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.86931 +/- 0.0221917 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.86931 @ 95%CL (1 toyMC)
median expected limit: r < 8.86931 @ 95%CL (1 toyMC)
   68% expected band : 8.86931 < r < 8.86931
   95% expected band : 8.86931 < r < 8.86931
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 273352674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.52174 +/- 0.0174667 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.52174 @ 95%CL (1 toyMC)
median expected limit: r < 6.52174 @ 95%CL (1 toyMC)
   68% expected band : 6.52174 < r < 6.52174
   95% expected band : 6.52174 < r < 6.52174
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1682441916
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.78383 +/- 0.0163107 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.78383 @ 95%CL (1 toyMC)
median expected limit: r < 8.78383 @ 95%CL (1 toyMC)
   68% expected band : 8.78383 < r < 8.78383
   95% expected band : 8.78383 < r < 8.78383
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1229072920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1832 +/- 0.0183794 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.1832 @ 95%CL (1 toyMC)
median expected limit: r < 10.1832 @ 95%CL (1 toyMC)
   68% expected band : 10.1832 < r < 10.1832
   95% expected band : 10.1832 < r < 10.1832
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1588357580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4628 +/- 0.0123566 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 15.4628 @ 95%CL (1 toyMC)
median expected limit: r < 15.4628 @ 95%CL (1 toyMC)
   68% expected band : 15.4628 < r < 15.4628
   95% expected band : 15.4628 < r < 15.4628
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -795606460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.698 +/- 0.0167856 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.698 @ 95%CL (1 toyMC)
median expected limit: r < 7.698 @ 95%CL (1 toyMC)
   68% expected band : 7.698 < r < 7.698
   95% expected band : 7.698 < r < 7.698
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -925662635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.93057 +/- 0.0192022 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.93057 @ 95%CL (1 toyMC)
median expected limit: r < 7.93057 @ 95%CL (1 toyMC)
   68% expected band : 7.93057 < r < 7.93057
   95% expected band : 7.93057 < r < 7.93057
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1885215027
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3266 +/- 0.019874 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.3266 @ 95%CL (1 toyMC)
median expected limit: r < 13.3266 @ 95%CL (1 toyMC)
   68% expected band : 13.3266 < r < 13.3266
   95% expected band : 13.3266 < r < 13.3266
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1469893998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.95692 +/- 0.0220899 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.95692 @ 95%CL (1 toyMC)
median expected limit: r < 9.95692 @ 95%CL (1 toyMC)
   68% expected band : 9.95692 < r < 9.95692
   95% expected band : 9.95692 < r < 9.95692
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1897965867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6616 +/- 0.0191698 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 11.6616 @ 95%CL (1 toyMC)
median expected limit: r < 11.6616 @ 95%CL (1 toyMC)
   68% expected band : 11.6616 < r < 11.6616
   95% expected band : 11.6616 < r < 11.6616
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1420938527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.96145 +/- 0.0149539 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.96145 @ 95%CL (1 toyMC)
median expected limit: r < 6.96145 @ 95%CL (1 toyMC)
   68% expected band : 6.96145 < r < 6.96145
   95% expected band : 6.96145 < r < 6.96145
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2017928105
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.78712 +/- 0.0191039 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.78712 @ 95%CL (1 toyMC)
median expected limit: r < 6.78712 @ 95%CL (1 toyMC)
   68% expected band : 6.78712 < r < 6.78712
   95% expected band : 6.78712 < r < 6.78712
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1899216871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5969 +/- 0.0182501 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.5969 @ 95%CL (1 toyMC)
median expected limit: r < 12.5969 @ 95%CL (1 toyMC)
   68% expected band : 12.5969 < r < 12.5969
   95% expected band : 12.5969 < r < 12.5969
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1198556088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.68991 +/- 0.0197014 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.68991 @ 95%CL (1 toyMC)
median expected limit: r < 8.68991 @ 95%CL (1 toyMC)
   68% expected band : 8.68991 < r < 8.68991
   95% expected band : 8.68991 < r < 8.68991
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 372385171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0535 +/- 0.0193681 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.0535 @ 95%CL (1 toyMC)
median expected limit: r < 12.0535 @ 95%CL (1 toyMC)
   68% expected band : 12.0535 < r < 12.0535
   95% expected band : 12.0535 < r < 12.0535
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 420023574
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.62415 +/- 0.0178824 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.62415 @ 95%CL (1 toyMC)
median expected limit: r < 7.62415 @ 95%CL (1 toyMC)
   68% expected band : 7.62415 < r < 7.62415
   95% expected band : 7.62415 < r < 7.62415
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -176112982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2383 +/- 0.018228 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.2383 @ 95%CL (1 toyMC)
median expected limit: r < 13.2383 @ 95%CL (1 toyMC)
   68% expected band : 13.2383 < r < 13.2383
   95% expected band : 13.2383 < r < 13.2383
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1485496595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.62522 +/- 0.0181115 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.62522 @ 95%CL (1 toyMC)
median expected limit: r < 8.62522 @ 95%CL (1 toyMC)
   68% expected band : 8.62522 < r < 8.62522
   95% expected band : 8.62522 < r < 8.62522
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1185337526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.91126 +/- 0.0162121 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.91126 @ 95%CL (1 toyMC)
median expected limit: r < 7.91126 @ 95%CL (1 toyMC)
   68% expected band : 7.91126 < r < 7.91126
   95% expected band : 7.91126 < r < 7.91126
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 584043137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.85745 +/- 0.0168471 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.85745 @ 95%CL (1 toyMC)
median expected limit: r < 7.85745 @ 95%CL (1 toyMC)
   68% expected band : 7.85745 < r < 7.85745
   95% expected band : 7.85745 < r < 7.85745
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1435598276
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0699 +/- 0.0175773 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 13.0699 @ 95%CL (1 toyMC)
median expected limit: r < 13.0699 @ 95%CL (1 toyMC)
   68% expected band : 13.0699 < r < 13.0699
   95% expected band : 13.0699 < r < 13.0699
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -333489209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.06542 +/- 0.0194241 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.06542 @ 95%CL (1 toyMC)
median expected limit: r < 9.06542 @ 95%CL (1 toyMC)
   68% expected band : 9.06542 < r < 9.06542
   95% expected band : 9.06542 < r < 9.06542
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 264423127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.95312 +/- 0.0180445 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.95312 @ 95%CL (1 toyMC)
median expected limit: r < 7.95312 @ 95%CL (1 toyMC)
   68% expected band : 7.95312 < r < 7.95312
   95% expected band : 7.95312 < r < 7.95312
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1992087830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.87113 +/- 0.019392 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.87113 @ 95%CL (1 toyMC)
median expected limit: r < 7.87113 @ 95%CL (1 toyMC)
   68% expected band : 7.87113 < r < 7.87113
   95% expected band : 7.87113 < r < 7.87113
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1912478787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.77215 +/- 0.0155571 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.77215 @ 95%CL (1 toyMC)
median expected limit: r < 8.77215 @ 95%CL (1 toyMC)
   68% expected band : 8.77215 < r < 8.77215
   95% expected band : 8.77215 < r < 8.77215
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1010523496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1209 +/- 0.0189935 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 13.1209 @ 95%CL (1 toyMC)
median expected limit: r < 13.1209 @ 95%CL (1 toyMC)
   68% expected band : 13.1209 < r < 13.1209
   95% expected band : 13.1209 < r < 13.1209
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1911435244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1564 +/- 0.016579 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 13.1564 @ 95%CL (1 toyMC)
median expected limit: r < 13.1564 @ 95%CL (1 toyMC)
   68% expected band : 13.1564 < r < 13.1564
   95% expected band : 13.1564 < r < 13.1564
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1259839520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.73285 +/- 0.014081 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.73285 @ 95%CL (1 toyMC)
median expected limit: r < 8.73285 @ 95%CL (1 toyMC)
   68% expected band : 8.73285 < r < 8.73285
   95% expected band : 8.73285 < r < 8.73285
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -86946432
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4061 +/- 0.0200694 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.4061 @ 95%CL (1 toyMC)
median expected limit: r < 12.4061 @ 95%CL (1 toyMC)
   68% expected band : 12.4061 < r < 12.4061
   95% expected band : 12.4061 < r < 12.4061
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 119156519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3215 +/- 0.0172833 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.3215 @ 95%CL (1 toyMC)
median expected limit: r < 13.3215 @ 95%CL (1 toyMC)
   68% expected band : 13.3215 < r < 13.3215
   95% expected band : 13.3215 < r < 13.3215
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1184558682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2756 +/- 0.0156777 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 14.2756 @ 95%CL (1 toyMC)
median expected limit: r < 14.2756 @ 95%CL (1 toyMC)
   68% expected band : 14.2756 < r < 14.2756
   95% expected band : 14.2756 < r < 14.2756
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1612638183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.20989 +/- 0.0218668 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.20989 @ 95%CL (1 toyMC)
median expected limit: r < 9.20989 @ 95%CL (1 toyMC)
   68% expected band : 9.20989 < r < 9.20989
   95% expected band : 9.20989 < r < 9.20989
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1786987128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.82861 +/- 0.0226913 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.82861 @ 95%CL (1 toyMC)
median expected limit: r < 8.82861 @ 95%CL (1 toyMC)
   68% expected band : 8.82861 < r < 8.82861
   95% expected band : 8.82861 < r < 8.82861
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 861477266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0316 +/- 0.0197387 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 11.0316 @ 95%CL (1 toyMC)
median expected limit: r < 11.0316 @ 95%CL (1 toyMC)
   68% expected band : 11.0316 < r < 11.0316
   95% expected band : 11.0316 < r < 11.0316
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -533922134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.63443 +/- 0.018954 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.63443 @ 95%CL (1 toyMC)
median expected limit: r < 7.63443 @ 95%CL (1 toyMC)
   68% expected band : 7.63443 < r < 7.63443
   95% expected band : 7.63443 < r < 7.63443
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1490786117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.60889 +/- 0.0173204 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.60889 @ 95%CL (1 toyMC)
median expected limit: r < 7.60889 @ 95%CL (1 toyMC)
   68% expected band : 7.60889 < r < 7.60889
   95% expected band : 7.60889 < r < 7.60889
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 268977060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.94506 +/- 0.0148228 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.94506 @ 95%CL (1 toyMC)
median expected limit: r < 6.94506 @ 95%CL (1 toyMC)
   68% expected band : 6.94506 < r < 6.94506
   95% expected band : 6.94506 < r < 6.94506
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1944354777
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.94287 +/- 0.0181679 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.94287 @ 95%CL (1 toyMC)
median expected limit: r < 7.94287 @ 95%CL (1 toyMC)
   68% expected band : 7.94287 < r < 7.94287
   95% expected band : 7.94287 < r < 7.94287
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2053670077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.258 +/- 0.0194017 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.258 @ 95%CL (1 toyMC)
median expected limit: r < 11.258 @ 95%CL (1 toyMC)
   68% expected band : 11.258 < r < 11.258
   95% expected band : 11.258 < r < 11.258
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1424679940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79193 +/- 0.0150816 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.79193 @ 95%CL (1 toyMC)
median expected limit: r < 6.79193 @ 95%CL (1 toyMC)
   68% expected band : 6.79193 < r < 6.79193
   95% expected band : 6.79193 < r < 6.79193
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -241697835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.80773 +/- 0.0174358 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.80773 @ 95%CL (1 toyMC)
median expected limit: r < 6.80773 @ 95%CL (1 toyMC)
   68% expected band : 6.80773 < r < 6.80773
   95% expected band : 6.80773 < r < 6.80773
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -432548111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.70805 +/- 0.0139257 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.70805 @ 95%CL (1 toyMC)
median expected limit: r < 6.70805 @ 95%CL (1 toyMC)
   68% expected band : 6.70805 < r < 6.70805
   95% expected band : 6.70805 < r < 6.70805
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1320271281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87053 +/- 0.0156783 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.87053 @ 95%CL (1 toyMC)
median expected limit: r < 9.87053 @ 95%CL (1 toyMC)
   68% expected band : 9.87053 < r < 9.87053
   95% expected band : 9.87053 < r < 9.87053
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 277072809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.184 +/- 0.0187309 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.184 @ 95%CL (1 toyMC)
median expected limit: r < 10.184 @ 95%CL (1 toyMC)
   68% expected band : 10.184 < r < 10.184
   95% expected band : 10.184 < r < 10.184
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2030672268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.58594 +/- 0.016219 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.58594 @ 95%CL (1 toyMC)
median expected limit: r < 8.58594 @ 95%CL (1 toyMC)
   68% expected band : 8.58594 < r < 8.58594
   95% expected band : 8.58594 < r < 8.58594
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1294021506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6626 +/- 0.0209302 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 11.6626 @ 95%CL (1 toyMC)
median expected limit: r < 11.6626 @ 95%CL (1 toyMC)
   68% expected band : 11.6626 < r < 11.6626
   95% expected band : 11.6626 < r < 11.6626
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1443833313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8664 +/- 0.0187865 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 11.8664 @ 95%CL (1 toyMC)
median expected limit: r < 11.8664 @ 95%CL (1 toyMC)
   68% expected band : 11.8664 < r < 11.8664
   95% expected band : 11.8664 < r < 11.8664
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 66392039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9074 +/- 0.0212706 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 11.9074 @ 95%CL (1 toyMC)
median expected limit: r < 11.9074 @ 95%CL (1 toyMC)
   68% expected band : 11.9074 < r < 11.9074
   95% expected band : 11.9074 < r < 11.9074
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2096541182
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8093 +/- 0.020021 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 11.8093 @ 95%CL (1 toyMC)
median expected limit: r < 11.8093 @ 95%CL (1 toyMC)
   68% expected band : 11.8093 < r < 11.8093
   95% expected band : 11.8093 < r < 11.8093
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1886917951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.86173 +/- 0.0180143 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.86173 @ 95%CL (1 toyMC)
median expected limit: r < 7.86173 @ 95%CL (1 toyMC)
   68% expected band : 7.86173 < r < 7.86173
   95% expected band : 7.86173 < r < 7.86173
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1362362479
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8126 +/- 0.0180791 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 12.8126 @ 95%CL (1 toyMC)
median expected limit: r < 12.8126 @ 95%CL (1 toyMC)
   68% expected band : 12.8126 < r < 12.8126
   95% expected band : 12.8126 < r < 12.8126
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1647616004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9047 +/- 0.0146537 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.9047 @ 95%CL (1 toyMC)
median expected limit: r < 10.9047 @ 95%CL (1 toyMC)
   68% expected band : 10.9047 < r < 10.9047
   95% expected band : 10.9047 < r < 10.9047
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2042750543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.74845 +/- 0.0186998 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.74845 @ 95%CL (1 toyMC)
median expected limit: r < 8.74845 @ 95%CL (1 toyMC)
   68% expected band : 8.74845 < r < 8.74845
   95% expected band : 8.74845 < r < 8.74845
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 114909208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.67157 +/- 0.0169249 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.67157 @ 95%CL (1 toyMC)
median expected limit: r < 8.67157 @ 95%CL (1 toyMC)
   68% expected band : 8.67157 < r < 8.67157
   95% expected band : 8.67157 < r < 8.67157
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1800559402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8256 +/- 0.0158674 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.8256 @ 95%CL (1 toyMC)
median expected limit: r < 13.8256 @ 95%CL (1 toyMC)
   68% expected band : 13.8256 < r < 13.8256
   95% expected band : 13.8256 < r < 13.8256
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1529302397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9797 +/- 0.0109545 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 16.9797 @ 95%CL (1 toyMC)
median expected limit: r < 16.9797 @ 95%CL (1 toyMC)
   68% expected band : 16.9797 < r < 16.9797
   95% expected band : 16.9797 < r < 16.9797
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1222740494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.97018 +/- 0.0207007 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.97018 @ 95%CL (1 toyMC)
median expected limit: r < 9.97018 @ 95%CL (1 toyMC)
   68% expected band : 9.97018 < r < 9.97018
   95% expected band : 9.97018 < r < 9.97018
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1628911709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.83367 +/- 0.0113202 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 6.83367 @ 95%CL (1 toyMC)
median expected limit: r < 6.83367 @ 95%CL (1 toyMC)
   68% expected band : 6.83367 < r < 6.83367
   95% expected band : 6.83367 < r < 6.83367
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1180992847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.70958 +/- 0.0210206 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.70958 @ 95%CL (1 toyMC)
median expected limit: r < 9.70958 @ 95%CL (1 toyMC)
   68% expected band : 9.70958 < r < 9.70958
   95% expected band : 9.70958 < r < 9.70958
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2038761612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.89396 +/- 0.021362 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.89396 @ 95%CL (1 toyMC)
median expected limit: r < 8.89396 @ 95%CL (1 toyMC)
   68% expected band : 8.89396 < r < 8.89396
   95% expected band : 8.89396 < r < 8.89396
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1252291729
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.26765 +/- 0.0168669 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.26765 @ 95%CL (1 toyMC)
median expected limit: r < 9.26765 @ 95%CL (1 toyMC)
   68% expected band : 9.26765 < r < 9.26765
   95% expected band : 9.26765 < r < 9.26765
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 760018308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87722 +/- 0.0156952 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.87722 @ 95%CL (1 toyMC)
median expected limit: r < 9.87722 @ 95%CL (1 toyMC)
   68% expected band : 9.87722 < r < 9.87722
   95% expected band : 9.87722 < r < 9.87722
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 30683263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.88527 +/- 0.0213804 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.88527 @ 95%CL (1 toyMC)
median expected limit: r < 8.88527 @ 95%CL (1 toyMC)
   68% expected band : 8.88527 < r < 8.88527
   95% expected band : 8.88527 < r < 8.88527
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399946296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6153 +/- 0.0189498 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 11.6153 @ 95%CL (1 toyMC)
median expected limit: r < 11.6153 @ 95%CL (1 toyMC)
   68% expected band : 11.6153 < r < 11.6153
   95% expected band : 11.6153 < r < 11.6153
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1899944638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6845 +/- 0.0145253 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 13.6845 @ 95%CL (1 toyMC)
median expected limit: r < 13.6845 @ 95%CL (1 toyMC)
   68% expected band : 13.6845 < r < 13.6845
   95% expected band : 13.6845 < r < 13.6845
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1697430050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.83256 +/- 0.0221865 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.83256 @ 95%CL (1 toyMC)
median expected limit: r < 7.83256 @ 95%CL (1 toyMC)
   68% expected band : 7.83256 < r < 7.83256
   95% expected band : 7.83256 < r < 7.83256
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1193729398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.13234 +/- 0.0215648 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 9.13234 @ 95%CL (1 toyMC)
median expected limit: r < 9.13234 @ 95%CL (1 toyMC)
   68% expected band : 9.13234 < r < 9.13234
   95% expected band : 9.13234 < r < 9.13234
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1503058502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0008 +/- 0.0103613 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 16.0008 @ 95%CL (1 toyMC)
median expected limit: r < 16.0008 @ 95%CL (1 toyMC)
   68% expected band : 16.0008 < r < 16.0008
   95% expected band : 16.0008 < r < 16.0008
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1167292127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.82741 +/- 0.018317 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.82741 @ 95%CL (1 toyMC)
median expected limit: r < 7.82741 @ 95%CL (1 toyMC)
   68% expected band : 7.82741 < r < 7.82741
   95% expected band : 7.82741 < r < 7.82741
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1955011318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.628 +/- 0.0194187 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 12.628 @ 95%CL (1 toyMC)
median expected limit: r < 12.628 @ 95%CL (1 toyMC)
   68% expected band : 12.628 < r < 12.628
   95% expected band : 12.628 < r < 12.628
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -35879255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.87789 +/- 0.0178584 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.87789 @ 95%CL (1 toyMC)
median expected limit: r < 7.87789 @ 95%CL (1 toyMC)
   68% expected band : 7.87789 < r < 7.87789
   95% expected band : 7.87789 < r < 7.87789
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1928528225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2209 +/- 0.0165486 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 13.2209 @ 95%CL (1 toyMC)
median expected limit: r < 13.2209 @ 95%CL (1 toyMC)
   68% expected band : 13.2209 < r < 13.2209
   95% expected band : 13.2209 < r < 13.2209
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1200054845
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.951 +/- 0.0192026 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.951 @ 95%CL (1 toyMC)
median expected limit: r < 11.951 @ 95%CL (1 toyMC)
   68% expected band : 11.951 < r < 11.951
   95% expected band : 11.951 < r < 11.951
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2101165013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.8241 +/- 0.0191643 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 7.8241 @ 95%CL (1 toyMC)
median expected limit: r < 7.8241 @ 95%CL (1 toyMC)
   68% expected band : 7.8241 < r < 7.8241
   95% expected band : 7.8241 < r < 7.8241
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 917614047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.8334 +/- 0.0171485 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 6.8334 @ 95%CL (1 toyMC)
median expected limit: r < 6.8334 @ 95%CL (1 toyMC)
   68% expected band : 6.8334 < r < 6.8334
   95% expected band : 6.8334 < r < 6.8334
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1898633296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.69734 +/- 0.0205398 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.69734 @ 95%CL (1 toyMC)
median expected limit: r < 8.69734 @ 95%CL (1 toyMC)
   68% expected band : 8.69734 < r < 8.69734
   95% expected band : 8.69734 < r < 8.69734
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1846403545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.187 +/- 0.0214102 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.187 @ 95%CL (1 toyMC)
median expected limit: r < 11.187 @ 95%CL (1 toyMC)
   68% expected band : 11.187 < r < 11.187
   95% expected band : 11.187 < r < 11.187
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1017234893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.60682 +/- 0.017723 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.60682 @ 95%CL (1 toyMC)
median expected limit: r < 6.60682 @ 95%CL (1 toyMC)
   68% expected band : 6.60682 < r < 6.60682
   95% expected band : 6.60682 < r < 6.60682
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -11024941
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2519 +/- 0.0180194 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 12.2519 @ 95%CL (1 toyMC)
median expected limit: r < 12.2519 @ 95%CL (1 toyMC)
   68% expected band : 12.2519 < r < 12.2519
   95% expected band : 12.2519 < r < 12.2519
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -241796343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.98947 +/- 0.020136 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 8.98947 @ 95%CL (1 toyMC)
median expected limit: r < 8.98947 @ 95%CL (1 toyMC)
   68% expected band : 8.98947 < r < 8.98947
   95% expected band : 8.98947 < r < 8.98947
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1885758536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.92154 +/- 0.0149032 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.92154 @ 95%CL (1 toyMC)
median expected limit: r < 6.92154 @ 95%CL (1 toyMC)
   68% expected band : 6.92154 < r < 6.92154
   95% expected band : 6.92154 < r < 6.92154
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1007000806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.04137 +/- 0.019146 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.04137 @ 95%CL (1 toyMC)
median expected limit: r < 9.04137 @ 95%CL (1 toyMC)
   68% expected band : 9.04137 < r < 9.04137
   95% expected band : 9.04137 < r < 9.04137
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2040256674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.74471 +/- 0.0142098 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.74471 @ 95%CL (1 toyMC)
median expected limit: r < 6.74471 @ 95%CL (1 toyMC)
   68% expected band : 6.74471 < r < 6.74471
   95% expected band : 6.74471 < r < 6.74471
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2110872562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5067 +/- 0.0163846 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.5067 @ 95%CL (1 toyMC)
median expected limit: r < 12.5067 @ 95%CL (1 toyMC)
   68% expected band : 12.5067 < r < 12.5067
   95% expected band : 12.5067 < r < 12.5067
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1251777388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4298 +/- 0.0237436 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 10.4298 @ 95%CL (1 toyMC)
median expected limit: r < 10.4298 @ 95%CL (1 toyMC)
   68% expected band : 10.4298 < r < 10.4298
   95% expected band : 10.4298 < r < 10.4298
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1932423332
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8494 +/- 0.0120607 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 15.8494 @ 95%CL (1 toyMC)
median expected limit: r < 15.8494 @ 95%CL (1 toyMC)
   68% expected band : 15.8494 < r < 15.8494
   95% expected band : 15.8494 < r < 15.8494
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1615477311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.26207 +/- 0.0239589 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 9.26207 @ 95%CL (1 toyMC)
median expected limit: r < 9.26207 @ 95%CL (1 toyMC)
   68% expected band : 9.26207 < r < 9.26207
   95% expected band : 9.26207 < r < 9.26207
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1798633202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.92309 +/- 0.0150778 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.92309 @ 95%CL (1 toyMC)
median expected limit: r < 6.92309 @ 95%CL (1 toyMC)
   68% expected band : 6.92309 < r < 6.92309
   95% expected band : 6.92309 < r < 6.92309
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -560300627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8329 +/- 0.0185568 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 12.8329 @ 95%CL (1 toyMC)
median expected limit: r < 12.8329 @ 95%CL (1 toyMC)
   68% expected band : 12.8329 < r < 12.8329
   95% expected band : 12.8329 < r < 12.8329
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -516380860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4725 +/- 0.0191335 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 11.4725 @ 95%CL (1 toyMC)
median expected limit: r < 11.4725 @ 95%CL (1 toyMC)
   68% expected band : 11.4725 < r < 11.4725
   95% expected band : 11.4725 < r < 11.4725
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -881183261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.84766 +/- 0.0184236 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.84766 @ 95%CL (1 toyMC)
median expected limit: r < 7.84766 @ 95%CL (1 toyMC)
   68% expected band : 7.84766 < r < 7.84766
   95% expected band : 7.84766 < r < 7.84766
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1489108770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.78253 +/- 0.0136282 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.78253 @ 95%CL (1 toyMC)
median expected limit: r < 6.78253 @ 95%CL (1 toyMC)
   68% expected band : 6.78253 < r < 6.78253
   95% expected band : 6.78253 < r < 6.78253
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1471487945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.15774 +/- 0.0137925 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 7.15774 @ 95%CL (1 toyMC)
median expected limit: r < 7.15774 @ 95%CL (1 toyMC)
   68% expected band : 7.15774 < r < 7.15774
   95% expected band : 7.15774 < r < 7.15774
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 57645093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8532 +/- 0.0093286 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 15.8532 @ 95%CL (1 toyMC)
median expected limit: r < 15.8532 @ 95%CL (1 toyMC)
   68% expected band : 15.8532 < r < 15.8532
   95% expected band : 15.8532 < r < 15.8532
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1124817718
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6347 +/- 0.015282 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.6347 @ 95%CL (1 toyMC)
median expected limit: r < 10.6347 @ 95%CL (1 toyMC)
   68% expected band : 10.6347 < r < 10.6347
   95% expected band : 10.6347 < r < 10.6347
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1470490602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.45607 +/- 0.0133054 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.45607 @ 95%CL (1 toyMC)
median expected limit: r < 8.45607 @ 95%CL (1 toyMC)
   68% expected band : 8.45607 < r < 8.45607
   95% expected band : 8.45607 < r < 8.45607
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -564440402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.55466 +/- 0.0112414 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 5.55466 @ 95%CL (1 toyMC)
median expected limit: r < 5.55466 @ 95%CL (1 toyMC)
   68% expected band : 5.55466 < r < 5.55466
   95% expected band : 5.55466 < r < 5.55466
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 131697745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.68599 +/- 0.0133799 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.68599 @ 95%CL (1 toyMC)
median expected limit: r < 7.68599 @ 95%CL (1 toyMC)
   68% expected band : 7.68599 < r < 7.68599
   95% expected band : 7.68599 < r < 7.68599
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2013481367
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.36043 +/- 0.0117398 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.36043 @ 95%CL (1 toyMC)
median expected limit: r < 6.36043 @ 95%CL (1 toyMC)
   68% expected band : 6.36043 < r < 6.36043
   95% expected band : 6.36043 < r < 6.36043
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1385234511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0782 +/- 0.00943646 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 5.0782 @ 95%CL (1 toyMC)
median expected limit: r < 5.0782 @ 95%CL (1 toyMC)
   68% expected band : 5.0782 < r < 5.0782
   95% expected band : 5.0782 < r < 5.0782
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1448207217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.09395 +/- 0.0095776 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.09395 @ 95%CL (1 toyMC)
median expected limit: r < 5.09395 @ 95%CL (1 toyMC)
   68% expected band : 5.09395 < r < 5.09395
   95% expected band : 5.09395 < r < 5.09395
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1222048926
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.6756 +/- 0.0135654 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.6756 @ 95%CL (1 toyMC)
median expected limit: r < 7.6756 @ 95%CL (1 toyMC)
   68% expected band : 7.6756 < r < 7.6756
   95% expected band : 7.6756 < r < 7.6756
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1599289872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8941 +/- 0.0138067 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.8941 @ 95%CL (1 toyMC)
median expected limit: r < 10.8941 @ 95%CL (1 toyMC)
   68% expected band : 10.8941 < r < 10.8941
   95% expected band : 10.8941 < r < 10.8941
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2123938787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.47748 +/- 0.0108606 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 6.47748 @ 95%CL (1 toyMC)
median expected limit: r < 6.47748 @ 95%CL (1 toyMC)
   68% expected band : 6.47748 < r < 6.47748
   95% expected band : 6.47748 < r < 6.47748
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 158696966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.73952 +/- 0.0109248 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 5.73952 @ 95%CL (1 toyMC)
median expected limit: r < 5.73952 @ 95%CL (1 toyMC)
   68% expected band : 5.73952 < r < 5.73952
   95% expected band : 5.73952 < r < 5.73952
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1498317727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.84535 +/- 0.00849515 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 5.84535 @ 95%CL (1 toyMC)
median expected limit: r < 5.84535 @ 95%CL (1 toyMC)
   68% expected band : 5.84535 < r < 5.84535
   95% expected band : 5.84535 < r < 5.84535
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 381574978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.31266 +/- 0.00778995 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 4.31266 @ 95%CL (1 toyMC)
median expected limit: r < 4.31266 @ 95%CL (1 toyMC)
   68% expected band : 4.31266 < r < 4.31266
   95% expected band : 4.31266 < r < 4.31266
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 815612478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.36205 +/- 0.00983923 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 4.36205 @ 95%CL (1 toyMC)
median expected limit: r < 4.36205 @ 95%CL (1 toyMC)
   68% expected band : 4.36205 < r < 4.36205
   95% expected band : 4.36205 < r < 4.36205
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2083211430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.25981 +/- 0.0140285 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 9.25981 @ 95%CL (1 toyMC)
median expected limit: r < 9.25981 @ 95%CL (1 toyMC)
   68% expected band : 9.25981 < r < 9.25981
   95% expected band : 9.25981 < r < 9.25981
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1463882289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.71896 +/- 0.0101694 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 5.71896 @ 95%CL (1 toyMC)
median expected limit: r < 5.71896 @ 95%CL (1 toyMC)
   68% expected band : 5.71896 < r < 5.71896
   95% expected band : 5.71896 < r < 5.71896
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1319815545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.2607 +/- 0.0108273 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 7.2607 @ 95%CL (1 toyMC)
median expected limit: r < 7.2607 @ 95%CL (1 toyMC)
   68% expected band : 7.2607 < r < 7.2607
   95% expected band : 7.2607 < r < 7.2607
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1683220872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.37289 +/- 0.0110464 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.37289 @ 95%CL (1 toyMC)
median expected limit: r < 7.37289 @ 95%CL (1 toyMC)
   68% expected band : 7.37289 < r < 7.37289
   95% expected band : 7.37289 < r < 7.37289
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -497040549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.47122 +/- 0.0125837 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.47122 @ 95%CL (1 toyMC)
median expected limit: r < 6.47122 @ 95%CL (1 toyMC)
   68% expected band : 6.47122 < r < 6.47122
   95% expected band : 6.47122 < r < 6.47122
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2029432632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.76836 +/- 0.00857879 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.76836 @ 95%CL (1 toyMC)
median expected limit: r < 5.76836 @ 95%CL (1 toyMC)
   68% expected band : 5.76836 < r < 5.76836
   95% expected band : 5.76836 < r < 5.76836
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1901019379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.39475 +/- 0.00945393 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.39475 @ 95%CL (1 toyMC)
median expected limit: r < 4.39475 @ 95%CL (1 toyMC)
   68% expected band : 4.39475 < r < 4.39475
   95% expected band : 4.39475 < r < 4.39475
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -178811210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.62681 +/- 0.00918503 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 5.62681 @ 95%CL (1 toyMC)
median expected limit: r < 5.62681 @ 95%CL (1 toyMC)
   68% expected band : 5.62681 < r < 5.62681
   95% expected band : 5.62681 < r < 5.62681
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1259233539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.41697 +/- 0.0114333 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.41697 @ 95%CL (1 toyMC)
median expected limit: r < 7.41697 @ 95%CL (1 toyMC)
   68% expected band : 7.41697 < r < 7.41697
   95% expected band : 7.41697 < r < 7.41697
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1110872416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.13667 +/- 0.0119688 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.13667 @ 95%CL (1 toyMC)
median expected limit: r < 7.13667 @ 95%CL (1 toyMC)
   68% expected band : 7.13667 < r < 7.13667
   95% expected band : 7.13667 < r < 7.13667
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1125703902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9308 +/- 0.00514018 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.9308 @ 95%CL (1 toyMC)
median expected limit: r < 3.9308 @ 95%CL (1 toyMC)
   68% expected band : 3.9308 < r < 3.9308
   95% expected band : 3.9308 < r < 3.9308
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -60488721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.71673 +/- 0.0103597 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 6.71673 @ 95%CL (1 toyMC)
median expected limit: r < 6.71673 @ 95%CL (1 toyMC)
   68% expected band : 6.71673 < r < 6.71673
   95% expected band : 6.71673 < r < 6.71673
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1510755372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11705 +/- 0.00805973 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 5.11705 @ 95%CL (1 toyMC)
median expected limit: r < 5.11705 @ 95%CL (1 toyMC)
   68% expected band : 5.11705 < r < 5.11705
   95% expected band : 5.11705 < r < 5.11705
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1551141664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.14773 +/- 0.0102536 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.14773 @ 95%CL (1 toyMC)
median expected limit: r < 7.14773 @ 95%CL (1 toyMC)
   68% expected band : 7.14773 < r < 7.14773
   95% expected band : 7.14773 < r < 7.14773
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1555468051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8464 +/- 0.014445 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.8464 @ 95%CL (1 toyMC)
median expected limit: r < 11.8464 @ 95%CL (1 toyMC)
   68% expected band : 11.8464 < r < 11.8464
   95% expected band : 11.8464 < r < 11.8464
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2068553881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.43835 +/- 0.0119592 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.43835 @ 95%CL (1 toyMC)
median expected limit: r < 8.43835 @ 95%CL (1 toyMC)
   68% expected band : 8.43835 < r < 8.43835
   95% expected band : 8.43835 < r < 8.43835
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1889059046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.67709 +/- 0.0126583 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 7.67709 @ 95%CL (1 toyMC)
median expected limit: r < 7.67709 @ 95%CL (1 toyMC)
   68% expected band : 7.67709 < r < 7.67709
   95% expected band : 7.67709 < r < 7.67709
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -54238520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.71868 +/- 0.0132775 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 8.71868 @ 95%CL (1 toyMC)
median expected limit: r < 8.71868 @ 95%CL (1 toyMC)
   68% expected band : 8.71868 < r < 8.71868
   95% expected band : 8.71868 < r < 8.71868
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -701088189
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.92917 +/- 0.0113882 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 4.92917 @ 95%CL (1 toyMC)
median expected limit: r < 4.92917 @ 95%CL (1 toyMC)
   68% expected band : 4.92917 < r < 4.92917
   95% expected band : 4.92917 < r < 4.92917
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 472351882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9509 +/- 0.0133927 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 13.9509 @ 95%CL (1 toyMC)
median expected limit: r < 13.9509 @ 95%CL (1 toyMC)
   68% expected band : 13.9509 < r < 13.9509
   95% expected band : 13.9509 < r < 13.9509
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 799263982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.7438 +/- 0.00994135 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 5.7438 @ 95%CL (1 toyMC)
median expected limit: r < 5.7438 @ 95%CL (1 toyMC)
   68% expected band : 5.7438 < r < 5.7438
   95% expected band : 5.7438 < r < 5.7438
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1037841645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9039 +/- 0.0118925 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.9039 @ 95%CL (1 toyMC)
median expected limit: r < 11.9039 @ 95%CL (1 toyMC)
   68% expected band : 11.9039 < r < 11.9039
   95% expected band : 11.9039 < r < 11.9039
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682740226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.14423 +/- 0.0135931 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.14423 @ 95%CL (1 toyMC)
median expected limit: r < 8.14423 @ 95%CL (1 toyMC)
   68% expected band : 8.14423 < r < 8.14423
   95% expected band : 8.14423 < r < 8.14423
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2014176350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.76144 +/- 0.0140683 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.76144 @ 95%CL (1 toyMC)
median expected limit: r < 8.76144 @ 95%CL (1 toyMC)
   68% expected band : 8.76144 < r < 8.76144
   95% expected band : 8.76144 < r < 8.76144
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 460429534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.41341 +/- 0.0115897 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.41341 @ 95%CL (1 toyMC)
median expected limit: r < 7.41341 @ 95%CL (1 toyMC)
   68% expected band : 7.41341 < r < 7.41341
   95% expected band : 7.41341 < r < 7.41341
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 838254928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.99827 +/- 0.00995854 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.99827 @ 95%CL (1 toyMC)
median expected limit: r < 4.99827 @ 95%CL (1 toyMC)
   68% expected band : 4.99827 < r < 4.99827
   95% expected band : 4.99827 < r < 4.99827
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 49617008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.69343 +/- 0.0123493 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 6.69343 @ 95%CL (1 toyMC)
median expected limit: r < 6.69343 @ 95%CL (1 toyMC)
   68% expected band : 6.69343 < r < 6.69343
   95% expected band : 6.69343 < r < 6.69343
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 166796266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.58405 +/- 0.0110917 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 6.58405 @ 95%CL (1 toyMC)
median expected limit: r < 6.58405 @ 95%CL (1 toyMC)
   68% expected band : 6.58405 < r < 6.58405
   95% expected band : 6.58405 < r < 6.58405
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1562690612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3561 +/- 0.0141917 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 14.3561 @ 95%CL (1 toyMC)
median expected limit: r < 14.3561 @ 95%CL (1 toyMC)
   68% expected band : 14.3561 < r < 14.3561
   95% expected band : 14.3561 < r < 14.3561
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -575653577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.82874 +/- 0.00793806 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 4.82874 @ 95%CL (1 toyMC)
median expected limit: r < 4.82874 @ 95%CL (1 toyMC)
   68% expected band : 4.82874 < r < 4.82874
   95% expected band : 4.82874 < r < 4.82874
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1123582798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.39812 +/- 0.00898505 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.39812 @ 95%CL (1 toyMC)
median expected limit: r < 4.39812 @ 95%CL (1 toyMC)
   68% expected band : 4.39812 < r < 4.39812
   95% expected band : 4.39812 < r < 4.39812
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -313240177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.26416 +/- 0.00906558 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.26416 @ 95%CL (1 toyMC)
median expected limit: r < 6.26416 @ 95%CL (1 toyMC)
   68% expected band : 6.26416 < r < 6.26416
   95% expected band : 6.26416 < r < 6.26416
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -382357455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.54377 +/- 0.0105831 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.54377 @ 95%CL (1 toyMC)
median expected limit: r < 7.54377 @ 95%CL (1 toyMC)
   68% expected band : 7.54377 < r < 7.54377
   95% expected band : 7.54377 < r < 7.54377
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 76604971
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.56033 +/- 0.00888559 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 6.56033 @ 95%CL (1 toyMC)
median expected limit: r < 6.56033 @ 95%CL (1 toyMC)
   68% expected band : 6.56033 < r < 6.56033
   95% expected band : 6.56033 < r < 6.56033
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1116279275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8305 +/- 0.0144406 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 11.8305 @ 95%CL (1 toyMC)
median expected limit: r < 11.8305 @ 95%CL (1 toyMC)
   68% expected band : 11.8305 < r < 11.8305
   95% expected band : 11.8305 < r < 11.8305
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1232673143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.32877 +/- 0.010529 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 9.32877 @ 95%CL (1 toyMC)
median expected limit: r < 9.32877 @ 95%CL (1 toyMC)
   68% expected band : 9.32877 < r < 9.32877
   95% expected band : 9.32877 < r < 9.32877
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2030620419
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1323 +/- 0.0126397 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.1323 @ 95%CL (1 toyMC)
median expected limit: r < 13.1323 @ 95%CL (1 toyMC)
   68% expected band : 13.1323 < r < 13.1323
   95% expected band : 13.1323 < r < 13.1323
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1123791990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9099 +/- 0.01588 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 11.9099 @ 95%CL (1 toyMC)
median expected limit: r < 11.9099 @ 95%CL (1 toyMC)
   68% expected band : 11.9099 < r < 11.9099
   95% expected band : 11.9099 < r < 11.9099
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1139323673
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19903 +/- 0.0109761 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 6.19903 @ 95%CL (1 toyMC)
median expected limit: r < 6.19903 @ 95%CL (1 toyMC)
   68% expected band : 6.19903 < r < 6.19903
   95% expected band : 6.19903 < r < 6.19903
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1434499986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.4583 +/- 0.00824408 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.4583 @ 95%CL (1 toyMC)
median expected limit: r < 8.4583 @ 95%CL (1 toyMC)
   68% expected band : 8.4583 < r < 8.4583
   95% expected band : 8.4583 < r < 8.4583
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -945151373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.70883 +/- 0.0154973 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 9.70883 @ 95%CL (1 toyMC)
median expected limit: r < 9.70883 @ 95%CL (1 toyMC)
   68% expected band : 9.70883 < r < 9.70883
   95% expected band : 9.70883 < r < 9.70883
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 788720001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1581 +/- 0.0131758 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.1581 @ 95%CL (1 toyMC)
median expected limit: r < 10.1581 @ 95%CL (1 toyMC)
   68% expected band : 10.1581 < r < 10.1581
   95% expected band : 10.1581 < r < 10.1581
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 947877750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6835 +/- 0.0133839 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.6835 @ 95%CL (1 toyMC)
median expected limit: r < 10.6835 @ 95%CL (1 toyMC)
   68% expected band : 10.6835 < r < 10.6835
   95% expected band : 10.6835 < r < 10.6835
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -737524501
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.34055 +/- 0.0134394 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.34055 @ 95%CL (1 toyMC)
median expected limit: r < 8.34055 @ 95%CL (1 toyMC)
   68% expected band : 8.34055 < r < 8.34055
   95% expected band : 8.34055 < r < 8.34055
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 212928468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.45107 +/- 0.0107739 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.45107 @ 95%CL (1 toyMC)
median expected limit: r < 6.45107 @ 95%CL (1 toyMC)
   68% expected band : 6.45107 < r < 6.45107
   95% expected band : 6.45107 < r < 6.45107
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -448017133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0718 +/- 0.0113391 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.0718 @ 95%CL (1 toyMC)
median expected limit: r < 10.0718 @ 95%CL (1 toyMC)
   68% expected band : 10.0718 < r < 10.0718
   95% expected band : 10.0718 < r < 10.0718
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -43296944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.75049 +/- 0.0121608 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.75049 @ 95%CL (1 toyMC)
median expected limit: r < 5.75049 @ 95%CL (1 toyMC)
   68% expected band : 5.75049 < r < 5.75049
   95% expected band : 5.75049 < r < 5.75049
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 415964648
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.03898 +/- 0.00876913 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 8.03898 @ 95%CL (1 toyMC)
median expected limit: r < 8.03898 @ 95%CL (1 toyMC)
   68% expected band : 8.03898 < r < 8.03898
   95% expected band : 8.03898 < r < 8.03898
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 630940819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0166 +/- 0.00799108 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.0166 @ 95%CL (1 toyMC)
median expected limit: r < 5.0166 @ 95%CL (1 toyMC)
   68% expected band : 5.0166 < r < 5.0166
   95% expected band : 5.0166 < r < 5.0166
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2112790887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.96913 +/- 0.0121775 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.96913 @ 95%CL (1 toyMC)
median expected limit: r < 8.96913 @ 95%CL (1 toyMC)
   68% expected band : 8.96913 < r < 8.96913
   95% expected band : 8.96913 < r < 8.96913
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -788482045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.74511 +/- 0.011894 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 7.74511 @ 95%CL (1 toyMC)
median expected limit: r < 7.74511 @ 95%CL (1 toyMC)
   68% expected band : 7.74511 < r < 7.74511
   95% expected band : 7.74511 < r < 7.74511
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1815252992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.64028 +/- 0.00899201 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 5.64028 @ 95%CL (1 toyMC)
median expected limit: r < 5.64028 @ 95%CL (1 toyMC)
   68% expected band : 5.64028 < r < 5.64028
   95% expected band : 5.64028 < r < 5.64028
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 816444171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.46103 +/- 0.0136175 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.46103 @ 95%CL (1 toyMC)
median expected limit: r < 8.46103 @ 95%CL (1 toyMC)
   68% expected band : 8.46103 < r < 8.46103
   95% expected band : 8.46103 < r < 8.46103
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 180900665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.477 +/- 0.0109288 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.477 @ 95%CL (1 toyMC)
median expected limit: r < 10.477 @ 95%CL (1 toyMC)
   68% expected band : 10.477 < r < 10.477
   95% expected band : 10.477 < r < 10.477
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2110623659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.35229 +/- 0.01006 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.35229 @ 95%CL (1 toyMC)
median expected limit: r < 4.35229 @ 95%CL (1 toyMC)
   68% expected band : 4.35229 < r < 4.35229
   95% expected band : 4.35229 < r < 4.35229
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 752394543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.43141 +/- 0.0119893 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 8.43141 @ 95%CL (1 toyMC)
median expected limit: r < 8.43141 @ 95%CL (1 toyMC)
   68% expected band : 8.43141 < r < 8.43141
   95% expected band : 8.43141 < r < 8.43141
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -735619805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.39517 +/- 0.00844103 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 5.39517 @ 95%CL (1 toyMC)
median expected limit: r < 5.39517 @ 95%CL (1 toyMC)
   68% expected band : 5.39517 < r < 5.39517
   95% expected band : 5.39517 < r < 5.39517
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1952989539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.75996 +/- 0.014387 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.75996 @ 95%CL (1 toyMC)
median expected limit: r < 9.75996 @ 95%CL (1 toyMC)
   68% expected band : 9.75996 < r < 9.75996
   95% expected band : 9.75996 < r < 9.75996
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1038767668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9013 +/- 0.0119044 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 12.9013 @ 95%CL (1 toyMC)
median expected limit: r < 12.9013 @ 95%CL (1 toyMC)
   68% expected band : 12.9013 < r < 12.9013
   95% expected band : 12.9013 < r < 12.9013
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1415533974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.35022 +/- 0.01216 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 6.35022 @ 95%CL (1 toyMC)
median expected limit: r < 6.35022 @ 95%CL (1 toyMC)
   68% expected band : 6.35022 < r < 6.35022
   95% expected band : 6.35022 < r < 6.35022
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1273299241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.00416 +/- 0.00754252 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 5.00416 @ 95%CL (1 toyMC)
median expected limit: r < 5.00416 @ 95%CL (1 toyMC)
   68% expected band : 5.00416 < r < 5.00416
   95% expected band : 5.00416 < r < 5.00416
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 982415766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.7388 +/- 0.00951997 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.7388 @ 95%CL (1 toyMC)
median expected limit: r < 4.7388 @ 95%CL (1 toyMC)
   68% expected band : 4.7388 < r < 4.7388
   95% expected band : 4.7388 < r < 4.7388
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1093594061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1965 +/- 0.0148283 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.1965 @ 95%CL (1 toyMC)
median expected limit: r < 10.1965 @ 95%CL (1 toyMC)
   68% expected band : 10.1965 < r < 10.1965
   95% expected band : 10.1965 < r < 10.1965
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1534920358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.60567 +/- 0.0108601 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.46 min (real)
mean   expected limit: r < 9.60567 @ 95%CL (1 toyMC)
median expected limit: r < 9.60567 @ 95%CL (1 toyMC)
   68% expected band : 9.60567 < r < 9.60567
   95% expected band : 9.60567 < r < 9.60567
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -46969481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.47067 +/- 0.0130185 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.47067 @ 95%CL (1 toyMC)
median expected limit: r < 9.47067 @ 95%CL (1 toyMC)
   68% expected band : 9.47067 < r < 9.47067
   95% expected band : 9.47067 < r < 9.47067
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1403101232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.47613 +/- 0.00960583 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 5.47613 @ 95%CL (1 toyMC)
median expected limit: r < 5.47613 @ 95%CL (1 toyMC)
   68% expected band : 5.47613 < r < 5.47613
   95% expected band : 5.47613 < r < 5.47613
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -140735956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.73972 +/- 0.0107341 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 7.73972 @ 95%CL (1 toyMC)
median expected limit: r < 7.73972 @ 95%CL (1 toyMC)
   68% expected band : 7.73972 < r < 7.73972
   95% expected band : 7.73972 < r < 7.73972
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 765240112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.1565 +/- 0.0123554 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 7.1565 @ 95%CL (1 toyMC)
median expected limit: r < 7.1565 @ 95%CL (1 toyMC)
   68% expected band : 7.1565 < r < 7.1565
   95% expected band : 7.1565 < r < 7.1565
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1578148814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.28523 +/- 0.0134235 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.28523 @ 95%CL (1 toyMC)
median expected limit: r < 7.28523 @ 95%CL (1 toyMC)
   68% expected band : 7.28523 < r < 7.28523
   95% expected band : 7.28523 < r < 7.28523
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1908489291
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.43829 +/- 0.00936591 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 5.43829 @ 95%CL (1 toyMC)
median expected limit: r < 5.43829 @ 95%CL (1 toyMC)
   68% expected band : 5.43829 < r < 5.43829
   95% expected band : 5.43829 < r < 5.43829
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2115176005
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.64665 +/- 0.00941512 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 5.64665 @ 95%CL (1 toyMC)
median expected limit: r < 5.64665 @ 95%CL (1 toyMC)
   68% expected band : 5.64665 < r < 5.64665
   95% expected band : 5.64665 < r < 5.64665
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1244709928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.09827 +/- 0.0111972 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.09827 @ 95%CL (1 toyMC)
median expected limit: r < 5.09827 @ 95%CL (1 toyMC)
   68% expected band : 5.09827 < r < 5.09827
   95% expected band : 5.09827 < r < 5.09827
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2094975066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0293 +/- 0.0113576 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 14.0293 @ 95%CL (1 toyMC)
median expected limit: r < 14.0293 @ 95%CL (1 toyMC)
   68% expected band : 14.0293 < r < 14.0293
   95% expected band : 14.0293 < r < 14.0293
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 184937258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.41164 +/- 0.00857928 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 4.41164 @ 95%CL (1 toyMC)
median expected limit: r < 4.41164 @ 95%CL (1 toyMC)
   68% expected band : 4.41164 < r < 4.41164
   95% expected band : 4.41164 < r < 4.41164
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1547605294
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.91588 +/- 0.00864774 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 3.91588 @ 95%CL (1 toyMC)
median expected limit: r < 3.91588 @ 95%CL (1 toyMC)
   68% expected band : 3.91588 < r < 3.91588
   95% expected band : 3.91588 < r < 3.91588
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 489476852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.53541 +/- 0.011517 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.53541 @ 95%CL (1 toyMC)
median expected limit: r < 7.53541 @ 95%CL (1 toyMC)
   68% expected band : 7.53541 < r < 7.53541
   95% expected band : 7.53541 < r < 7.53541
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2024498906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.32346 +/- 0.00732422 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 4.32346 @ 95%CL (1 toyMC)
median expected limit: r < 4.32346 @ 95%CL (1 toyMC)
   68% expected band : 4.32346 < r < 4.32346
   95% expected band : 4.32346 < r < 4.32346
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -82157603
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.43723 +/- 0.012287 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 9.43723 @ 95%CL (1 toyMC)
median expected limit: r < 9.43723 @ 95%CL (1 toyMC)
   68% expected band : 9.43723 < r < 9.43723
   95% expected band : 9.43723 < r < 9.43723
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 297430955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.4335 +/- 0.0140574 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 9.4335 @ 95%CL (1 toyMC)
median expected limit: r < 9.4335 @ 95%CL (1 toyMC)
   68% expected band : 9.4335 < r < 9.4335
   95% expected band : 9.4335 < r < 9.4335
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -485571430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11989 +/- 0.00933441 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 5.11989 @ 95%CL (1 toyMC)
median expected limit: r < 5.11989 @ 95%CL (1 toyMC)
   68% expected band : 5.11989 < r < 5.11989
   95% expected band : 5.11989 < r < 5.11989
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 621976690
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.69923 +/- 0.0119752 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 8.69923 @ 95%CL (1 toyMC)
median expected limit: r < 8.69923 @ 95%CL (1 toyMC)
   68% expected band : 8.69923 < r < 8.69923
   95% expected band : 8.69923 < r < 8.69923
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 734136107
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.83 +/- 0.016978 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.83 @ 95%CL (1 toyMC)
median expected limit: r < 11.83 @ 95%CL (1 toyMC)
   68% expected band : 11.83 < r < 11.83
   95% expected band : 11.83 < r < 11.83
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 19554652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.61778 +/- 0.00966321 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 6.61778 @ 95%CL (1 toyMC)
median expected limit: r < 6.61778 @ 95%CL (1 toyMC)
   68% expected band : 6.61778 < r < 6.61778
   95% expected band : 6.61778 < r < 6.61778
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 171360852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.37923 +/- 0.0118748 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.37923 @ 95%CL (1 toyMC)
median expected limit: r < 7.37923 @ 95%CL (1 toyMC)
   68% expected band : 7.37923 < r < 7.37923
   95% expected band : 7.37923 < r < 7.37923
>>>> Finished computing CI MCMC with Lambda = 100
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 65879452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87318 +/- 0.0194585 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.87318 @ 95%CL (1 toyMC)
median expected limit: r < 9.87318 @ 95%CL (1 toyMC)
   68% expected band : 9.87318 < r < 9.87318
   95% expected band : 9.87318 < r < 9.87318
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 167208839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.72906 +/- 0.018548 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 9.72906 @ 95%CL (1 toyMC)
median expected limit: r < 9.72906 @ 95%CL (1 toyMC)
   68% expected band : 9.72906 < r < 9.72906
   95% expected band : 9.72906 < r < 9.72906
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1294563391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.78874 +/- 0.0175527 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.78874 @ 95%CL (1 toyMC)
median expected limit: r < 9.78874 @ 95%CL (1 toyMC)
   68% expected band : 9.78874 < r < 9.78874
   95% expected band : 9.78874 < r < 9.78874
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1961686785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.89137 +/- 0.0181489 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.89137 @ 95%CL (1 toyMC)
median expected limit: r < 8.89137 @ 95%CL (1 toyMC)
   68% expected band : 8.89137 < r < 8.89137
   95% expected band : 8.89137 < r < 8.89137
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -28629215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.85036 +/- 0.015177 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 8.85036 @ 95%CL (1 toyMC)
median expected limit: r < 8.85036 @ 95%CL (1 toyMC)
   68% expected band : 8.85036 < r < 8.85036
   95% expected band : 8.85036 < r < 8.85036
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1139394987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4984 +/- 0.0146862 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.4984 @ 95%CL (1 toyMC)
median expected limit: r < 11.4984 @ 95%CL (1 toyMC)
   68% expected band : 11.4984 < r < 11.4984
   95% expected band : 11.4984 < r < 11.4984
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -16447608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.69793 +/- 0.0179229 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.69793 @ 95%CL (1 toyMC)
median expected limit: r < 8.69793 @ 95%CL (1 toyMC)
   68% expected band : 8.69793 < r < 8.69793
   95% expected band : 8.69793 < r < 8.69793
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 279622119
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5005 +/- 0.0151511 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 13.5005 @ 95%CL (1 toyMC)
median expected limit: r < 13.5005 @ 95%CL (1 toyMC)
   68% expected band : 13.5005 < r < 13.5005
   95% expected band : 13.5005 < r < 13.5005
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -961748075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3104 +/- 0.00715071 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 17.3104 @ 95%CL (1 toyMC)
median expected limit: r < 17.3104 @ 95%CL (1 toyMC)
   68% expected band : 17.3104 < r < 17.3104
   95% expected band : 17.3104 < r < 17.3104
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -115068305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7181 +/- 0.0094528 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 16.7181 @ 95%CL (1 toyMC)
median expected limit: r < 16.7181 @ 95%CL (1 toyMC)
   68% expected band : 16.7181 < r < 16.7181
   95% expected band : 16.7181 < r < 16.7181
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1560288619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4558 +/- 0.00865862 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 17.4558 @ 95%CL (1 toyMC)
median expected limit: r < 17.4558 @ 95%CL (1 toyMC)
   68% expected band : 17.4558 < r < 17.4558
   95% expected band : 17.4558 < r < 17.4558
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1865476836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3473 +/- 0.0159821 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 13.3473 @ 95%CL (1 toyMC)
median expected limit: r < 13.3473 @ 95%CL (1 toyMC)
   68% expected band : 13.3473 < r < 13.3473
   95% expected band : 13.3473 < r < 13.3473
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 323684961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6467 +/- 0.0153223 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 13.6467 @ 95%CL (1 toyMC)
median expected limit: r < 13.6467 @ 95%CL (1 toyMC)
   68% expected band : 13.6467 < r < 13.6467
   95% expected band : 13.6467 < r < 13.6467
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1352689955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7833 +/- 0.00813616 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 16.7833 @ 95%CL (1 toyMC)
median expected limit: r < 16.7833 @ 95%CL (1 toyMC)
   68% expected band : 16.7833 < r < 16.7833
   95% expected band : 16.7833 < r < 16.7833
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2119753847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.02565 +/- 0.0145304 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 9.02565 @ 95%CL (1 toyMC)
median expected limit: r < 9.02565 @ 95%CL (1 toyMC)
   68% expected band : 9.02565 < r < 9.02565
   95% expected band : 9.02565 < r < 9.02565
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2071584429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8982 +/- 0.0148127 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.8982 @ 95%CL (1 toyMC)
median expected limit: r < 10.8982 @ 95%CL (1 toyMC)
   68% expected band : 10.8982 < r < 10.8982
   95% expected band : 10.8982 < r < 10.8982
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1193264191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2506 +/- 0.0173418 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 11.2506 @ 95%CL (1 toyMC)
median expected limit: r < 11.2506 @ 95%CL (1 toyMC)
   68% expected band : 11.2506 < r < 11.2506
   95% expected band : 11.2506 < r < 11.2506
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 399746190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.01057 +/- 0.0139852 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 8.01057 @ 95%CL (1 toyMC)
median expected limit: r < 8.01057 @ 95%CL (1 toyMC)
   68% expected band : 8.01057 < r < 8.01057
   95% expected band : 8.01057 < r < 8.01057
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1229466227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.69526 +/- 0.0130612 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.69526 @ 95%CL (1 toyMC)
median expected limit: r < 6.69526 @ 95%CL (1 toyMC)
   68% expected band : 6.69526 < r < 6.69526
   95% expected band : 6.69526 < r < 6.69526
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 240977814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.85339 +/- 0.0169937 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 9.85339 @ 95%CL (1 toyMC)
median expected limit: r < 9.85339 @ 95%CL (1 toyMC)
   68% expected band : 9.85339 < r < 9.85339
   95% expected band : 9.85339 < r < 9.85339
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1707799880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5397 +/- 0.0126682 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.48 min (real)
mean   expected limit: r < 13.5397 @ 95%CL (1 toyMC)
median expected limit: r < 13.5397 @ 95%CL (1 toyMC)
   68% expected band : 13.5397 < r < 13.5397
   95% expected band : 13.5397 < r < 13.5397
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1467596961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38979 +/- 0.0142828 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.38979 @ 95%CL (1 toyMC)
median expected limit: r < 7.38979 @ 95%CL (1 toyMC)
   68% expected band : 7.38979 < r < 7.38979
   95% expected band : 7.38979 < r < 7.38979
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -928479351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.71973 +/- 0.016203 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 6.71973 @ 95%CL (1 toyMC)
median expected limit: r < 6.71973 @ 95%CL (1 toyMC)
   68% expected band : 6.71973 < r < 6.71973
   95% expected band : 6.71973 < r < 6.71973
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1137383351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.34688 +/- 0.0120277 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 7.34688 @ 95%CL (1 toyMC)
median expected limit: r < 7.34688 @ 95%CL (1 toyMC)
   68% expected band : 7.34688 < r < 7.34688
   95% expected band : 7.34688 < r < 7.34688
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2034808452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4751 +/- 0.0143072 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 11.4751 @ 95%CL (1 toyMC)
median expected limit: r < 11.4751 @ 95%CL (1 toyMC)
   68% expected band : 11.4751 < r < 11.4751
   95% expected band : 11.4751 < r < 11.4751
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1193784330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6466 +/- 0.0165313 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 10.6466 @ 95%CL (1 toyMC)
median expected limit: r < 10.6466 @ 95%CL (1 toyMC)
   68% expected band : 10.6466 < r < 10.6466
   95% expected band : 10.6466 < r < 10.6466
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 101789171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.97004 +/- 0.0154355 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.97004 @ 95%CL (1 toyMC)
median expected limit: r < 8.97004 @ 95%CL (1 toyMC)
   68% expected band : 8.97004 < r < 8.97004
   95% expected band : 8.97004 < r < 8.97004
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1065470596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.28355 +/- 0.0160865 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 7.28355 @ 95%CL (1 toyMC)
median expected limit: r < 7.28355 @ 95%CL (1 toyMC)
   68% expected band : 7.28355 < r < 7.28355
   95% expected band : 7.28355 < r < 7.28355
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1137721155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6387 +/- 0.0155846 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.6387 @ 95%CL (1 toyMC)
median expected limit: r < 11.6387 @ 95%CL (1 toyMC)
   68% expected band : 11.6387 < r < 11.6387
   95% expected band : 11.6387 < r < 11.6387
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 579243394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2829 +/- 0.00854032 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.55 min (real)
mean   expected limit: r < 17.2829 @ 95%CL (1 toyMC)
median expected limit: r < 17.2829 @ 95%CL (1 toyMC)
   68% expected band : 17.2829 < r < 17.2829
   95% expected band : 17.2829 < r < 17.2829
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -271399350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2471 +/- 0.0173786 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 11.2471 @ 95%CL (1 toyMC)
median expected limit: r < 11.2471 @ 95%CL (1 toyMC)
   68% expected band : 11.2471 < r < 11.2471
   95% expected band : 11.2471 < r < 11.2471
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -880467528
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.34176 +/- 0.0115201 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 7.34176 @ 95%CL (1 toyMC)
median expected limit: r < 7.34176 @ 95%CL (1 toyMC)
   68% expected band : 7.34176 < r < 7.34176
   95% expected band : 7.34176 < r < 7.34176
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 303394785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4464 +/- 0.0188456 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 10.4464 @ 95%CL (1 toyMC)
median expected limit: r < 10.4464 @ 95%CL (1 toyMC)
   68% expected band : 10.4464 < r < 10.4464
   95% expected band : 10.4464 < r < 10.4464
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2023866582
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8189 +/- 0.0140889 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.47 min (real)
mean   expected limit: r < 12.8189 @ 95%CL (1 toyMC)
median expected limit: r < 12.8189 @ 95%CL (1 toyMC)
   68% expected band : 12.8189 < r < 12.8189
   95% expected band : 12.8189 < r < 12.8189
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -306419943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4803 +/- 0.019642 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 11.4803 @ 95%CL (1 toyMC)
median expected limit: r < 11.4803 @ 95%CL (1 toyMC)
   68% expected band : 11.4803 < r < 11.4803
   95% expected band : 11.4803 < r < 11.4803
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 22059611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8992 +/- 0.00469984 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 17.8992 @ 95%CL (1 toyMC)
median expected limit: r < 17.8992 @ 95%CL (1 toyMC)
   68% expected band : 17.8992 < r < 17.8992
   95% expected band : 17.8992 < r < 17.8992
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1978294703
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.11505 +/- 0.0158039 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 8.11505 @ 95%CL (1 toyMC)
median expected limit: r < 8.11505 @ 95%CL (1 toyMC)
   68% expected band : 8.11505 < r < 8.11505
   95% expected band : 8.11505 < r < 8.11505
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1939158410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1111 +/- 0.00837887 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.53 min (real)
mean   expected limit: r < 17.1111 @ 95%CL (1 toyMC)
median expected limit: r < 17.1111 @ 95%CL (1 toyMC)
   68% expected band : 17.1111 < r < 17.1111
   95% expected band : 17.1111 < r < 17.1111
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1507222037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7281 +/- 0.018388 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.7281 @ 95%CL (1 toyMC)
median expected limit: r < 11.7281 @ 95%CL (1 toyMC)
   68% expected band : 11.7281 < r < 11.7281
   95% expected band : 11.7281 < r < 11.7281
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1353355206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8981 +/- 0.0134222 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 12.8981 @ 95%CL (1 toyMC)
median expected limit: r < 12.8981 @ 95%CL (1 toyMC)
   68% expected band : 12.8981 < r < 12.8981
   95% expected band : 12.8981 < r < 12.8981
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 579512255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.72225 +/- 0.0162495 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.72225 @ 95%CL (1 toyMC)
median expected limit: r < 9.72225 @ 95%CL (1 toyMC)
   68% expected band : 9.72225 < r < 9.72225
   95% expected band : 9.72225 < r < 9.72225
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1096383372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5312 +/- 0.00875014 @ 95% CL (100 tries)
Done in 0.56 min (cpu), 0.56 min (real)
mean   expected limit: r < 16.5312 @ 95%CL (1 toyMC)
median expected limit: r < 16.5312 @ 95%CL (1 toyMC)
   68% expected band : 16.5312 < r < 16.5312
   95% expected band : 16.5312 < r < 16.5312
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -250727001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6611 +/- 0.0133551 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 11.6611 @ 95%CL (1 toyMC)
median expected limit: r < 11.6611 @ 95%CL (1 toyMC)
   68% expected band : 11.6611 < r < 11.6611
   95% expected band : 11.6611 < r < 11.6611
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 606422239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9609 +/- 0.0119745 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 15.9609 @ 95%CL (1 toyMC)
median expected limit: r < 15.9609 @ 95%CL (1 toyMC)
   68% expected band : 15.9609 < r < 15.9609
   95% expected band : 15.9609 < r < 15.9609
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -145792780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3965 +/- 0.0121047 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 15.3965 @ 95%CL (1 toyMC)
median expected limit: r < 15.3965 @ 95%CL (1 toyMC)
   68% expected band : 15.3965 < r < 15.3965
   95% expected band : 15.3965 < r < 15.3965
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 614664564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4871 +/- 0.0182405 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 10.4871 @ 95%CL (1 toyMC)
median expected limit: r < 10.4871 @ 95%CL (1 toyMC)
   68% expected band : 10.4871 < r < 10.4871
   95% expected band : 10.4871 < r < 10.4871
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1152336230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2 +/- 0.0140166 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.2 @ 95%CL (1 toyMC)
median expected limit: r < 13.2 @ 95%CL (1 toyMC)
   68% expected band : 13.2 < r < 13.2
   95% expected band : 13.2 < r < 13.2
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -527773223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6718 +/- 0.022613 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 10.6718 @ 95%CL (1 toyMC)
median expected limit: r < 10.6718 @ 95%CL (1 toyMC)
   68% expected band : 10.6718 < r < 10.6718
   95% expected band : 10.6718 < r < 10.6718
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2045966858
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2412 +/- 0.0140583 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.2412 @ 95%CL (1 toyMC)
median expected limit: r < 13.2412 @ 95%CL (1 toyMC)
   68% expected band : 13.2412 < r < 13.2412
   95% expected band : 13.2412 < r < 13.2412
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -668015125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5489 +/- 0.0129564 @ 95% CL (100 tries)
Done in 0.54 min (cpu), 0.54 min (real)
mean   expected limit: r < 15.5489 @ 95%CL (1 toyMC)
median expected limit: r < 15.5489 @ 95%CL (1 toyMC)
   68% expected band : 15.5489 < r < 15.5489
   95% expected band : 15.5489 < r < 15.5489
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1453727475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2765 +/- 0.0143609 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.2765 @ 95%CL (1 toyMC)
median expected limit: r < 12.2765 @ 95%CL (1 toyMC)
   68% expected band : 12.2765 < r < 12.2765
   95% expected band : 12.2765 < r < 12.2765
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -256842506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.45 +/- 0.0139142 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 14.45 @ 95%CL (1 toyMC)
median expected limit: r < 14.45 @ 95%CL (1 toyMC)
   68% expected band : 14.45 < r < 14.45
   95% expected band : 14.45 < r < 14.45
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -783981661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.70968 +/- 0.0148843 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 8.70968 @ 95%CL (1 toyMC)
median expected limit: r < 8.70968 @ 95%CL (1 toyMC)
   68% expected band : 8.70968 < r < 8.70968
   95% expected band : 8.70968 < r < 8.70968
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1189602616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.83783 +/- 0.0174533 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.83783 @ 95%CL (1 toyMC)
median expected limit: r < 8.83783 @ 95%CL (1 toyMC)
   68% expected band : 8.83783 < r < 8.83783
   95% expected band : 8.83783 < r < 8.83783
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1198417045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.40214 +/- 0.0135252 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 7.40214 @ 95%CL (1 toyMC)
median expected limit: r < 7.40214 @ 95%CL (1 toyMC)
   68% expected band : 7.40214 < r < 7.40214
   95% expected band : 7.40214 < r < 7.40214
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2101701333
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8866 +/- 0.0111806 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 14.8866 @ 95%CL (1 toyMC)
median expected limit: r < 14.8866 @ 95%CL (1 toyMC)
   68% expected band : 14.8866 < r < 14.8866
   95% expected band : 14.8866 < r < 14.8866
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 939106180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0213 +/- 0.0131959 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.52 min (real)
mean   expected limit: r < 13.0213 @ 95%CL (1 toyMC)
median expected limit: r < 13.0213 @ 95%CL (1 toyMC)
   68% expected band : 13.0213 < r < 13.0213
   95% expected band : 13.0213 < r < 13.0213
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -886523806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5734 +/- 0.0148828 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 12.5734 @ 95%CL (1 toyMC)
median expected limit: r < 12.5734 @ 95%CL (1 toyMC)
   68% expected band : 12.5734 < r < 12.5734
   95% expected band : 12.5734 < r < 12.5734
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1710336446
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3959 +/- 0.0150183 @ 95% CL (100 tries)
Done in 0.55 min (cpu), 0.55 min (real)
mean   expected limit: r < 14.3959 @ 95%CL (1 toyMC)
median expected limit: r < 14.3959 @ 95%CL (1 toyMC)
   68% expected band : 14.3959 < r < 14.3959
   95% expected band : 14.3959 < r < 14.3959
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2068455628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.83644 +/- 0.0173288 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.83644 @ 95%CL (1 toyMC)
median expected limit: r < 8.83644 @ 95%CL (1 toyMC)
   68% expected band : 8.83644 < r < 8.83644
   95% expected band : 8.83644 < r < 8.83644
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1133376469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.12119 +/- 0.0136216 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.12119 @ 95%CL (1 toyMC)
median expected limit: r < 8.12119 @ 95%CL (1 toyMC)
   68% expected band : 8.12119 < r < 8.12119
   95% expected band : 8.12119 < r < 8.12119
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1380525224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5479 +/- 0.0164948 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 12.5479 @ 95%CL (1 toyMC)
median expected limit: r < 12.5479 @ 95%CL (1 toyMC)
   68% expected band : 12.5479 < r < 12.5479
   95% expected band : 12.5479 < r < 12.5479
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1099879708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6848 +/- 0.0167211 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 11.6848 @ 95%CL (1 toyMC)
median expected limit: r < 11.6848 @ 95%CL (1 toyMC)
   68% expected band : 11.6848 < r < 11.6848
   95% expected band : 11.6848 < r < 11.6848
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 548924727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.15866 +/- 0.013648 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 8.15866 @ 95%CL (1 toyMC)
median expected limit: r < 8.15866 @ 95%CL (1 toyMC)
   68% expected band : 8.15866 < r < 8.15866
   95% expected band : 8.15866 < r < 8.15866
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 596508959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.70602 +/- 0.0184697 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.70602 @ 95%CL (1 toyMC)
median expected limit: r < 9.70602 @ 95%CL (1 toyMC)
   68% expected band : 9.70602 < r < 9.70602
   95% expected band : 9.70602 < r < 9.70602
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1265519298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6728 +/- 0.0191307 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.44 min (real)
mean   expected limit: r < 11.6728 @ 95%CL (1 toyMC)
median expected limit: r < 11.6728 @ 95%CL (1 toyMC)
   68% expected band : 11.6728 < r < 11.6728
   95% expected band : 11.6728 < r < 11.6728
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1165104158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4843 +/- 0.0151988 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 11.4843 @ 95%CL (1 toyMC)
median expected limit: r < 11.4843 @ 95%CL (1 toyMC)
   68% expected band : 11.4843 < r < 11.4843
   95% expected band : 11.4843 < r < 11.4843
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1169908475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.86659 +/- 0.0158407 @ 95% CL (100 tries)
Done in 0.44 min (cpu), 0.45 min (real)
mean   expected limit: r < 9.86659 @ 95%CL (1 toyMC)
median expected limit: r < 9.86659 @ 95%CL (1 toyMC)
   68% expected band : 9.86659 < r < 9.86659
   95% expected band : 9.86659 < r < 9.86659
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1139357796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1748 +/- 0.0167101 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 12.1748 @ 95%CL (1 toyMC)
median expected limit: r < 12.1748 @ 95%CL (1 toyMC)
   68% expected band : 12.1748 < r < 12.1748
   95% expected band : 12.1748 < r < 12.1748
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1594152110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.10313 +/- 0.0148453 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 8.10313 @ 95%CL (1 toyMC)
median expected limit: r < 8.10313 @ 95%CL (1 toyMC)
   68% expected band : 8.10313 < r < 8.10313
   95% expected band : 8.10313 < r < 8.10313
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 280786298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.453 +/- 0.0168813 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.453 @ 95%CL (1 toyMC)
median expected limit: r < 13.453 @ 95%CL (1 toyMC)
   68% expected band : 13.453 < r < 13.453
   95% expected band : 13.453 < r < 13.453
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1800237139
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.525 +/- 0.0144304 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.525 @ 95%CL (1 toyMC)
median expected limit: r < 13.525 @ 95%CL (1 toyMC)
   68% expected band : 13.525 < r < 13.525
   95% expected band : 13.525 < r < 13.525
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1597927676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.349 +/- 0.0120238 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 15.349 @ 95%CL (1 toyMC)
median expected limit: r < 15.349 @ 95%CL (1 toyMC)
   68% expected band : 15.349 < r < 15.349
   95% expected band : 15.349 < r < 15.349
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2083118900
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.40467 +/- 0.0153641 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.40467 @ 95%CL (1 toyMC)
median expected limit: r < 7.40467 @ 95%CL (1 toyMC)
   68% expected band : 7.40467 < r < 7.40467
   95% expected band : 7.40467 < r < 7.40467
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 785770325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5271 +/- 0.00872215 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 16.5271 @ 95%CL (1 toyMC)
median expected limit: r < 16.5271 @ 95%CL (1 toyMC)
   68% expected band : 16.5271 < r < 16.5271
   95% expected band : 16.5271 < r < 16.5271
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1113919384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6541 +/- 0.0155792 @ 95% CL (100 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 13.6541 @ 95%CL (1 toyMC)
median expected limit: r < 13.6541 @ 95%CL (1 toyMC)
   68% expected band : 13.6541 < r < 13.6541
   95% expected band : 13.6541 < r < 13.6541
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1381819512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3777 +/- 0.00859042 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 16.3777 @ 95%CL (1 toyMC)
median expected limit: r < 16.3777 @ 95%CL (1 toyMC)
   68% expected band : 16.3777 < r < 16.3777
   95% expected band : 16.3777 < r < 16.3777
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 646190191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6432 +/- 0.0136595 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.47 min (real)
mean   expected limit: r < 13.6432 @ 95%CL (1 toyMC)
median expected limit: r < 13.6432 @ 95%CL (1 toyMC)
   68% expected band : 13.6432 < r < 13.6432
   95% expected band : 13.6432 < r < 13.6432
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2030440026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6654 +/- 0.0183728 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.6654 @ 95%CL (1 toyMC)
median expected limit: r < 10.6654 @ 95%CL (1 toyMC)
   68% expected band : 10.6654 < r < 10.6654
   95% expected band : 10.6654 < r < 10.6654
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1920176917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.67768 +/- 0.0116463 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.67768 @ 95%CL (1 toyMC)
median expected limit: r < 6.67768 @ 95%CL (1 toyMC)
   68% expected band : 6.67768 < r < 6.67768
   95% expected band : 6.67768 < r < 6.67768
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1562156455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6231 +/- 0.0141621 @ 95% CL (100 tries)
Done in 0.46 min (cpu), 0.46 min (real)
mean   expected limit: r < 13.6231 @ 95%CL (1 toyMC)
median expected limit: r < 13.6231 @ 95%CL (1 toyMC)
   68% expected band : 13.6231 < r < 13.6231
   95% expected band : 13.6231 < r < 13.6231
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -778722262
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8133 +/- 0.00926368 @ 95% CL (100 tries)
Done in 0.51 min (cpu), 0.51 min (real)
mean   expected limit: r < 16.8133 @ 95%CL (1 toyMC)
median expected limit: r < 16.8133 @ 95%CL (1 toyMC)
   68% expected band : 16.8133 < r < 16.8133
   95% expected band : 16.8133 < r < 16.8133
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 612747068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3707 +/- 0.0132187 @ 95% CL (100 tries)
Done in 0.48 min (cpu), 0.49 min (real)
mean   expected limit: r < 15.3707 @ 95%CL (1 toyMC)
median expected limit: r < 15.3707 @ 95%CL (1 toyMC)
   68% expected band : 15.3707 < r < 15.3707
   95% expected band : 15.3707 < r < 15.3707
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1973278987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1158 +/- 0.00800939 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.52 min (real)
mean   expected limit: r < 17.1158 @ 95%CL (1 toyMC)
median expected limit: r < 17.1158 @ 95%CL (1 toyMC)
   68% expected band : 17.1158 < r < 17.1158
   95% expected band : 17.1158 < r < 17.1158
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1252565869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.815 +/- 0.015439 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.815 @ 95%CL (1 toyMC)
median expected limit: r < 12.815 @ 95%CL (1 toyMC)
   68% expected band : 12.815 < r < 12.815
   95% expected band : 12.815 < r < 12.815
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 71483746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.74214 +/- 0.0152196 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.74214 @ 95%CL (1 toyMC)
median expected limit: r < 6.74214 @ 95%CL (1 toyMC)
   68% expected band : 6.74214 < r < 6.74214
   95% expected band : 6.74214 < r < 6.74214
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -449913235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.84549 +/- 0.0183111 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 9.84549 @ 95%CL (1 toyMC)
median expected limit: r < 9.84549 @ 95%CL (1 toyMC)
   68% expected band : 9.84549 < r < 9.84549
   95% expected band : 9.84549 < r < 9.84549
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1789661079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6144 +/- 0.0103282 @ 95% CL (100 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 16.6144 @ 95%CL (1 toyMC)
median expected limit: r < 16.6144 @ 95%CL (1 toyMC)
   68% expected band : 16.6144 < r < 16.6144
   95% expected band : 16.6144 < r < 16.6144
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1745263777
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7203 +/- 0.0065793 @ 95% CL (100 tries)
Done in 0.52 min (cpu), 0.53 min (real)
mean   expected limit: r < 17.7203 @ 95%CL (1 toyMC)
median expected limit: r < 17.7203 @ 95%CL (1 toyMC)
   68% expected band : 17.7203 < r < 17.7203
   95% expected band : 17.7203 < r < 17.7203
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1624424702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9328 +/- 0.00775642 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 16.9328 @ 95%CL (1 toyMC)
median expected limit: r < 16.9328 @ 95%CL (1 toyMC)
   68% expected band : 16.9328 < r < 16.9328
   95% expected band : 16.9328 < r < 16.9328
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 950293325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4986 +/- 0.0174436 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.4986 @ 95%CL (1 toyMC)
median expected limit: r < 10.4986 @ 95%CL (1 toyMC)
   68% expected band : 10.4986 < r < 10.4986
   95% expected band : 10.4986 < r < 10.4986
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 421091127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5051 +/- 0.0158717 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 11.5051 @ 95%CL (1 toyMC)
median expected limit: r < 11.5051 @ 95%CL (1 toyMC)
   68% expected band : 11.5051 < r < 11.5051
   95% expected band : 11.5051 < r < 11.5051
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1081842612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1545 +/- 0.0181576 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 13.1545 @ 95%CL (1 toyMC)
median expected limit: r < 13.1545 @ 95%CL (1 toyMC)
   68% expected band : 13.1545 < r < 13.1545
   95% expected band : 13.1545 < r < 13.1545
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1634133219
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5317 +/- 0.00952163 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 16.5317 @ 95%CL (1 toyMC)
median expected limit: r < 16.5317 @ 95%CL (1 toyMC)
   68% expected band : 16.5317 < r < 16.5317
   95% expected band : 16.5317 < r < 16.5317
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -950800812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8862 +/- 0.0146408 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 10.8862 @ 95%CL (1 toyMC)
median expected limit: r < 10.8862 @ 95%CL (1 toyMC)
   68% expected band : 10.8862 < r < 10.8862
   95% expected band : 10.8862 < r < 10.8862
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -249340647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2134 +/- 0.00914849 @ 95% CL (100 tries)
Done in 0.50 min (cpu), 0.51 min (real)
mean   expected limit: r < 17.2134 @ 95%CL (1 toyMC)
median expected limit: r < 17.2134 @ 95%CL (1 toyMC)
   68% expected band : 17.2134 < r < 17.2134
   95% expected band : 17.2134 < r < 17.2134
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -62534102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4678 +/- 0.0185672 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 11.4678 @ 95%CL (1 toyMC)
median expected limit: r < 11.4678 @ 95%CL (1 toyMC)
   68% expected band : 11.4678 < r < 11.4678
   95% expected band : 11.4678 < r < 11.4678
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1565130786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2722 +/- 0.0143113 @ 95% CL (100 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 12.2722 @ 95%CL (1 toyMC)
median expected limit: r < 12.2722 @ 95%CL (1 toyMC)
   68% expected band : 12.2722 < r < 12.2722
   95% expected band : 12.2722 < r < 12.2722
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1780840070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4702 +/- 0.0179307 @ 95% CL (100 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 14.4702 @ 95%CL (1 toyMC)
median expected limit: r < 14.4702 @ 95%CL (1 toyMC)
   68% expected band : 14.4702 < r < 14.4702
   95% expected band : 14.4702 < r < 14.4702
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1365773293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.13741 +/- 0.0164171 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 8.13741 @ 95%CL (1 toyMC)
median expected limit: r < 8.13741 @ 95%CL (1 toyMC)
   68% expected band : 8.13741 < r < 8.13741
   95% expected band : 8.13741 < r < 8.13741
>>>> Finished computing CI MCMC with Lambda = 100
