 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 132393643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.63318 +/- 0.0055864 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.63318 @ 95%CL (1 toyMC)
median expected limit: r < 2.63318 @ 95%CL (1 toyMC)
   68% expected band : 2.63318 < r < 2.63318
   95% expected band : 2.63318 < r < 2.63318
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1100157768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.48234 +/- 0.00643156 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.48234 @ 95%CL (1 toyMC)
median expected limit: r < 3.48234 @ 95%CL (1 toyMC)
   68% expected band : 3.48234 < r < 3.48234
   95% expected band : 3.48234 < r < 3.48234
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2006749550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.96999 +/- 0.00632305 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 3.96999 @ 95%CL (1 toyMC)
median expected limit: r < 3.96999 @ 95%CL (1 toyMC)
   68% expected band : 3.96999 < r < 3.96999
   95% expected band : 3.96999 < r < 3.96999
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 55288791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.04599 +/- 0.00599574 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.04599 @ 95%CL (1 toyMC)
median expected limit: r < 3.04599 @ 95%CL (1 toyMC)
   68% expected band : 3.04599 < r < 3.04599
   95% expected band : 3.04599 < r < 3.04599
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -42711979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.17074 +/- 0.00622095 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.17074 @ 95%CL (1 toyMC)
median expected limit: r < 2.17074 @ 95%CL (1 toyMC)
   68% expected band : 2.17074 < r < 2.17074
   95% expected band : 2.17074 < r < 2.17074
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1320073093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.19601 +/- 0.00696182 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.19601 @ 95%CL (1 toyMC)
median expected limit: r < 4.19601 @ 95%CL (1 toyMC)
   68% expected band : 4.19601 < r < 4.19601
   95% expected band : 4.19601 < r < 4.19601
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2119768879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41782 +/- 0.00695815 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.41782 @ 95%CL (1 toyMC)
median expected limit: r < 2.41782 @ 95%CL (1 toyMC)
   68% expected band : 2.41782 < r < 2.41782
   95% expected band : 2.41782 < r < 2.41782
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -245085082
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.48575 +/- 0.00699919 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.48575 @ 95%CL (1 toyMC)
median expected limit: r < 3.48575 @ 95%CL (1 toyMC)
   68% expected band : 3.48575 < r < 3.48575
   95% expected band : 3.48575 < r < 3.48575
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1146701647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.62867 +/- 0.00622957 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.62867 @ 95%CL (1 toyMC)
median expected limit: r < 3.62867 @ 95%CL (1 toyMC)
   68% expected band : 3.62867 < r < 3.62867
   95% expected band : 3.62867 < r < 3.62867
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1460072696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.32577 +/- 0.00640628 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.32577 @ 95%CL (1 toyMC)
median expected limit: r < 3.32577 @ 95%CL (1 toyMC)
   68% expected band : 3.32577 < r < 3.32577
   95% expected band : 3.32577 < r < 3.32577
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 315955380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.55222 +/- 0.00536659 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.55222 @ 95%CL (1 toyMC)
median expected limit: r < 4.55222 @ 95%CL (1 toyMC)
   68% expected band : 4.55222 < r < 4.55222
   95% expected band : 4.55222 < r < 4.55222
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -183645625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.59437 +/- 0.0058103 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.59437 @ 95%CL (1 toyMC)
median expected limit: r < 4.59437 @ 95%CL (1 toyMC)
   68% expected band : 4.59437 < r < 4.59437
   95% expected band : 4.59437 < r < 4.59437
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 35523967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65264 +/- 0.00488747 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.65264 @ 95%CL (1 toyMC)
median expected limit: r < 1.65264 @ 95%CL (1 toyMC)
   68% expected band : 1.65264 < r < 1.65264
   95% expected band : 1.65264 < r < 1.65264
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1401574713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18336 +/- 0.00609657 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.18336 @ 95%CL (1 toyMC)
median expected limit: r < 3.18336 @ 95%CL (1 toyMC)
   68% expected band : 3.18336 < r < 3.18336
   95% expected band : 3.18336 < r < 3.18336
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1543791092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.26154 +/- 0.00542637 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.26154 @ 95%CL (1 toyMC)
median expected limit: r < 2.26154 @ 95%CL (1 toyMC)
   68% expected band : 2.26154 < r < 2.26154
   95% expected band : 2.26154 < r < 2.26154
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -706818749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67143 +/- 0.00556682 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.67143 @ 95%CL (1 toyMC)
median expected limit: r < 2.67143 @ 95%CL (1 toyMC)
   68% expected band : 2.67143 < r < 2.67143
   95% expected band : 2.67143 < r < 2.67143
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 757267384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08517 +/- 0.00540631 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.08517 @ 95%CL (1 toyMC)
median expected limit: r < 3.08517 @ 95%CL (1 toyMC)
   68% expected band : 3.08517 < r < 3.08517
   95% expected band : 3.08517 < r < 3.08517
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -503582330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.15268 +/- 0.0060163 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.15268 @ 95%CL (1 toyMC)
median expected limit: r < 5.15268 @ 95%CL (1 toyMC)
   68% expected band : 5.15268 < r < 5.15268
   95% expected band : 5.15268 < r < 5.15268
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1254931625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45014 +/- 0.0052002 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.45014 @ 95%CL (1 toyMC)
median expected limit: r < 2.45014 @ 95%CL (1 toyMC)
   68% expected band : 2.45014 < r < 2.45014
   95% expected band : 2.45014 < r < 2.45014
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 225158505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11611 +/- 0.0046736 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.11611 @ 95%CL (1 toyMC)
median expected limit: r < 2.11611 @ 95%CL (1 toyMC)
   68% expected band : 2.11611 < r < 2.11611
   95% expected band : 2.11611 < r < 2.11611
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1238006825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.39605 +/- 0.00684226 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.39605 @ 95%CL (1 toyMC)
median expected limit: r < 4.39605 @ 95%CL (1 toyMC)
   68% expected band : 4.39605 < r < 4.39605
   95% expected band : 4.39605 < r < 4.39605
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -99278493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12983 +/- 0.00500344 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.12983 @ 95%CL (1 toyMC)
median expected limit: r < 2.12983 @ 95%CL (1 toyMC)
   68% expected band : 2.12983 < r < 2.12983
   95% expected band : 2.12983 < r < 2.12983
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 78114998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.05906 +/- 0.00449755 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.05906 @ 95%CL (1 toyMC)
median expected limit: r < 3.05906 @ 95%CL (1 toyMC)
   68% expected band : 3.05906 < r < 3.05906
   95% expected band : 3.05906 < r < 3.05906
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2034923221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.05082 +/- 0.00649431 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.05082 @ 95%CL (1 toyMC)
median expected limit: r < 4.05082 @ 95%CL (1 toyMC)
   68% expected band : 4.05082 < r < 4.05082
   95% expected band : 4.05082 < r < 4.05082
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 469591037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86012 +/- 0.00690798 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.86012 @ 95%CL (1 toyMC)
median expected limit: r < 4.86012 @ 95%CL (1 toyMC)
   68% expected band : 4.86012 < r < 4.86012
   95% expected band : 4.86012 < r < 4.86012
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -88025069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.18834 +/- 0.00716184 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.18834 @ 95%CL (1 toyMC)
median expected limit: r < 5.18834 @ 95%CL (1 toyMC)
   68% expected band : 5.18834 < r < 5.18834
   95% expected band : 5.18834 < r < 5.18834
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1549566404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62372 +/- 0.0050477 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.62372 @ 95%CL (1 toyMC)
median expected limit: r < 2.62372 @ 95%CL (1 toyMC)
   68% expected band : 2.62372 < r < 2.62372
   95% expected band : 2.62372 < r < 2.62372
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1530365482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.23606 +/- 0.00659314 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.23606 @ 95%CL (1 toyMC)
median expected limit: r < 2.23606 @ 95%CL (1 toyMC)
   68% expected band : 2.23606 < r < 2.23606
   95% expected band : 2.23606 < r < 2.23606
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1847982386
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.17028 +/- 0.00625702 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.17028 @ 95%CL (1 toyMC)
median expected limit: r < 3.17028 @ 95%CL (1 toyMC)
   68% expected band : 3.17028 < r < 3.17028
   95% expected band : 3.17028 < r < 3.17028
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1353524053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.50429 +/- 0.00607196 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.50429 @ 95%CL (1 toyMC)
median expected limit: r < 3.50429 @ 95%CL (1 toyMC)
   68% expected band : 3.50429 < r < 3.50429
   95% expected band : 3.50429 < r < 3.50429
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -417756282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51878 +/- 0.005814 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.51878 @ 95%CL (1 toyMC)
median expected limit: r < 2.51878 @ 95%CL (1 toyMC)
   68% expected band : 2.51878 < r < 2.51878
   95% expected band : 2.51878 < r < 2.51878
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1780311690
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70404 +/- 0.00658329 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.70404 @ 95%CL (1 toyMC)
median expected limit: r < 2.70404 @ 95%CL (1 toyMC)
   68% expected band : 2.70404 < r < 2.70404
   95% expected band : 2.70404 < r < 2.70404
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -993752053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4537 +/- 0.00596299 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.4537 @ 95%CL (1 toyMC)
median expected limit: r < 3.4537 @ 95%CL (1 toyMC)
   68% expected band : 3.4537 < r < 3.4537
   95% expected band : 3.4537 < r < 3.4537
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1412742209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56913 +/- 0.00542226 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.56913 @ 95%CL (1 toyMC)
median expected limit: r < 4.56913 @ 95%CL (1 toyMC)
   68% expected band : 4.56913 < r < 4.56913
   95% expected band : 4.56913 < r < 4.56913
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -716957397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.23658 +/- 0.00602003 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.23658 @ 95%CL (1 toyMC)
median expected limit: r < 4.23658 @ 95%CL (1 toyMC)
   68% expected band : 4.23658 < r < 4.23658
   95% expected band : 4.23658 < r < 4.23658
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1520819635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1172 +/- 0.00494217 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.1172 @ 95%CL (1 toyMC)
median expected limit: r < 4.1172 @ 95%CL (1 toyMC)
   68% expected band : 4.1172 < r < 4.1172
   95% expected band : 4.1172 < r < 4.1172
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -625071108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.93376 +/- 0.00576652 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.93376 @ 95%CL (1 toyMC)
median expected limit: r < 3.93376 @ 95%CL (1 toyMC)
   68% expected band : 3.93376 < r < 3.93376
   95% expected band : 3.93376 < r < 3.93376
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -485904263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03774 +/- 0.00632468 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.03774 @ 95%CL (1 toyMC)
median expected limit: r < 4.03774 @ 95%CL (1 toyMC)
   68% expected band : 4.03774 < r < 4.03774
   95% expected band : 4.03774 < r < 4.03774
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -220919256
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.48858 +/- 0.00658705 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.48858 @ 95%CL (1 toyMC)
median expected limit: r < 3.48858 @ 95%CL (1 toyMC)
   68% expected band : 3.48858 < r < 3.48858
   95% expected band : 3.48858 < r < 3.48858
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1386934530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.28154 +/- 0.00587108 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.28154 @ 95%CL (1 toyMC)
median expected limit: r < 2.28154 @ 95%CL (1 toyMC)
   68% expected band : 2.28154 < r < 2.28154
   95% expected band : 2.28154 < r < 2.28154
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -259831183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4682 +/- 0.00546818 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.4682 @ 95%CL (1 toyMC)
median expected limit: r < 3.4682 @ 95%CL (1 toyMC)
   68% expected band : 3.4682 < r < 3.4682
   95% expected band : 3.4682 < r < 3.4682
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 193979992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62379 +/- 0.00636537 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.62379 @ 95%CL (1 toyMC)
median expected limit: r < 2.62379 @ 95%CL (1 toyMC)
   68% expected band : 2.62379 < r < 2.62379
   95% expected band : 2.62379 < r < 2.62379
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 927041668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.36802 +/- 0.00574887 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.36802 @ 95%CL (1 toyMC)
median expected limit: r < 5.36802 @ 95%CL (1 toyMC)
   68% expected band : 5.36802 < r < 5.36802
   95% expected band : 5.36802 < r < 5.36802
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -8586107
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74266 +/- 0.00525204 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.74266 @ 95%CL (1 toyMC)
median expected limit: r < 2.74266 @ 95%CL (1 toyMC)
   68% expected band : 2.74266 < r < 2.74266
   95% expected band : 2.74266 < r < 2.74266
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -136468483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.37038 +/- 0.00560125 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.37038 @ 95%CL (1 toyMC)
median expected limit: r < 3.37038 @ 95%CL (1 toyMC)
   68% expected band : 3.37038 < r < 3.37038
   95% expected band : 3.37038 < r < 3.37038
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 142405608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18165 +/- 0.00597787 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.18165 @ 95%CL (1 toyMC)
median expected limit: r < 3.18165 @ 95%CL (1 toyMC)
   68% expected band : 3.18165 < r < 3.18165
   95% expected band : 3.18165 < r < 3.18165
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1038672649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.81158 +/- 0.00584793 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.81158 @ 95%CL (1 toyMC)
median expected limit: r < 4.81158 @ 95%CL (1 toyMC)
   68% expected band : 4.81158 < r < 4.81158
   95% expected band : 4.81158 < r < 4.81158
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1922191130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.10583 +/- 0.0058796 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.10583 @ 95%CL (1 toyMC)
median expected limit: r < 4.10583 @ 95%CL (1 toyMC)
   68% expected band : 4.10583 < r < 4.10583
   95% expected band : 4.10583 < r < 4.10583
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1189362662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.29547 +/- 0.00598885 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.29547 @ 95%CL (1 toyMC)
median expected limit: r < 3.29547 @ 95%CL (1 toyMC)
   68% expected band : 3.29547 < r < 3.29547
   95% expected band : 3.29547 < r < 3.29547
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 903765082
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.32472 +/- 0.00549164 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.32472 @ 95%CL (1 toyMC)
median expected limit: r < 5.32472 @ 95%CL (1 toyMC)
   68% expected band : 5.32472 < r < 5.32472
   95% expected band : 5.32472 < r < 5.32472
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1700623518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1615 +/- 0.00742889 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.1615 @ 95%CL (1 toyMC)
median expected limit: r < 4.1615 @ 95%CL (1 toyMC)
   68% expected band : 4.1615 < r < 4.1615
   95% expected band : 4.1615 < r < 4.1615
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1979424814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10027 +/- 0.00524857 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.10027 @ 95%CL (1 toyMC)
median expected limit: r < 2.10027 @ 95%CL (1 toyMC)
   68% expected band : 2.10027 < r < 2.10027
   95% expected band : 2.10027 < r < 2.10027
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 560199147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70475 +/- 0.00610521 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.70475 @ 95%CL (1 toyMC)
median expected limit: r < 2.70475 @ 95%CL (1 toyMC)
   68% expected band : 2.70475 < r < 2.70475
   95% expected band : 2.70475 < r < 2.70475
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -963808762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.17996 +/- 0.00635966 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.17996 @ 95%CL (1 toyMC)
median expected limit: r < 4.17996 @ 95%CL (1 toyMC)
   68% expected band : 4.17996 < r < 4.17996
   95% expected band : 4.17996 < r < 4.17996
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -985523514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.16979 +/- 0.00562824 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.16979 @ 95%CL (1 toyMC)
median expected limit: r < 2.16979 @ 95%CL (1 toyMC)
   68% expected band : 2.16979 < r < 2.16979
   95% expected band : 2.16979 < r < 2.16979
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1380919727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3713 +/- 0.00593151 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.3713 @ 95%CL (1 toyMC)
median expected limit: r < 2.3713 @ 95%CL (1 toyMC)
   68% expected band : 2.3713 < r < 2.3713
   95% expected band : 2.3713 < r < 2.3713
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -873093343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93746 +/- 0.00504011 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.93746 @ 95%CL (1 toyMC)
median expected limit: r < 1.93746 @ 95%CL (1 toyMC)
   68% expected band : 1.93746 < r < 1.93746
   95% expected band : 1.93746 < r < 1.93746
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1146980636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25109 +/- 0.00603807 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.25109 @ 95%CL (1 toyMC)
median expected limit: r < 3.25109 @ 95%CL (1 toyMC)
   68% expected band : 3.25109 < r < 3.25109
   95% expected band : 3.25109 < r < 3.25109
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 574724625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.59484 +/- 0.00720974 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.59484 @ 95%CL (1 toyMC)
median expected limit: r < 5.59484 @ 95%CL (1 toyMC)
   68% expected band : 5.59484 < r < 5.59484
   95% expected band : 5.59484 < r < 5.59484
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 468360632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.69834 +/- 0.00591072 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.69834 @ 95%CL (1 toyMC)
median expected limit: r < 4.69834 @ 95%CL (1 toyMC)
   68% expected band : 4.69834 < r < 4.69834
   95% expected band : 4.69834 < r < 4.69834
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -635869331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.02462 +/- 0.00673385 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.02462 @ 95%CL (1 toyMC)
median expected limit: r < 4.02462 @ 95%CL (1 toyMC)
   68% expected band : 4.02462 < r < 4.02462
   95% expected band : 4.02462 < r < 4.02462
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1573361945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.98545 +/- 0.00606072 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.98545 @ 95%CL (1 toyMC)
median expected limit: r < 2.98545 @ 95%CL (1 toyMC)
   68% expected band : 2.98545 < r < 2.98545
   95% expected band : 2.98545 < r < 2.98545
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1421719364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.65753 +/- 0.00547448 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.65753 @ 95%CL (1 toyMC)
median expected limit: r < 4.65753 @ 95%CL (1 toyMC)
   68% expected band : 4.65753 < r < 4.65753
   95% expected band : 4.65753 < r < 4.65753
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1202916200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0709 +/- 0.00493026 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.0709 @ 95%CL (1 toyMC)
median expected limit: r < 5.0709 @ 95%CL (1 toyMC)
   68% expected band : 5.0709 < r < 5.0709
   95% expected band : 5.0709 < r < 5.0709
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1006760621
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18663 +/- 0.00464135 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.18663 @ 95%CL (1 toyMC)
median expected limit: r < 2.18663 @ 95%CL (1 toyMC)
   68% expected band : 2.18663 < r < 2.18663
   95% expected band : 2.18663 < r < 2.18663
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1412175305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13721 +/- 0.00586732 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.13721 @ 95%CL (1 toyMC)
median expected limit: r < 3.13721 @ 95%CL (1 toyMC)
   68% expected band : 3.13721 < r < 3.13721
   95% expected band : 3.13721 < r < 3.13721
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1921276278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.21167 +/- 0.00600284 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.21167 @ 95%CL (1 toyMC)
median expected limit: r < 3.21167 @ 95%CL (1 toyMC)
   68% expected band : 3.21167 < r < 3.21167
   95% expected band : 3.21167 < r < 3.21167
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 117754093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95574 +/- 0.00637014 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.95574 @ 95%CL (1 toyMC)
median expected limit: r < 1.95574 @ 95%CL (1 toyMC)
   68% expected band : 1.95574 < r < 1.95574
   95% expected band : 1.95574 < r < 1.95574
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -323579871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68442 +/- 0.00538413 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.68442 @ 95%CL (1 toyMC)
median expected limit: r < 2.68442 @ 95%CL (1 toyMC)
   68% expected band : 2.68442 < r < 2.68442
   95% expected band : 2.68442 < r < 2.68442
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1883976831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.80427 +/- 0.0069858 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.80427 @ 95%CL (1 toyMC)
median expected limit: r < 6.80427 @ 95%CL (1 toyMC)
   68% expected band : 6.80427 < r < 6.80427
   95% expected band : 6.80427 < r < 6.80427
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 151612586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85406 +/- 0.00712214 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.85406 @ 95%CL (1 toyMC)
median expected limit: r < 2.85406 @ 95%CL (1 toyMC)
   68% expected band : 2.85406 < r < 2.85406
   95% expected band : 2.85406 < r < 2.85406
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 754195998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34072 +/- 0.00510886 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.34072 @ 95%CL (1 toyMC)
median expected limit: r < 2.34072 @ 95%CL (1 toyMC)
   68% expected band : 2.34072 < r < 2.34072
   95% expected band : 2.34072 < r < 2.34072
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 722078958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41447 +/- 0.00682081 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.41447 @ 95%CL (1 toyMC)
median expected limit: r < 2.41447 @ 95%CL (1 toyMC)
   68% expected band : 2.41447 < r < 2.41447
   95% expected band : 2.41447 < r < 2.41447
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2078418697
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.26643 +/- 0.00626698 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.26643 @ 95%CL (1 toyMC)
median expected limit: r < 4.26643 @ 95%CL (1 toyMC)
   68% expected band : 4.26643 < r < 4.26643
   95% expected band : 4.26643 < r < 4.26643
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1725460058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.05961 +/- 0.00572132 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.05961 @ 95%CL (1 toyMC)
median expected limit: r < 2.05961 @ 95%CL (1 toyMC)
   68% expected band : 2.05961 < r < 2.05961
   95% expected band : 2.05961 < r < 2.05961
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1209831098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.2093 +/- 0.00498156 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.2093 @ 95%CL (1 toyMC)
median expected limit: r < 3.2093 @ 95%CL (1 toyMC)
   68% expected band : 3.2093 < r < 3.2093
   95% expected band : 3.2093 < r < 3.2093
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1194805317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.49999 +/- 0.00595949 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.49999 @ 95%CL (1 toyMC)
median expected limit: r < 4.49999 @ 95%CL (1 toyMC)
   68% expected band : 4.49999 < r < 4.49999
   95% expected band : 4.49999 < r < 4.49999
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1329313092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.58153 +/- 0.00673312 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.58153 @ 95%CL (1 toyMC)
median expected limit: r < 3.58153 @ 95%CL (1 toyMC)
   68% expected band : 3.58153 < r < 3.58153
   95% expected band : 3.58153 < r < 3.58153
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1762434803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.05001 +/- 0.00589056 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.05001 @ 95%CL (1 toyMC)
median expected limit: r < 2.05001 @ 95%CL (1 toyMC)
   68% expected band : 2.05001 < r < 2.05001
   95% expected band : 2.05001 < r < 2.05001
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 487439169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88651 +/- 0.00565655 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.88651 @ 95%CL (1 toyMC)
median expected limit: r < 2.88651 @ 95%CL (1 toyMC)
   68% expected band : 2.88651 < r < 2.88651
   95% expected band : 2.88651 < r < 2.88651
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1843003499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.31182 +/- 0.0080797 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.31182 @ 95%CL (1 toyMC)
median expected limit: r < 4.31182 @ 95%CL (1 toyMC)
   68% expected band : 4.31182 < r < 4.31182
   95% expected band : 4.31182 < r < 4.31182
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1140059757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.9517 +/- 0.00578865 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.9517 @ 95%CL (1 toyMC)
median expected limit: r < 2.9517 @ 95%CL (1 toyMC)
   68% expected band : 2.9517 < r < 2.9517
   95% expected band : 2.9517 < r < 2.9517
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -35208758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.66794 +/- 0.00670125 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.66794 @ 95%CL (1 toyMC)
median expected limit: r < 4.66794 @ 95%CL (1 toyMC)
   68% expected band : 4.66794 < r < 4.66794
   95% expected band : 4.66794 < r < 4.66794
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1764760581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.44768 +/- 0.00642959 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.44768 @ 95%CL (1 toyMC)
median expected limit: r < 3.44768 @ 95%CL (1 toyMC)
   68% expected band : 3.44768 < r < 3.44768
   95% expected band : 3.44768 < r < 3.44768
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1172553781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13023 +/- 0.00679004 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.13023 @ 95%CL (1 toyMC)
median expected limit: r < 3.13023 @ 95%CL (1 toyMC)
   68% expected band : 3.13023 < r < 3.13023
   95% expected band : 3.13023 < r < 3.13023
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1367457560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.00306 +/- 0.00496285 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.00306 @ 95%CL (1 toyMC)
median expected limit: r < 5.00306 @ 95%CL (1 toyMC)
   68% expected band : 5.00306 < r < 5.00306
   95% expected band : 5.00306 < r < 5.00306
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1400935789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.18148 +/- 0.00580479 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.18148 @ 95%CL (1 toyMC)
median expected limit: r < 4.18148 @ 95%CL (1 toyMC)
   68% expected band : 4.18148 < r < 4.18148
   95% expected band : 4.18148 < r < 4.18148
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -75880028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06773 +/- 0.00500961 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.06773 @ 95%CL (1 toyMC)
median expected limit: r < 2.06773 @ 95%CL (1 toyMC)
   68% expected band : 2.06773 < r < 2.06773
   95% expected band : 2.06773 < r < 2.06773
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1915343996
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25639 +/- 0.00628822 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.25639 @ 95%CL (1 toyMC)
median expected limit: r < 3.25639 @ 95%CL (1 toyMC)
   68% expected band : 3.25639 < r < 3.25639
   95% expected band : 3.25639 < r < 3.25639
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680055012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3544 +/- 0.00614452 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.3544 @ 95%CL (1 toyMC)
median expected limit: r < 3.3544 @ 95%CL (1 toyMC)
   68% expected band : 3.3544 < r < 3.3544
   95% expected band : 3.3544 < r < 3.3544
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 820692514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.07808 +/- 0.00661542 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.07808 @ 95%CL (1 toyMC)
median expected limit: r < 4.07808 @ 95%CL (1 toyMC)
   68% expected band : 4.07808 < r < 4.07808
   95% expected band : 4.07808 < r < 4.07808
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -395955939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.5895 +/- 0.00649312 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.5895 @ 95%CL (1 toyMC)
median expected limit: r < 3.5895 @ 95%CL (1 toyMC)
   68% expected band : 3.5895 < r < 3.5895
   95% expected band : 3.5895 < r < 3.5895
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -459805208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.17631 +/- 0.00580333 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.17631 @ 95%CL (1 toyMC)
median expected limit: r < 2.17631 @ 95%CL (1 toyMC)
   68% expected band : 2.17631 < r < 2.17631
   95% expected band : 2.17631 < r < 2.17631
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -497087790
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75715 +/- 0.00549808 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.75715 @ 95%CL (1 toyMC)
median expected limit: r < 2.75715 @ 95%CL (1 toyMC)
   68% expected band : 2.75715 < r < 2.75715
   95% expected band : 2.75715 < r < 2.75715
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1592945720
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.93674 +/- 0.00531423 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.93674 @ 95%CL (1 toyMC)
median expected limit: r < 6.93674 @ 95%CL (1 toyMC)
   68% expected band : 6.93674 < r < 6.93674
   95% expected band : 6.93674 < r < 6.93674
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -234299550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68681 +/- 0.00512367 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.68681 @ 95%CL (1 toyMC)
median expected limit: r < 2.68681 @ 95%CL (1 toyMC)
   68% expected band : 2.68681 < r < 2.68681
   95% expected band : 2.68681 < r < 2.68681
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -484416778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.919 +/- 0.00555508 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.919 @ 95%CL (1 toyMC)
median expected limit: r < 2.919 @ 95%CL (1 toyMC)
   68% expected band : 2.919 < r < 2.919
   95% expected band : 2.919 < r < 2.919
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1174045524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.4623 +/- 0.00600519 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.4623 @ 95%CL (1 toyMC)
median expected limit: r < 4.4623 @ 95%CL (1 toyMC)
   68% expected band : 4.4623 < r < 4.4623
   95% expected band : 4.4623 < r < 4.4623
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 206973331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89337 +/- 0.00581087 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.89337 @ 95%CL (1 toyMC)
median expected limit: r < 2.89337 @ 95%CL (1 toyMC)
   68% expected band : 2.89337 < r < 2.89337
   95% expected band : 2.89337 < r < 2.89337
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 998495377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.96112 +/- 0.00609276 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.96112 @ 95%CL (1 toyMC)
median expected limit: r < 2.96112 @ 95%CL (1 toyMC)
   68% expected band : 2.96112 < r < 2.96112
   95% expected band : 2.96112 < r < 2.96112
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1006760621.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1146701647.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1174045524.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1194805317.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1238006825.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1320073093.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-136468483.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1367457560.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1380919727.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1401574713.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1520819635.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1530365482.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1700623518.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1762434803.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-183645625.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1915343996.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1979424814.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-2078418697.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-2119768879.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-220919256.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-234299550.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-245085082.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-259831183.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-323579871.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-35208758.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-395955939.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-417756282.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-42711979.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-459805208.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-484416778.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-485904263.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-497087790.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-503582330.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-625071108.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-635869331.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-706818749.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-716957397.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-75880028.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-8586107.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-873093343.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-88025069.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-963808762.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-985523514.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-99278493.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-993752053.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.1038672649.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1100157768.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1140059757.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1146980636.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1172553781.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.117754093.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1189362662.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1202916200.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1209831098.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1254931625.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.132393643.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1329313092.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1353524053.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1386934530.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1400935789.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1412175305.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1412742209.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1421719364.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.142405608.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1460072696.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.151612586.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1543791092.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1549566404.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1573361945.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1592945720.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1680055012.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1725460058.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1764760581.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1780311690.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1843003499.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1847982386.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1883976831.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1921276278.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1922191130.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.193979992.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2006749550.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2034923221.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.206973331.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.225158505.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.315955380.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.35523967.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.468360632.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.469591037.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.487439169.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.55288791.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.560199147.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.574724625.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.722078958.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.754195998.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.757267384.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.78114998.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.820692514.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.903765082.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.927041668.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.998495377.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -844894535
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71715 +/- 0.00495579 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.71715 @ 95%CL (1 toyMC)
median expected limit: r < 1.71715 @ 95%CL (1 toyMC)
   68% expected band : 1.71715 < r < 1.71715
   95% expected band : 1.71715 < r < 1.71715
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 837070780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3928 +/- 0.00394938 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.3928 @ 95%CL (1 toyMC)
median expected limit: r < 1.3928 @ 95%CL (1 toyMC)
   68% expected band : 1.3928 < r < 1.3928
   95% expected band : 1.3928 < r < 1.3928
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1208215451
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98557 +/- 0.00512785 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.98557 @ 95%CL (1 toyMC)
median expected limit: r < 1.98557 @ 95%CL (1 toyMC)
   68% expected band : 1.98557 < r < 1.98557
   95% expected band : 1.98557 < r < 1.98557
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -757713744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4939 +/- 0.00487309 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.4939 @ 95%CL (1 toyMC)
median expected limit: r < 1.4939 @ 95%CL (1 toyMC)
   68% expected band : 1.4939 < r < 1.4939
   95% expected band : 1.4939 < r < 1.4939
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -74618582
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67896 +/- 0.00505004 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.67896 @ 95%CL (1 toyMC)
median expected limit: r < 1.67896 @ 95%CL (1 toyMC)
   68% expected band : 1.67896 < r < 1.67896
   95% expected band : 1.67896 < r < 1.67896
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 941173401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.24375 +/- 0.00491529 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.24375 @ 95%CL (1 toyMC)
median expected limit: r < 2.24375 @ 95%CL (1 toyMC)
   68% expected band : 2.24375 < r < 2.24375
   95% expected band : 2.24375 < r < 2.24375
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1694705751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.865667 +/- 0.0039131 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.865667 @ 95%CL (1 toyMC)
median expected limit: r < 0.865667 @ 95%CL (1 toyMC)
   68% expected band : 0.865667 < r < 0.865667
   95% expected band : 0.865667 < r < 0.865667
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1472120022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.899941 +/- 0.00343294 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.899941 @ 95%CL (1 toyMC)
median expected limit: r < 0.899941 @ 95%CL (1 toyMC)
   68% expected band : 0.899941 < r < 0.899941
   95% expected band : 0.899941 < r < 0.899941
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1161637982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77972 +/- 0.00539175 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.77972 @ 95%CL (1 toyMC)
median expected limit: r < 1.77972 @ 95%CL (1 toyMC)
   68% expected band : 1.77972 < r < 1.77972
   95% expected band : 1.77972 < r < 1.77972
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2068786527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13121 +/- 0.00432561 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.13121 @ 95%CL (1 toyMC)
median expected limit: r < 1.13121 @ 95%CL (1 toyMC)
   68% expected band : 1.13121 < r < 1.13121
   95% expected band : 1.13121 < r < 1.13121
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 463224674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47126 +/- 0.00494851 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.47126 @ 95%CL (1 toyMC)
median expected limit: r < 1.47126 @ 95%CL (1 toyMC)
   68% expected band : 1.47126 < r < 1.47126
   95% expected band : 1.47126 < r < 1.47126
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -248390165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17181 +/- 0.00494674 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.17181 @ 95%CL (1 toyMC)
median expected limit: r < 1.17181 @ 95%CL (1 toyMC)
   68% expected band : 1.17181 < r < 1.17181
   95% expected band : 1.17181 < r < 1.17181
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1209251194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3356 +/- 0.00388037 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.3356 @ 95%CL (1 toyMC)
median expected limit: r < 1.3356 @ 95%CL (1 toyMC)
   68% expected band : 1.3356 < r < 1.3356
   95% expected band : 1.3356 < r < 1.3356
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1410298819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46653 +/- 0.00434788 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.46653 @ 95%CL (1 toyMC)
median expected limit: r < 2.46653 @ 95%CL (1 toyMC)
   68% expected band : 2.46653 < r < 2.46653
   95% expected band : 2.46653 < r < 2.46653
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1574161318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1808 +/- 0.00517962 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.1808 @ 95%CL (1 toyMC)
median expected limit: r < 2.1808 @ 95%CL (1 toyMC)
   68% expected band : 2.1808 < r < 2.1808
   95% expected band : 2.1808 < r < 2.1808
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1427694970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.955762 +/- 0.00375441 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.955762 @ 95%CL (1 toyMC)
median expected limit: r < 0.955762 @ 95%CL (1 toyMC)
   68% expected band : 0.955762 < r < 0.955762
   95% expected band : 0.955762 < r < 0.955762
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1738617795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31108 +/- 0.00461594 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.31108 @ 95%CL (1 toyMC)
median expected limit: r < 1.31108 @ 95%CL (1 toyMC)
   68% expected band : 1.31108 < r < 1.31108
   95% expected band : 1.31108 < r < 1.31108
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 20111505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.64962 +/- 0.00441641 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.64962 @ 95%CL (1 toyMC)
median expected limit: r < 1.64962 @ 95%CL (1 toyMC)
   68% expected band : 1.64962 < r < 1.64962
   95% expected band : 1.64962 < r < 1.64962
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1491559415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0842 +/- 0.00519715 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.0842 @ 95%CL (1 toyMC)
median expected limit: r < 2.0842 @ 95%CL (1 toyMC)
   68% expected band : 2.0842 < r < 2.0842
   95% expected band : 2.0842 < r < 2.0842
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1969131152
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.945002 +/- 0.00402083 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.945002 @ 95%CL (1 toyMC)
median expected limit: r < 0.945002 @ 95%CL (1 toyMC)
   68% expected band : 0.945002 < r < 0.945002
   95% expected band : 0.945002 < r < 0.945002
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -74138735
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.55538 +/- 0.00475667 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.55538 @ 95%CL (1 toyMC)
median expected limit: r < 1.55538 @ 95%CL (1 toyMC)
   68% expected band : 1.55538 < r < 1.55538
   95% expected band : 1.55538 < r < 1.55538
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1652532253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8972 +/- 0.00460644 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.8972 @ 95%CL (1 toyMC)
median expected limit: r < 1.8972 @ 95%CL (1 toyMC)
   68% expected band : 1.8972 < r < 1.8972
   95% expected band : 1.8972 < r < 1.8972
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -844962117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03022 +/- 0.00535065 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.03022 @ 95%CL (1 toyMC)
median expected limit: r < 2.03022 @ 95%CL (1 toyMC)
   68% expected band : 2.03022 < r < 2.03022
   95% expected band : 2.03022 < r < 2.03022
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1283699438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2132 +/- 0.00351104 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.2132 @ 95%CL (1 toyMC)
median expected limit: r < 1.2132 @ 95%CL (1 toyMC)
   68% expected band : 1.2132 < r < 1.2132
   95% expected band : 1.2132 < r < 1.2132
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 301799056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76082 +/- 0.00442703 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76082 @ 95%CL (1 toyMC)
median expected limit: r < 1.76082 @ 95%CL (1 toyMC)
   68% expected band : 1.76082 < r < 1.76082
   95% expected band : 1.76082 < r < 1.76082
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -517866503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99051 +/- 0.00527709 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.99051 @ 95%CL (1 toyMC)
median expected limit: r < 1.99051 @ 95%CL (1 toyMC)
   68% expected band : 1.99051 < r < 1.99051
   95% expected band : 1.99051 < r < 1.99051
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1418896407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34849 +/- 0.00519182 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.34849 @ 95%CL (1 toyMC)
median expected limit: r < 2.34849 @ 95%CL (1 toyMC)
   68% expected band : 2.34849 < r < 2.34849
   95% expected band : 2.34849 < r < 2.34849
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 568418991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12048 +/- 0.00562576 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.12048 @ 95%CL (1 toyMC)
median expected limit: r < 2.12048 @ 95%CL (1 toyMC)
   68% expected band : 2.12048 < r < 2.12048
   95% expected band : 2.12048 < r < 2.12048
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1940481281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43579 +/- 0.00620735 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.43579 @ 95%CL (1 toyMC)
median expected limit: r < 1.43579 @ 95%CL (1 toyMC)
   68% expected band : 1.43579 < r < 1.43579
   95% expected band : 1.43579 < r < 1.43579
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1950842693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29108 +/- 0.00401362 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.29108 @ 95%CL (1 toyMC)
median expected limit: r < 1.29108 @ 95%CL (1 toyMC)
   68% expected band : 1.29108 < r < 1.29108
   95% expected band : 1.29108 < r < 1.29108
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1868123540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03537 +/- 0.00400251 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.03537 @ 95%CL (1 toyMC)
median expected limit: r < 1.03537 @ 95%CL (1 toyMC)
   68% expected band : 1.03537 < r < 1.03537
   95% expected band : 1.03537 < r < 1.03537
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -583880606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.59536 +/- 0.00611843 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.59536 @ 95%CL (1 toyMC)
median expected limit: r < 2.59536 @ 95%CL (1 toyMC)
   68% expected band : 2.59536 < r < 2.59536
   95% expected band : 2.59536 < r < 2.59536
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1754016239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36979 +/- 0.00541337 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.36979 @ 95%CL (1 toyMC)
median expected limit: r < 1.36979 @ 95%CL (1 toyMC)
   68% expected band : 1.36979 < r < 1.36979
   95% expected band : 1.36979 < r < 1.36979
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1079828877
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39421 +/- 0.00395091 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.39421 @ 95%CL (1 toyMC)
median expected limit: r < 1.39421 @ 95%CL (1 toyMC)
   68% expected band : 1.39421 < r < 1.39421
   95% expected band : 1.39421 < r < 1.39421
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1477527944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79011 +/- 0.00502827 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.79011 @ 95%CL (1 toyMC)
median expected limit: r < 1.79011 @ 95%CL (1 toyMC)
   68% expected band : 1.79011 < r < 1.79011
   95% expected band : 1.79011 < r < 1.79011
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1480198849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93567 +/- 0.00499607 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.93567 @ 95%CL (1 toyMC)
median expected limit: r < 1.93567 @ 95%CL (1 toyMC)
   68% expected band : 1.93567 < r < 1.93567
   95% expected band : 1.93567 < r < 1.93567
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1539412350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.26071 +/- 0.00475419 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.26071 @ 95%CL (1 toyMC)
median expected limit: r < 2.26071 @ 95%CL (1 toyMC)
   68% expected band : 2.26071 < r < 2.26071
   95% expected band : 2.26071 < r < 2.26071
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1990625435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16165 +/- 0.00503952 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.16165 @ 95%CL (1 toyMC)
median expected limit: r < 1.16165 @ 95%CL (1 toyMC)
   68% expected band : 1.16165 < r < 1.16165
   95% expected band : 1.16165 < r < 1.16165
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -431270440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32046 +/- 0.00405516 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.32046 @ 95%CL (1 toyMC)
median expected limit: r < 1.32046 @ 95%CL (1 toyMC)
   68% expected band : 1.32046 < r < 1.32046
   95% expected band : 1.32046 < r < 1.32046
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1547784446
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94926 +/- 0.00502288 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.94926 @ 95%CL (1 toyMC)
median expected limit: r < 1.94926 @ 95%CL (1 toyMC)
   68% expected band : 1.94926 < r < 1.94926
   95% expected band : 1.94926 < r < 1.94926
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1524921368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02165 +/- 0.00556669 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02165 @ 95%CL (1 toyMC)
median expected limit: r < 2.02165 @ 95%CL (1 toyMC)
   68% expected band : 2.02165 < r < 2.02165
   95% expected band : 2.02165 < r < 2.02165
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -294228715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22843 +/- 0.00480647 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.22843 @ 95%CL (1 toyMC)
median expected limit: r < 1.22843 @ 95%CL (1 toyMC)
   68% expected band : 1.22843 < r < 1.22843
   95% expected band : 1.22843 < r < 1.22843
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1578974037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94911 +/- 0.0045414 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.94911 @ 95%CL (1 toyMC)
median expected limit: r < 1.94911 @ 95%CL (1 toyMC)
   68% expected band : 1.94911 < r < 1.94911
   95% expected band : 1.94911 < r < 1.94911
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -581625094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.967346 +/- 0.00449794 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.967346 @ 95%CL (1 toyMC)
median expected limit: r < 0.967346 @ 95%CL (1 toyMC)
   68% expected band : 0.967346 < r < 0.967346
   95% expected band : 0.967346 < r < 0.967346
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1860055269
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.889241 +/- 0.00401275 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.889241 @ 95%CL (1 toyMC)
median expected limit: r < 0.889241 @ 95%CL (1 toyMC)
   68% expected band : 0.889241 < r < 0.889241
   95% expected band : 0.889241 < r < 0.889241
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1176969397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.199 +/- 0.00571521 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.199 @ 95%CL (1 toyMC)
median expected limit: r < 2.199 @ 95%CL (1 toyMC)
   68% expected band : 2.199 < r < 2.199
   95% expected band : 2.199 < r < 2.199
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1675569368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.950199 +/- 0.00288371 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.950199 @ 95%CL (1 toyMC)
median expected limit: r < 0.950199 @ 95%CL (1 toyMC)
   68% expected band : 0.950199 < r < 0.950199
   95% expected band : 0.950199 < r < 0.950199
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1724821032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.54792 +/- 0.00529762 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.54792 @ 95%CL (1 toyMC)
median expected limit: r < 1.54792 @ 95%CL (1 toyMC)
   68% expected band : 1.54792 < r < 1.54792
   95% expected band : 1.54792 < r < 1.54792
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -153142997
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94578 +/- 0.00496605 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.94578 @ 95%CL (1 toyMC)
median expected limit: r < 1.94578 @ 95%CL (1 toyMC)
   68% expected band : 1.94578 < r < 1.94578
   95% expected band : 1.94578 < r < 1.94578
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -940011662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44367 +/- 0.00477376 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.44367 @ 95%CL (1 toyMC)
median expected limit: r < 1.44367 @ 95%CL (1 toyMC)
   68% expected band : 1.44367 < r < 1.44367
   95% expected band : 1.44367 < r < 1.44367
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -685456924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42163 +/- 0.00440182 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.42163 @ 95%CL (1 toyMC)
median expected limit: r < 1.42163 @ 95%CL (1 toyMC)
   68% expected band : 1.42163 < r < 1.42163
   95% expected band : 1.42163 < r < 1.42163
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 251664544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.07188 +/- 0.00448243 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.07188 @ 95%CL (1 toyMC)
median expected limit: r < 2.07188 @ 95%CL (1 toyMC)
   68% expected band : 2.07188 < r < 2.07188
   95% expected band : 2.07188 < r < 2.07188
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1740081395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7781 +/- 0.0051905 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.7781 @ 95%CL (1 toyMC)
median expected limit: r < 1.7781 @ 95%CL (1 toyMC)
   68% expected band : 1.7781 < r < 1.7781
   95% expected band : 1.7781 < r < 1.7781
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 961820760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.31918 +/- 0.00445975 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.31918 @ 95%CL (1 toyMC)
median expected limit: r < 2.31918 @ 95%CL (1 toyMC)
   68% expected band : 2.31918 < r < 2.31918
   95% expected band : 2.31918 < r < 2.31918
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1456615697
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56202 +/- 0.00524224 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.56202 @ 95%CL (1 toyMC)
median expected limit: r < 1.56202 @ 95%CL (1 toyMC)
   68% expected band : 1.56202 < r < 1.56202
   95% expected band : 1.56202 < r < 1.56202
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 409048133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.973211 +/- 0.00366283 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.973211 @ 95%CL (1 toyMC)
median expected limit: r < 0.973211 @ 95%CL (1 toyMC)
   68% expected band : 0.973211 < r < 0.973211
   95% expected band : 0.973211 < r < 0.973211
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1756777177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40903 +/- 0.00447374 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.40903 @ 95%CL (1 toyMC)
median expected limit: r < 2.40903 @ 95%CL (1 toyMC)
   68% expected band : 2.40903 < r < 2.40903
   95% expected band : 2.40903 < r < 2.40903
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1082357686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92294 +/- 0.0040143 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.92294 @ 95%CL (1 toyMC)
median expected limit: r < 1.92294 @ 95%CL (1 toyMC)
   68% expected band : 1.92294 < r < 1.92294
   95% expected band : 1.92294 < r < 1.92294
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 21488133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30897 +/- 0.0051129 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.30897 @ 95%CL (1 toyMC)
median expected limit: r < 1.30897 @ 95%CL (1 toyMC)
   68% expected band : 1.30897 < r < 1.30897
   95% expected band : 1.30897 < r < 1.30897
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 44186510
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24723 +/- 0.00418405 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.24723 @ 95%CL (1 toyMC)
median expected limit: r < 1.24723 @ 95%CL (1 toyMC)
   68% expected band : 1.24723 < r < 1.24723
   95% expected band : 1.24723 < r < 1.24723
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1628948433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36124 +/- 0.00481263 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.36124 @ 95%CL (1 toyMC)
median expected limit: r < 1.36124 @ 95%CL (1 toyMC)
   68% expected band : 1.36124 < r < 1.36124
   95% expected band : 1.36124 < r < 1.36124
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 957766668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67769 +/- 0.00616542 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.67769 @ 95%CL (1 toyMC)
median expected limit: r < 1.67769 @ 95%CL (1 toyMC)
   68% expected band : 1.67769 < r < 1.67769
   95% expected band : 1.67769 < r < 1.67769
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -252860630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00184 +/- 0.00426611 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.00184 @ 95%CL (1 toyMC)
median expected limit: r < 2.00184 @ 95%CL (1 toyMC)
   68% expected band : 2.00184 < r < 2.00184
   95% expected band : 2.00184 < r < 2.00184
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 133400731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28998 +/- 0.00425724 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.28998 @ 95%CL (1 toyMC)
median expected limit: r < 1.28998 @ 95%CL (1 toyMC)
   68% expected band : 1.28998 < r < 1.28998
   95% expected band : 1.28998 < r < 1.28998
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -78378633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70261 +/- 0.00546628 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.70261 @ 95%CL (1 toyMC)
median expected limit: r < 1.70261 @ 95%CL (1 toyMC)
   68% expected band : 1.70261 < r < 1.70261
   95% expected band : 1.70261 < r < 1.70261
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 554305377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30643 +/- 0.00542119 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.30643 @ 95%CL (1 toyMC)
median expected limit: r < 1.30643 @ 95%CL (1 toyMC)
   68% expected band : 1.30643 < r < 1.30643
   95% expected band : 1.30643 < r < 1.30643
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1958672516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90408 +/- 0.00493601 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.90408 @ 95%CL (1 toyMC)
median expected limit: r < 1.90408 @ 95%CL (1 toyMC)
   68% expected band : 1.90408 < r < 1.90408
   95% expected band : 1.90408 < r < 1.90408
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 920444722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46331 +/- 0.00415433 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.46331 @ 95%CL (1 toyMC)
median expected limit: r < 1.46331 @ 95%CL (1 toyMC)
   68% expected band : 1.46331 < r < 1.46331
   95% expected band : 1.46331 < r < 1.46331
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1742585142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81586 +/- 0.00452682 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.81586 @ 95%CL (1 toyMC)
median expected limit: r < 1.81586 @ 95%CL (1 toyMC)
   68% expected band : 1.81586 < r < 1.81586
   95% expected band : 1.81586 < r < 1.81586
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 454093073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.908567 +/- 0.003797 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.908567 @ 95%CL (1 toyMC)
median expected limit: r < 0.908567 @ 95%CL (1 toyMC)
   68% expected band : 0.908567 < r < 0.908567
   95% expected band : 0.908567 < r < 0.908567
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1019279887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37087 +/- 0.00478799 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.37087 @ 95%CL (1 toyMC)
median expected limit: r < 2.37087 @ 95%CL (1 toyMC)
   68% expected band : 2.37087 < r < 2.37087
   95% expected band : 2.37087 < r < 2.37087
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -456117481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.64809 +/- 0.00505189 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.64809 @ 95%CL (1 toyMC)
median expected limit: r < 2.64809 @ 95%CL (1 toyMC)
   68% expected band : 2.64809 < r < 2.64809
   95% expected band : 2.64809 < r < 2.64809
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1250779390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.10695 +/- 0.00482852 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.10695 @ 95%CL (1 toyMC)
median expected limit: r < 3.10695 @ 95%CL (1 toyMC)
   68% expected band : 3.10695 < r < 3.10695
   95% expected band : 3.10695 < r < 3.10695
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 757680278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40531 +/- 0.00434383 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.40531 @ 95%CL (1 toyMC)
median expected limit: r < 2.40531 @ 95%CL (1 toyMC)
   68% expected band : 2.40531 < r < 2.40531
   95% expected band : 2.40531 < r < 2.40531
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1525544374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52588 +/- 0.00488969 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.52588 @ 95%CL (1 toyMC)
median expected limit: r < 1.52588 @ 95%CL (1 toyMC)
   68% expected band : 1.52588 < r < 1.52588
   95% expected band : 1.52588 < r < 1.52588
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -355237272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58012 +/- 0.00501724 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.58012 @ 95%CL (1 toyMC)
median expected limit: r < 1.58012 @ 95%CL (1 toyMC)
   68% expected band : 1.58012 < r < 1.58012
   95% expected band : 1.58012 < r < 1.58012
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2138739590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.473 +/- 0.00509402 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.473 @ 95%CL (1 toyMC)
median expected limit: r < 1.473 @ 95%CL (1 toyMC)
   68% expected band : 1.473 < r < 1.473
   95% expected band : 1.473 < r < 1.473
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1658240457
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17929 +/- 0.00357813 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.17929 @ 95%CL (1 toyMC)
median expected limit: r < 1.17929 @ 95%CL (1 toyMC)
   68% expected band : 1.17929 < r < 1.17929
   95% expected band : 1.17929 < r < 1.17929
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1759915327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66633 +/- 0.00478783 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.66633 @ 95%CL (1 toyMC)
median expected limit: r < 1.66633 @ 95%CL (1 toyMC)
   68% expected band : 1.66633 < r < 1.66633
   95% expected band : 1.66633 < r < 1.66633
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -318712722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40903 +/- 0.00507272 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.40903 @ 95%CL (1 toyMC)
median expected limit: r < 1.40903 @ 95%CL (1 toyMC)
   68% expected band : 1.40903 < r < 1.40903
   95% expected band : 1.40903 < r < 1.40903
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1072238035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48419 +/- 0.00601414 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.48419 @ 95%CL (1 toyMC)
median expected limit: r < 2.48419 @ 95%CL (1 toyMC)
   68% expected band : 2.48419 < r < 2.48419
   95% expected band : 2.48419 < r < 2.48419
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 167661892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51806 +/- 0.00485737 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.51806 @ 95%CL (1 toyMC)
median expected limit: r < 1.51806 @ 95%CL (1 toyMC)
   68% expected band : 1.51806 < r < 1.51806
   95% expected band : 1.51806 < r < 1.51806
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1341558995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.36825 +/- 0.00526056 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.36825 @ 95%CL (1 toyMC)
median expected limit: r < 3.36825 @ 95%CL (1 toyMC)
   68% expected band : 3.36825 < r < 3.36825
   95% expected band : 3.36825 < r < 3.36825
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 406732893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08771 +/- 0.00445444 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.08771 @ 95%CL (1 toyMC)
median expected limit: r < 1.08771 @ 95%CL (1 toyMC)
   68% expected band : 1.08771 < r < 1.08771
   95% expected band : 1.08771 < r < 1.08771
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1096048358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19761 +/- 0.00491824 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.19761 @ 95%CL (1 toyMC)
median expected limit: r < 1.19761 @ 95%CL (1 toyMC)
   68% expected band : 1.19761 < r < 1.19761
   95% expected band : 1.19761 < r < 1.19761
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1311565723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12359 +/- 0.00312199 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12359 @ 95%CL (1 toyMC)
median expected limit: r < 1.12359 @ 95%CL (1 toyMC)
   68% expected band : 1.12359 < r < 1.12359
   95% expected band : 1.12359 < r < 1.12359
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1957455205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30709 +/- 0.00513304 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.30709 @ 95%CL (1 toyMC)
median expected limit: r < 1.30709 @ 95%CL (1 toyMC)
   68% expected band : 1.30709 < r < 1.30709
   95% expected band : 1.30709 < r < 1.30709
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1934601567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05061 +/- 0.00421193 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.05061 @ 95%CL (1 toyMC)
median expected limit: r < 1.05061 @ 95%CL (1 toyMC)
   68% expected band : 1.05061 < r < 1.05061
   95% expected band : 1.05061 < r < 1.05061
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2057546159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63686 +/- 0.00466785 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.63686 @ 95%CL (1 toyMC)
median expected limit: r < 1.63686 @ 95%CL (1 toyMC)
   68% expected band : 1.63686 < r < 1.63686
   95% expected band : 1.63686 < r < 1.63686
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 139976628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4599 +/- 0.00417372 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.4599 @ 95%CL (1 toyMC)
median expected limit: r < 1.4599 @ 95%CL (1 toyMC)
   68% expected band : 1.4599 < r < 1.4599
   95% expected band : 1.4599 < r < 1.4599
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1034103194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.54523 +/- 0.00426333 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.54523 @ 95%CL (1 toyMC)
median expected limit: r < 1.54523 @ 95%CL (1 toyMC)
   68% expected band : 1.54523 < r < 1.54523
   95% expected band : 1.54523 < r < 1.54523
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -211763343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.75105 +/- 0.00424616 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.75105 @ 95%CL (1 toyMC)
median expected limit: r < 1.75105 @ 95%CL (1 toyMC)
   68% expected band : 1.75105 < r < 1.75105
   95% expected band : 1.75105 < r < 1.75105
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 111870755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38307 +/- 0.00407018 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.38307 @ 95%CL (1 toyMC)
median expected limit: r < 1.38307 @ 95%CL (1 toyMC)
   68% expected band : 1.38307 < r < 1.38307
   95% expected band : 1.38307 < r < 1.38307
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1277626616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70403 +/- 0.00452059 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.70403 @ 95%CL (1 toyMC)
median expected limit: r < 1.70403 @ 95%CL (1 toyMC)
   68% expected band : 1.70403 < r < 1.70403
   95% expected band : 1.70403 < r < 1.70403
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1775383857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82594 +/- 0.00502612 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.82594 @ 95%CL (1 toyMC)
median expected limit: r < 2.82594 @ 95%CL (1 toyMC)
   68% expected band : 2.82594 < r < 2.82594
   95% expected band : 2.82594 < r < 2.82594
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -806197856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65433 +/- 0.00473984 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.65433 @ 95%CL (1 toyMC)
median expected limit: r < 1.65433 @ 95%CL (1 toyMC)
   68% expected band : 1.65433 < r < 1.65433
   95% expected band : 1.65433 < r < 1.65433
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 453453057
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.98178 +/- 0.00441417 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.98178 @ 95%CL (1 toyMC)
median expected limit: r < 0.98178 @ 95%CL (1 toyMC)
   68% expected band : 0.98178 < r < 0.98178
   95% expected band : 0.98178 < r < 0.98178
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1461347652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8087 +/- 0.00429308 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.8087 @ 95%CL (1 toyMC)
median expected limit: r < 1.8087 @ 95%CL (1 toyMC)
   68% expected band : 1.8087 < r < 1.8087
   95% expected band : 1.8087 < r < 1.8087
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -738539310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88598 +/- 0.00458374 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.88598 @ 95%CL (1 toyMC)
median expected limit: r < 2.88598 @ 95%CL (1 toyMC)
   68% expected band : 2.88598 < r < 2.88598
   95% expected band : 2.88598 < r < 2.88598
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1772642670
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.987593 +/- 0.00420008 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 0.987593 @ 95%CL (1 toyMC)
median expected limit: r < 0.987593 @ 95%CL (1 toyMC)
   68% expected band : 0.987593 < r < 0.987593
   95% expected band : 0.987593 < r < 0.987593
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1019279887.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1034103194.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1072238035.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1082357686.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1096048358.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1209251194.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1277626616.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1283699438.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1427694970.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1456615697.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1477527944.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1480198849.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1491559415.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1524921368.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-153142997.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1539412350.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1547784446.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1658240457.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1675569368.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1738617795.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1742585142.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1754016239.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1756777177.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1772642670.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1860055269.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1868123540.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1950842693.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1957455205.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-1990625435.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-2057546159.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-211763343.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-248390165.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-252860630.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-294228715.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-318712722.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-355237272.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-431270440.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-456117481.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-517866503.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-581625094.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-583880606.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-685456924.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-738539310.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-74138735.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-74618582.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-757713744.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-78378633.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-806197856.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-844894535.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-844962117.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-940011662.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1079828877.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.111870755.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1161637982.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1176969397.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1208215451.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1250779390.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1311565723.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.133400731.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1341558995.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.139976628.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1410298819.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1418896407.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1461347652.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1472120022.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1525544374.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1574161318.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1578974037.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1628948433.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1652532253.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.167661892.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1694705751.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1724821032.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1740081395.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1759915327.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1775383857.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1934601567.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1940481281.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1958672516.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.1969131152.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.20111505.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2068786527.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.2138739590.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.21488133.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.251664544.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.301799056.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.406732893.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.409048133.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.44186510.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.453453057.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.454093073.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.463224674.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.554305377.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.568418991.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.757680278.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.837070780.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.920444722.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.941173401.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.957766668.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.961820760.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -997458766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.865697 +/- 0.00446903 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.865697 @ 95%CL (1 toyMC)
median expected limit: r < 0.865697 @ 95%CL (1 toyMC)
   68% expected band : 0.865697 < r < 0.865697
   95% expected band : 0.865697 < r < 0.865697
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -43906525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60349 +/- 0.00583153 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.60349 @ 95%CL (1 toyMC)
median expected limit: r < 1.60349 @ 95%CL (1 toyMC)
   68% expected band : 1.60349 < r < 1.60349
   95% expected band : 1.60349 < r < 1.60349
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1354698173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26731 +/- 0.00462365 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.26731 @ 95%CL (1 toyMC)
median expected limit: r < 1.26731 @ 95%CL (1 toyMC)
   68% expected band : 1.26731 < r < 1.26731
   95% expected band : 1.26731 < r < 1.26731
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 458217836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17315 +/- 0.00492098 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.17315 @ 95%CL (1 toyMC)
median expected limit: r < 1.17315 @ 95%CL (1 toyMC)
   68% expected band : 1.17315 < r < 1.17315
   95% expected band : 1.17315 < r < 1.17315
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -59947760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11481 +/- 0.00525598 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.11481 @ 95%CL (1 toyMC)
median expected limit: r < 1.11481 @ 95%CL (1 toyMC)
   68% expected band : 1.11481 < r < 1.11481
   95% expected band : 1.11481 < r < 1.11481
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 466896467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.937683 +/- 0.00500413 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.937683 @ 95%CL (1 toyMC)
median expected limit: r < 0.937683 @ 95%CL (1 toyMC)
   68% expected band : 0.937683 < r < 0.937683
   95% expected band : 0.937683 < r < 0.937683
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1947304288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46459 +/- 0.00593231 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.46459 @ 95%CL (1 toyMC)
median expected limit: r < 1.46459 @ 95%CL (1 toyMC)
   68% expected band : 1.46459 < r < 1.46459
   95% expected band : 1.46459 < r < 1.46459
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 266665747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.69227 +/- 0.00678278 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.69227 @ 95%CL (1 toyMC)
median expected limit: r < 1.69227 @ 95%CL (1 toyMC)
   68% expected band : 1.69227 < r < 1.69227
   95% expected band : 1.69227 < r < 1.69227
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1982743800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18487 +/- 0.0057749 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.18487 @ 95%CL (1 toyMC)
median expected limit: r < 1.18487 @ 95%CL (1 toyMC)
   68% expected band : 1.18487 < r < 1.18487
   95% expected band : 1.18487 < r < 1.18487
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367891893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50059 +/- 0.006221 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.50059 @ 95%CL (1 toyMC)
median expected limit: r < 1.50059 @ 95%CL (1 toyMC)
   68% expected band : 1.50059 < r < 1.50059
   95% expected band : 1.50059 < r < 1.50059
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1931359841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34495 +/- 0.00677931 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.34495 @ 95%CL (1 toyMC)
median expected limit: r < 1.34495 @ 95%CL (1 toyMC)
   68% expected band : 1.34495 < r < 1.34495
   95% expected band : 1.34495 < r < 1.34495
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1745091736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66279 +/- 0.00624091 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.66279 @ 95%CL (1 toyMC)
median expected limit: r < 1.66279 @ 95%CL (1 toyMC)
   68% expected band : 1.66279 < r < 1.66279
   95% expected band : 1.66279 < r < 1.66279
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 323028125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08803 +/- 0.00596151 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.08803 @ 95%CL (1 toyMC)
median expected limit: r < 1.08803 @ 95%CL (1 toyMC)
   68% expected band : 1.08803 < r < 1.08803
   95% expected band : 1.08803 < r < 1.08803
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -480136945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88644 +/- 0.00610493 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.88644 @ 95%CL (1 toyMC)
median expected limit: r < 1.88644 @ 95%CL (1 toyMC)
   68% expected band : 1.88644 < r < 1.88644
   95% expected band : 1.88644 < r < 1.88644
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1476333166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.890186 +/- 0.004368 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.890186 @ 95%CL (1 toyMC)
median expected limit: r < 0.890186 @ 95%CL (1 toyMC)
   68% expected band : 0.890186 < r < 0.890186
   95% expected band : 0.890186 < r < 0.890186
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -862008484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66153 +/- 0.00774443 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.66153 @ 95%CL (1 toyMC)
median expected limit: r < 1.66153 @ 95%CL (1 toyMC)
   68% expected band : 1.66153 < r < 1.66153
   95% expected band : 1.66153 < r < 1.66153
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -888299552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77931 +/- 0.00648394 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.77931 @ 95%CL (1 toyMC)
median expected limit: r < 1.77931 @ 95%CL (1 toyMC)
   68% expected band : 1.77931 < r < 1.77931
   95% expected band : 1.77931 < r < 1.77931
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 671290941
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77939 +/- 0.00394982 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.77939 @ 95%CL (1 toyMC)
median expected limit: r < 1.77939 @ 95%CL (1 toyMC)
   68% expected band : 1.77939 < r < 1.77939
   95% expected band : 1.77939 < r < 1.77939
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -158551524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.836119 +/- 0.00413891 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.836119 @ 95%CL (1 toyMC)
median expected limit: r < 0.836119 @ 95%CL (1 toyMC)
   68% expected band : 0.836119 < r < 0.836119
   95% expected band : 0.836119 < r < 0.836119
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1988495152
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02083 +/- 0.00653888 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02083 @ 95%CL (1 toyMC)
median expected limit: r < 2.02083 @ 95%CL (1 toyMC)
   68% expected band : 2.02083 < r < 2.02083
   95% expected band : 2.02083 < r < 2.02083
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1141072737
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01227 +/- 0.00542683 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.01227 @ 95%CL (1 toyMC)
median expected limit: r < 1.01227 @ 95%CL (1 toyMC)
   68% expected band : 1.01227 < r < 1.01227
   95% expected band : 1.01227 < r < 1.01227
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2100908484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97895 +/- 0.00601428 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.97895 @ 95%CL (1 toyMC)
median expected limit: r < 1.97895 @ 95%CL (1 toyMC)
   68% expected band : 1.97895 < r < 1.97895
   95% expected band : 1.97895 < r < 1.97895
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1537646593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.857723 +/- 0.00509119 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.857723 @ 95%CL (1 toyMC)
median expected limit: r < 0.857723 @ 95%CL (1 toyMC)
   68% expected band : 0.857723 < r < 0.857723
   95% expected band : 0.857723 < r < 0.857723
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1766713300
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50012 +/- 0.00547781 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.50012 @ 95%CL (1 toyMC)
median expected limit: r < 1.50012 @ 95%CL (1 toyMC)
   68% expected band : 1.50012 < r < 1.50012
   95% expected band : 1.50012 < r < 1.50012
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -922103002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36304 +/- 0.00617756 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.36304 @ 95%CL (1 toyMC)
median expected limit: r < 1.36304 @ 95%CL (1 toyMC)
   68% expected band : 1.36304 < r < 1.36304
   95% expected band : 1.36304 < r < 1.36304
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 985388377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.725508 +/- 0.00369104 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.725508 @ 95%CL (1 toyMC)
median expected limit: r < 0.725508 @ 95%CL (1 toyMC)
   68% expected band : 0.725508 < r < 0.725508
   95% expected band : 0.725508 < r < 0.725508
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1971486611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.800547 +/- 0.0047301 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.800547 @ 95%CL (1 toyMC)
median expected limit: r < 0.800547 @ 95%CL (1 toyMC)
   68% expected band : 0.800547 < r < 0.800547
   95% expected band : 0.800547 < r < 0.800547
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -739170637
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.830295 +/- 0.00437713 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.830295 @ 95%CL (1 toyMC)
median expected limit: r < 0.830295 @ 95%CL (1 toyMC)
   68% expected band : 0.830295 < r < 0.830295
   95% expected band : 0.830295 < r < 0.830295
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -655406907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12496 +/- 0.00528564 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12496 @ 95%CL (1 toyMC)
median expected limit: r < 1.12496 @ 95%CL (1 toyMC)
   68% expected band : 1.12496 < r < 1.12496
   95% expected band : 1.12496 < r < 1.12496
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -210244450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.940997 +/- 0.00402156 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.940997 @ 95%CL (1 toyMC)
median expected limit: r < 0.940997 @ 95%CL (1 toyMC)
   68% expected band : 0.940997 < r < 0.940997
   95% expected band : 0.940997 < r < 0.940997
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 798368580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69319 +/- 0.00655809 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 2.69319 @ 95%CL (1 toyMC)
median expected limit: r < 2.69319 @ 95%CL (1 toyMC)
   68% expected band : 2.69319 < r < 2.69319
   95% expected band : 2.69319 < r < 2.69319
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1080286276
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35142 +/- 0.00590786 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35142 @ 95%CL (1 toyMC)
median expected limit: r < 1.35142 @ 95%CL (1 toyMC)
   68% expected band : 1.35142 < r < 1.35142
   95% expected band : 1.35142 < r < 1.35142
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1304477839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27093 +/- 0.00501279 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.27093 @ 95%CL (1 toyMC)
median expected limit: r < 1.27093 @ 95%CL (1 toyMC)
   68% expected band : 1.27093 < r < 1.27093
   95% expected band : 1.27093 < r < 1.27093
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -294438674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25602 +/- 0.00570371 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.25602 @ 95%CL (1 toyMC)
median expected limit: r < 1.25602 @ 95%CL (1 toyMC)
   68% expected band : 1.25602 < r < 1.25602
   95% expected band : 1.25602 < r < 1.25602
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1959556492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13673 +/- 0.00575496 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.13673 @ 95%CL (1 toyMC)
median expected limit: r < 1.13673 @ 95%CL (1 toyMC)
   68% expected band : 1.13673 < r < 1.13673
   95% expected band : 1.13673 < r < 1.13673
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1275694136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04768 +/- 0.00376307 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.04768 @ 95%CL (1 toyMC)
median expected limit: r < 1.04768 @ 95%CL (1 toyMC)
   68% expected band : 1.04768 < r < 1.04768
   95% expected band : 1.04768 < r < 1.04768
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1125109880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6223 +/- 0.0064683 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.6223 @ 95%CL (1 toyMC)
median expected limit: r < 1.6223 @ 95%CL (1 toyMC)
   68% expected band : 1.6223 < r < 1.6223
   95% expected band : 1.6223 < r < 1.6223
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1479115802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63185 +/- 0.00675192 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.63185 @ 95%CL (1 toyMC)
median expected limit: r < 1.63185 @ 95%CL (1 toyMC)
   68% expected band : 1.63185 < r < 1.63185
   95% expected band : 1.63185 < r < 1.63185
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1742279857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35147 +/- 0.00519505 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35147 @ 95%CL (1 toyMC)
median expected limit: r < 1.35147 @ 95%CL (1 toyMC)
   68% expected band : 1.35147 < r < 1.35147
   95% expected band : 1.35147 < r < 1.35147
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -201581715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91677 +/- 0.00649494 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.91677 @ 95%CL (1 toyMC)
median expected limit: r < 1.91677 @ 95%CL (1 toyMC)
   68% expected band : 1.91677 < r < 1.91677
   95% expected band : 1.91677 < r < 1.91677
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1377770763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24873 +/- 0.00670623 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.24873 @ 95%CL (1 toyMC)
median expected limit: r < 1.24873 @ 95%CL (1 toyMC)
   68% expected band : 1.24873 < r < 1.24873
   95% expected band : 1.24873 < r < 1.24873
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1254799706
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82155 +/- 0.00728792 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.82155 @ 95%CL (1 toyMC)
median expected limit: r < 2.82155 @ 95%CL (1 toyMC)
   68% expected band : 2.82155 < r < 2.82155
   95% expected band : 2.82155 < r < 2.82155
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1692981657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08273 +/- 0.00511747 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.08273 @ 95%CL (1 toyMC)
median expected limit: r < 1.08273 @ 95%CL (1 toyMC)
   68% expected band : 1.08273 < r < 1.08273
   95% expected band : 1.08273 < r < 1.08273
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 831190268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.506 +/- 0.00588389 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.506 @ 95%CL (1 toyMC)
median expected limit: r < 1.506 @ 95%CL (1 toyMC)
   68% expected band : 1.506 < r < 1.506
   95% expected band : 1.506 < r < 1.506
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -706385523
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.04692 +/- 0.0065892 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.04692 @ 95%CL (1 toyMC)
median expected limit: r < 2.04692 @ 95%CL (1 toyMC)
   68% expected band : 2.04692 < r < 2.04692
   95% expected band : 2.04692 < r < 2.04692
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1981231486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17939 +/- 0.00555368 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.17939 @ 95%CL (1 toyMC)
median expected limit: r < 1.17939 @ 95%CL (1 toyMC)
   68% expected band : 1.17939 < r < 1.17939
   95% expected band : 1.17939 < r < 1.17939
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2144864227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31317 +/- 0.00657207 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.31317 @ 95%CL (1 toyMC)
median expected limit: r < 1.31317 @ 95%CL (1 toyMC)
   68% expected band : 1.31317 < r < 1.31317
   95% expected band : 1.31317 < r < 1.31317
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1500257116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.59458 +/- 0.00570407 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.59458 @ 95%CL (1 toyMC)
median expected limit: r < 2.59458 @ 95%CL (1 toyMC)
   68% expected band : 2.59458 < r < 2.59458
   95% expected band : 2.59458 < r < 2.59458
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -257701449
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48023 +/- 0.00628142 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.48023 @ 95%CL (1 toyMC)
median expected limit: r < 1.48023 @ 95%CL (1 toyMC)
   68% expected band : 1.48023 < r < 1.48023
   95% expected band : 1.48023 < r < 1.48023
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 778989225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.860909 +/- 0.00521118 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.860909 @ 95%CL (1 toyMC)
median expected limit: r < 0.860909 @ 95%CL (1 toyMC)
   68% expected band : 0.860909 < r < 0.860909
   95% expected band : 0.860909 < r < 0.860909
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 696520917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73785 +/- 0.00647268 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.73785 @ 95%CL (1 toyMC)
median expected limit: r < 1.73785 @ 95%CL (1 toyMC)
   68% expected band : 1.73785 < r < 1.73785
   95% expected band : 1.73785 < r < 1.73785
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1364031254
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91029 +/- 0.00681498 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91029 @ 95%CL (1 toyMC)
median expected limit: r < 1.91029 @ 95%CL (1 toyMC)
   68% expected band : 1.91029 < r < 1.91029
   95% expected band : 1.91029 < r < 1.91029
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -855638150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.995112 +/- 0.00498378 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.995112 @ 95%CL (1 toyMC)
median expected limit: r < 0.995112 @ 95%CL (1 toyMC)
   68% expected band : 0.995112 < r < 0.995112
   95% expected band : 0.995112 < r < 0.995112
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1792180593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.884411 +/- 0.0042712 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.884411 @ 95%CL (1 toyMC)
median expected limit: r < 0.884411 @ 95%CL (1 toyMC)
   68% expected band : 0.884411 < r < 0.884411
   95% expected band : 0.884411 < r < 0.884411
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 875990418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32587 +/- 0.00517595 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.32587 @ 95%CL (1 toyMC)
median expected limit: r < 1.32587 @ 95%CL (1 toyMC)
   68% expected band : 1.32587 < r < 1.32587
   95% expected band : 1.32587 < r < 1.32587
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 112858003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70647 +/- 0.00670849 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.70647 @ 95%CL (1 toyMC)
median expected limit: r < 2.70647 @ 95%CL (1 toyMC)
   68% expected band : 2.70647 < r < 2.70647
   95% expected band : 2.70647 < r < 2.70647
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -780276849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9475 +/- 0.00660892 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.9475 @ 95%CL (1 toyMC)
median expected limit: r < 1.9475 @ 95%CL (1 toyMC)
   68% expected band : 1.9475 < r < 1.9475
   95% expected band : 1.9475 < r < 1.9475
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1801668712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.653474 +/- 0.00399821 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.653474 @ 95%CL (1 toyMC)
median expected limit: r < 0.653474 @ 95%CL (1 toyMC)
   68% expected band : 0.653474 < r < 0.653474
   95% expected band : 0.653474 < r < 0.653474
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1766920881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03992 +/- 0.00512288 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.03992 @ 95%CL (1 toyMC)
median expected limit: r < 1.03992 @ 95%CL (1 toyMC)
   68% expected band : 1.03992 < r < 1.03992
   95% expected band : 1.03992 < r < 1.03992
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -423315330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23822 +/- 0.00490752 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.23822 @ 95%CL (1 toyMC)
median expected limit: r < 1.23822 @ 95%CL (1 toyMC)
   68% expected band : 1.23822 < r < 1.23822
   95% expected band : 1.23822 < r < 1.23822
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1528376415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.99354 +/- 0.00568966 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.99354 @ 95%CL (1 toyMC)
median expected limit: r < 0.99354 @ 95%CL (1 toyMC)
   68% expected band : 0.99354 < r < 0.99354
   95% expected band : 0.99354 < r < 0.99354
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2050133270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51869 +/- 0.00592725 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.51869 @ 95%CL (1 toyMC)
median expected limit: r < 1.51869 @ 95%CL (1 toyMC)
   68% expected band : 1.51869 < r < 1.51869
   95% expected band : 1.51869 < r < 1.51869
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1062525271
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56176 +/- 0.00671987 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.56176 @ 95%CL (1 toyMC)
median expected limit: r < 1.56176 @ 95%CL (1 toyMC)
   68% expected band : 1.56176 < r < 1.56176
   95% expected band : 1.56176 < r < 1.56176
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1260188995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48596 +/- 0.00531841 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.48596 @ 95%CL (1 toyMC)
median expected limit: r < 1.48596 @ 95%CL (1 toyMC)
   68% expected band : 1.48596 < r < 1.48596
   95% expected band : 1.48596 < r < 1.48596
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2036306901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91131 +/- 0.00643889 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91131 @ 95%CL (1 toyMC)
median expected limit: r < 1.91131 @ 95%CL (1 toyMC)
   68% expected band : 1.91131 < r < 1.91131
   95% expected band : 1.91131 < r < 1.91131
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1382581559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44192 +/- 0.00658438 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.44192 @ 95%CL (1 toyMC)
median expected limit: r < 1.44192 @ 95%CL (1 toyMC)
   68% expected band : 1.44192 < r < 1.44192
   95% expected band : 1.44192 < r < 1.44192
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1208354295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.837415 +/- 0.00402545 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.837415 @ 95%CL (1 toyMC)
median expected limit: r < 0.837415 @ 95%CL (1 toyMC)
   68% expected band : 0.837415 < r < 0.837415
   95% expected band : 0.837415 < r < 0.837415
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2106192410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10646 +/- 0.00614962 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.10646 @ 95%CL (1 toyMC)
median expected limit: r < 2.10646 @ 95%CL (1 toyMC)
   68% expected band : 2.10646 < r < 2.10646
   95% expected band : 2.10646 < r < 2.10646
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1391389744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.770777 +/- 0.0039739 @ 95% CL (100 tries)
Done in 0.12 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.770777 @ 95%CL (1 toyMC)
median expected limit: r < 0.770777 @ 95%CL (1 toyMC)
   68% expected band : 0.770777 < r < 0.770777
   95% expected band : 0.770777 < r < 0.770777
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1656582013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.957168 +/- 0.00501414 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.957168 @ 95%CL (1 toyMC)
median expected limit: r < 0.957168 @ 95%CL (1 toyMC)
   68% expected band : 0.957168 < r < 0.957168
   95% expected band : 0.957168 < r < 0.957168
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1068809796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19271 +/- 0.00468179 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.19271 @ 95%CL (1 toyMC)
median expected limit: r < 1.19271 @ 95%CL (1 toyMC)
   68% expected band : 1.19271 < r < 1.19271
   95% expected band : 1.19271 < r < 1.19271
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1480660985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3981 +/- 0.00495565 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3981 @ 95%CL (1 toyMC)
median expected limit: r < 1.3981 @ 95%CL (1 toyMC)
   68% expected band : 1.3981 < r < 1.3981
   95% expected band : 1.3981 < r < 1.3981
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -597698023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18567 +/- 0.00466097 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.18567 @ 95%CL (1 toyMC)
median expected limit: r < 1.18567 @ 95%CL (1 toyMC)
   68% expected band : 1.18567 < r < 1.18567
   95% expected band : 1.18567 < r < 1.18567
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 303620531
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.88834 +/- 0.00461555 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.88834 @ 95%CL (1 toyMC)
median expected limit: r < 0.88834 @ 95%CL (1 toyMC)
   68% expected band : 0.88834 < r < 0.88834
   95% expected band : 0.88834 < r < 0.88834
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 475718969
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.864 +/- 0.00663944 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.864 @ 95%CL (1 toyMC)
median expected limit: r < 1.864 @ 95%CL (1 toyMC)
   68% expected band : 1.864 < r < 1.864
   95% expected band : 1.864 < r < 1.864
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 938038738
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20117 +/- 0.00516206 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.20117 @ 95%CL (1 toyMC)
median expected limit: r < 1.20117 @ 95%CL (1 toyMC)
   68% expected band : 1.20117 < r < 1.20117
   95% expected band : 1.20117 < r < 1.20117
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1061387137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.698056 +/- 0.00445122 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.698056 @ 95%CL (1 toyMC)
median expected limit: r < 0.698056 @ 95%CL (1 toyMC)
   68% expected band : 0.698056 < r < 0.698056
   95% expected band : 0.698056 < r < 0.698056
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 882836412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91925 +/- 0.00650274 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91925 @ 95%CL (1 toyMC)
median expected limit: r < 1.91925 @ 95%CL (1 toyMC)
   68% expected band : 1.91925 < r < 1.91925
   95% expected band : 1.91925 < r < 1.91925
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1622354823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30066 +/- 0.00639376 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.30066 @ 95%CL (1 toyMC)
median expected limit: r < 1.30066 @ 95%CL (1 toyMC)
   68% expected band : 1.30066 < r < 1.30066
   95% expected band : 1.30066 < r < 1.30066
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1805654352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1506 +/- 0.0064826 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.1506 @ 95%CL (1 toyMC)
median expected limit: r < 1.1506 @ 95%CL (1 toyMC)
   68% expected band : 1.1506 < r < 1.1506
   95% expected band : 1.1506 < r < 1.1506
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1705146453
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16133 +/- 0.00529512 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.16133 @ 95%CL (1 toyMC)
median expected limit: r < 1.16133 @ 95%CL (1 toyMC)
   68% expected band : 1.16133 < r < 1.16133
   95% expected band : 1.16133 < r < 1.16133
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -698071595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18236 +/- 0.00646834 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 2.18236 @ 95%CL (1 toyMC)
median expected limit: r < 2.18236 @ 95%CL (1 toyMC)
   68% expected band : 2.18236 < r < 2.18236
   95% expected band : 2.18236 < r < 2.18236
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1375903964
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00756 +/- 0.00628853 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00756 @ 95%CL (1 toyMC)
median expected limit: r < 2.00756 @ 95%CL (1 toyMC)
   68% expected band : 2.00756 < r < 2.00756
   95% expected band : 2.00756 < r < 2.00756
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 312820611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.50182 +/- 0.00656456 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.50182 @ 95%CL (1 toyMC)
median expected limit: r < 3.50182 @ 95%CL (1 toyMC)
   68% expected band : 3.50182 < r < 3.50182
   95% expected band : 3.50182 < r < 3.50182
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1832406537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.35501 +/- 0.00712611 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.35501 @ 95%CL (1 toyMC)
median expected limit: r < 2.35501 @ 95%CL (1 toyMC)
   68% expected band : 2.35501 < r < 2.35501
   95% expected band : 2.35501 < r < 2.35501
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 561173140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.21653 +/- 0.00537462 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.21653 @ 95%CL (1 toyMC)
median expected limit: r < 2.21653 @ 95%CL (1 toyMC)
   68% expected band : 2.21653 < r < 2.21653
   95% expected band : 2.21653 < r < 2.21653
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -96690704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12033 +/- 0.00489458 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12033 @ 95%CL (1 toyMC)
median expected limit: r < 1.12033 @ 95%CL (1 toyMC)
   68% expected band : 1.12033 < r < 1.12033
   95% expected band : 1.12033 < r < 1.12033
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -263825299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17095 +/- 0.00505968 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.17095 @ 95%CL (1 toyMC)
median expected limit: r < 1.17095 @ 95%CL (1 toyMC)
   68% expected band : 1.17095 < r < 1.17095
   95% expected band : 1.17095 < r < 1.17095
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2029252277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30746 +/- 0.00759106 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.30746 @ 95%CL (1 toyMC)
median expected limit: r < 2.30746 @ 95%CL (1 toyMC)
   68% expected band : 2.30746 < r < 2.30746
   95% expected band : 2.30746 < r < 2.30746
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1846893475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.55012 +/- 0.00503757 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.55012 @ 95%CL (1 toyMC)
median expected limit: r < 1.55012 @ 95%CL (1 toyMC)
   68% expected band : 1.55012 < r < 1.55012
   95% expected band : 1.55012 < r < 1.55012
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1617236514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26748 +/- 0.00495091 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.26748 @ 95%CL (1 toyMC)
median expected limit: r < 1.26748 @ 95%CL (1 toyMC)
   68% expected band : 1.26748 < r < 1.26748
   95% expected band : 1.26748 < r < 1.26748
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1686600378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02037 +/- 0.00496747 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.02037 @ 95%CL (1 toyMC)
median expected limit: r < 1.02037 @ 95%CL (1 toyMC)
   68% expected band : 1.02037 < r < 1.02037
   95% expected band : 1.02037 < r < 1.02037
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1331861237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.912854 +/- 0.00461598 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.912854 @ 95%CL (1 toyMC)
median expected limit: r < 0.912854 @ 95%CL (1 toyMC)
   68% expected band : 0.912854 < r < 0.912854
   95% expected band : 0.912854 < r < 0.912854
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -890541436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01524 +/- 0.00476413 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.01524 @ 95%CL (1 toyMC)
median expected limit: r < 1.01524 @ 95%CL (1 toyMC)
   68% expected band : 1.01524 < r < 1.01524
   95% expected band : 1.01524 < r < 1.01524
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -199223493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28298 +/- 0.00439282 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.28298 @ 95%CL (1 toyMC)
median expected limit: r < 1.28298 @ 95%CL (1 toyMC)
   68% expected band : 1.28298 < r < 1.28298
   95% expected band : 1.28298 < r < 1.28298
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1258069893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.53922 +/- 0.00696376 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 3.53922 @ 95%CL (1 toyMC)
median expected limit: r < 3.53922 @ 95%CL (1 toyMC)
   68% expected band : 3.53922 < r < 3.53922
   95% expected band : 3.53922 < r < 3.53922
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1205308634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.940804 +/- 0.00469643 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.940804 @ 95%CL (1 toyMC)
median expected limit: r < 0.940804 @ 95%CL (1 toyMC)
   68% expected band : 0.940804 < r < 0.940804
   95% expected band : 0.940804 < r < 0.940804
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 416406288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50429 +/- 0.00512192 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.50429 @ 95%CL (1 toyMC)
median expected limit: r < 1.50429 @ 95%CL (1 toyMC)
   68% expected band : 1.50429 < r < 1.50429
   95% expected band : 1.50429 < r < 1.50429
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 664367468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43788 +/- 0.0067004 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.43788 @ 95%CL (1 toyMC)
median expected limit: r < 1.43788 @ 95%CL (1 toyMC)
   68% expected band : 1.43788 < r < 1.43788
   95% expected band : 1.43788 < r < 1.43788
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1533705516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78634 +/- 0.0060057 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.78634 @ 95%CL (1 toyMC)
median expected limit: r < 1.78634 @ 95%CL (1 toyMC)
   68% expected band : 1.78634 < r < 1.78634
   95% expected band : 1.78634 < r < 1.78634
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1062525271.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1205308634.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1208354295.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1260188995.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1275694136.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1304477839.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1331861237.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1354698173.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1364031254.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1375903964.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1377770763.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1391389744.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1480660985.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1528376415.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1537646593.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-158551524.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1686600378.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1742279857.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1792180593.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1805654352.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1846893475.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1931359841.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1947304288.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1971486611.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-199223493.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-201581715.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-2100908484.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-210244450.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2144864227.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-257701449.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-263825299.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-294438674.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-423315330.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-43906525.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-480136945.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-597698023.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-59947760.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-655406907.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-698071595.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-706385523.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-739170637.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-780276849.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-855638150.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-862008484.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-888299552.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-890541436.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-922103002.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-96690704.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-997458766.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1061387137.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1068809796.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1080286276.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1125109880.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.112858003.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1141072737.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1254799706.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1258069893.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1367891893.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1382581559.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1476333166.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1479115802.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1500257116.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1533705516.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1617236514.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1622354823.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1656582013.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1692981657.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1705146453.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1745091736.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1766713300.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1766920881.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1801668712.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1832406537.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1959556492.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1981231486.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1982743800.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1988495152.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2029252277.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2036306901.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2050133270.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2106192410.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.266665747.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.303620531.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.312820611.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.323028125.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.416406288.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.458217836.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.466896467.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.475718969.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.561173140.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.664367468.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.671290941.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.696520917.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.778989225.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.798368580.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.831190268.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.875990418.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.882836412.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.938038738.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.985388377.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 274125671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40801 +/- 0.00479983 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.40801 @ 95%CL (1 toyMC)
median expected limit: r < 1.40801 @ 95%CL (1 toyMC)
   68% expected band : 1.40801 < r < 1.40801
   95% expected band : 1.40801 < r < 1.40801
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2115486458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23575 +/- 0.00435526 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.23575 @ 95%CL (1 toyMC)
median expected limit: r < 1.23575 @ 95%CL (1 toyMC)
   68% expected band : 1.23575 < r < 1.23575
   95% expected band : 1.23575 < r < 1.23575
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 295919435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1722 +/- 0.00444632 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.1722 @ 95%CL (1 toyMC)
median expected limit: r < 1.1722 @ 95%CL (1 toyMC)
   68% expected band : 1.1722 < r < 1.1722
   95% expected band : 1.1722 < r < 1.1722
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1341825272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53969 +/- 0.00637511 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.53969 @ 95%CL (1 toyMC)
median expected limit: r < 2.53969 @ 95%CL (1 toyMC)
   68% expected band : 2.53969 < r < 2.53969
   95% expected band : 2.53969 < r < 2.53969
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 799496281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.80107 +/- 0.00624089 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.80107 @ 95%CL (1 toyMC)
median expected limit: r < 2.80107 @ 95%CL (1 toyMC)
   68% expected band : 2.80107 < r < 2.80107
   95% expected band : 2.80107 < r < 2.80107
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1232804086
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09317 +/- 0.0047548 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.09317 @ 95%CL (1 toyMC)
median expected limit: r < 1.09317 @ 95%CL (1 toyMC)
   68% expected band : 1.09317 < r < 1.09317
   95% expected band : 1.09317 < r < 1.09317
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -678691413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.883552 +/- 0.00304611 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.883552 @ 95%CL (1 toyMC)
median expected limit: r < 0.883552 @ 95%CL (1 toyMC)
   68% expected band : 0.883552 < r < 0.883552
   95% expected band : 0.883552 < r < 0.883552
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -364270566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.69176 +/- 0.00553548 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.69176 @ 95%CL (1 toyMC)
median expected limit: r < 1.69176 @ 95%CL (1 toyMC)
   68% expected band : 1.69176 < r < 1.69176
   95% expected band : 1.69176 < r < 1.69176
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -66611285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26438 +/- 0.00431925 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.26438 @ 95%CL (1 toyMC)
median expected limit: r < 1.26438 @ 95%CL (1 toyMC)
   68% expected band : 1.26438 < r < 1.26438
   95% expected band : 1.26438 < r < 1.26438
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1165882583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07372 +/- 0.0038987 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.07372 @ 95%CL (1 toyMC)
median expected limit: r < 1.07372 @ 95%CL (1 toyMC)
   68% expected band : 1.07372 < r < 1.07372
   95% expected band : 1.07372 < r < 1.07372
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1274321761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.895317 +/- 0.00452041 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.895317 @ 95%CL (1 toyMC)
median expected limit: r < 0.895317 @ 95%CL (1 toyMC)
   68% expected band : 0.895317 < r < 0.895317
   95% expected band : 0.895317 < r < 0.895317
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 191046890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.950039 +/- 0.00438192 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.950039 @ 95%CL (1 toyMC)
median expected limit: r < 0.950039 @ 95%CL (1 toyMC)
   68% expected band : 0.950039 < r < 0.950039
   95% expected band : 0.950039 < r < 0.950039
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1863091766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44864 +/- 0.00405997 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.44864 @ 95%CL (1 toyMC)
median expected limit: r < 1.44864 @ 95%CL (1 toyMC)
   68% expected band : 1.44864 < r < 1.44864
   95% expected band : 1.44864 < r < 1.44864
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 902793945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1108 +/- 0.00372005 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.1108 @ 95%CL (1 toyMC)
median expected limit: r < 1.1108 @ 95%CL (1 toyMC)
   68% expected band : 1.1108 < r < 1.1108
   95% expected band : 1.1108 < r < 1.1108
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -597111557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16008 +/- 0.00433757 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.16008 @ 95%CL (1 toyMC)
median expected limit: r < 1.16008 @ 95%CL (1 toyMC)
   68% expected band : 1.16008 < r < 1.16008
   95% expected band : 1.16008 < r < 1.16008
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1169348199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49923 +/- 0.00584852 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.49923 @ 95%CL (1 toyMC)
median expected limit: r < 2.49923 @ 95%CL (1 toyMC)
   68% expected band : 2.49923 < r < 2.49923
   95% expected band : 2.49923 < r < 2.49923
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1464421483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.709495 +/- 0.00364246 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.709495 @ 95%CL (1 toyMC)
median expected limit: r < 0.709495 @ 95%CL (1 toyMC)
   68% expected band : 0.709495 < r < 0.709495
   95% expected band : 0.709495 < r < 0.709495
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -309351975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.08262 +/- 0.00554613 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.08262 @ 95%CL (1 toyMC)
median expected limit: r < 2.08262 @ 95%CL (1 toyMC)
   68% expected band : 2.08262 < r < 2.08262
   95% expected band : 2.08262 < r < 2.08262
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 57177744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31209 +/- 0.00476447 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.31209 @ 95%CL (1 toyMC)
median expected limit: r < 1.31209 @ 95%CL (1 toyMC)
   68% expected band : 1.31209 < r < 1.31209
   95% expected band : 1.31209 < r < 1.31209
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -37856747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.688772 +/- 0.00349151 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.688772 @ 95%CL (1 toyMC)
median expected limit: r < 0.688772 @ 95%CL (1 toyMC)
   68% expected band : 0.688772 < r < 0.688772
   95% expected band : 0.688772 < r < 0.688772
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1695907141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6521 +/- 0.00504993 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.6521 @ 95%CL (1 toyMC)
median expected limit: r < 1.6521 @ 95%CL (1 toyMC)
   68% expected band : 1.6521 < r < 1.6521
   95% expected band : 1.6521 < r < 1.6521
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 389851549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00899 +/- 0.00545229 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.00899 @ 95%CL (1 toyMC)
median expected limit: r < 1.00899 @ 95%CL (1 toyMC)
   68% expected band : 1.00899 < r < 1.00899
   95% expected band : 1.00899 < r < 1.00899
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2088374334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06502 +/- 0.00616414 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.06502 @ 95%CL (1 toyMC)
median expected limit: r < 2.06502 @ 95%CL (1 toyMC)
   68% expected band : 2.06502 < r < 2.06502
   95% expected band : 2.06502 < r < 2.06502
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1141399420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47058 +/- 0.00480141 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.47058 @ 95%CL (1 toyMC)
median expected limit: r < 1.47058 @ 95%CL (1 toyMC)
   68% expected band : 1.47058 < r < 1.47058
   95% expected band : 1.47058 < r < 1.47058
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1707306550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29063 +/- 0.0054094 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.29063 @ 95%CL (1 toyMC)
median expected limit: r < 1.29063 @ 95%CL (1 toyMC)
   68% expected band : 1.29063 < r < 1.29063
   95% expected band : 1.29063 < r < 1.29063
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1732075715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0895 +/- 0.00587801 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.0895 @ 95%CL (1 toyMC)
median expected limit: r < 2.0895 @ 95%CL (1 toyMC)
   68% expected band : 2.0895 < r < 2.0895
   95% expected band : 2.0895 < r < 2.0895
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -551197338
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12249 +/- 0.00541126 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.12249 @ 95%CL (1 toyMC)
median expected limit: r < 2.12249 @ 95%CL (1 toyMC)
   68% expected band : 2.12249 < r < 2.12249
   95% expected band : 2.12249 < r < 2.12249
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2059786195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.945382 +/- 0.00375733 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.945382 @ 95%CL (1 toyMC)
median expected limit: r < 0.945382 @ 95%CL (1 toyMC)
   68% expected band : 0.945382 < r < 0.945382
   95% expected band : 0.945382 < r < 0.945382
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1194084033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40819 +/- 0.0051314 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.40819 @ 95%CL (1 toyMC)
median expected limit: r < 1.40819 @ 95%CL (1 toyMC)
   68% expected band : 1.40819 < r < 1.40819
   95% expected band : 1.40819 < r < 1.40819
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1620789040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.69708 +/- 0.00542984 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.69708 @ 95%CL (1 toyMC)
median expected limit: r < 1.69708 @ 95%CL (1 toyMC)
   68% expected band : 1.69708 < r < 1.69708
   95% expected band : 1.69708 < r < 1.69708
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1813732935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99931 +/- 0.00525178 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.99931 @ 95%CL (1 toyMC)
median expected limit: r < 1.99931 @ 95%CL (1 toyMC)
   68% expected band : 1.99931 < r < 1.99931
   95% expected band : 1.99931 < r < 1.99931
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1071058181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0896 +/- 0.00520713 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.0896 @ 95%CL (1 toyMC)
median expected limit: r < 1.0896 @ 95%CL (1 toyMC)
   68% expected band : 1.0896 < r < 1.0896
   95% expected band : 1.0896 < r < 1.0896
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -718451755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50885 +/- 0.00472541 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.50885 @ 95%CL (1 toyMC)
median expected limit: r < 1.50885 @ 95%CL (1 toyMC)
   68% expected band : 1.50885 < r < 1.50885
   95% expected band : 1.50885 < r < 1.50885
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1007662186
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38346 +/- 0.00573983 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.38346 @ 95%CL (1 toyMC)
median expected limit: r < 1.38346 @ 95%CL (1 toyMC)
   68% expected band : 1.38346 < r < 1.38346
   95% expected band : 1.38346 < r < 1.38346
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1586977447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29125 +/- 0.00577244 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.29125 @ 95%CL (1 toyMC)
median expected limit: r < 1.29125 @ 95%CL (1 toyMC)
   68% expected band : 1.29125 < r < 1.29125
   95% expected band : 1.29125 < r < 1.29125
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 202021830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.301 +/- 0.00454047 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.301 @ 95%CL (1 toyMC)
median expected limit: r < 1.301 @ 95%CL (1 toyMC)
   68% expected band : 1.301 < r < 1.301
   95% expected band : 1.301 < r < 1.301
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 869380489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27103 +/- 0.00418492 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.27103 @ 95%CL (1 toyMC)
median expected limit: r < 1.27103 @ 95%CL (1 toyMC)
   68% expected band : 1.27103 < r < 1.27103
   95% expected band : 1.27103 < r < 1.27103
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1726467230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.978616 +/- 0.00502517 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.978616 @ 95%CL (1 toyMC)
median expected limit: r < 0.978616 @ 95%CL (1 toyMC)
   68% expected band : 0.978616 < r < 0.978616
   95% expected band : 0.978616 < r < 0.978616
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1968386264
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22089 +/- 0.00503349 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.22089 @ 95%CL (1 toyMC)
median expected limit: r < 1.22089 @ 95%CL (1 toyMC)
   68% expected band : 1.22089 < r < 1.22089
   95% expected band : 1.22089 < r < 1.22089
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 773107323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43263 +/- 0.00450217 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.43263 @ 95%CL (1 toyMC)
median expected limit: r < 1.43263 @ 95%CL (1 toyMC)
   68% expected band : 1.43263 < r < 1.43263
   95% expected band : 1.43263 < r < 1.43263
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1219969370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.55053 +/- 0.00452616 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.55053 @ 95%CL (1 toyMC)
median expected limit: r < 1.55053 @ 95%CL (1 toyMC)
   68% expected band : 1.55053 < r < 1.55053
   95% expected band : 1.55053 < r < 1.55053
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2067268298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.822232 +/- 0.00332216 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.822232 @ 95%CL (1 toyMC)
median expected limit: r < 0.822232 @ 95%CL (1 toyMC)
   68% expected band : 0.822232 < r < 0.822232
   95% expected band : 0.822232 < r < 0.822232
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 387726575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22551 +/- 0.00503624 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.22551 @ 95%CL (1 toyMC)
median expected limit: r < 1.22551 @ 95%CL (1 toyMC)
   68% expected band : 1.22551 < r < 1.22551
   95% expected band : 1.22551 < r < 1.22551
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1900759197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4109 +/- 0.00600394 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.4109 @ 95%CL (1 toyMC)
median expected limit: r < 1.4109 @ 95%CL (1 toyMC)
   68% expected band : 1.4109 < r < 1.4109
   95% expected band : 1.4109 < r < 1.4109
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2031184627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20091 +/- 0.00546128 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.20091 @ 95%CL (1 toyMC)
median expected limit: r < 1.20091 @ 95%CL (1 toyMC)
   68% expected band : 1.20091 < r < 1.20091
   95% expected band : 1.20091 < r < 1.20091
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -93098755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59516 +/- 0.00579887 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.59516 @ 95%CL (1 toyMC)
median expected limit: r < 1.59516 @ 95%CL (1 toyMC)
   68% expected band : 1.59516 < r < 1.59516
   95% expected band : 1.59516 < r < 1.59516
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1649192663
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3359 +/- 0.00509059 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3359 @ 95%CL (1 toyMC)
median expected limit: r < 1.3359 @ 95%CL (1 toyMC)
   68% expected band : 1.3359 < r < 1.3359
   95% expected band : 1.3359 < r < 1.3359
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -567455772
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77782 +/- 0.00611215 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.77782 @ 95%CL (1 toyMC)
median expected limit: r < 1.77782 @ 95%CL (1 toyMC)
   68% expected band : 1.77782 < r < 1.77782
   95% expected band : 1.77782 < r < 1.77782
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1782972090
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76581 +/- 0.00579618 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76581 @ 95%CL (1 toyMC)
median expected limit: r < 1.76581 @ 95%CL (1 toyMC)
   68% expected band : 1.76581 < r < 1.76581
   95% expected band : 1.76581 < r < 1.76581
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1642337727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.07167 +/- 0.00542934 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.07167 @ 95%CL (1 toyMC)
median expected limit: r < 2.07167 @ 95%CL (1 toyMC)
   68% expected band : 2.07167 < r < 2.07167
   95% expected band : 2.07167 < r < 2.07167
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -195897130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93842 +/- 0.00448072 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.93842 @ 95%CL (1 toyMC)
median expected limit: r < 1.93842 @ 95%CL (1 toyMC)
   68% expected band : 1.93842 < r < 1.93842
   95% expected band : 1.93842 < r < 1.93842
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680754154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48506 +/- 0.0052309 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.48506 @ 95%CL (1 toyMC)
median expected limit: r < 1.48506 @ 95%CL (1 toyMC)
   68% expected band : 1.48506 < r < 1.48506
   95% expected band : 1.48506 < r < 1.48506
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -708401600
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44738 +/- 0.00373447 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.44738 @ 95%CL (1 toyMC)
median expected limit: r < 1.44738 @ 95%CL (1 toyMC)
   68% expected band : 1.44738 < r < 1.44738
   95% expected band : 1.44738 < r < 1.44738
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -194865387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53561 +/- 0.00591416 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.53561 @ 95%CL (1 toyMC)
median expected limit: r < 2.53561 @ 95%CL (1 toyMC)
   68% expected band : 2.53561 < r < 2.53561
   95% expected band : 2.53561 < r < 2.53561
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1916613789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.17864 +/- 0.00532663 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.17864 @ 95%CL (1 toyMC)
median expected limit: r < 2.17864 @ 95%CL (1 toyMC)
   68% expected band : 2.17864 < r < 2.17864
   95% expected band : 2.17864 < r < 2.17864
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1216462662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12327 +/- 0.0038721 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12327 @ 95%CL (1 toyMC)
median expected limit: r < 1.12327 @ 95%CL (1 toyMC)
   68% expected band : 1.12327 < r < 1.12327
   95% expected band : 1.12327 < r < 1.12327
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -601616062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.74183 +/- 0.00534642 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.74183 @ 95%CL (1 toyMC)
median expected limit: r < 1.74183 @ 95%CL (1 toyMC)
   68% expected band : 1.74183 < r < 1.74183
   95% expected band : 1.74183 < r < 1.74183
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1583586910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79821 +/- 0.00470488 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.79821 @ 95%CL (1 toyMC)
median expected limit: r < 1.79821 @ 95%CL (1 toyMC)
   68% expected band : 1.79821 < r < 1.79821
   95% expected band : 1.79821 < r < 1.79821
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1141046262
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08108 +/- 0.00425509 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.08108 @ 95%CL (1 toyMC)
median expected limit: r < 1.08108 @ 95%CL (1 toyMC)
   68% expected band : 1.08108 < r < 1.08108
   95% expected band : 1.08108 < r < 1.08108
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 163825991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68147 +/- 0.00590147 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.68147 @ 95%CL (1 toyMC)
median expected limit: r < 1.68147 @ 95%CL (1 toyMC)
   68% expected band : 1.68147 < r < 1.68147
   95% expected band : 1.68147 < r < 1.68147
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2020586964
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.718265 +/- 0.00429281 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.718265 @ 95%CL (1 toyMC)
median expected limit: r < 0.718265 @ 95%CL (1 toyMC)
   68% expected band : 0.718265 < r < 0.718265
   95% expected band : 0.718265 < r < 0.718265
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1318619315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21005 +/- 0.00436632 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.21005 @ 95%CL (1 toyMC)
median expected limit: r < 1.21005 @ 95%CL (1 toyMC)
   68% expected band : 1.21005 < r < 1.21005
   95% expected band : 1.21005 < r < 1.21005
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 79620772
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7811 +/- 0.00552674 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.7811 @ 95%CL (1 toyMC)
median expected limit: r < 1.7811 @ 95%CL (1 toyMC)
   68% expected band : 1.7811 < r < 1.7811
   95% expected band : 1.7811 < r < 1.7811
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1764158128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47938 +/- 0.00446563 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.47938 @ 95%CL (1 toyMC)
median expected limit: r < 1.47938 @ 95%CL (1 toyMC)
   68% expected band : 1.47938 < r < 1.47938
   95% expected band : 1.47938 < r < 1.47938
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 347638551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.31227 +/- 0.00657682 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.31227 @ 95%CL (1 toyMC)
median expected limit: r < 2.31227 @ 95%CL (1 toyMC)
   68% expected band : 2.31227 < r < 2.31227
   95% expected band : 2.31227 < r < 2.31227
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1551701427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.13448 +/- 0.00604372 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.13448 @ 95%CL (1 toyMC)
median expected limit: r < 2.13448 @ 95%CL (1 toyMC)
   68% expected band : 2.13448 < r < 2.13448
   95% expected band : 2.13448 < r < 2.13448
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1352327142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09975 +/- 0.00493871 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09975 @ 95%CL (1 toyMC)
median expected limit: r < 1.09975 @ 95%CL (1 toyMC)
   68% expected band : 1.09975 < r < 1.09975
   95% expected band : 1.09975 < r < 1.09975
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 600113849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0224 +/- 0.00437295 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.0224 @ 95%CL (1 toyMC)
median expected limit: r < 1.0224 @ 95%CL (1 toyMC)
   68% expected band : 1.0224 < r < 1.0224
   95% expected band : 1.0224 < r < 1.0224
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 226531066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31151 +/- 0.00516876 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.31151 @ 95%CL (1 toyMC)
median expected limit: r < 1.31151 @ 95%CL (1 toyMC)
   68% expected band : 1.31151 < r < 1.31151
   95% expected band : 1.31151 < r < 1.31151
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1959875305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47941 +/- 0.00486622 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.47941 @ 95%CL (1 toyMC)
median expected limit: r < 1.47941 @ 95%CL (1 toyMC)
   68% expected band : 1.47941 < r < 1.47941
   95% expected band : 1.47941 < r < 1.47941
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 450353622
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36666 +/- 0.00421898 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.36666 @ 95%CL (1 toyMC)
median expected limit: r < 1.36666 @ 95%CL (1 toyMC)
   68% expected band : 1.36666 < r < 1.36666
   95% expected band : 1.36666 < r < 1.36666
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1378263504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.329 +/- 0.00448219 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.329 @ 95%CL (1 toyMC)
median expected limit: r < 1.329 @ 95%CL (1 toyMC)
   68% expected band : 1.329 < r < 1.329
   95% expected band : 1.329 < r < 1.329
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -940555876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.942503 +/- 0.00448015 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.942503 @ 95%CL (1 toyMC)
median expected limit: r < 0.942503 @ 95%CL (1 toyMC)
   68% expected band : 0.942503 < r < 0.942503
   95% expected band : 0.942503 < r < 0.942503
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2089643973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51834 +/- 0.00566602 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.51834 @ 95%CL (1 toyMC)
median expected limit: r < 1.51834 @ 95%CL (1 toyMC)
   68% expected band : 1.51834 < r < 1.51834
   95% expected band : 1.51834 < r < 1.51834
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1601524563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.39139 +/- 0.00501598 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.39139 @ 95%CL (1 toyMC)
median expected limit: r < 2.39139 @ 95%CL (1 toyMC)
   68% expected band : 2.39139 < r < 2.39139
   95% expected band : 2.39139 < r < 2.39139
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946246172
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68293 +/- 0.00524829 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.68293 @ 95%CL (1 toyMC)
median expected limit: r < 1.68293 @ 95%CL (1 toyMC)
   68% expected band : 1.68293 < r < 1.68293
   95% expected band : 1.68293 < r < 1.68293
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1736856588
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.038 +/- 0.00424076 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.038 @ 95%CL (1 toyMC)
median expected limit: r < 1.038 @ 95%CL (1 toyMC)
   68% expected band : 1.038 < r < 1.038
   95% expected band : 1.038 < r < 1.038
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1288198734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.49508 +/- 0.00587 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.49508 @ 95%CL (1 toyMC)
median expected limit: r < 1.49508 @ 95%CL (1 toyMC)
   68% expected band : 1.49508 < r < 1.49508
   95% expected band : 1.49508 < r < 1.49508
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2095171289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05188 +/- 0.00454599 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.05188 @ 95%CL (1 toyMC)
median expected limit: r < 1.05188 @ 95%CL (1 toyMC)
   68% expected band : 1.05188 < r < 1.05188
   95% expected band : 1.05188 < r < 1.05188
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1668477763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37794 +/- 0.00578554 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.37794 @ 95%CL (1 toyMC)
median expected limit: r < 1.37794 @ 95%CL (1 toyMC)
   68% expected band : 1.37794 < r < 1.37794
   95% expected band : 1.37794 < r < 1.37794
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1714623774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68773 +/- 0.00468952 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.68773 @ 95%CL (1 toyMC)
median expected limit: r < 1.68773 @ 95%CL (1 toyMC)
   68% expected band : 1.68773 < r < 1.68773
   95% expected band : 1.68773 < r < 1.68773
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2074387188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06506 +/- 0.00448539 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.06506 @ 95%CL (1 toyMC)
median expected limit: r < 1.06506 @ 95%CL (1 toyMC)
   68% expected band : 1.06506 < r < 1.06506
   95% expected band : 1.06506 < r < 1.06506
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1444045883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36086 +/- 0.0062283 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.36086 @ 95%CL (1 toyMC)
median expected limit: r < 2.36086 @ 95%CL (1 toyMC)
   68% expected band : 2.36086 < r < 2.36086
   95% expected band : 2.36086 < r < 2.36086
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1184642674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18294 +/- 0.00451645 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.18294 @ 95%CL (1 toyMC)
median expected limit: r < 1.18294 @ 95%CL (1 toyMC)
   68% expected band : 1.18294 < r < 1.18294
   95% expected band : 1.18294 < r < 1.18294
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2048190019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76384 +/- 0.00596026 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76384 @ 95%CL (1 toyMC)
median expected limit: r < 1.76384 @ 95%CL (1 toyMC)
   68% expected band : 1.76384 < r < 1.76384
   95% expected band : 1.76384 < r < 1.76384
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1518110891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57743 +/- 0.00570948 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.57743 @ 95%CL (1 toyMC)
median expected limit: r < 1.57743 @ 95%CL (1 toyMC)
   68% expected band : 1.57743 < r < 1.57743
   95% expected band : 1.57743 < r < 1.57743
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1472584655
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.49981 +/- 0.00408255 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.49981 @ 95%CL (1 toyMC)
median expected limit: r < 1.49981 @ 95%CL (1 toyMC)
   68% expected band : 1.49981 < r < 1.49981
   95% expected band : 1.49981 < r < 1.49981
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 63327748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65988 +/- 0.00684879 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.65988 @ 95%CL (1 toyMC)
median expected limit: r < 1.65988 @ 95%CL (1 toyMC)
   68% expected band : 1.65988 < r < 1.65988
   95% expected band : 1.65988 < r < 1.65988
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 242052641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36076 +/- 0.00434056 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.36076 @ 95%CL (1 toyMC)
median expected limit: r < 1.36076 @ 95%CL (1 toyMC)
   68% expected band : 1.36076 < r < 1.36076
   95% expected band : 1.36076 < r < 1.36076
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 819211731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65486 +/- 0.00501774 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.65486 @ 95%CL (1 toyMC)
median expected limit: r < 1.65486 @ 95%CL (1 toyMC)
   68% expected band : 1.65486 < r < 1.65486
   95% expected band : 1.65486 < r < 1.65486
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1634017080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20851 +/- 0.00441823 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.20851 @ 95%CL (1 toyMC)
median expected limit: r < 1.20851 @ 95%CL (1 toyMC)
   68% expected band : 1.20851 < r < 1.20851
   95% expected band : 1.20851 < r < 1.20851
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -756409837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07135 +/- 0.00448477 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.07135 @ 95%CL (1 toyMC)
median expected limit: r < 1.07135 @ 95%CL (1 toyMC)
   68% expected band : 1.07135 < r < 1.07135
   95% expected band : 1.07135 < r < 1.07135
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1057935275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.85631 +/- 0.00504607 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.85631 @ 95%CL (1 toyMC)
median expected limit: r < 3.85631 @ 95%CL (1 toyMC)
   68% expected band : 3.85631 < r < 3.85631
   95% expected band : 3.85631 < r < 3.85631
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2002366932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45076 +/- 0.00461924 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.45076 @ 95%CL (1 toyMC)
median expected limit: r < 1.45076 @ 95%CL (1 toyMC)
   68% expected band : 1.45076 < r < 1.45076
   95% expected band : 1.45076 < r < 1.45076
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -921253784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33493 +/- 0.00561625 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.33493 @ 95%CL (1 toyMC)
median expected limit: r < 1.33493 @ 95%CL (1 toyMC)
   68% expected band : 1.33493 < r < 1.33493
   95% expected band : 1.33493 < r < 1.33493
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2065406394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11709 +/- 0.00447981 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.11709 @ 95%CL (1 toyMC)
median expected limit: r < 1.11709 @ 95%CL (1 toyMC)
   68% expected band : 1.11709 < r < 1.11709
   95% expected band : 1.11709 < r < 1.11709
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1781251316
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59769 +/- 0.00443623 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.59769 @ 95%CL (1 toyMC)
median expected limit: r < 1.59769 @ 95%CL (1 toyMC)
   68% expected band : 1.59769 < r < 1.59769
   95% expected band : 1.59769 < r < 1.59769
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 311360096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03108 +/- 0.00427762 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.03108 @ 95%CL (1 toyMC)
median expected limit: r < 1.03108 @ 95%CL (1 toyMC)
   68% expected band : 1.03108 < r < 1.03108
   95% expected band : 1.03108 < r < 1.03108
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 123507331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.69192 +/- 0.00454974 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.69192 @ 95%CL (1 toyMC)
median expected limit: r < 1.69192 @ 95%CL (1 toyMC)
   68% expected band : 1.69192 < r < 1.69192
   95% expected band : 1.69192 < r < 1.69192
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -165265075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.69579 +/- 0.00528425 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.69579 @ 95%CL (1 toyMC)
median expected limit: r < 1.69579 @ 95%CL (1 toyMC)
   68% expected band : 1.69579 < r < 1.69579
   95% expected band : 1.69579 < r < 1.69579
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1057935275.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1165882583.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1169348199.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1184642674.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1194084033.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1318619315.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1341825272.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1352327142.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1444045883.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1472584655.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1551701427.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1583586910.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1586977447.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1601524563.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1620789040.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1634017080.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-165265075.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1668477763.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1695907141.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1732075715.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1736856588.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1781251316.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1782972090.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1813732935.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1900759197.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-194865387.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-195897130.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1959875305.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2002366932.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-2031184627.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-2059786195.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-2065406394.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-2067268298.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-2074387188.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-2088374334.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-2115486458.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-309351975.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-364270566.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-37856747.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-551197338.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-567455772.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-597111557.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-601616062.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-66611285.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-678691413.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-708401600.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-718451755.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-756409837.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-921253784.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-93098755.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-940555876.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1007662186.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1071058181.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1141046262.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1141399420.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1216462662.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1219969370.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1232804086.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.123507331.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1274321761.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1288198734.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1378263504.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1464421483.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1518110891.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.163825991.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1642337727.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1649192663.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1680754154.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1707306550.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1714623774.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1726467230.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1764158128.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1863091766.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.191046890.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1916613789.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1946246172.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1968386264.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.202021830.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2020586964.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2048190019.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2089643973.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2095171289.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.226531066.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.242052641.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.274125671.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.295919435.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.311360096.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.347638551.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.387726575.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.389851549.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.450353622.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.57177744.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.600113849.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.63327748.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.773107323.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.79620772.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.799496281.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.819211731.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.869380489.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.902793945.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -275630504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44284 +/- 0.00465891 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.44284 @ 95%CL (1 toyMC)
median expected limit: r < 2.44284 @ 95%CL (1 toyMC)
   68% expected band : 2.44284 < r < 2.44284
   95% expected band : 2.44284 < r < 2.44284
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1681929489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40337 +/- 0.00421007 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.40337 @ 95%CL (1 toyMC)
median expected limit: r < 1.40337 @ 95%CL (1 toyMC)
   68% expected band : 1.40337 < r < 1.40337
   95% expected band : 1.40337 < r < 1.40337
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1254895551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37075 +/- 0.00453278 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.37075 @ 95%CL (1 toyMC)
median expected limit: r < 1.37075 @ 95%CL (1 toyMC)
   68% expected band : 1.37075 < r < 1.37075
   95% expected band : 1.37075 < r < 1.37075
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -471769894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30699 +/- 0.00559662 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.30699 @ 95%CL (1 toyMC)
median expected limit: r < 2.30699 @ 95%CL (1 toyMC)
   68% expected band : 2.30699 < r < 2.30699
   95% expected band : 2.30699 < r < 2.30699
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -451733537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28964 +/- 0.00387758 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.28964 @ 95%CL (1 toyMC)
median expected limit: r < 1.28964 @ 95%CL (1 toyMC)
   68% expected band : 1.28964 < r < 1.28964
   95% expected band : 1.28964 < r < 1.28964
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -402852604
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85252 +/- 0.00472565 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.85252 @ 95%CL (1 toyMC)
median expected limit: r < 1.85252 @ 95%CL (1 toyMC)
   68% expected band : 1.85252 < r < 1.85252
   95% expected band : 1.85252 < r < 1.85252
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1192262203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8612 +/- 0.00445594 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.8612 @ 95%CL (1 toyMC)
median expected limit: r < 1.8612 @ 95%CL (1 toyMC)
   68% expected band : 1.8612 < r < 1.8612
   95% expected band : 1.8612 < r < 1.8612
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 222603036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.21425 +/- 0.00591762 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.21425 @ 95%CL (1 toyMC)
median expected limit: r < 2.21425 @ 95%CL (1 toyMC)
   68% expected band : 2.21425 < r < 2.21425
   95% expected band : 2.21425 < r < 2.21425
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1007790048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6296 +/- 0.00486198 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.6296 @ 95%CL (1 toyMC)
median expected limit: r < 1.6296 @ 95%CL (1 toyMC)
   68% expected band : 1.6296 < r < 1.6296
   95% expected band : 1.6296 < r < 1.6296
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 499097151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52821 +/- 0.0047166 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.52821 @ 95%CL (1 toyMC)
median expected limit: r < 1.52821 @ 95%CL (1 toyMC)
   68% expected band : 1.52821 < r < 1.52821
   95% expected band : 1.52821 < r < 1.52821
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1364343328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01891 +/- 0.00346124 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.01891 @ 95%CL (1 toyMC)
median expected limit: r < 1.01891 @ 95%CL (1 toyMC)
   68% expected band : 1.01891 < r < 1.01891
   95% expected band : 1.01891 < r < 1.01891
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1364803452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56124 +/- 0.00634092 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.56124 @ 95%CL (1 toyMC)
median expected limit: r < 1.56124 @ 95%CL (1 toyMC)
   68% expected band : 1.56124 < r < 1.56124
   95% expected band : 1.56124 < r < 1.56124
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -272787427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3538 +/- 0.00425078 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3538 @ 95%CL (1 toyMC)
median expected limit: r < 1.3538 @ 95%CL (1 toyMC)
   68% expected band : 1.3538 < r < 1.3538
   95% expected band : 1.3538 < r < 1.3538
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1717079077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58476 +/- 0.00557509 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.58476 @ 95%CL (1 toyMC)
median expected limit: r < 1.58476 @ 95%CL (1 toyMC)
   68% expected band : 1.58476 < r < 1.58476
   95% expected band : 1.58476 < r < 1.58476
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1100890439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46171 +/- 0.00556392 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.46171 @ 95%CL (1 toyMC)
median expected limit: r < 2.46171 @ 95%CL (1 toyMC)
   68% expected band : 2.46171 < r < 2.46171
   95% expected band : 2.46171 < r < 2.46171
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 722824185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69569 +/- 0.0060159 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.69569 @ 95%CL (1 toyMC)
median expected limit: r < 2.69569 @ 95%CL (1 toyMC)
   68% expected band : 2.69569 < r < 2.69569
   95% expected band : 2.69569 < r < 2.69569
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 115594888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.13984 +/- 0.00613658 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.13984 @ 95%CL (1 toyMC)
median expected limit: r < 2.13984 @ 95%CL (1 toyMC)
   68% expected band : 2.13984 < r < 2.13984
   95% expected band : 2.13984 < r < 2.13984
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1620818847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65425 +/- 0.00518721 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.65425 @ 95%CL (1 toyMC)
median expected limit: r < 1.65425 @ 95%CL (1 toyMC)
   68% expected band : 1.65425 < r < 1.65425
   95% expected band : 1.65425 < r < 1.65425
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1955928990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59376 +/- 0.00605432 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.59376 @ 95%CL (1 toyMC)
median expected limit: r < 1.59376 @ 95%CL (1 toyMC)
   68% expected band : 1.59376 < r < 1.59376
   95% expected band : 1.59376 < r < 1.59376
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -910433341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63328 +/- 0.00590346 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.63328 @ 95%CL (1 toyMC)
median expected limit: r < 1.63328 @ 95%CL (1 toyMC)
   68% expected band : 1.63328 < r < 1.63328
   95% expected band : 1.63328 < r < 1.63328
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1134579153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61502 +/- 0.0051282 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.61502 @ 95%CL (1 toyMC)
median expected limit: r < 1.61502 @ 95%CL (1 toyMC)
   68% expected band : 1.61502 < r < 1.61502
   95% expected band : 1.61502 < r < 1.61502
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -554307247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93609 +/- 0.0044561 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.93609 @ 95%CL (1 toyMC)
median expected limit: r < 1.93609 @ 95%CL (1 toyMC)
   68% expected band : 1.93609 < r < 1.93609
   95% expected band : 1.93609 < r < 1.93609
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 423335752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92953 +/- 0.00408192 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.92953 @ 95%CL (1 toyMC)
median expected limit: r < 1.92953 @ 95%CL (1 toyMC)
   68% expected band : 1.92953 < r < 1.92953
   95% expected band : 1.92953 < r < 1.92953
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1668161038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18311 +/- 0.00520433 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.18311 @ 95%CL (1 toyMC)
median expected limit: r < 2.18311 @ 95%CL (1 toyMC)
   68% expected band : 2.18311 < r < 2.18311
   95% expected band : 2.18311 < r < 2.18311
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -559351730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0314 +/- 0.00587161 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.0314 @ 95%CL (1 toyMC)
median expected limit: r < 2.0314 @ 95%CL (1 toyMC)
   68% expected band : 2.0314 < r < 2.0314
   95% expected band : 2.0314 < r < 2.0314
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1091917326
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.72959 +/- 0.00493196 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.72959 @ 95%CL (1 toyMC)
median expected limit: r < 1.72959 @ 95%CL (1 toyMC)
   68% expected band : 1.72959 < r < 1.72959
   95% expected band : 1.72959 < r < 1.72959
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 503436342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13729 +/- 0.00422361 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.13729 @ 95%CL (1 toyMC)
median expected limit: r < 1.13729 @ 95%CL (1 toyMC)
   68% expected band : 1.13729 < r < 1.13729
   95% expected band : 1.13729 < r < 1.13729
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1587171223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90908 +/- 0.00568902 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.90908 @ 95%CL (1 toyMC)
median expected limit: r < 1.90908 @ 95%CL (1 toyMC)
   68% expected band : 1.90908 < r < 1.90908
   95% expected band : 1.90908 < r < 1.90908
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -215778665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97737 +/- 0.00553162 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.97737 @ 95%CL (1 toyMC)
median expected limit: r < 1.97737 @ 95%CL (1 toyMC)
   68% expected band : 1.97737 < r < 1.97737
   95% expected band : 1.97737 < r < 1.97737
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 889475214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2809 +/- 0.00351745 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.2809 @ 95%CL (1 toyMC)
median expected limit: r < 1.2809 @ 95%CL (1 toyMC)
   68% expected band : 1.2809 < r < 1.2809
   95% expected band : 1.2809 < r < 1.2809
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -804084148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02565 +/- 0.00557839 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02565 @ 95%CL (1 toyMC)
median expected limit: r < 2.02565 @ 95%CL (1 toyMC)
   68% expected band : 2.02565 < r < 2.02565
   95% expected band : 2.02565 < r < 2.02565
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1872615785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.20065 +/- 0.0053969 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.20065 @ 95%CL (1 toyMC)
median expected limit: r < 3.20065 @ 95%CL (1 toyMC)
   68% expected band : 3.20065 < r < 3.20065
   95% expected band : 3.20065 < r < 3.20065
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1966875222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.74983 +/- 0.00425677 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.74983 @ 95%CL (1 toyMC)
median expected limit: r < 1.74983 @ 95%CL (1 toyMC)
   68% expected band : 1.74983 < r < 1.74983
   95% expected band : 1.74983 < r < 1.74983
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1027960176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74839 +/- 0.00598963 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.74839 @ 95%CL (1 toyMC)
median expected limit: r < 2.74839 @ 95%CL (1 toyMC)
   68% expected band : 2.74839 < r < 2.74839
   95% expected band : 2.74839 < r < 2.74839
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1896245083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88256 +/- 0.00637717 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.88256 @ 95%CL (1 toyMC)
median expected limit: r < 1.88256 @ 95%CL (1 toyMC)
   68% expected band : 1.88256 < r < 1.88256
   95% expected band : 1.88256 < r < 1.88256
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -172059249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.64123 +/- 0.00447622 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.64123 @ 95%CL (1 toyMC)
median expected limit: r < 1.64123 @ 95%CL (1 toyMC)
   68% expected band : 1.64123 < r < 1.64123
   95% expected band : 1.64123 < r < 1.64123
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 592732065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.39753 +/- 0.00578435 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.39753 @ 95%CL (1 toyMC)
median expected limit: r < 2.39753 @ 95%CL (1 toyMC)
   68% expected band : 2.39753 < r < 2.39753
   95% expected band : 2.39753 < r < 2.39753
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -332835834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42579 +/- 0.00654025 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.42579 @ 95%CL (1 toyMC)
median expected limit: r < 2.42579 @ 95%CL (1 toyMC)
   68% expected band : 2.42579 < r < 2.42579
   95% expected band : 2.42579 < r < 2.42579
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1574675622
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.72826 +/- 0.00515571 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.72826 @ 95%CL (1 toyMC)
median expected limit: r < 1.72826 @ 95%CL (1 toyMC)
   68% expected band : 1.72826 < r < 1.72826
   95% expected band : 1.72826 < r < 1.72826
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1226091158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02555 +/- 0.00586816 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02555 @ 95%CL (1 toyMC)
median expected limit: r < 2.02555 @ 95%CL (1 toyMC)
   68% expected band : 2.02555 < r < 2.02555
   95% expected band : 2.02555 < r < 2.02555
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 950124581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4964 +/- 0.00538299 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.4964 @ 95%CL (1 toyMC)
median expected limit: r < 1.4964 @ 95%CL (1 toyMC)
   68% expected band : 1.4964 < r < 1.4964
   95% expected band : 1.4964 < r < 1.4964
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1965972842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19298 +/- 0.00647783 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.19298 @ 95%CL (1 toyMC)
median expected limit: r < 2.19298 @ 95%CL (1 toyMC)
   68% expected band : 2.19298 < r < 2.19298
   95% expected band : 2.19298 < r < 2.19298
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 774194325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.55527 +/- 0.00501106 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.55527 @ 95%CL (1 toyMC)
median expected limit: r < 1.55527 @ 95%CL (1 toyMC)
   68% expected band : 1.55527 < r < 1.55527
   95% expected band : 1.55527 < r < 1.55527
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 892569635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65991 +/- 0.00543729 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.65991 @ 95%CL (1 toyMC)
median expected limit: r < 2.65991 @ 95%CL (1 toyMC)
   68% expected band : 2.65991 < r < 2.65991
   95% expected band : 2.65991 < r < 2.65991
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -546399040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.72787 +/- 0.00448578 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.72787 @ 95%CL (1 toyMC)
median expected limit: r < 2.72787 @ 95%CL (1 toyMC)
   68% expected band : 2.72787 < r < 2.72787
   95% expected band : 2.72787 < r < 2.72787
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1586254519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56652 +/- 0.00438804 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.56652 @ 95%CL (1 toyMC)
median expected limit: r < 1.56652 @ 95%CL (1 toyMC)
   68% expected band : 1.56652 < r < 1.56652
   95% expected band : 1.56652 < r < 1.56652
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 337710833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7878 +/- 0.00526124 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.7878 @ 95%CL (1 toyMC)
median expected limit: r < 1.7878 @ 95%CL (1 toyMC)
   68% expected band : 1.7878 < r < 1.7878
   95% expected band : 1.7878 < r < 1.7878
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 528997895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19558 +/- 0.00607984 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.19558 @ 95%CL (1 toyMC)
median expected limit: r < 2.19558 @ 95%CL (1 toyMC)
   68% expected band : 2.19558 < r < 2.19558
   95% expected band : 2.19558 < r < 2.19558
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -786166452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06964 +/- 0.00494667 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.06964 @ 95%CL (1 toyMC)
median expected limit: r < 1.06964 @ 95%CL (1 toyMC)
   68% expected band : 1.06964 < r < 1.06964
   95% expected band : 1.06964 < r < 1.06964
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1971008345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53771 +/- 0.00614319 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.53771 @ 95%CL (1 toyMC)
median expected limit: r < 2.53771 @ 95%CL (1 toyMC)
   68% expected band : 2.53771 < r < 2.53771
   95% expected band : 2.53771 < r < 2.53771
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2011948107
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62868 +/- 0.00491436 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.62868 @ 95%CL (1 toyMC)
median expected limit: r < 2.62868 @ 95%CL (1 toyMC)
   68% expected band : 2.62868 < r < 2.62868
   95% expected band : 2.62868 < r < 2.62868
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1313475957
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.01803 +/- 0.00496872 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.01803 @ 95%CL (1 toyMC)
median expected limit: r < 2.01803 @ 95%CL (1 toyMC)
   68% expected band : 2.01803 < r < 2.01803
   95% expected band : 2.01803 < r < 2.01803
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1799243377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3808 +/- 0.00428857 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3808 @ 95%CL (1 toyMC)
median expected limit: r < 1.3808 @ 95%CL (1 toyMC)
   68% expected band : 1.3808 < r < 1.3808
   95% expected band : 1.3808 < r < 1.3808
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -949663240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40626 +/- 0.0053608 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.40626 @ 95%CL (1 toyMC)
median expected limit: r < 2.40626 @ 95%CL (1 toyMC)
   68% expected band : 2.40626 < r < 2.40626
   95% expected band : 2.40626 < r < 2.40626
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1309773990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97138 +/- 0.00649509 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.97138 @ 95%CL (1 toyMC)
median expected limit: r < 1.97138 @ 95%CL (1 toyMC)
   68% expected band : 1.97138 < r < 1.97138
   95% expected band : 1.97138 < r < 1.97138
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1341616183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88631 +/- 0.0057439 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.88631 @ 95%CL (1 toyMC)
median expected limit: r < 2.88631 @ 95%CL (1 toyMC)
   68% expected band : 2.88631 < r < 2.88631
   95% expected band : 2.88631 < r < 2.88631
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -462043176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2657 +/- 0.00638257 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.2657 @ 95%CL (1 toyMC)
median expected limit: r < 2.2657 @ 95%CL (1 toyMC)
   68% expected band : 2.2657 < r < 2.2657
   95% expected band : 2.2657 < r < 2.2657
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2065656396
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10677 +/- 0.00413919 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.10677 @ 95%CL (1 toyMC)
median expected limit: r < 1.10677 @ 95%CL (1 toyMC)
   68% expected band : 1.10677 < r < 1.10677
   95% expected band : 1.10677 < r < 1.10677
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -799405272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38332 +/- 0.0047465 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.38332 @ 95%CL (1 toyMC)
median expected limit: r < 1.38332 @ 95%CL (1 toyMC)
   68% expected band : 1.38332 < r < 1.38332
   95% expected band : 1.38332 < r < 1.38332
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1884371572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57419 +/- 0.0049844 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.57419 @ 95%CL (1 toyMC)
median expected limit: r < 1.57419 @ 95%CL (1 toyMC)
   68% expected band : 1.57419 < r < 1.57419
   95% expected band : 1.57419 < r < 1.57419
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1299991095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0992 +/- 0.00391034 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.0992 @ 95%CL (1 toyMC)
median expected limit: r < 2.0992 @ 95%CL (1 toyMC)
   68% expected band : 2.0992 < r < 2.0992
   95% expected band : 2.0992 < r < 2.0992
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1000618214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66367 +/- 0.00546394 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.66367 @ 95%CL (1 toyMC)
median expected limit: r < 1.66367 @ 95%CL (1 toyMC)
   68% expected band : 1.66367 < r < 1.66367
   95% expected band : 1.66367 < r < 1.66367
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -758054650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95976 +/- 0.00521661 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.95976 @ 95%CL (1 toyMC)
median expected limit: r < 1.95976 @ 95%CL (1 toyMC)
   68% expected band : 1.95976 < r < 1.95976
   95% expected band : 1.95976 < r < 1.95976
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 799536001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.5079 +/- 0.00587021 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.5079 @ 95%CL (1 toyMC)
median expected limit: r < 2.5079 @ 95%CL (1 toyMC)
   68% expected band : 2.5079 < r < 2.5079
   95% expected band : 2.5079 < r < 2.5079
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -45317087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58235 +/- 0.00505571 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.58235 @ 95%CL (1 toyMC)
median expected limit: r < 1.58235 @ 95%CL (1 toyMC)
   68% expected band : 1.58235 < r < 1.58235
   95% expected band : 1.58235 < r < 1.58235
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -160334884
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86896 +/- 0.00435777 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.86896 @ 95%CL (1 toyMC)
median expected limit: r < 1.86896 @ 95%CL (1 toyMC)
   68% expected band : 1.86896 < r < 1.86896
   95% expected band : 1.86896 < r < 1.86896
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -412985708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91835 +/- 0.00467393 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91835 @ 95%CL (1 toyMC)
median expected limit: r < 1.91835 @ 95%CL (1 toyMC)
   68% expected band : 1.91835 < r < 1.91835
   95% expected band : 1.91835 < r < 1.91835
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -655713004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.5747 +/- 0.00624541 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.5747 @ 95%CL (1 toyMC)
median expected limit: r < 2.5747 @ 95%CL (1 toyMC)
   68% expected band : 2.5747 < r < 2.5747
   95% expected band : 2.5747 < r < 2.5747
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 708503986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32194 +/- 0.00588396 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.32194 @ 95%CL (1 toyMC)
median expected limit: r < 2.32194 @ 95%CL (1 toyMC)
   68% expected band : 2.32194 < r < 2.32194
   95% expected band : 2.32194 < r < 2.32194
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 42993680
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93385 +/- 0.00510541 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.93385 @ 95%CL (1 toyMC)
median expected limit: r < 1.93385 @ 95%CL (1 toyMC)
   68% expected band : 1.93385 < r < 1.93385
   95% expected band : 1.93385 < r < 1.93385
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1404621670
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20375 +/- 0.00471027 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.20375 @ 95%CL (1 toyMC)
median expected limit: r < 1.20375 @ 95%CL (1 toyMC)
   68% expected band : 1.20375 < r < 1.20375
   95% expected band : 1.20375 < r < 1.20375
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -716381833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42382 +/- 0.00510575 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.42382 @ 95%CL (1 toyMC)
median expected limit: r < 1.42382 @ 95%CL (1 toyMC)
   68% expected band : 1.42382 < r < 1.42382
   95% expected band : 1.42382 < r < 1.42382
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1096136542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3692 +/- 0.00440147 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3692 @ 95%CL (1 toyMC)
median expected limit: r < 1.3692 @ 95%CL (1 toyMC)
   68% expected band : 1.3692 < r < 1.3692
   95% expected band : 1.3692 < r < 1.3692
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -507481185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7927 +/- 0.00465353 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.7927 @ 95%CL (1 toyMC)
median expected limit: r < 1.7927 @ 95%CL (1 toyMC)
   68% expected band : 1.7927 < r < 1.7927
   95% expected band : 1.7927 < r < 1.7927
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2031406288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32203 +/- 0.00547688 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.32203 @ 95%CL (1 toyMC)
median expected limit: r < 2.32203 @ 95%CL (1 toyMC)
   68% expected band : 2.32203 < r < 2.32203
   95% expected band : 2.32203 < r < 2.32203
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 636004691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.4449 +/- 0.00552318 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.4449 @ 95%CL (1 toyMC)
median expected limit: r < 2.4449 @ 95%CL (1 toyMC)
   68% expected band : 2.4449 < r < 2.4449
   95% expected band : 2.4449 < r < 2.4449
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -255837157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12039 +/- 0.00422676 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12039 @ 95%CL (1 toyMC)
median expected limit: r < 1.12039 @ 95%CL (1 toyMC)
   68% expected band : 1.12039 < r < 1.12039
   95% expected band : 1.12039 < r < 1.12039
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2099014511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05167 +/- 0.00310635 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.05167 @ 95%CL (1 toyMC)
median expected limit: r < 1.05167 @ 95%CL (1 toyMC)
   68% expected band : 1.05167 < r < 1.05167
   95% expected band : 1.05167 < r < 1.05167
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1463784736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27652 +/- 0.00463041 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.27652 @ 95%CL (1 toyMC)
median expected limit: r < 1.27652 @ 95%CL (1 toyMC)
   68% expected band : 1.27652 < r < 1.27652
   95% expected band : 1.27652 < r < 1.27652
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -491094712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.7116 +/- 0.00453856 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.7116 @ 95%CL (1 toyMC)
median expected limit: r < 2.7116 @ 95%CL (1 toyMC)
   68% expected band : 2.7116 < r < 2.7116
   95% expected band : 2.7116 < r < 2.7116
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1153555930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4365 +/- 0.00421821 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.4365 @ 95%CL (1 toyMC)
median expected limit: r < 1.4365 @ 95%CL (1 toyMC)
   68% expected band : 1.4365 < r < 1.4365
   95% expected band : 1.4365 < r < 1.4365
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 615233780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.839627 +/- 0.00358093 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.839627 @ 95%CL (1 toyMC)
median expected limit: r < 0.839627 @ 95%CL (1 toyMC)
   68% expected band : 0.839627 < r < 0.839627
   95% expected band : 0.839627 < r < 0.839627
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1445402630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27839 +/- 0.00442708 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.27839 @ 95%CL (1 toyMC)
median expected limit: r < 1.27839 @ 95%CL (1 toyMC)
   68% expected band : 1.27839 < r < 1.27839
   95% expected band : 1.27839 < r < 1.27839
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -523388167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.25055 +/- 0.00512887 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.25055 @ 95%CL (1 toyMC)
median expected limit: r < 2.25055 @ 95%CL (1 toyMC)
   68% expected band : 2.25055 < r < 2.25055
   95% expected band : 2.25055 < r < 2.25055
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1641851758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30227 +/- 0.00599188 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.30227 @ 95%CL (1 toyMC)
median expected limit: r < 2.30227 @ 95%CL (1 toyMC)
   68% expected band : 2.30227 < r < 2.30227
   95% expected band : 2.30227 < r < 2.30227
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1703585784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.58691 +/- 0.00582563 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.58691 @ 95%CL (1 toyMC)
median expected limit: r < 2.58691 @ 95%CL (1 toyMC)
   68% expected band : 2.58691 < r < 2.58691
   95% expected band : 2.58691 < r < 2.58691
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1117041261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40097 +/- 0.00555701 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.40097 @ 95%CL (1 toyMC)
median expected limit: r < 2.40097 @ 95%CL (1 toyMC)
   68% expected band : 2.40097 < r < 2.40097
   95% expected band : 2.40097 < r < 2.40097
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2091105589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66742 +/- 0.00400565 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.66742 @ 95%CL (1 toyMC)
median expected limit: r < 1.66742 @ 95%CL (1 toyMC)
   68% expected band : 1.66742 < r < 1.66742
   95% expected band : 1.66742 < r < 1.66742
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 131666239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71343 +/- 0.00573653 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.71343 @ 95%CL (1 toyMC)
median expected limit: r < 2.71343 @ 95%CL (1 toyMC)
   68% expected band : 2.71343 < r < 2.71343
   95% expected band : 2.71343 < r < 2.71343
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2111443339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.08313 +/- 0.00520508 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.08313 @ 95%CL (1 toyMC)
median expected limit: r < 2.08313 @ 95%CL (1 toyMC)
   68% expected band : 2.08313 < r < 2.08313
   95% expected band : 2.08313 < r < 2.08313
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1335714401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77397 +/- 0.00548723 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.77397 @ 95%CL (1 toyMC)
median expected limit: r < 1.77397 @ 95%CL (1 toyMC)
   68% expected band : 1.77397 < r < 1.77397
   95% expected band : 1.77397 < r < 1.77397
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2014889262
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67721 +/- 0.00471413 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.67721 @ 95%CL (1 toyMC)
median expected limit: r < 1.67721 @ 95%CL (1 toyMC)
   68% expected band : 1.67721 < r < 1.67721
   95% expected band : 1.67721 < r < 1.67721
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -598802812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86366 +/- 0.00459379 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.86366 @ 95%CL (1 toyMC)
median expected limit: r < 1.86366 @ 95%CL (1 toyMC)
   68% expected band : 1.86366 < r < 1.86366
   95% expected band : 1.86366 < r < 1.86366
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2125965120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75704 +/- 0.0056784 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.75704 @ 95%CL (1 toyMC)
median expected limit: r < 2.75704 @ 95%CL (1 toyMC)
   68% expected band : 2.75704 < r < 2.75704
   95% expected band : 2.75704 < r < 2.75704
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1326977848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02192 +/- 0.00558257 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.02192 @ 95%CL (1 toyMC)
median expected limit: r < 2.02192 @ 95%CL (1 toyMC)
   68% expected band : 2.02192 < r < 2.02192
   95% expected band : 2.02192 < r < 2.02192
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -807971016
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61373 +/- 0.00347119 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.61373 @ 95%CL (1 toyMC)
median expected limit: r < 1.61373 @ 95%CL (1 toyMC)
   68% expected band : 1.61373 < r < 1.61373
   95% expected band : 1.61373 < r < 1.61373
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -866597991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27087 +/- 0.0040785 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.27087 @ 95%CL (1 toyMC)
median expected limit: r < 1.27087 @ 95%CL (1 toyMC)
   68% expected band : 1.27087 < r < 1.27087
   95% expected band : 1.27087 < r < 1.27087
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1362242532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.32826 +/- 0.0060834 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 4.32826 @ 95%CL (1 toyMC)
median expected limit: r < 4.32826 @ 95%CL (1 toyMC)
   68% expected band : 4.32826 < r < 4.32826
   95% expected band : 4.32826 < r < 4.32826
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 495011928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68838 +/- 0.00498725 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.68838 @ 95%CL (1 toyMC)
median expected limit: r < 2.68838 @ 95%CL (1 toyMC)
   68% expected band : 2.68838 < r < 2.68838
   95% expected band : 2.68838 < r < 2.68838
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1957627049
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65063 +/- 0.00534092 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.65063 @ 95%CL (1 toyMC)
median expected limit: r < 1.65063 @ 95%CL (1 toyMC)
   68% expected band : 1.65063 < r < 1.65063
   95% expected band : 1.65063 < r < 1.65063
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1000618214.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1027960176.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1091917326.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1117041261.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1134579153.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1226091158.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1254895551.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1326977848.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1335714401.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1364803452.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1404621670.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1445402630.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1574675622.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1587171223.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-160334884.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1620818847.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1641851758.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1681929489.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1717079077.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-172059249.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1872615785.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1884371572.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1955928990.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1971008345.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-2031406288.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-2091105589.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-215778665.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-255837157.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-272787427.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-275630504.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-332835834.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-402852604.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-412985708.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-451733537.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-45317087.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-462043176.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-471769894.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-491094712.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-507481185.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-523388167.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-546399040.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-554307247.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-559351730.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-598802812.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-655713004.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-716381833.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-758054650.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-786166452.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-799405272.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-804084148.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-807971016.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-866597991.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.-910433341.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.-949663240.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1007790048.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1096136542.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1100890439.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1153555930.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.115594888.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1192262203.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1299991095.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1309773990.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1313475957.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.131666239.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1341616183.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1362242532.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1364343328.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1463784736.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1586254519.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1668161038.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1703585784.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1799243377.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1896245083.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1957627049.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1965972842.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1966875222.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2011948107.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2014889262.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2065656396.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2099014511.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2111443339.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2125965120.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.222603036.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.337710833.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.423335752.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.42993680.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.495011928.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.499097151.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.503436342.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.528997895.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.592732065.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.615233780.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.636004691.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.708503986.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.722824185.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.774194325.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.799536001.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.889475214.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.892569635.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.950124581.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 8664420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.54583 +/- 0.00385681 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.54583 @ 95%CL (1 toyMC)
median expected limit: r < 1.54583 @ 95%CL (1 toyMC)
   68% expected band : 1.54583 < r < 1.54583
   95% expected band : 1.54583 < r < 1.54583
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -889270374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48683 +/- 0.00462028 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.48683 @ 95%CL (1 toyMC)
median expected limit: r < 2.48683 @ 95%CL (1 toyMC)
   68% expected band : 2.48683 < r < 2.48683
   95% expected band : 2.48683 < r < 2.48683
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -810347018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32647 +/- 0.00529959 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.32647 @ 95%CL (1 toyMC)
median expected limit: r < 2.32647 @ 95%CL (1 toyMC)
   68% expected band : 2.32647 < r < 2.32647
   95% expected band : 2.32647 < r < 2.32647
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2089307847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36771 +/- 0.00492325 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.36771 @ 95%CL (1 toyMC)
median expected limit: r < 2.36771 @ 95%CL (1 toyMC)
   68% expected band : 2.36771 < r < 2.36771
   95% expected band : 2.36771 < r < 2.36771
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -795669381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.5637 +/- 0.00403619 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.5637 @ 95%CL (1 toyMC)
median expected limit: r < 1.5637 @ 95%CL (1 toyMC)
   68% expected band : 1.5637 < r < 1.5637
   95% expected band : 1.5637 < r < 1.5637
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1120324611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.55337 +/- 0.0046923 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.55337 @ 95%CL (1 toyMC)
median expected limit: r < 1.55337 @ 95%CL (1 toyMC)
   68% expected band : 1.55337 < r < 1.55337
   95% expected band : 1.55337 < r < 1.55337
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 814234224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61246 +/- 0.00411561 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.61246 @ 95%CL (1 toyMC)
median expected limit: r < 1.61246 @ 95%CL (1 toyMC)
   68% expected band : 1.61246 < r < 1.61246
   95% expected band : 1.61246 < r < 1.61246
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -759366315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.21211 +/- 0.00478287 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.21211 @ 95%CL (1 toyMC)
median expected limit: r < 2.21211 @ 95%CL (1 toyMC)
   68% expected band : 2.21211 < r < 2.21211
   95% expected band : 2.21211 < r < 2.21211
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2012960793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.24415 +/- 0.00501117 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.24415 @ 95%CL (1 toyMC)
median expected limit: r < 2.24415 @ 95%CL (1 toyMC)
   68% expected band : 2.24415 < r < 2.24415
   95% expected band : 2.24415 < r < 2.24415
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -299887043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.35878 +/- 0.00544521 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.35878 @ 95%CL (1 toyMC)
median expected limit: r < 2.35878 @ 95%CL (1 toyMC)
   68% expected band : 2.35878 < r < 2.35878
   95% expected band : 2.35878 < r < 2.35878
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 140923925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32051 +/- 0.0040464 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.32051 @ 95%CL (1 toyMC)
median expected limit: r < 1.32051 @ 95%CL (1 toyMC)
   68% expected band : 1.32051 < r < 1.32051
   95% expected band : 1.32051 < r < 1.32051
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1149515156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20195 +/- 0.00426899 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.20195 @ 95%CL (1 toyMC)
median expected limit: r < 1.20195 @ 95%CL (1 toyMC)
   68% expected band : 1.20195 < r < 1.20195
   95% expected band : 1.20195 < r < 1.20195
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1319370203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.47647 +/- 0.00566023 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.47647 @ 95%CL (1 toyMC)
median expected limit: r < 3.47647 @ 95%CL (1 toyMC)
   68% expected band : 3.47647 < r < 3.47647
   95% expected band : 3.47647 < r < 3.47647
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -304862649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03036 +/- 0.00508953 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.03036 @ 95%CL (1 toyMC)
median expected limit: r < 2.03036 @ 95%CL (1 toyMC)
   68% expected band : 2.03036 < r < 2.03036
   95% expected band : 2.03036 < r < 2.03036
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1618515066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.87528 +/- 0.00509215 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.87528 @ 95%CL (1 toyMC)
median expected limit: r < 1.87528 @ 95%CL (1 toyMC)
   68% expected band : 1.87528 < r < 1.87528
   95% expected band : 1.87528 < r < 1.87528
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 82341487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.73964 +/- 0.00493759 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.73964 @ 95%CL (1 toyMC)
median expected limit: r < 2.73964 @ 95%CL (1 toyMC)
   68% expected band : 2.73964 < r < 2.73964
   95% expected band : 2.73964 < r < 2.73964
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -507639745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02281 +/- 0.00498915 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.02281 @ 95%CL (1 toyMC)
median expected limit: r < 2.02281 @ 95%CL (1 toyMC)
   68% expected band : 2.02281 < r < 2.02281
   95% expected band : 2.02281 < r < 2.02281
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399958439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71187 +/- 0.00468464 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.71187 @ 95%CL (1 toyMC)
median expected limit: r < 1.71187 @ 95%CL (1 toyMC)
   68% expected band : 1.71187 < r < 1.71187
   95% expected band : 1.71187 < r < 1.71187
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -153392692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51215 +/- 0.00636615 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.51215 @ 95%CL (1 toyMC)
median expected limit: r < 2.51215 @ 95%CL (1 toyMC)
   68% expected band : 2.51215 < r < 2.51215
   95% expected band : 2.51215 < r < 2.51215
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1272144541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97916 +/- 0.0042567 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.97916 @ 95%CL (1 toyMC)
median expected limit: r < 1.97916 @ 95%CL (1 toyMC)
   68% expected band : 1.97916 < r < 1.97916
   95% expected band : 1.97916 < r < 1.97916
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1482385848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45499 +/- 0.00491822 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.45499 @ 95%CL (1 toyMC)
median expected limit: r < 1.45499 @ 95%CL (1 toyMC)
   68% expected band : 1.45499 < r < 1.45499
   95% expected band : 1.45499 < r < 1.45499
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 344802374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86743 +/- 0.00347516 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.86743 @ 95%CL (1 toyMC)
median expected limit: r < 1.86743 @ 95%CL (1 toyMC)
   68% expected band : 1.86743 < r < 1.86743
   95% expected band : 1.86743 < r < 1.86743
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1596313300
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.39617 +/- 0.00540326 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.39617 @ 95%CL (1 toyMC)
median expected limit: r < 3.39617 @ 95%CL (1 toyMC)
   68% expected band : 3.39617 < r < 3.39617
   95% expected band : 3.39617 < r < 3.39617
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1603791126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.68114 +/- 0.00599213 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.68114 @ 95%CL (1 toyMC)
median expected limit: r < 3.68114 @ 95%CL (1 toyMC)
   68% expected band : 3.68114 < r < 3.68114
   95% expected band : 3.68114 < r < 3.68114
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1380587769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22661 +/- 0.00492215 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.22661 @ 95%CL (1 toyMC)
median expected limit: r < 2.22661 @ 95%CL (1 toyMC)
   68% expected band : 2.22661 < r < 2.22661
   95% expected band : 2.22661 < r < 2.22661
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1073307082
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11393 +/- 0.004955 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.11393 @ 95%CL (1 toyMC)
median expected limit: r < 2.11393 @ 95%CL (1 toyMC)
   68% expected band : 2.11393 < r < 2.11393
   95% expected band : 2.11393 < r < 2.11393
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -634677672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12273 +/- 0.00463108 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.12273 @ 95%CL (1 toyMC)
median expected limit: r < 2.12273 @ 95%CL (1 toyMC)
   68% expected band : 2.12273 < r < 2.12273
   95% expected band : 2.12273 < r < 2.12273
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1183140562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65966 +/- 0.00461636 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.65966 @ 95%CL (1 toyMC)
median expected limit: r < 1.65966 @ 95%CL (1 toyMC)
   68% expected band : 1.65966 < r < 1.65966
   95% expected band : 1.65966 < r < 1.65966
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1516029132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48672 +/- 0.00419556 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.48672 @ 95%CL (1 toyMC)
median expected limit: r < 1.48672 @ 95%CL (1 toyMC)
   68% expected band : 1.48672 < r < 1.48672
   95% expected band : 1.48672 < r < 1.48672
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 534529458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3351 +/- 0.0045117 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.3351 @ 95%CL (1 toyMC)
median expected limit: r < 2.3351 @ 95%CL (1 toyMC)
   68% expected band : 2.3351 < r < 2.3351
   95% expected band : 2.3351 < r < 2.3351
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 600292930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06681 +/- 0.00507888 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.06681 @ 95%CL (1 toyMC)
median expected limit: r < 2.06681 @ 95%CL (1 toyMC)
   68% expected band : 2.06681 < r < 2.06681
   95% expected band : 2.06681 < r < 2.06681
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 175260309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.960809 +/- 0.0046618 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.960809 @ 95%CL (1 toyMC)
median expected limit: r < 0.960809 @ 95%CL (1 toyMC)
   68% expected band : 0.960809 < r < 0.960809
   95% expected band : 0.960809 < r < 0.960809
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -567086825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19107 +/- 0.00589219 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.19107 @ 95%CL (1 toyMC)
median expected limit: r < 2.19107 @ 95%CL (1 toyMC)
   68% expected band : 2.19107 < r < 2.19107
   95% expected band : 2.19107 < r < 2.19107
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1761320778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77244 +/- 0.00531973 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.77244 @ 95%CL (1 toyMC)
median expected limit: r < 1.77244 @ 95%CL (1 toyMC)
   68% expected band : 1.77244 < r < 1.77244
   95% expected band : 1.77244 < r < 1.77244
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1066792511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.08066 +/- 0.0042244 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.08066 @ 95%CL (1 toyMC)
median expected limit: r < 4.08066 @ 95%CL (1 toyMC)
   68% expected band : 4.08066 < r < 4.08066
   95% expected band : 4.08066 < r < 4.08066
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -751321274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.25173 +/- 0.00442318 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.25173 @ 95%CL (1 toyMC)
median expected limit: r < 2.25173 @ 95%CL (1 toyMC)
   68% expected band : 2.25173 < r < 2.25173
   95% expected band : 2.25173 < r < 2.25173
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 663762964
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30997 +/- 0.00447393 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.30997 @ 95%CL (1 toyMC)
median expected limit: r < 1.30997 @ 95%CL (1 toyMC)
   68% expected band : 1.30997 < r < 1.30997
   95% expected band : 1.30997 < r < 1.30997
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 119868891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.57715 +/- 0.00700061 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.57715 @ 95%CL (1 toyMC)
median expected limit: r < 4.57715 @ 95%CL (1 toyMC)
   68% expected band : 4.57715 < r < 4.57715
   95% expected band : 4.57715 < r < 4.57715
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1737869520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9155 +/- 0.00466668 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.9155 @ 95%CL (1 toyMC)
median expected limit: r < 1.9155 @ 95%CL (1 toyMC)
   68% expected band : 1.9155 < r < 1.9155
   95% expected band : 1.9155 < r < 1.9155
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1104217142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2166 +/- 0.00584972 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.2166 @ 95%CL (1 toyMC)
median expected limit: r < 2.2166 @ 95%CL (1 toyMC)
   68% expected band : 2.2166 < r < 2.2166
   95% expected band : 2.2166 < r < 2.2166
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1970446196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76462 +/- 0.00458862 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76462 @ 95%CL (1 toyMC)
median expected limit: r < 1.76462 @ 95%CL (1 toyMC)
   68% expected band : 1.76462 < r < 1.76462
   95% expected band : 1.76462 < r < 1.76462
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1162015543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92639 +/- 0.00432617 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.92639 @ 95%CL (1 toyMC)
median expected limit: r < 1.92639 @ 95%CL (1 toyMC)
   68% expected band : 1.92639 < r < 1.92639
   95% expected band : 1.92639 < r < 1.92639
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2035771141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.60022 +/- 0.00546556 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.60022 @ 95%CL (1 toyMC)
median expected limit: r < 2.60022 @ 95%CL (1 toyMC)
   68% expected band : 2.60022 < r < 2.60022
   95% expected band : 2.60022 < r < 2.60022
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1891926494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54245 +/- 0.00497897 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.54245 @ 95%CL (1 toyMC)
median expected limit: r < 2.54245 @ 95%CL (1 toyMC)
   68% expected band : 2.54245 < r < 2.54245
   95% expected band : 2.54245 < r < 2.54245
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -318461591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18212 +/- 0.00540503 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.18212 @ 95%CL (1 toyMC)
median expected limit: r < 2.18212 @ 95%CL (1 toyMC)
   68% expected band : 2.18212 < r < 2.18212
   95% expected band : 2.18212 < r < 2.18212
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1257007468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95813 +/- 0.00539455 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.95813 @ 95%CL (1 toyMC)
median expected limit: r < 1.95813 @ 95%CL (1 toyMC)
   68% expected band : 1.95813 < r < 1.95813
   95% expected band : 1.95813 < r < 1.95813
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1762824542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90988 +/- 0.00526695 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.90988 @ 95%CL (1 toyMC)
median expected limit: r < 1.90988 @ 95%CL (1 toyMC)
   68% expected band : 1.90988 < r < 1.90988
   95% expected band : 1.90988 < r < 1.90988
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -981666325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85229 +/- 0.00458623 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.85229 @ 95%CL (1 toyMC)
median expected limit: r < 1.85229 @ 95%CL (1 toyMC)
   68% expected band : 1.85229 < r < 1.85229
   95% expected band : 1.85229 < r < 1.85229
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1582517708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84546 +/- 0.00423825 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.84546 @ 95%CL (1 toyMC)
median expected limit: r < 1.84546 @ 95%CL (1 toyMC)
   68% expected band : 1.84546 < r < 1.84546
   95% expected band : 1.84546 < r < 1.84546
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -665549688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82207 +/- 0.00542803 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.82207 @ 95%CL (1 toyMC)
median expected limit: r < 1.82207 @ 95%CL (1 toyMC)
   68% expected band : 1.82207 < r < 1.82207
   95% expected band : 1.82207 < r < 1.82207
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 381931795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75156 +/- 0.00526103 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.75156 @ 95%CL (1 toyMC)
median expected limit: r < 2.75156 @ 95%CL (1 toyMC)
   68% expected band : 2.75156 < r < 2.75156
   95% expected band : 2.75156 < r < 2.75156
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1464492567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76074 +/- 0.00568161 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.76074 @ 95%CL (1 toyMC)
median expected limit: r < 2.76074 @ 95%CL (1 toyMC)
   68% expected band : 2.76074 < r < 2.76074
   95% expected band : 2.76074 < r < 2.76074
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2091744956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.58294 +/- 0.00612693 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.58294 @ 95%CL (1 toyMC)
median expected limit: r < 2.58294 @ 95%CL (1 toyMC)
   68% expected band : 2.58294 < r < 2.58294
   95% expected band : 2.58294 < r < 2.58294
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -999294689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48147 +/- 0.00387494 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.48147 @ 95%CL (1 toyMC)
median expected limit: r < 1.48147 @ 95%CL (1 toyMC)
   68% expected band : 1.48147 < r < 1.48147
   95% expected band : 1.48147 < r < 1.48147
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1601414228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.54198 +/- 0.00492207 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.54198 @ 95%CL (1 toyMC)
median expected limit: r < 1.54198 @ 95%CL (1 toyMC)
   68% expected band : 1.54198 < r < 1.54198
   95% expected band : 1.54198 < r < 1.54198
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 708454199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.61529 +/- 0.00393477 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.61529 @ 95%CL (1 toyMC)
median expected limit: r < 2.61529 @ 95%CL (1 toyMC)
   68% expected band : 2.61529 < r < 2.61529
   95% expected band : 2.61529 < r < 2.61529
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1004175364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57412 +/- 0.00432099 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.57412 @ 95%CL (1 toyMC)
median expected limit: r < 1.57412 @ 95%CL (1 toyMC)
   68% expected band : 1.57412 < r < 1.57412
   95% expected band : 1.57412 < r < 1.57412
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1043361165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49891 +/- 0.0044646 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.49891 @ 95%CL (1 toyMC)
median expected limit: r < 2.49891 @ 95%CL (1 toyMC)
   68% expected band : 2.49891 < r < 2.49891
   95% expected band : 2.49891 < r < 2.49891
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2104570951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37551 +/- 0.00570916 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.37551 @ 95%CL (1 toyMC)
median expected limit: r < 2.37551 @ 95%CL (1 toyMC)
   68% expected band : 2.37551 < r < 2.37551
   95% expected band : 2.37551 < r < 2.37551
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1437861773
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.24487 +/- 0.00469591 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.24487 @ 95%CL (1 toyMC)
median expected limit: r < 2.24487 @ 95%CL (1 toyMC)
   68% expected band : 2.24487 < r < 2.24487
   95% expected band : 2.24487 < r < 2.24487
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1903066398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42445 +/- 0.00510192 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.42445 @ 95%CL (1 toyMC)
median expected limit: r < 2.42445 @ 95%CL (1 toyMC)
   68% expected band : 2.42445 < r < 2.42445
   95% expected band : 2.42445 < r < 2.42445
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -41580939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.53044 +/- 0.00484624 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.53044 @ 95%CL (1 toyMC)
median expected limit: r < 1.53044 @ 95%CL (1 toyMC)
   68% expected band : 1.53044 < r < 1.53044
   95% expected band : 1.53044 < r < 1.53044
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1120638297
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60542 +/- 0.00412392 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.60542 @ 95%CL (1 toyMC)
median expected limit: r < 1.60542 @ 95%CL (1 toyMC)
   68% expected band : 1.60542 < r < 1.60542
   95% expected band : 1.60542 < r < 1.60542
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2018487138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42963 +/- 0.00496907 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.42963 @ 95%CL (1 toyMC)
median expected limit: r < 1.42963 @ 95%CL (1 toyMC)
   68% expected band : 1.42963 < r < 1.42963
   95% expected band : 1.42963 < r < 1.42963
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -253637012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50502 +/- 0.00399282 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.50502 @ 95%CL (1 toyMC)
median expected limit: r < 1.50502 @ 95%CL (1 toyMC)
   68% expected band : 1.50502 < r < 1.50502
   95% expected band : 1.50502 < r < 1.50502
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -684937178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88724 +/- 0.0070269 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.88724 @ 95%CL (1 toyMC)
median expected limit: r < 2.88724 @ 95%CL (1 toyMC)
   68% expected band : 2.88724 < r < 2.88724
   95% expected band : 2.88724 < r < 2.88724
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -269023981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.03459 +/- 0.00503616 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.03459 @ 95%CL (1 toyMC)
median expected limit: r < 3.03459 @ 95%CL (1 toyMC)
   68% expected band : 3.03459 < r < 3.03459
   95% expected band : 3.03459 < r < 3.03459
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1599482953
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02963 +/- 0.00494302 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02963 @ 95%CL (1 toyMC)
median expected limit: r < 2.02963 @ 95%CL (1 toyMC)
   68% expected band : 2.02963 < r < 2.02963
   95% expected band : 2.02963 < r < 2.02963
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1284728220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.11462 +/- 0.0055899 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.11462 @ 95%CL (1 toyMC)
median expected limit: r < 3.11462 @ 95%CL (1 toyMC)
   68% expected band : 3.11462 < r < 3.11462
   95% expected band : 3.11462 < r < 3.11462
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 280603216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56932 +/- 0.00429254 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.56932 @ 95%CL (1 toyMC)
median expected limit: r < 1.56932 @ 95%CL (1 toyMC)
   68% expected band : 1.56932 < r < 1.56932
   95% expected band : 1.56932 < r < 1.56932
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1914931610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29616 +/- 0.00570268 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.29616 @ 95%CL (1 toyMC)
median expected limit: r < 2.29616 @ 95%CL (1 toyMC)
   68% expected band : 2.29616 < r < 2.29616
   95% expected band : 2.29616 < r < 2.29616
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 519222414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63869 +/- 0.00389041 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.63869 @ 95%CL (1 toyMC)
median expected limit: r < 1.63869 @ 95%CL (1 toyMC)
   68% expected band : 1.63869 < r < 1.63869
   95% expected band : 1.63869 < r < 1.63869
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -143681327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8522 +/- 0.00389872 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.8522 @ 95%CL (1 toyMC)
median expected limit: r < 1.8522 @ 95%CL (1 toyMC)
   68% expected band : 1.8522 < r < 1.8522
   95% expected band : 1.8522 < r < 1.8522
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1012652425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56296 +/- 0.00382446 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.56296 @ 95%CL (1 toyMC)
median expected limit: r < 1.56296 @ 95%CL (1 toyMC)
   68% expected band : 1.56296 < r < 1.56296
   95% expected band : 1.56296 < r < 1.56296
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -589764404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99802 +/- 0.00454341 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.99802 @ 95%CL (1 toyMC)
median expected limit: r < 1.99802 @ 95%CL (1 toyMC)
   68% expected band : 1.99802 < r < 1.99802
   95% expected band : 1.99802 < r < 1.99802
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2041256129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.74051 +/- 0.00538804 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.74051 @ 95%CL (1 toyMC)
median expected limit: r < 4.74051 @ 95%CL (1 toyMC)
   68% expected band : 4.74051 < r < 4.74051
   95% expected band : 4.74051 < r < 4.74051
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1345163638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7076 +/- 0.0046375 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.7076 @ 95%CL (1 toyMC)
median expected limit: r < 1.7076 @ 95%CL (1 toyMC)
   68% expected band : 1.7076 < r < 1.7076
   95% expected band : 1.7076 < r < 1.7076
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 214773463
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.38313 +/- 0.00570051 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.38313 @ 95%CL (1 toyMC)
median expected limit: r < 2.38313 @ 95%CL (1 toyMC)
   68% expected band : 2.38313 < r < 2.38313
   95% expected band : 2.38313 < r < 2.38313
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1116647145
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71979 +/- 0.00392114 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71979 @ 95%CL (1 toyMC)
median expected limit: r < 1.71979 @ 95%CL (1 toyMC)
   68% expected band : 1.71979 < r < 1.71979
   95% expected band : 1.71979 < r < 1.71979
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 116715221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.60198 +/- 0.00531747 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.60198 @ 95%CL (1 toyMC)
median expected limit: r < 2.60198 @ 95%CL (1 toyMC)
   68% expected band : 2.60198 < r < 2.60198
   95% expected band : 2.60198 < r < 2.60198
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -249483526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11681 +/- 0.00372622 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.11681 @ 95%CL (1 toyMC)
median expected limit: r < 1.11681 @ 95%CL (1 toyMC)
   68% expected band : 1.11681 < r < 1.11681
   95% expected band : 1.11681 < r < 1.11681
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946325978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44291 +/- 0.00419715 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.44291 @ 95%CL (1 toyMC)
median expected limit: r < 2.44291 @ 95%CL (1 toyMC)
   68% expected band : 2.44291 < r < 2.44291
   95% expected band : 2.44291 < r < 2.44291
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -342523651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13927 +/- 0.00521527 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.13927 @ 95%CL (1 toyMC)
median expected limit: r < 3.13927 @ 95%CL (1 toyMC)
   68% expected band : 3.13927 < r < 3.13927
   95% expected band : 3.13927 < r < 3.13927
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 588942759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40348 +/- 0.00525431 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.40348 @ 95%CL (1 toyMC)
median expected limit: r < 2.40348 @ 95%CL (1 toyMC)
   68% expected band : 2.40348 < r < 2.40348
   95% expected band : 2.40348 < r < 2.40348
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -778843259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45648 +/- 0.00594667 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.45648 @ 95%CL (1 toyMC)
median expected limit: r < 2.45648 @ 95%CL (1 toyMC)
   68% expected band : 2.45648 < r < 2.45648
   95% expected band : 2.45648 < r < 2.45648
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1595707449
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4344 +/- 0.00500638 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.4344 @ 95%CL (1 toyMC)
median expected limit: r < 1.4344 @ 95%CL (1 toyMC)
   68% expected band : 1.4344 < r < 1.4344
   95% expected band : 1.4344 < r < 1.4344
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1902515811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71781 +/- 0.00423171 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71781 @ 95%CL (1 toyMC)
median expected limit: r < 1.71781 @ 95%CL (1 toyMC)
   68% expected band : 1.71781 < r < 1.71781
   95% expected band : 1.71781 < r < 1.71781
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1159429928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78947 +/- 0.00430377 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.78947 @ 95%CL (1 toyMC)
median expected limit: r < 1.78947 @ 95%CL (1 toyMC)
   68% expected band : 1.78947 < r < 1.78947
   95% expected band : 1.78947 < r < 1.78947
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 741394531
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52732 +/- 0.00476256 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.52732 @ 95%CL (1 toyMC)
median expected limit: r < 1.52732 @ 95%CL (1 toyMC)
   68% expected band : 1.52732 < r < 1.52732
   95% expected band : 1.52732 < r < 1.52732
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1688343889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89482 +/- 0.00448155 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.89482 @ 95%CL (1 toyMC)
median expected limit: r < 1.89482 @ 95%CL (1 toyMC)
   68% expected band : 1.89482 < r < 1.89482
   95% expected band : 1.89482 < r < 1.89482
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1852971922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58383 +/- 0.0045685 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.58383 @ 95%CL (1 toyMC)
median expected limit: r < 1.58383 @ 95%CL (1 toyMC)
   68% expected band : 1.58383 < r < 1.58383
   95% expected band : 1.58383 < r < 1.58383
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2080179741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.04601 +/- 0.00358603 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.04601 @ 95%CL (1 toyMC)
median expected limit: r < 2.04601 @ 95%CL (1 toyMC)
   68% expected band : 2.04601 < r < 2.04601
   95% expected band : 2.04601 < r < 2.04601
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -64513355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.55038 +/- 0.00515022 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.55038 @ 95%CL (1 toyMC)
median expected limit: r < 1.55038 @ 95%CL (1 toyMC)
   68% expected band : 1.55038 < r < 1.55038
   95% expected band : 1.55038 < r < 1.55038
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 407235390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22964 +/- 0.00448615 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.22964 @ 95%CL (1 toyMC)
median expected limit: r < 1.22964 @ 95%CL (1 toyMC)
   68% expected band : 1.22964 < r < 1.22964
   95% expected band : 1.22964 < r < 1.22964
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1315278320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47723 +/- 0.00511163 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.47723 @ 95%CL (1 toyMC)
median expected limit: r < 2.47723 @ 95%CL (1 toyMC)
   68% expected band : 2.47723 < r < 2.47723
   95% expected band : 2.47723 < r < 2.47723
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1272496066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06169 +/- 0.00545938 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.06169 @ 95%CL (1 toyMC)
median expected limit: r < 2.06169 @ 95%CL (1 toyMC)
   68% expected band : 2.06169 < r < 2.06169
   95% expected band : 2.06169 < r < 2.06169
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2093544062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33469 +/- 0.00395022 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.33469 @ 95%CL (1 toyMC)
median expected limit: r < 1.33469 @ 95%CL (1 toyMC)
   68% expected band : 1.33469 < r < 1.33469
   95% expected band : 1.33469 < r < 1.33469
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1686593568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.37926 +/- 0.00637332 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.37926 @ 95%CL (1 toyMC)
median expected limit: r < 3.37926 @ 95%CL (1 toyMC)
   68% expected band : 3.37926 < r < 3.37926
   95% expected band : 3.37926 < r < 3.37926
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1269008698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00983 +/- 0.00476373 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00983 @ 95%CL (1 toyMC)
median expected limit: r < 2.00983 @ 95%CL (1 toyMC)
   68% expected band : 2.00983 < r < 2.00983
   95% expected band : 2.00983 < r < 2.00983
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -940934595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59947 +/- 0.00423044 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.59947 @ 95%CL (1 toyMC)
median expected limit: r < 1.59947 @ 95%CL (1 toyMC)
   68% expected band : 1.59947 < r < 1.59947
   95% expected band : 1.59947 < r < 1.59947
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1066792511.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1104217142.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1116647145.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1162015543.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1257007468.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1269008698.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1272496066.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1284728220.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1345163638.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1380587769.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1399958439.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-143681327.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1516029132.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-153392692.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1582517708.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1596313300.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1599482953.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1686593568.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1688343889.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1737869520.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1762824542.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1891926494.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1903066398.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-2012960793.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-2018487138.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-2035771141.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-2041256129.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-2093544062.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2104570951.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-249483526.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-253637012.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-269023981.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-299887043.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-304862649.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-318461591.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-342523651.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-41580939.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-507639745.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-567086825.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-589764404.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-634677672.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-64513355.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-665549688.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-684937178.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-751321274.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-759366315.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-778843259.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-795669381.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-810347018.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-889270374.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-940934595.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-981666325.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.-999294689.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1004175364.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1012652425.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1043361165.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1073307082.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1120324611.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1120638297.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1149515156.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1159429928.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.116715221.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1183140562.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.119868891.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1272144541.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1315278320.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1319370203.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.140923925.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1437861773.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1464492567.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1482385848.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1595707449.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1601414228.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1603791126.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1618515066.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.175260309.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1761320778.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1852971922.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1902515811.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.1914931610.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.1946325978.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.1970446196.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.2080179741.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.2089307847.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.2091744956.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.214773463.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.280603216.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.344802374.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.381931795.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.407235390.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.519222414.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.534529458.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.588942759.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.600292930.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.663762964.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.708454199.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.741394531.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.814234224.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.82341487.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.8664420.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1337593893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10497 +/- 0.00371626 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.10497 @ 95%CL (1 toyMC)
median expected limit: r < 2.10497 @ 95%CL (1 toyMC)
   68% expected band : 2.10497 < r < 2.10497
   95% expected band : 2.10497 < r < 2.10497
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2072675242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.50754 +/- 0.0056007 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.50754 @ 95%CL (1 toyMC)
median expected limit: r < 2.50754 @ 95%CL (1 toyMC)
   68% expected band : 2.50754 < r < 2.50754
   95% expected band : 2.50754 < r < 2.50754
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 223854410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.6928 +/- 0.00577609 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.6928 @ 95%CL (1 toyMC)
median expected limit: r < 3.6928 @ 95%CL (1 toyMC)
   68% expected band : 3.6928 < r < 3.6928
   95% expected band : 3.6928 < r < 3.6928
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1301277746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.36081 +/- 0.00613748 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.36081 @ 95%CL (1 toyMC)
median expected limit: r < 4.36081 @ 95%CL (1 toyMC)
   68% expected band : 4.36081 < r < 4.36081
   95% expected band : 4.36081 < r < 4.36081
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1370909217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3582 +/- 0.00571565 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.3582 @ 95%CL (1 toyMC)
median expected limit: r < 2.3582 @ 95%CL (1 toyMC)
   68% expected band : 2.3582 < r < 2.3582
   95% expected band : 2.3582 < r < 2.3582
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1591844567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22523 +/- 0.00574605 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.22523 @ 95%CL (1 toyMC)
median expected limit: r < 2.22523 @ 95%CL (1 toyMC)
   68% expected band : 2.22523 < r < 2.22523
   95% expected band : 2.22523 < r < 2.22523
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2014580526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65656 +/- 0.00479902 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.65656 @ 95%CL (1 toyMC)
median expected limit: r < 1.65656 @ 95%CL (1 toyMC)
   68% expected band : 1.65656 < r < 1.65656
   95% expected band : 1.65656 < r < 1.65656
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 883849600
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.64702 +/- 0.00532456 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.64702 @ 95%CL (1 toyMC)
median expected limit: r < 2.64702 @ 95%CL (1 toyMC)
   68% expected band : 2.64702 < r < 2.64702
   95% expected band : 2.64702 < r < 2.64702
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1536029392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.13392 +/- 0.00543895 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.13392 @ 95%CL (1 toyMC)
median expected limit: r < 2.13392 @ 95%CL (1 toyMC)
   68% expected band : 2.13392 < r < 2.13392
   95% expected band : 2.13392 < r < 2.13392
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1960463127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.02963 +/- 0.00645272 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.02963 @ 95%CL (1 toyMC)
median expected limit: r < 4.02963 @ 95%CL (1 toyMC)
   68% expected band : 4.02963 < r < 4.02963
   95% expected band : 4.02963 < r < 4.02963
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1453880058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44769 +/- 0.00526884 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.44769 @ 95%CL (1 toyMC)
median expected limit: r < 2.44769 @ 95%CL (1 toyMC)
   68% expected band : 2.44769 < r < 2.44769
   95% expected band : 2.44769 < r < 2.44769
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1531316932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.16347 +/- 0.0061045 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.16347 @ 95%CL (1 toyMC)
median expected limit: r < 3.16347 @ 95%CL (1 toyMC)
   68% expected band : 3.16347 < r < 3.16347
   95% expected band : 3.16347 < r < 3.16347
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 435525176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67999 +/- 0.00460836 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.67999 @ 95%CL (1 toyMC)
median expected limit: r < 2.67999 @ 95%CL (1 toyMC)
   68% expected band : 2.67999 < r < 2.67999
   95% expected band : 2.67999 < r < 2.67999
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -300530075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.9934 +/- 0.00576863 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.9934 @ 95%CL (1 toyMC)
median expected limit: r < 2.9934 @ 95%CL (1 toyMC)
   68% expected band : 2.9934 < r < 2.9934
   95% expected band : 2.9934 < r < 2.9934
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2144516851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1625 +/- 0.00331367 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.1625 @ 95%CL (1 toyMC)
median expected limit: r < 1.1625 @ 95%CL (1 toyMC)
   68% expected band : 1.1625 < r < 1.1625
   95% expected band : 1.1625 < r < 1.1625
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -759898576
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92471 +/- 0.00520973 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.92471 @ 95%CL (1 toyMC)
median expected limit: r < 1.92471 @ 95%CL (1 toyMC)
   68% expected band : 1.92471 < r < 1.92471
   95% expected band : 1.92471 < r < 1.92471
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1119126159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76076 +/- 0.00386142 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76076 @ 95%CL (1 toyMC)
median expected limit: r < 1.76076 @ 95%CL (1 toyMC)
   68% expected band : 1.76076 < r < 1.76076
   95% expected band : 1.76076 < r < 1.76076
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1172516948
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.55916 +/- 0.00612673 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.55916 @ 95%CL (1 toyMC)
median expected limit: r < 2.55916 @ 95%CL (1 toyMC)
   68% expected band : 2.55916 < r < 2.55916
   95% expected band : 2.55916 < r < 2.55916
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1042878001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.07951 +/- 0.00674394 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.07951 @ 95%CL (1 toyMC)
median expected limit: r < 4.07951 @ 95%CL (1 toyMC)
   68% expected band : 4.07951 < r < 4.07951
   95% expected band : 4.07951 < r < 4.07951
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 148909725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.25588 +/- 0.00755092 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.25588 @ 95%CL (1 toyMC)
median expected limit: r < 6.25588 @ 95%CL (1 toyMC)
   68% expected band : 6.25588 < r < 6.25588
   95% expected band : 6.25588 < r < 6.25588
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1626598355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76166 +/- 0.00480046 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.76166 @ 95%CL (1 toyMC)
median expected limit: r < 1.76166 @ 95%CL (1 toyMC)
   68% expected band : 1.76166 < r < 1.76166
   95% expected band : 1.76166 < r < 1.76166
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 409268255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.38491 +/- 0.00515974 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.38491 @ 95%CL (1 toyMC)
median expected limit: r < 2.38491 @ 95%CL (1 toyMC)
   68% expected band : 2.38491 < r < 2.38491
   95% expected band : 2.38491 < r < 2.38491
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2119138500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86999 +/- 0.00633621 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.86999 @ 95%CL (1 toyMC)
median expected limit: r < 2.86999 @ 95%CL (1 toyMC)
   68% expected band : 2.86999 < r < 2.86999
   95% expected band : 2.86999 < r < 2.86999
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 653979390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.67831 +/- 0.00527375 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.67831 @ 95%CL (1 toyMC)
median expected limit: r < 2.67831 @ 95%CL (1 toyMC)
   68% expected band : 2.67831 < r < 2.67831
   95% expected band : 2.67831 < r < 2.67831
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 813162801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52131 +/- 0.00411498 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.52131 @ 95%CL (1 toyMC)
median expected limit: r < 1.52131 @ 95%CL (1 toyMC)
   68% expected band : 1.52131 < r < 1.52131
   95% expected band : 1.52131 < r < 1.52131
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1035670668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.25801 +/- 0.00481083 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.25801 @ 95%CL (1 toyMC)
median expected limit: r < 2.25801 @ 95%CL (1 toyMC)
   68% expected band : 2.25801 < r < 2.25801
   95% expected band : 2.25801 < r < 2.25801
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 744850322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.16964 +/- 0.00495611 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.16964 @ 95%CL (1 toyMC)
median expected limit: r < 2.16964 @ 95%CL (1 toyMC)
   68% expected band : 2.16964 < r < 2.16964
   95% expected band : 2.16964 < r < 2.16964
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -707983134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.40739 +/- 0.00671924 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.40739 @ 95%CL (1 toyMC)
median expected limit: r < 3.40739 @ 95%CL (1 toyMC)
   68% expected band : 3.40739 < r < 3.40739
   95% expected band : 3.40739 < r < 3.40739
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -367820533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.60016 +/- 0.00711942 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.60016 @ 95%CL (1 toyMC)
median expected limit: r < 3.60016 @ 95%CL (1 toyMC)
   68% expected band : 3.60016 < r < 3.60016
   95% expected band : 3.60016 < r < 3.60016
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 479780203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74466 +/- 0.0054812 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.74466 @ 95%CL (1 toyMC)
median expected limit: r < 2.74466 @ 95%CL (1 toyMC)
   68% expected band : 2.74466 < r < 2.74466
   95% expected band : 2.74466 < r < 2.74466
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -527008838
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.32297 +/- 0.00600204 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.32297 @ 95%CL (1 toyMC)
median expected limit: r < 3.32297 @ 95%CL (1 toyMC)
   68% expected band : 3.32297 < r < 3.32297
   95% expected band : 3.32297 < r < 3.32297
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -319346444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22509 +/- 0.00437874 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.22509 @ 95%CL (1 toyMC)
median expected limit: r < 2.22509 @ 95%CL (1 toyMC)
   68% expected band : 2.22509 < r < 2.22509
   95% expected band : 2.22509 < r < 2.22509
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1154915925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69162 +/- 0.00646252 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.69162 @ 95%CL (1 toyMC)
median expected limit: r < 2.69162 @ 95%CL (1 toyMC)
   68% expected band : 2.69162 < r < 2.69162
   95% expected band : 2.69162 < r < 2.69162
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 882305625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.79035 +/- 0.0053042 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.79035 @ 95%CL (1 toyMC)
median expected limit: r < 4.79035 @ 95%CL (1 toyMC)
   68% expected band : 4.79035 < r < 4.79035
   95% expected band : 4.79035 < r < 4.79035
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1023199148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.59386 +/- 0.00767003 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.59386 @ 95%CL (1 toyMC)
median expected limit: r < 4.59386 @ 95%CL (1 toyMC)
   68% expected band : 4.59386 < r < 4.59386
   95% expected band : 4.59386 < r < 4.59386
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -141597308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.33541 +/- 0.00507867 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.33541 @ 95%CL (1 toyMC)
median expected limit: r < 2.33541 @ 95%CL (1 toyMC)
   68% expected band : 2.33541 < r < 2.33541
   95% expected band : 2.33541 < r < 2.33541
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1489827577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52036 +/- 0.00483745 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.52036 @ 95%CL (1 toyMC)
median expected limit: r < 1.52036 @ 95%CL (1 toyMC)
   68% expected band : 1.52036 < r < 1.52036
   95% expected band : 1.52036 < r < 1.52036
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -503519644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.19401 +/- 0.0064282 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.19401 @ 95%CL (1 toyMC)
median expected limit: r < 4.19401 @ 95%CL (1 toyMC)
   68% expected band : 4.19401 < r < 4.19401
   95% expected band : 4.19401 < r < 4.19401
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1469951514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.38671 +/- 0.00545685 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.38671 @ 95%CL (1 toyMC)
median expected limit: r < 3.38671 @ 95%CL (1 toyMC)
   68% expected band : 3.38671 < r < 3.38671
   95% expected band : 3.38671 < r < 3.38671
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 981431576
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20325 +/- 0.00604807 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.20325 @ 95%CL (1 toyMC)
median expected limit: r < 2.20325 @ 95%CL (1 toyMC)
   68% expected band : 2.20325 < r < 2.20325
   95% expected band : 2.20325 < r < 2.20325
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -287961722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.72399 +/- 0.00515373 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.72399 @ 95%CL (1 toyMC)
median expected limit: r < 2.72399 @ 95%CL (1 toyMC)
   68% expected band : 2.72399 < r < 2.72399
   95% expected band : 2.72399 < r < 2.72399
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 894813631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.25746 +/- 0.00495952 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.25746 @ 95%CL (1 toyMC)
median expected limit: r < 2.25746 @ 95%CL (1 toyMC)
   68% expected band : 2.25746 < r < 2.25746
   95% expected band : 2.25746 < r < 2.25746
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1524266700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.71693 +/- 0.00607131 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.71693 @ 95%CL (1 toyMC)
median expected limit: r < 3.71693 @ 95%CL (1 toyMC)
   68% expected band : 3.71693 < r < 3.71693
   95% expected band : 3.71693 < r < 3.71693
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -192322607
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.03707 +/- 0.00642919 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.03707 @ 95%CL (1 toyMC)
median expected limit: r < 3.03707 @ 95%CL (1 toyMC)
   68% expected band : 3.03707 < r < 3.03707
   95% expected band : 3.03707 < r < 3.03707
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1925313918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68019 +/- 0.00550495 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.68019 @ 95%CL (1 toyMC)
median expected limit: r < 2.68019 @ 95%CL (1 toyMC)
   68% expected band : 2.68019 < r < 2.68019
   95% expected band : 2.68019 < r < 2.68019
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -422185905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92876 +/- 0.0054914 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.92876 @ 95%CL (1 toyMC)
median expected limit: r < 1.92876 @ 95%CL (1 toyMC)
   68% expected band : 1.92876 < r < 1.92876
   95% expected band : 1.92876 < r < 1.92876
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 704374753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54852 +/- 0.00540774 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.54852 @ 95%CL (1 toyMC)
median expected limit: r < 2.54852 @ 95%CL (1 toyMC)
   68% expected band : 2.54852 < r < 2.54852
   95% expected band : 2.54852 < r < 2.54852
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -479487855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.22833 +/- 0.00680489 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.22833 @ 95%CL (1 toyMC)
median expected limit: r < 4.22833 @ 95%CL (1 toyMC)
   68% expected band : 4.22833 < r < 4.22833
   95% expected band : 4.22833 < r < 4.22833
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1263355591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52477 +/- 0.00466896 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.52477 @ 95%CL (1 toyMC)
median expected limit: r < 1.52477 @ 95%CL (1 toyMC)
   68% expected band : 1.52477 < r < 1.52477
   95% expected band : 1.52477 < r < 1.52477
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -624259130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.25788 +/- 0.00637868 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.25788 @ 95%CL (1 toyMC)
median expected limit: r < 2.25788 @ 95%CL (1 toyMC)
   68% expected band : 2.25788 < r < 2.25788
   95% expected band : 2.25788 < r < 2.25788
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -395192130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13495 +/- 0.00568588 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.13495 @ 95%CL (1 toyMC)
median expected limit: r < 3.13495 @ 95%CL (1 toyMC)
   68% expected band : 3.13495 < r < 3.13495
   95% expected band : 3.13495 < r < 3.13495
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2076715543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.72918 +/- 0.00657749 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.72918 @ 95%CL (1 toyMC)
median expected limit: r < 3.72918 @ 95%CL (1 toyMC)
   68% expected band : 3.72918 < r < 3.72918
   95% expected band : 3.72918 < r < 3.72918
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1223532726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.21588 +/- 0.00706363 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.21588 @ 95%CL (1 toyMC)
median expected limit: r < 5.21588 @ 95%CL (1 toyMC)
   68% expected band : 5.21588 < r < 5.21588
   95% expected band : 5.21588 < r < 5.21588
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -435976093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.94112 +/- 0.00491016 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.94112 @ 95%CL (1 toyMC)
median expected limit: r < 2.94112 @ 95%CL (1 toyMC)
   68% expected band : 2.94112 < r < 2.94112
   95% expected band : 2.94112 < r < 2.94112
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1518687470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85382 +/- 0.00519469 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.85382 @ 95%CL (1 toyMC)
median expected limit: r < 2.85382 @ 95%CL (1 toyMC)
   68% expected band : 2.85382 < r < 2.85382
   95% expected band : 2.85382 < r < 2.85382
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 191544695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.7976 +/- 0.00456952 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.7976 @ 95%CL (1 toyMC)
median expected limit: r < 2.7976 @ 95%CL (1 toyMC)
   68% expected band : 2.7976 < r < 2.7976
   95% expected band : 2.7976 < r < 2.7976
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1801168915
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85122 +/- 0.00486426 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.85122 @ 95%CL (1 toyMC)
median expected limit: r < 1.85122 @ 95%CL (1 toyMC)
   68% expected band : 1.85122 < r < 1.85122
   95% expected band : 1.85122 < r < 1.85122
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 132990584
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97487 +/- 0.00444672 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.97487 @ 95%CL (1 toyMC)
median expected limit: r < 1.97487 @ 95%CL (1 toyMC)
   68% expected band : 1.97487 < r < 1.97487
   95% expected band : 1.97487 < r < 1.97487
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 317415369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22114 +/- 0.00423809 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.22114 @ 95%CL (1 toyMC)
median expected limit: r < 2.22114 @ 95%CL (1 toyMC)
   68% expected band : 2.22114 < r < 2.22114
   95% expected band : 2.22114 < r < 2.22114
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -770805475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93631 +/- 0.00546936 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.93631 @ 95%CL (1 toyMC)
median expected limit: r < 1.93631 @ 95%CL (1 toyMC)
   68% expected band : 1.93631 < r < 1.93631
   95% expected band : 1.93631 < r < 1.93631
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2100461353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03161 +/- 0.00507417 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.03161 @ 95%CL (1 toyMC)
median expected limit: r < 2.03161 @ 95%CL (1 toyMC)
   68% expected band : 2.03161 < r < 2.03161
   95% expected band : 2.03161 < r < 2.03161
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 764756535
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.02824 +/- 0.00627433 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.02824 @ 95%CL (1 toyMC)
median expected limit: r < 3.02824 @ 95%CL (1 toyMC)
   68% expected band : 3.02824 < r < 3.02824
   95% expected band : 3.02824 < r < 3.02824
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -753128236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74135 +/- 0.00528708 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.74135 @ 95%CL (1 toyMC)
median expected limit: r < 2.74135 @ 95%CL (1 toyMC)
   68% expected band : 2.74135 < r < 2.74135
   95% expected band : 2.74135 < r < 2.74135
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -886249676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.75087 +/- 0.00532129 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.75087 @ 95%CL (1 toyMC)
median expected limit: r < 3.75087 @ 95%CL (1 toyMC)
   68% expected band : 3.75087 < r < 3.75087
   95% expected band : 3.75087 < r < 3.75087
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1584600612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00422 +/- 0.00513972 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00422 @ 95%CL (1 toyMC)
median expected limit: r < 2.00422 @ 95%CL (1 toyMC)
   68% expected band : 2.00422 < r < 2.00422
   95% expected band : 2.00422 < r < 2.00422
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -225107984
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.72209 +/- 0.00549187 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.72209 @ 95%CL (1 toyMC)
median expected limit: r < 2.72209 @ 95%CL (1 toyMC)
   68% expected band : 2.72209 < r < 2.72209
   95% expected band : 2.72209 < r < 2.72209
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -650526051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74096 +/- 0.00584791 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.74096 @ 95%CL (1 toyMC)
median expected limit: r < 2.74096 @ 95%CL (1 toyMC)
   68% expected band : 2.74096 < r < 2.74096
   95% expected band : 2.74096 < r < 2.74096
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1753313981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.72895 +/- 0.00567728 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.72895 @ 95%CL (1 toyMC)
median expected limit: r < 2.72895 @ 95%CL (1 toyMC)
   68% expected band : 2.72895 < r < 2.72895
   95% expected band : 2.72895 < r < 2.72895
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1445232570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.28314 +/- 0.00565552 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.28314 @ 95%CL (1 toyMC)
median expected limit: r < 2.28314 @ 95%CL (1 toyMC)
   68% expected band : 2.28314 < r < 2.28314
   95% expected band : 2.28314 < r < 2.28314
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -862464076
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34864 +/- 0.00534933 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.34864 @ 95%CL (1 toyMC)
median expected limit: r < 2.34864 @ 95%CL (1 toyMC)
   68% expected band : 2.34864 < r < 2.34864
   95% expected band : 2.34864 < r < 2.34864
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 143425652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.38599 +/- 0.00618117 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.38599 @ 95%CL (1 toyMC)
median expected limit: r < 3.38599 @ 95%CL (1 toyMC)
   68% expected band : 3.38599 < r < 3.38599
   95% expected band : 3.38599 < r < 3.38599
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -521248096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.10077 +/- 0.00597205 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.10077 @ 95%CL (1 toyMC)
median expected limit: r < 3.10077 @ 95%CL (1 toyMC)
   68% expected band : 3.10077 < r < 3.10077
   95% expected band : 3.10077 < r < 3.10077
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1428372380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54964 +/- 0.00545776 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.54964 @ 95%CL (1 toyMC)
median expected limit: r < 2.54964 @ 95%CL (1 toyMC)
   68% expected band : 2.54964 < r < 2.54964
   95% expected band : 2.54964 < r < 2.54964
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1695087050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86357 +/- 0.00591623 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.86357 @ 95%CL (1 toyMC)
median expected limit: r < 1.86357 @ 95%CL (1 toyMC)
   68% expected band : 1.86357 < r < 1.86357
   95% expected band : 1.86357 < r < 1.86357
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2083672766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51274 +/- 0.00516719 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.51274 @ 95%CL (1 toyMC)
median expected limit: r < 2.51274 @ 95%CL (1 toyMC)
   68% expected band : 2.51274 < r < 2.51274
   95% expected band : 2.51274 < r < 2.51274
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 958444132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.76835 +/- 0.00522389 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.76835 @ 95%CL (1 toyMC)
median expected limit: r < 3.76835 @ 95%CL (1 toyMC)
   68% expected band : 3.76835 < r < 3.76835
   95% expected band : 3.76835 < r < 3.76835
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1826885792
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.66483 +/- 0.00545492 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.66483 @ 95%CL (1 toyMC)
median expected limit: r < 2.66483 @ 95%CL (1 toyMC)
   68% expected band : 2.66483 < r < 2.66483
   95% expected band : 2.66483 < r < 2.66483
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2078165206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.99784 +/- 0.00630131 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.99784 @ 95%CL (1 toyMC)
median expected limit: r < 2.99784 @ 95%CL (1 toyMC)
   68% expected band : 2.99784 < r < 2.99784
   95% expected band : 2.99784 < r < 2.99784
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -297137485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.27119 +/- 0.00626262 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.27119 @ 95%CL (1 toyMC)
median expected limit: r < 3.27119 @ 95%CL (1 toyMC)
   68% expected band : 3.27119 < r < 3.27119
   95% expected band : 3.27119 < r < 3.27119
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2079576979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2049 +/- 0.00486754 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.2049 @ 95%CL (1 toyMC)
median expected limit: r < 2.2049 @ 95%CL (1 toyMC)
   68% expected band : 2.2049 < r < 2.2049
   95% expected band : 2.2049 < r < 2.2049
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -847449150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76586 +/- 0.00584494 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76586 @ 95%CL (1 toyMC)
median expected limit: r < 1.76586 @ 95%CL (1 toyMC)
   68% expected band : 1.76586 < r < 1.76586
   95% expected band : 1.76586 < r < 1.76586
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 130228726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25715 +/- 0.00405072 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.25715 @ 95%CL (1 toyMC)
median expected limit: r < 1.25715 @ 95%CL (1 toyMC)
   68% expected band : 1.25715 < r < 1.25715
   95% expected band : 1.25715 < r < 1.25715
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1476449857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49481 +/- 0.00572583 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.49481 @ 95%CL (1 toyMC)
median expected limit: r < 3.49481 @ 95%CL (1 toyMC)
   68% expected band : 3.49481 < r < 3.49481
   95% expected band : 3.49481 < r < 3.49481
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1300614714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.59851 +/- 0.00518421 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.59851 @ 95%CL (1 toyMC)
median expected limit: r < 4.59851 @ 95%CL (1 toyMC)
   68% expected band : 4.59851 < r < 4.59851
   95% expected band : 4.59851 < r < 4.59851
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 657993537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78123 +/- 0.00539978 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.78123 @ 95%CL (1 toyMC)
median expected limit: r < 1.78123 @ 95%CL (1 toyMC)
   68% expected band : 1.78123 < r < 1.78123
   95% expected band : 1.78123 < r < 1.78123
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1851102588
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83202 +/- 0.00508578 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.83202 @ 95%CL (1 toyMC)
median expected limit: r < 1.83202 @ 95%CL (1 toyMC)
   68% expected band : 1.83202 < r < 1.83202
   95% expected band : 1.83202 < r < 1.83202
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1574453977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.08969 +/- 0.0051636 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.08969 @ 95%CL (1 toyMC)
median expected limit: r < 2.08969 @ 95%CL (1 toyMC)
   68% expected band : 2.08969 < r < 2.08969
   95% expected band : 2.08969 < r < 2.08969
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1904232041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.15276 +/- 0.00591164 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.15276 @ 95%CL (1 toyMC)
median expected limit: r < 3.15276 @ 95%CL (1 toyMC)
   68% expected band : 3.15276 < r < 3.15276
   95% expected band : 3.15276 < r < 3.15276
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1225775691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94958 +/- 0.0054584 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.94958 @ 95%CL (1 toyMC)
median expected limit: r < 1.94958 @ 95%CL (1 toyMC)
   68% expected band : 1.94958 < r < 1.94958
   95% expected band : 1.94958 < r < 1.94958
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2003567008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.55614 +/- 0.00580284 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.55614 @ 95%CL (1 toyMC)
median expected limit: r < 2.55614 @ 95%CL (1 toyMC)
   68% expected band : 2.55614 < r < 2.55614
   95% expected band : 2.55614 < r < 2.55614
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 528332563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.84419 +/- 0.00618111 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.84419 @ 95%CL (1 toyMC)
median expected limit: r < 4.84419 @ 95%CL (1 toyMC)
   68% expected band : 4.84419 < r < 4.84419
   95% expected band : 4.84419 < r < 4.84419
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1456781961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4328 +/- 0.00438209 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.4328 @ 95%CL (1 toyMC)
median expected limit: r < 3.4328 @ 95%CL (1 toyMC)
   68% expected band : 3.4328 < r < 3.4328
   95% expected band : 3.4328 < r < 3.4328
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2006387854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35652 +/- 0.00363694 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35652 @ 95%CL (1 toyMC)
median expected limit: r < 1.35652 @ 95%CL (1 toyMC)
   68% expected band : 1.35652 < r < 1.35652
   95% expected band : 1.35652 < r < 1.35652
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1708419263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.95637 +/- 0.00582592 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.95637 @ 95%CL (1 toyMC)
median expected limit: r < 2.95637 @ 95%CL (1 toyMC)
   68% expected band : 2.95637 < r < 2.95637
   95% expected band : 2.95637 < r < 2.95637
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 678207138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30591 +/- 0.0051461 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.30591 @ 95%CL (1 toyMC)
median expected limit: r < 2.30591 @ 95%CL (1 toyMC)
   68% expected band : 2.30591 < r < 2.30591
   95% expected band : 2.30591 < r < 2.30591
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 410046912
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.98556 +/- 0.00531922 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.98556 @ 95%CL (1 toyMC)
median expected limit: r < 2.98556 @ 95%CL (1 toyMC)
   68% expected band : 2.98556 < r < 2.98556
   95% expected band : 2.98556 < r < 2.98556
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 875932211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88903 +/- 0.00474372 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.88903 @ 95%CL (1 toyMC)
median expected limit: r < 1.88903 @ 95%CL (1 toyMC)
   68% expected band : 1.88903 < r < 1.88903
   95% expected band : 1.88903 < r < 1.88903
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1150381618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.4677 +/- 0.00587038 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.4677 @ 95%CL (1 toyMC)
median expected limit: r < 4.4677 @ 95%CL (1 toyMC)
   68% expected band : 4.4677 < r < 4.4677
   95% expected band : 4.4677 < r < 4.4677
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -842130816
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7102 +/- 0.00381273 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.7102 @ 95%CL (1 toyMC)
median expected limit: r < 1.7102 @ 95%CL (1 toyMC)
   68% expected band : 1.7102 < r < 1.7102
   95% expected band : 1.7102 < r < 1.7102
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1127383174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1616 +/- 0.00538432 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.1616 @ 95%CL (1 toyMC)
median expected limit: r < 2.1616 @ 95%CL (1 toyMC)
   68% expected band : 2.1616 < r < 2.1616
   95% expected band : 2.1616 < r < 2.1616
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1150381618.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1172516948.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1223532726.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1225775691.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1370909217.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-141597308.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1428372380.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1445232570.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1469951514.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1476449857.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1518687470.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1531316932.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1536029392.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1574453977.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1591844567.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1695087050.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1753313981.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1826885792.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-192322607.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-2014580526.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-2083672766.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-2119138500.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-225107984.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-287961722.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-297137485.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-300530075.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-319346444.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-367820533.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-395192130.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-422185905.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-435976093.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-479487855.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-503519644.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-521248096.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-527008838.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-624259130.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-650526051.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-707983134.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-753128236.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-759898576.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-770805475.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-842130816.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-847449150.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-862464076.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-886249676.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.1023199148.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1035670668.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1042878001.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1119126159.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1127383174.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1154915925.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1263355591.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1300614714.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1301277746.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.130228726.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.132990584.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1337593893.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.143425652.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1453880058.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1456781961.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.148909725.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1489827577.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1524266700.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1584600612.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1626598355.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1708419263.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1801168915.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1851102588.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1904232041.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.191544695.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1925313918.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1960463127.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.2003567008.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.2006387854.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.2072675242.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.2076715543.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2078165206.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2079576979.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2100461353.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2144516851.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.223854410.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.317415369.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.409268255.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.410046912.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.435525176.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.479780203.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.528332563.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.653979390.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.657993537.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.678207138.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.704374753.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.744850322.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.764756535.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.813162801.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.875932211.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.882305625.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.883849600.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.894813631.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.958444132.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.981431576.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1520239145
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.83989 +/- 0.00546627 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.83989 @ 95%CL (1 toyMC)
median expected limit: r < 2.83989 @ 95%CL (1 toyMC)
   68% expected band : 2.83989 < r < 2.83989
   95% expected band : 2.83989 < r < 2.83989
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -445105725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03823 +/- 0.00531374 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.03823 @ 95%CL (1 toyMC)
median expected limit: r < 2.03823 @ 95%CL (1 toyMC)
   68% expected band : 2.03823 < r < 2.03823
   95% expected band : 2.03823 < r < 2.03823
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 313811020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.28585 +/- 0.00758267 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.28585 @ 95%CL (1 toyMC)
median expected limit: r < 4.28585 @ 95%CL (1 toyMC)
   68% expected band : 4.28585 < r < 4.28585
   95% expected band : 4.28585 < r < 4.28585
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 897043682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99567 +/- 0.00529521 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.99567 @ 95%CL (1 toyMC)
median expected limit: r < 1.99567 @ 95%CL (1 toyMC)
   68% expected band : 1.99567 < r < 1.99567
   95% expected band : 1.99567 < r < 1.99567
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 803394347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69135 +/- 0.00563622 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.69135 @ 95%CL (1 toyMC)
median expected limit: r < 2.69135 @ 95%CL (1 toyMC)
   68% expected band : 2.69135 < r < 2.69135
   95% expected band : 2.69135 < r < 2.69135
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 765838142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.8243 +/- 0.00639047 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.8243 @ 95%CL (1 toyMC)
median expected limit: r < 3.8243 @ 95%CL (1 toyMC)
   68% expected band : 3.8243 < r < 3.8243
   95% expected band : 3.8243 < r < 3.8243
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -315382308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.39285 +/- 0.0075261 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.39285 @ 95%CL (1 toyMC)
median expected limit: r < 3.39285 @ 95%CL (1 toyMC)
   68% expected band : 3.39285 < r < 3.39285
   95% expected band : 3.39285 < r < 3.39285
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2070358045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02647 +/- 0.00500251 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02647 @ 95%CL (1 toyMC)
median expected limit: r < 2.02647 @ 95%CL (1 toyMC)
   68% expected band : 2.02647 < r < 2.02647
   95% expected band : 2.02647 < r < 2.02647
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1786959963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71991 +/- 0.00629952 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.71991 @ 95%CL (1 toyMC)
median expected limit: r < 2.71991 @ 95%CL (1 toyMC)
   68% expected band : 2.71991 < r < 2.71991
   95% expected band : 2.71991 < r < 2.71991
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1719377583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01584 +/- 0.00980889 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.01584 @ 95%CL (1 toyMC)
median expected limit: r < 6.01584 @ 95%CL (1 toyMC)
   68% expected band : 6.01584 < r < 6.01584
   95% expected band : 6.01584 < r < 6.01584
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1062294705
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.30266 +/- 0.00676152 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.30266 @ 95%CL (1 toyMC)
median expected limit: r < 4.30266 @ 95%CL (1 toyMC)
   68% expected band : 4.30266 < r < 4.30266
   95% expected band : 4.30266 < r < 4.30266
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1847387502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42198 +/- 0.0058033 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.42198 @ 95%CL (1 toyMC)
median expected limit: r < 2.42198 @ 95%CL (1 toyMC)
   68% expected band : 2.42198 < r < 2.42198
   95% expected band : 2.42198 < r < 2.42198
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1968789180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.63026 +/- 0.00550676 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.63026 @ 95%CL (1 toyMC)
median expected limit: r < 2.63026 @ 95%CL (1 toyMC)
   68% expected band : 2.63026 < r < 2.63026
   95% expected band : 2.63026 < r < 2.63026
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 936727912
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.1672 +/- 0.00547856 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.1672 @ 95%CL (1 toyMC)
median expected limit: r < 3.1672 @ 95%CL (1 toyMC)
   68% expected band : 3.1672 < r < 3.1672
   95% expected band : 3.1672 < r < 3.1672
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 88430620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.89137 +/- 0.0057278 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.89137 @ 95%CL (1 toyMC)
median expected limit: r < 3.89137 @ 95%CL (1 toyMC)
   68% expected band : 3.89137 < r < 3.89137
   95% expected band : 3.89137 < r < 3.89137
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -587758391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.38508 +/- 0.00557755 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.38508 @ 95%CL (1 toyMC)
median expected limit: r < 4.38508 @ 95%CL (1 toyMC)
   68% expected band : 4.38508 < r < 4.38508
   95% expected band : 4.38508 < r < 4.38508
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 611185312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.726 +/- 0.00529789 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.726 @ 95%CL (1 toyMC)
median expected limit: r < 2.726 @ 95%CL (1 toyMC)
   68% expected band : 2.726 < r < 2.726
   95% expected band : 2.726 < r < 2.726
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -63688577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70254 +/- 0.00465742 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.70254 @ 95%CL (1 toyMC)
median expected limit: r < 1.70254 @ 95%CL (1 toyMC)
   68% expected band : 1.70254 < r < 1.70254
   95% expected band : 1.70254 < r < 1.70254
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1802640500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.59202 +/- 0.00615266 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.59202 @ 95%CL (1 toyMC)
median expected limit: r < 4.59202 @ 95%CL (1 toyMC)
   68% expected band : 4.59202 < r < 4.59202
   95% expected band : 4.59202 < r < 4.59202
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1901730909
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4876 +/- 0.00576056 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.4876 @ 95%CL (1 toyMC)
median expected limit: r < 3.4876 @ 95%CL (1 toyMC)
   68% expected band : 3.4876 < r < 3.4876
   95% expected band : 3.4876 < r < 3.4876
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -824227200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.78154 +/- 0.00422368 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.78154 @ 95%CL (1 toyMC)
median expected limit: r < 2.78154 @ 95%CL (1 toyMC)
   68% expected band : 2.78154 < r < 2.78154
   95% expected band : 2.78154 < r < 2.78154
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -524944537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.98651 +/- 0.00777053 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.98651 @ 95%CL (1 toyMC)
median expected limit: r < 4.98651 @ 95%CL (1 toyMC)
   68% expected band : 4.98651 < r < 4.98651
   95% expected band : 4.98651 < r < 4.98651
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -584996096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.58164 +/- 0.00522476 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.58164 @ 95%CL (1 toyMC)
median expected limit: r < 2.58164 @ 95%CL (1 toyMC)
   68% expected band : 2.58164 < r < 2.58164
   95% expected band : 2.58164 < r < 2.58164
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -959794570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.47979 +/- 0.00743907 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.47979 @ 95%CL (1 toyMC)
median expected limit: r < 3.47979 @ 95%CL (1 toyMC)
   68% expected band : 3.47979 < r < 3.47979
   95% expected band : 3.47979 < r < 3.47979
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -237278687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.94555 +/- 0.00688797 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.94555 @ 95%CL (1 toyMC)
median expected limit: r < 2.94555 @ 95%CL (1 toyMC)
   68% expected band : 2.94555 < r < 2.94555
   95% expected band : 2.94555 < r < 2.94555
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -262736210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12898 +/- 0.00462363 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.12898 @ 95%CL (1 toyMC)
median expected limit: r < 2.12898 @ 95%CL (1 toyMC)
   68% expected band : 2.12898 < r < 2.12898
   95% expected band : 2.12898 < r < 2.12898
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1372681661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70993 +/- 0.00492575 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.70993 @ 95%CL (1 toyMC)
median expected limit: r < 2.70993 @ 95%CL (1 toyMC)
   68% expected band : 2.70993 < r < 2.70993
   95% expected band : 2.70993 < r < 2.70993
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 810987345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.366 +/- 0.00526936 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.366 @ 95%CL (1 toyMC)
median expected limit: r < 2.366 @ 95%CL (1 toyMC)
   68% expected band : 2.366 < r < 2.366
   95% expected band : 2.366 < r < 2.366
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1028724676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48397 +/- 0.00536132 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.48397 @ 95%CL (1 toyMC)
median expected limit: r < 2.48397 @ 95%CL (1 toyMC)
   68% expected band : 2.48397 < r < 2.48397
   95% expected band : 2.48397 < r < 2.48397
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 715086158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.1525 +/- 0.00755348 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.1525 @ 95%CL (1 toyMC)
median expected limit: r < 5.1525 @ 95%CL (1 toyMC)
   68% expected band : 5.1525 < r < 5.1525
   95% expected band : 5.1525 < r < 5.1525
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 512891546
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.43155 +/- 0.00644842 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.43155 @ 95%CL (1 toyMC)
median expected limit: r < 2.43155 @ 95%CL (1 toyMC)
   68% expected band : 2.43155 < r < 2.43155
   95% expected band : 2.43155 < r < 2.43155
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -439060702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.23957 +/- 0.00570105 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.23957 @ 95%CL (1 toyMC)
median expected limit: r < 3.23957 @ 95%CL (1 toyMC)
   68% expected band : 3.23957 < r < 3.23957
   95% expected band : 3.23957 < r < 3.23957
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1460426311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97846 +/- 0.00569186 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 3.97846 @ 95%CL (1 toyMC)
median expected limit: r < 3.97846 @ 95%CL (1 toyMC)
   68% expected band : 3.97846 < r < 3.97846
   95% expected band : 3.97846 < r < 3.97846
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1395737214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85161 +/- 0.00514249 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.85161 @ 95%CL (1 toyMC)
median expected limit: r < 2.85161 @ 95%CL (1 toyMC)
   68% expected band : 2.85161 < r < 2.85161
   95% expected band : 2.85161 < r < 2.85161
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1390563639
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95699 +/- 0.00549012 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.95699 @ 95%CL (1 toyMC)
median expected limit: r < 1.95699 @ 95%CL (1 toyMC)
   68% expected band : 1.95699 < r < 1.95699
   95% expected band : 1.95699 < r < 1.95699
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1832836243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1856 +/- 0.0048431 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.1856 @ 95%CL (1 toyMC)
median expected limit: r < 2.1856 @ 95%CL (1 toyMC)
   68% expected band : 2.1856 < r < 2.1856
   95% expected band : 2.1856 < r < 2.1856
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1704235102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.46681 +/- 0.00859719 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.46681 @ 95%CL (1 toyMC)
median expected limit: r < 4.46681 @ 95%CL (1 toyMC)
   68% expected band : 4.46681 < r < 4.46681
   95% expected band : 4.46681 < r < 4.46681
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1833699989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76106 +/- 0.00640835 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.76106 @ 95%CL (1 toyMC)
median expected limit: r < 2.76106 @ 95%CL (1 toyMC)
   68% expected band : 2.76106 < r < 2.76106
   95% expected band : 2.76106 < r < 2.76106
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -691828354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.80906 +/- 0.00593624 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.80906 @ 95%CL (1 toyMC)
median expected limit: r < 2.80906 @ 95%CL (1 toyMC)
   68% expected band : 2.80906 < r < 2.80906
   95% expected band : 2.80906 < r < 2.80906
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 158298825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.75378 +/- 0.00425429 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.75378 @ 95%CL (1 toyMC)
median expected limit: r < 1.75378 @ 95%CL (1 toyMC)
   68% expected band : 1.75378 < r < 1.75378
   95% expected band : 1.75378 < r < 1.75378
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1103219390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56805 +/- 0.00679624 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.56805 @ 95%CL (1 toyMC)
median expected limit: r < 4.56805 @ 95%CL (1 toyMC)
   68% expected band : 4.56805 < r < 4.56805
   95% expected band : 4.56805 < r < 4.56805
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -520533945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.43841 +/- 0.00604566 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.43841 @ 95%CL (1 toyMC)
median expected limit: r < 3.43841 @ 95%CL (1 toyMC)
   68% expected band : 3.43841 < r < 3.43841
   95% expected band : 3.43841 < r < 3.43841
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1437172934
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.81569 +/- 0.006596 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.81569 @ 95%CL (1 toyMC)
median expected limit: r < 2.81569 @ 95%CL (1 toyMC)
   68% expected band : 2.81569 < r < 2.81569
   95% expected band : 2.81569 < r < 2.81569
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2054729933
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.3355 +/- 0.00717802 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.3355 @ 95%CL (1 toyMC)
median expected limit: r < 5.3355 @ 95%CL (1 toyMC)
   68% expected band : 5.3355 < r < 5.3355
   95% expected band : 5.3355 < r < 5.3355
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 521205379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81776 +/- 0.00391769 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.81776 @ 95%CL (1 toyMC)
median expected limit: r < 1.81776 @ 95%CL (1 toyMC)
   68% expected band : 1.81776 < r < 1.81776
   95% expected band : 1.81776 < r < 1.81776
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 572086289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.48572 +/- 0.0074772 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.48572 @ 95%CL (1 toyMC)
median expected limit: r < 4.48572 @ 95%CL (1 toyMC)
   68% expected band : 4.48572 < r < 4.48572
   95% expected band : 4.48572 < r < 4.48572
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -242435924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.83572 +/- 0.00585993 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.83572 @ 95%CL (1 toyMC)
median expected limit: r < 2.83572 @ 95%CL (1 toyMC)
   68% expected band : 2.83572 < r < 2.83572
   95% expected band : 2.83572 < r < 2.83572
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1106423256
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.99615 +/- 0.00624164 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.99615 @ 95%CL (1 toyMC)
median expected limit: r < 3.99615 @ 95%CL (1 toyMC)
   68% expected band : 3.99615 < r < 3.99615
   95% expected band : 3.99615 < r < 3.99615
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1942366814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.376 +/- 0.0048767 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.376 @ 95%CL (1 toyMC)
median expected limit: r < 2.376 @ 95%CL (1 toyMC)
   68% expected band : 2.376 < r < 2.376
   95% expected band : 2.376 < r < 2.376
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 939244608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6844 +/- 0.0049404 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.6844 @ 95%CL (1 toyMC)
median expected limit: r < 1.6844 @ 95%CL (1 toyMC)
   68% expected band : 1.6844 < r < 1.6844
   95% expected band : 1.6844 < r < 1.6844
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 16148113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.9776 +/- 0.00897034 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.9776 @ 95%CL (1 toyMC)
median expected limit: r < 4.9776 @ 95%CL (1 toyMC)
   68% expected band : 4.9776 < r < 4.9776
   95% expected band : 4.9776 < r < 4.9776
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 909371428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.22568 +/- 0.00571985 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.22568 @ 95%CL (1 toyMC)
median expected limit: r < 3.22568 @ 95%CL (1 toyMC)
   68% expected band : 3.22568 < r < 3.22568
   95% expected band : 3.22568 < r < 3.22568
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 798322260
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70279 +/- 0.00528976 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.70279 @ 95%CL (1 toyMC)
median expected limit: r < 2.70279 @ 95%CL (1 toyMC)
   68% expected band : 2.70279 < r < 2.70279
   95% expected band : 2.70279 < r < 2.70279
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1729858888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97981 +/- 0.00570944 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 3.97981 @ 95%CL (1 toyMC)
median expected limit: r < 3.97981 @ 95%CL (1 toyMC)
   68% expected band : 3.97981 < r < 3.97981
   95% expected band : 3.97981 < r < 3.97981
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -20521315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.91542 +/- 0.00658358 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.91542 @ 95%CL (1 toyMC)
median expected limit: r < 2.91542 @ 95%CL (1 toyMC)
   68% expected band : 2.91542 < r < 2.91542
   95% expected band : 2.91542 < r < 2.91542
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1441309142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.46926 +/- 0.00837483 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.46926 @ 95%CL (1 toyMC)
median expected limit: r < 4.46926 @ 95%CL (1 toyMC)
   68% expected band : 4.46926 < r < 4.46926
   95% expected band : 4.46926 < r < 4.46926
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2144374606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.78146 +/- 0.00649259 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.78146 @ 95%CL (1 toyMC)
median expected limit: r < 2.78146 @ 95%CL (1 toyMC)
   68% expected band : 2.78146 < r < 2.78146
   95% expected band : 2.78146 < r < 2.78146
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1430881787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.22591 +/- 0.00634403 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.22591 @ 95%CL (1 toyMC)
median expected limit: r < 3.22591 @ 95%CL (1 toyMC)
   68% expected band : 3.22591 < r < 3.22591
   95% expected band : 3.22591 < r < 3.22591
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1316936251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.32018 +/- 0.00624819 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.32018 @ 95%CL (1 toyMC)
median expected limit: r < 4.32018 @ 95%CL (1 toyMC)
   68% expected band : 4.32018 < r < 4.32018
   95% expected band : 4.32018 < r < 4.32018
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1478912699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.80286 +/- 0.00606696 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.80286 @ 95%CL (1 toyMC)
median expected limit: r < 2.80286 @ 95%CL (1 toyMC)
   68% expected band : 2.80286 < r < 2.80286
   95% expected band : 2.80286 < r < 2.80286
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -552285091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46292 +/- 0.00584931 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.46292 @ 95%CL (1 toyMC)
median expected limit: r < 2.46292 @ 95%CL (1 toyMC)
   68% expected band : 2.46292 < r < 2.46292
   95% expected band : 2.46292 < r < 2.46292
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1172876690
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45636 +/- 0.00528597 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.45636 @ 95%CL (1 toyMC)
median expected limit: r < 2.45636 @ 95%CL (1 toyMC)
   68% expected band : 2.45636 < r < 2.45636
   95% expected band : 2.45636 < r < 2.45636
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 995371435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.1512 +/- 0.00706446 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.1512 @ 95%CL (1 toyMC)
median expected limit: r < 3.1512 @ 95%CL (1 toyMC)
   68% expected band : 3.1512 < r < 3.1512
   95% expected band : 3.1512 < r < 3.1512
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 36898860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.62251 +/- 0.00686892 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.62251 @ 95%CL (1 toyMC)
median expected limit: r < 4.62251 @ 95%CL (1 toyMC)
   68% expected band : 4.62251 < r < 4.62251
   95% expected band : 4.62251 < r < 4.62251
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1778792615
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99965 +/- 0.00948243 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.99965 @ 95%CL (1 toyMC)
median expected limit: r < 5.99965 @ 95%CL (1 toyMC)
   68% expected band : 5.99965 < r < 5.99965
   95% expected band : 5.99965 < r < 5.99965
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2111467845
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.59918 +/- 0.0087312 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 7.59918 @ 95%CL (1 toyMC)
median expected limit: r < 7.59918 @ 95%CL (1 toyMC)
   68% expected band : 7.59918 < r < 7.59918
   95% expected band : 7.59918 < r < 7.59918
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1881041062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88445 +/- 0.00505905 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.88445 @ 95%CL (1 toyMC)
median expected limit: r < 2.88445 @ 95%CL (1 toyMC)
   68% expected band : 2.88445 < r < 2.88445
   95% expected band : 2.88445 < r < 2.88445
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2062334369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.43185 +/- 0.00592818 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.43185 @ 95%CL (1 toyMC)
median expected limit: r < 2.43185 @ 95%CL (1 toyMC)
   68% expected band : 2.43185 < r < 2.43185
   95% expected band : 2.43185 < r < 2.43185
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 34368159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18158 +/- 0.0057011 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.18158 @ 95%CL (1 toyMC)
median expected limit: r < 2.18158 @ 95%CL (1 toyMC)
   68% expected band : 2.18158 < r < 2.18158
   95% expected band : 2.18158 < r < 2.18158
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2033598824
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.50681 +/- 0.00757509 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.50681 @ 95%CL (1 toyMC)
median expected limit: r < 4.50681 @ 95%CL (1 toyMC)
   68% expected band : 4.50681 < r < 4.50681
   95% expected band : 4.50681 < r < 4.50681
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -686228631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.16619 +/- 0.00524051 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.16619 @ 95%CL (1 toyMC)
median expected limit: r < 2.16619 @ 95%CL (1 toyMC)
   68% expected band : 2.16619 < r < 2.16619
   95% expected band : 2.16619 < r < 2.16619
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 360856660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69855 +/- 0.0052394 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.69855 @ 95%CL (1 toyMC)
median expected limit: r < 2.69855 @ 95%CL (1 toyMC)
   68% expected band : 2.69855 < r < 2.69855
   95% expected band : 2.69855 < r < 2.69855
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 6438030
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.42275 +/- 0.00599129 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.42275 @ 95%CL (1 toyMC)
median expected limit: r < 3.42275 @ 95%CL (1 toyMC)
   68% expected band : 3.42275 < r < 3.42275
   95% expected band : 3.42275 < r < 3.42275
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -17777787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.16683 +/- 0.00562081 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.16683 @ 95%CL (1 toyMC)
median expected limit: r < 2.16683 @ 95%CL (1 toyMC)
   68% expected band : 2.16683 < r < 2.16683
   95% expected band : 2.16683 < r < 2.16683
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1505732382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25854 +/- 0.00582613 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.25854 @ 95%CL (1 toyMC)
median expected limit: r < 3.25854 @ 95%CL (1 toyMC)
   68% expected band : 3.25854 < r < 3.25854
   95% expected band : 3.25854 < r < 3.25854
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 394978646
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82397 +/- 0.00742008 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.82397 @ 95%CL (1 toyMC)
median expected limit: r < 2.82397 @ 95%CL (1 toyMC)
   68% expected band : 2.82397 < r < 2.82397
   95% expected band : 2.82397 < r < 2.82397
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -782820128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.46879 +/- 0.0067214 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.46879 @ 95%CL (1 toyMC)
median expected limit: r < 3.46879 @ 95%CL (1 toyMC)
   68% expected band : 3.46879 < r < 3.46879
   95% expected band : 3.46879 < r < 3.46879
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2090994419
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.24131 +/- 0.00623048 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.24131 @ 95%CL (1 toyMC)
median expected limit: r < 3.24131 @ 95%CL (1 toyMC)
   68% expected band : 3.24131 < r < 3.24131
   95% expected band : 3.24131 < r < 3.24131
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2045966146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.54643 +/- 0.00648933 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.54643 @ 95%CL (1 toyMC)
median expected limit: r < 7.54643 @ 95%CL (1 toyMC)
   68% expected band : 7.54643 < r < 7.54643
   95% expected band : 7.54643 < r < 7.54643
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 303590715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.18204 +/- 0.00694511 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.18204 @ 95%CL (1 toyMC)
median expected limit: r < 4.18204 @ 95%CL (1 toyMC)
   68% expected band : 4.18204 < r < 4.18204
   95% expected band : 4.18204 < r < 4.18204
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -420336871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.42005 +/- 0.00727722 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.42005 @ 95%CL (1 toyMC)
median expected limit: r < 3.42005 @ 95%CL (1 toyMC)
   68% expected band : 3.42005 < r < 3.42005
   95% expected band : 3.42005 < r < 3.42005
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1341509779
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.96308 +/- 0.00687531 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.96308 @ 95%CL (1 toyMC)
median expected limit: r < 3.96308 @ 95%CL (1 toyMC)
   68% expected band : 3.96308 < r < 3.96308
   95% expected band : 3.96308 < r < 3.96308
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1309826882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.55601 +/- 0.00676248 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.55601 @ 95%CL (1 toyMC)
median expected limit: r < 3.55601 @ 95%CL (1 toyMC)
   68% expected band : 3.55601 < r < 3.55601
   95% expected band : 3.55601 < r < 3.55601
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2017285672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.62808 +/- 0.00904992 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.62808 @ 95%CL (1 toyMC)
median expected limit: r < 7.62808 @ 95%CL (1 toyMC)
   68% expected band : 7.62808 < r < 7.62808
   95% expected band : 7.62808 < r < 7.62808
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1703691063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0307 +/- 0.00530773 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.0307 @ 95%CL (1 toyMC)
median expected limit: r < 2.0307 @ 95%CL (1 toyMC)
   68% expected band : 2.0307 < r < 2.0307
   95% expected band : 2.0307 < r < 2.0307
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1649625445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.11008 +/- 0.00635444 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.11008 @ 95%CL (1 toyMC)
median expected limit: r < 3.11008 @ 95%CL (1 toyMC)
   68% expected band : 3.11008 < r < 3.11008
   95% expected band : 3.11008 < r < 3.11008
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 984713125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.99366 +/- 0.00842577 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.99366 @ 95%CL (1 toyMC)
median expected limit: r < 3.99366 @ 95%CL (1 toyMC)
   68% expected band : 3.99366 < r < 3.99366
   95% expected band : 3.99366 < r < 3.99366
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1742986219
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.63424 +/- 0.00636168 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.63424 @ 95%CL (1 toyMC)
median expected limit: r < 2.63424 @ 95%CL (1 toyMC)
   68% expected band : 2.63424 < r < 2.63424
   95% expected band : 2.63424 < r < 2.63424
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 33350732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2873 +/- 0.00521509 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.2873 @ 95%CL (1 toyMC)
median expected limit: r < 2.2873 @ 95%CL (1 toyMC)
   68% expected band : 2.2873 < r < 2.2873
   95% expected band : 2.2873 < r < 2.2873
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1700157133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18686 +/- 0.00642623 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.18686 @ 95%CL (1 toyMC)
median expected limit: r < 2.18686 @ 95%CL (1 toyMC)
   68% expected band : 2.18686 < r < 2.18686
   95% expected band : 2.18686 < r < 2.18686
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1098508778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56545 +/- 0.00682016 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.56545 @ 95%CL (1 toyMC)
median expected limit: r < 4.56545 @ 95%CL (1 toyMC)
   68% expected band : 4.56545 < r < 4.56545
   95% expected band : 4.56545 < r < 4.56545
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 49288362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.03177 +/- 0.00646334 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.03177 @ 95%CL (1 toyMC)
median expected limit: r < 3.03177 @ 95%CL (1 toyMC)
   68% expected band : 3.03177 < r < 3.03177
   95% expected band : 3.03177 < r < 3.03177
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1251645844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.42041 +/- 0.00982651 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.42041 @ 95%CL (1 toyMC)
median expected limit: r < 6.42041 @ 95%CL (1 toyMC)
   68% expected band : 6.42041 < r < 6.42041
   95% expected band : 6.42041 < r < 6.42041
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1970480436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90356 +/- 0.00465419 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.90356 @ 95%CL (1 toyMC)
median expected limit: r < 1.90356 @ 95%CL (1 toyMC)
   68% expected band : 1.90356 < r < 1.90356
   95% expected band : 1.90356 < r < 1.90356
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1956737658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13103 +/- 0.00492183 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.13103 @ 95%CL (1 toyMC)
median expected limit: r < 3.13103 @ 95%CL (1 toyMC)
   68% expected band : 3.13103 < r < 3.13103
   95% expected band : 3.13103 < r < 3.13103
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -47032835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2835 +/- 0.00526385 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.2835 @ 95%CL (1 toyMC)
median expected limit: r < 2.2835 @ 95%CL (1 toyMC)
   68% expected band : 2.2835 < r < 2.2835
   95% expected band : 2.2835 < r < 2.2835
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2144265268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.84682 +/- 0.00751016 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 3.84682 @ 95%CL (1 toyMC)
median expected limit: r < 3.84682 @ 95%CL (1 toyMC)
   68% expected band : 3.84682 < r < 3.84682
   95% expected band : 3.84682 < r < 3.84682
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1497083903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57538 +/- 0.00442037 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.57538 @ 95%CL (1 toyMC)
median expected limit: r < 1.57538 @ 95%CL (1 toyMC)
   68% expected band : 1.57538 < r < 1.57538
   95% expected band : 1.57538 < r < 1.57538
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1594358438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.05699 +/- 0.00575593 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.05699 @ 95%CL (1 toyMC)
median expected limit: r < 3.05699 @ 95%CL (1 toyMC)
   68% expected band : 3.05699 < r < 3.05699
   95% expected band : 3.05699 < r < 3.05699
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1312874346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93276 +/- 0.0051709 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.93276 @ 95%CL (1 toyMC)
median expected limit: r < 1.93276 @ 95%CL (1 toyMC)
   68% expected band : 1.93276 < r < 1.93276
   95% expected band : 1.93276 < r < 1.93276
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1028724676.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1098508778.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1172876690.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1251645844.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1309826882.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1316936251.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1341509779.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1395737214.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1437172934.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1478912699.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1700157133.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-17777787.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1778792615.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1786959963.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1847387502.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1881041062.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1901730909.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-2017285672.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-2045966146.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-20521315.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-2070358045.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-2090994419.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-2111467845.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-2144265268.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-237278687.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-242435924.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-262736210.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-315382308.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-420336871.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-439060702.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-445105725.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-47032835.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-520533945.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-524944537.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-552285091.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-584996096.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-587758391.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-63688577.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-686228631.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-691828354.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-782820128.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-824227200.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-959794570.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.1062294705.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.1103219390.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.1106423256.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1312874346.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1372681661.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1390563639.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1430881787.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1441309142.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1460426311.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1497083903.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1505732382.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1520239145.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.158298825.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1594358438.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.16148113.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1649625445.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1703691063.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1704235102.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1719377583.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1729858888.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1742986219.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1802640500.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1832836243.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1833699989.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1942366814.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1956737658.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1968789180.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1970480436.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.2033598824.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.2054729933.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.2062334369.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.2144374606.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.303590715.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.313811020.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.33350732.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.34368159.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.360856660.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.36898860.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.394978646.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.49288362.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.512891546.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.521205379.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.572086289.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.611185312.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.6438030.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.715086158.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.765838142.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.798322260.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.803394347.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.810987345.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.88430620.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.897043682.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.909371428.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.936727912.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.939244608.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.984713125.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.995371435.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1787159817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54132 +/- 0.00569953 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.54132 @ 95%CL (1 toyMC)
median expected limit: r < 2.54132 @ 95%CL (1 toyMC)
   68% expected band : 2.54132 < r < 2.54132
   95% expected band : 2.54132 < r < 2.54132
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1675416581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.15194 +/- 0.00570915 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.15194 @ 95%CL (1 toyMC)
median expected limit: r < 3.15194 @ 95%CL (1 toyMC)
   68% expected band : 3.15194 < r < 3.15194
   95% expected band : 3.15194 < r < 3.15194
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1294802478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.4226 +/- 0.00489027 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.4226 @ 95%CL (1 toyMC)
median expected limit: r < 2.4226 @ 95%CL (1 toyMC)
   68% expected band : 2.4226 < r < 2.4226
   95% expected band : 2.4226 < r < 2.4226
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1589135425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75551 +/- 0.00584501 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.75551 @ 95%CL (1 toyMC)
median expected limit: r < 2.75551 @ 95%CL (1 toyMC)
   68% expected band : 2.75551 < r < 2.75551
   95% expected band : 2.75551 < r < 2.75551
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -63442295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.20422 +/- 0.00589558 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.20422 @ 95%CL (1 toyMC)
median expected limit: r < 3.20422 @ 95%CL (1 toyMC)
   68% expected band : 3.20422 < r < 3.20422
   95% expected band : 3.20422 < r < 3.20422
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2011710994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67257 +/- 0.00646943 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.67257 @ 95%CL (1 toyMC)
median expected limit: r < 3.67257 @ 95%CL (1 toyMC)
   68% expected band : 3.67257 < r < 3.67257
   95% expected band : 3.67257 < r < 3.67257
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1532918465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.61083 +/- 0.00588627 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.61083 @ 95%CL (1 toyMC)
median expected limit: r < 2.61083 @ 95%CL (1 toyMC)
   68% expected band : 2.61083 < r < 2.61083
   95% expected band : 2.61083 < r < 2.61083
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -140038379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.79338 +/- 0.00742163 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.79338 @ 95%CL (1 toyMC)
median expected limit: r < 4.79338 @ 95%CL (1 toyMC)
   68% expected band : 4.79338 < r < 4.79338
   95% expected band : 4.79338 < r < 4.79338
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1594900516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52884 +/- 0.00510277 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.52884 @ 95%CL (1 toyMC)
median expected limit: r < 2.52884 @ 95%CL (1 toyMC)
   68% expected band : 2.52884 < r < 2.52884
   95% expected band : 2.52884 < r < 2.52884
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2004524918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.81217 +/- 0.00756095 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.81217 @ 95%CL (1 toyMC)
median expected limit: r < 5.81217 @ 95%CL (1 toyMC)
   68% expected band : 5.81217 < r < 5.81217
   95% expected band : 5.81217 < r < 5.81217
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1107240339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.65492 +/- 0.00662003 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.65492 @ 95%CL (1 toyMC)
median expected limit: r < 6.65492 @ 95%CL (1 toyMC)
   68% expected band : 6.65492 < r < 6.65492
   95% expected band : 6.65492 < r < 6.65492
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 289543295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32277 +/- 0.00556854 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.32277 @ 95%CL (1 toyMC)
median expected limit: r < 2.32277 @ 95%CL (1 toyMC)
   68% expected band : 2.32277 < r < 2.32277
   95% expected band : 2.32277 < r < 2.32277
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -47650826
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70292 +/- 0.00491474 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.70292 @ 95%CL (1 toyMC)
median expected limit: r < 2.70292 @ 95%CL (1 toyMC)
   68% expected band : 2.70292 < r < 2.70292
   95% expected band : 2.70292 < r < 2.70292
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -257499504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.40845 +/- 0.0079566 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.40845 @ 95%CL (1 toyMC)
median expected limit: r < 6.40845 @ 95%CL (1 toyMC)
   68% expected band : 6.40845 < r < 6.40845
   95% expected band : 6.40845 < r < 6.40845
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1907548066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71139 +/- 0.00546628 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.71139 @ 95%CL (1 toyMC)
median expected limit: r < 2.71139 @ 95%CL (1 toyMC)
   68% expected band : 2.71139 < r < 2.71139
   95% expected band : 2.71139 < r < 2.71139
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 418621776
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.07202 +/- 0.00655789 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.07202 @ 95%CL (1 toyMC)
median expected limit: r < 3.07202 @ 95%CL (1 toyMC)
   68% expected band : 3.07202 < r < 3.07202
   95% expected band : 3.07202 < r < 3.07202
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1975060770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.40268 +/- 0.00755746 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.40268 @ 95%CL (1 toyMC)
median expected limit: r < 4.40268 @ 95%CL (1 toyMC)
   68% expected band : 4.40268 < r < 4.40268
   95% expected band : 4.40268 < r < 4.40268
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1510342151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.55233 +/- 0.00676861 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.55233 @ 95%CL (1 toyMC)
median expected limit: r < 3.55233 @ 95%CL (1 toyMC)
   68% expected band : 3.55233 < r < 3.55233
   95% expected band : 3.55233 < r < 3.55233
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1749180654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.58984 +/- 0.00560023 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.58984 @ 95%CL (1 toyMC)
median expected limit: r < 2.58984 @ 95%CL (1 toyMC)
   68% expected band : 2.58984 < r < 2.58984
   95% expected band : 2.58984 < r < 2.58984
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 76128450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.99278 +/- 0.00596432 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.99278 @ 95%CL (1 toyMC)
median expected limit: r < 2.99278 @ 95%CL (1 toyMC)
   68% expected band : 2.99278 < r < 2.99278
   95% expected band : 2.99278 < r < 2.99278
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 328844811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.62594 +/- 0.00628965 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.62594 @ 95%CL (1 toyMC)
median expected limit: r < 3.62594 @ 95%CL (1 toyMC)
   68% expected band : 3.62594 < r < 3.62594
   95% expected band : 3.62594 < r < 3.62594
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -81216433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.35938 +/- 0.00516463 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.35938 @ 95%CL (1 toyMC)
median expected limit: r < 2.35938 @ 95%CL (1 toyMC)
   68% expected band : 2.35938 < r < 2.35938
   95% expected band : 2.35938 < r < 2.35938
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1254133688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.12195 +/- 0.00683604 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.12195 @ 95%CL (1 toyMC)
median expected limit: r < 6.12195 @ 95%CL (1 toyMC)
   68% expected band : 6.12195 < r < 6.12195
   95% expected band : 6.12195 < r < 6.12195
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 377022265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.66873 +/- 0.00560659 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.66873 @ 95%CL (1 toyMC)
median expected limit: r < 2.66873 @ 95%CL (1 toyMC)
   68% expected band : 2.66873 < r < 2.66873
   95% expected band : 2.66873 < r < 2.66873
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2000263143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.66817 +/- 0.0059527 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.66817 @ 95%CL (1 toyMC)
median expected limit: r < 4.66817 @ 95%CL (1 toyMC)
   68% expected band : 4.66817 < r < 4.66817
   95% expected band : 4.66817 < r < 4.66817
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 212940121
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.04406 +/- 0.00518149 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.04406 @ 95%CL (1 toyMC)
median expected limit: r < 6.04406 @ 95%CL (1 toyMC)
   68% expected band : 6.04406 < r < 6.04406
   95% expected band : 6.04406 < r < 6.04406
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1600208195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3374 +/- 0.00591029 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.3374 @ 95%CL (1 toyMC)
median expected limit: r < 3.3374 @ 95%CL (1 toyMC)
   68% expected band : 3.3374 < r < 3.3374
   95% expected band : 3.3374 < r < 3.3374
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2111587845
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.91656 +/- 0.00516298 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.91656 @ 95%CL (1 toyMC)
median expected limit: r < 2.91656 @ 95%CL (1 toyMC)
   68% expected band : 2.91656 < r < 2.91656
   95% expected band : 2.91656 < r < 2.91656
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1280781279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.00899 +/- 0.00720011 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.00899 @ 95%CL (1 toyMC)
median expected limit: r < 4.00899 @ 95%CL (1 toyMC)
   68% expected band : 4.00899 < r < 4.00899
   95% expected band : 4.00899 < r < 4.00899
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1724487983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.43248 +/- 0.0069333 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.43248 @ 95%CL (1 toyMC)
median expected limit: r < 3.43248 @ 95%CL (1 toyMC)
   68% expected band : 3.43248 < r < 3.43248
   95% expected band : 3.43248 < r < 3.43248
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 892043036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.02363 +/- 0.0065581 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.02363 @ 95%CL (1 toyMC)
median expected limit: r < 3.02363 @ 95%CL (1 toyMC)
   68% expected band : 3.02363 < r < 3.02363
   95% expected band : 3.02363 < r < 3.02363
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -450775064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.20604 +/- 0.00820337 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.20604 @ 95%CL (1 toyMC)
median expected limit: r < 4.20604 @ 95%CL (1 toyMC)
   68% expected band : 4.20604 < r < 4.20604
   95% expected band : 4.20604 < r < 4.20604
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -541412784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.30208 +/- 0.00632462 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.30208 @ 95%CL (1 toyMC)
median expected limit: r < 4.30208 @ 95%CL (1 toyMC)
   68% expected band : 4.30208 < r < 4.30208
   95% expected band : 4.30208 < r < 4.30208
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1283172175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73056 +/- 0.00689746 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.73056 @ 95%CL (1 toyMC)
median expected limit: r < 4.73056 @ 95%CL (1 toyMC)
   68% expected band : 4.73056 < r < 4.73056
   95% expected band : 4.73056 < r < 4.73056
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1227529985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.81412 +/- 0.00627626 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.81412 @ 95%CL (1 toyMC)
median expected limit: r < 2.81412 @ 95%CL (1 toyMC)
   68% expected band : 2.81412 < r < 2.81412
   95% expected band : 2.81412 < r < 2.81412
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -989221819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.71904 +/- 0.0061274 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 3.71904 @ 95%CL (1 toyMC)
median expected limit: r < 3.71904 @ 95%CL (1 toyMC)
   68% expected band : 3.71904 < r < 3.71904
   95% expected band : 3.71904 < r < 3.71904
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -521578591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1942 +/- 0.00497993 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.1942 @ 95%CL (1 toyMC)
median expected limit: r < 2.1942 @ 95%CL (1 toyMC)
   68% expected band : 2.1942 < r < 2.1942
   95% expected band : 2.1942 < r < 2.1942
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -734203512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.94119 +/- 0.0057169 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.94119 @ 95%CL (1 toyMC)
median expected limit: r < 2.94119 @ 95%CL (1 toyMC)
   68% expected band : 2.94119 < r < 2.94119
   95% expected band : 2.94119 < r < 2.94119
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -702920772
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.92571 +/- 0.00560951 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.92571 @ 95%CL (1 toyMC)
median expected limit: r < 3.92571 @ 95%CL (1 toyMC)
   68% expected band : 3.92571 < r < 3.92571
   95% expected band : 3.92571 < r < 3.92571
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1000882811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.19156 +/- 0.00594292 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.19156 @ 95%CL (1 toyMC)
median expected limit: r < 3.19156 @ 95%CL (1 toyMC)
   68% expected band : 3.19156 < r < 3.19156
   95% expected band : 3.19156 < r < 3.19156
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1014933234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.78616 +/- 0.00619296 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.78616 @ 95%CL (1 toyMC)
median expected limit: r < 3.78616 @ 95%CL (1 toyMC)
   68% expected band : 3.78616 < r < 3.78616
   95% expected band : 3.78616 < r < 3.78616
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -430821111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76604 +/- 0.00580592 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.76604 @ 95%CL (1 toyMC)
median expected limit: r < 2.76604 @ 95%CL (1 toyMC)
   68% expected band : 2.76604 < r < 2.76604
   95% expected band : 2.76604 < r < 2.76604
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -810166138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.43027 +/- 0.00701277 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.43027 @ 95%CL (1 toyMC)
median expected limit: r < 3.43027 @ 95%CL (1 toyMC)
   68% expected band : 3.43027 < r < 3.43027
   95% expected band : 3.43027 < r < 3.43027
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1853583416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.22641 +/- 0.00610963 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.22641 @ 95%CL (1 toyMC)
median expected limit: r < 3.22641 @ 95%CL (1 toyMC)
   68% expected band : 3.22641 < r < 3.22641
   95% expected band : 3.22641 < r < 3.22641
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1810924684
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.10635 +/- 0.00700512 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.10635 @ 95%CL (1 toyMC)
median expected limit: r < 3.10635 @ 95%CL (1 toyMC)
   68% expected band : 3.10635 < r < 3.10635
   95% expected band : 3.10635 < r < 3.10635
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 717239904
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.26127 +/- 0.00453201 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.26127 @ 95%CL (1 toyMC)
median expected limit: r < 2.26127 @ 95%CL (1 toyMC)
   68% expected band : 2.26127 < r < 2.26127
   95% expected band : 2.26127 < r < 2.26127
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2084015581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.22967 +/- 0.00772696 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.22967 @ 95%CL (1 toyMC)
median expected limit: r < 5.22967 @ 95%CL (1 toyMC)
   68% expected band : 5.22967 < r < 5.22967
   95% expected band : 5.22967 < r < 5.22967
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -663484998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71954 +/- 0.00642143 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.71954 @ 95%CL (1 toyMC)
median expected limit: r < 2.71954 @ 95%CL (1 toyMC)
   68% expected band : 2.71954 < r < 2.71954
   95% expected band : 2.71954 < r < 2.71954
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1461954431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67622 +/- 0.00669447 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.67622 @ 95%CL (1 toyMC)
median expected limit: r < 3.67622 @ 95%CL (1 toyMC)
   68% expected band : 3.67622 < r < 3.67622
   95% expected band : 3.67622 < r < 3.67622
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1505339103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.59889 +/- 0.0076847 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.59889 @ 95%CL (1 toyMC)
median expected limit: r < 7.59889 @ 95%CL (1 toyMC)
   68% expected band : 7.59889 < r < 7.59889
   95% expected band : 7.59889 < r < 7.59889
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 798340959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60281 +/- 0.00679055 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.60281 @ 95%CL (1 toyMC)
median expected limit: r < 4.60281 @ 95%CL (1 toyMC)
   68% expected band : 4.60281 < r < 4.60281
   95% expected band : 4.60281 < r < 4.60281
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -226401642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.91743 +/- 0.00571497 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.91743 @ 95%CL (1 toyMC)
median expected limit: r < 2.91743 @ 95%CL (1 toyMC)
   68% expected band : 2.91743 < r < 2.91743
   95% expected band : 2.91743 < r < 2.91743
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -420529736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.05453 +/- 0.00644396 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.05453 @ 95%CL (1 toyMC)
median expected limit: r < 5.05453 @ 95%CL (1 toyMC)
   68% expected band : 5.05453 < r < 5.05453
   95% expected band : 5.05453 < r < 5.05453
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -763253228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.69339 +/- 0.00706596 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.69339 @ 95%CL (1 toyMC)
median expected limit: r < 6.69339 @ 95%CL (1 toyMC)
   68% expected band : 6.69339 < r < 6.69339
   95% expected band : 6.69339 < r < 6.69339
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1070878919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62926 +/- 0.00676657 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.62926 @ 95%CL (1 toyMC)
median expected limit: r < 2.62926 @ 95%CL (1 toyMC)
   68% expected band : 2.62926 < r < 2.62926
   95% expected band : 2.62926 < r < 2.62926
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1410637791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.4846 +/- 0.00760131 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.4846 @ 95%CL (1 toyMC)
median expected limit: r < 5.4846 @ 95%CL (1 toyMC)
   68% expected band : 5.4846 < r < 5.4846
   95% expected band : 5.4846 < r < 5.4846
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1281449949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25041 +/- 0.0060461 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.25041 @ 95%CL (1 toyMC)
median expected limit: r < 3.25041 @ 95%CL (1 toyMC)
   68% expected band : 3.25041 < r < 3.25041
   95% expected band : 3.25041 < r < 3.25041
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 849491157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56708 +/- 0.00564958 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.56708 @ 95%CL (1 toyMC)
median expected limit: r < 2.56708 @ 95%CL (1 toyMC)
   68% expected band : 2.56708 < r < 2.56708
   95% expected band : 2.56708 < r < 2.56708
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1849633638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.18407 +/- 0.00806539 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.18407 @ 95%CL (1 toyMC)
median expected limit: r < 6.18407 @ 95%CL (1 toyMC)
   68% expected band : 6.18407 < r < 6.18407
   95% expected band : 6.18407 < r < 6.18407
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -365534931
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.53238 +/- 0.00610043 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.53238 @ 95%CL (1 toyMC)
median expected limit: r < 3.53238 @ 95%CL (1 toyMC)
   68% expected band : 3.53238 < r < 3.53238
   95% expected band : 3.53238 < r < 3.53238
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2004047515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.16946 +/- 0.00618691 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.16946 @ 95%CL (1 toyMC)
median expected limit: r < 4.16946 @ 95%CL (1 toyMC)
   68% expected band : 4.16946 < r < 4.16946
   95% expected band : 4.16946 < r < 4.16946
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1695625183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.09878 +/- 0.00725027 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.09878 @ 95%CL (1 toyMC)
median expected limit: r < 4.09878 @ 95%CL (1 toyMC)
   68% expected band : 4.09878 < r < 4.09878
   95% expected band : 4.09878 < r < 4.09878
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1933144249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.15547 +/- 0.00736056 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.15547 @ 95%CL (1 toyMC)
median expected limit: r < 4.15547 @ 95%CL (1 toyMC)
   68% expected band : 4.15547 < r < 4.15547
   95% expected band : 4.15547 < r < 4.15547
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -950829969
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.36378 +/- 0.00585804 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.36378 @ 95%CL (1 toyMC)
median expected limit: r < 3.36378 @ 95%CL (1 toyMC)
   68% expected band : 3.36378 < r < 3.36378
   95% expected band : 3.36378 < r < 3.36378
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1888726365
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.63764 +/- 0.00687745 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.63764 @ 95%CL (1 toyMC)
median expected limit: r < 3.63764 @ 95%CL (1 toyMC)
   68% expected band : 3.63764 < r < 3.63764
   95% expected band : 3.63764 < r < 3.63764
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 775265851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32989 +/- 0.0054007 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.32989 @ 95%CL (1 toyMC)
median expected limit: r < 2.32989 @ 95%CL (1 toyMC)
   68% expected band : 2.32989 < r < 2.32989
   95% expected band : 2.32989 < r < 2.32989
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -665414950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.03901 +/- 0.00577358 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.03901 @ 95%CL (1 toyMC)
median expected limit: r < 3.03901 @ 95%CL (1 toyMC)
   68% expected band : 3.03901 < r < 3.03901
   95% expected band : 3.03901 < r < 3.03901
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -479660685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0371 +/- 0.00782668 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.0371 @ 95%CL (1 toyMC)
median expected limit: r < 5.0371 @ 95%CL (1 toyMC)
   68% expected band : 5.0371 < r < 5.0371
   95% expected band : 5.0371 < r < 5.0371
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -775619686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.43546 +/- 0.00713424 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.43546 @ 95%CL (1 toyMC)
median expected limit: r < 4.43546 @ 95%CL (1 toyMC)
   68% expected band : 4.43546 < r < 4.43546
   95% expected band : 4.43546 < r < 4.43546
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -353280505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.19893 +/- 0.00535422 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.19893 @ 95%CL (1 toyMC)
median expected limit: r < 3.19893 @ 95%CL (1 toyMC)
   68% expected band : 3.19893 < r < 3.19893
   95% expected band : 3.19893 < r < 3.19893
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -103647770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.94057 +/- 0.00517924 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.94057 @ 95%CL (1 toyMC)
median expected limit: r < 3.94057 @ 95%CL (1 toyMC)
   68% expected band : 3.94057 < r < 3.94057
   95% expected band : 3.94057 < r < 3.94057
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1610738850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.21186 +/- 0.00556127 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.21186 @ 95%CL (1 toyMC)
median expected limit: r < 3.21186 @ 95%CL (1 toyMC)
   68% expected band : 3.21186 < r < 3.21186
   95% expected band : 3.21186 < r < 3.21186
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1112528327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.56268 +/- 0.00592611 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.56268 @ 95%CL (1 toyMC)
median expected limit: r < 5.56268 @ 95%CL (1 toyMC)
   68% expected band : 5.56268 < r < 5.56268
   95% expected band : 5.56268 < r < 5.56268
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1404378301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.6356 +/- 0.00710234 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.6356 @ 95%CL (1 toyMC)
median expected limit: r < 5.6356 @ 95%CL (1 toyMC)
   68% expected band : 5.6356 < r < 5.6356
   95% expected band : 5.6356 < r < 5.6356
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1755193814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.91095 +/- 0.0062169 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.91095 @ 95%CL (1 toyMC)
median expected limit: r < 3.91095 @ 95%CL (1 toyMC)
   68% expected band : 3.91095 < r < 3.91095
   95% expected band : 3.91095 < r < 3.91095
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1360475031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.1558 +/- 0.00655837 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.1558 @ 95%CL (1 toyMC)
median expected limit: r < 6.1558 @ 95%CL (1 toyMC)
   68% expected band : 6.1558 < r < 6.1558
   95% expected band : 6.1558 < r < 6.1558
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1445500015
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2592 +/- 0.00433538 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.2592 @ 95%CL (1 toyMC)
median expected limit: r < 2.2592 @ 95%CL (1 toyMC)
   68% expected band : 2.2592 < r < 2.2592
   95% expected band : 2.2592 < r < 2.2592
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 610569431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.97214 +/- 0.00808807 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.97214 @ 95%CL (1 toyMC)
median expected limit: r < 7.97214 @ 95%CL (1 toyMC)
   68% expected band : 7.97214 < r < 7.97214
   95% expected band : 7.97214 < r < 7.97214
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 867355905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.4112 +/- 0.0084721 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.4112 @ 95%CL (1 toyMC)
median expected limit: r < 6.4112 @ 95%CL (1 toyMC)
   68% expected band : 6.4112 < r < 6.4112
   95% expected band : 6.4112 < r < 6.4112
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1032048591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.68226 +/- 0.00626771 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.68226 @ 95%CL (1 toyMC)
median expected limit: r < 3.68226 @ 95%CL (1 toyMC)
   68% expected band : 3.68226 < r < 3.68226
   95% expected band : 3.68226 < r < 3.68226
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2145851869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.78422 +/- 0.00622971 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.78422 @ 95%CL (1 toyMC)
median expected limit: r < 2.78422 @ 95%CL (1 toyMC)
   68% expected band : 2.78422 < r < 2.78422
   95% expected band : 2.78422 < r < 2.78422
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 707112907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.72148 +/- 0.00647558 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.72148 @ 95%CL (1 toyMC)
median expected limit: r < 3.72148 @ 95%CL (1 toyMC)
   68% expected band : 3.72148 < r < 3.72148
   95% expected band : 3.72148 < r < 3.72148
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -981675296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73168 +/- 0.00570234 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.73168 @ 95%CL (1 toyMC)
median expected limit: r < 4.73168 @ 95%CL (1 toyMC)
   68% expected band : 4.73168 < r < 4.73168
   95% expected band : 4.73168 < r < 4.73168
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1835785640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75919 +/- 0.00607819 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.75919 @ 95%CL (1 toyMC)
median expected limit: r < 2.75919 @ 95%CL (1 toyMC)
   68% expected band : 2.75919 < r < 2.75919
   95% expected band : 2.75919 < r < 2.75919
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 826755427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.33874 +/- 0.00594523 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.33874 @ 95%CL (1 toyMC)
median expected limit: r < 3.33874 @ 95%CL (1 toyMC)
   68% expected band : 3.33874 < r < 3.33874
   95% expected band : 3.33874 < r < 3.33874
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1026229694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93284 +/- 0.00583848 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.93284 @ 95%CL (1 toyMC)
median expected limit: r < 1.93284 @ 95%CL (1 toyMC)
   68% expected band : 1.93284 < r < 1.93284
   95% expected band : 1.93284 < r < 1.93284
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1626907206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89378 +/- 0.00512263 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.89378 @ 95%CL (1 toyMC)
median expected limit: r < 2.89378 @ 95%CL (1 toyMC)
   68% expected band : 2.89378 < r < 2.89378
   95% expected band : 2.89378 < r < 2.89378
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1373145859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.87191 +/- 0.00751539 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.87191 @ 95%CL (1 toyMC)
median expected limit: r < 4.87191 @ 95%CL (1 toyMC)
   68% expected band : 4.87191 < r < 4.87191
   95% expected band : 4.87191 < r < 4.87191
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2108211580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.21569 +/- 0.00699495 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.21569 @ 95%CL (1 toyMC)
median expected limit: r < 4.21569 @ 95%CL (1 toyMC)
   68% expected band : 4.21569 < r < 4.21569
   95% expected band : 4.21569 < r < 4.21569
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 464973356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.86198 +/- 0.00607019 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.86198 @ 95%CL (1 toyMC)
median expected limit: r < 3.86198 @ 95%CL (1 toyMC)
   68% expected band : 3.86198 < r < 3.86198
   95% expected band : 3.86198 < r < 3.86198
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -598345255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49377 +/- 0.00655013 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.49377 @ 95%CL (1 toyMC)
median expected limit: r < 3.49377 @ 95%CL (1 toyMC)
   68% expected band : 3.49377 < r < 3.49377
   95% expected band : 3.49377 < r < 3.49377
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -594603661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.86385 +/- 0.00669581 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.86385 @ 95%CL (1 toyMC)
median expected limit: r < 5.86385 @ 95%CL (1 toyMC)
   68% expected band : 5.86385 < r < 5.86385
   95% expected band : 5.86385 < r < 5.86385
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1642390669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45878 +/- 0.00493517 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.45878 @ 95%CL (1 toyMC)
median expected limit: r < 2.45878 @ 95%CL (1 toyMC)
   68% expected band : 2.45878 < r < 2.45878
   95% expected band : 2.45878 < r < 2.45878
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1876163215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.4255 +/- 0.00416156 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.4255 @ 95%CL (1 toyMC)
median expected limit: r < 2.4255 @ 95%CL (1 toyMC)
   68% expected band : 2.4255 < r < 2.4255
   95% expected band : 2.4255 < r < 2.4255
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 923857685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.09536 +/- 0.00645092 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.09536 @ 95%CL (1 toyMC)
median expected limit: r < 3.09536 @ 95%CL (1 toyMC)
   68% expected band : 3.09536 < r < 3.09536
   95% expected band : 3.09536 < r < 3.09536
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1950713630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.0346 +/- 0.00596207 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.0346 @ 95%CL (1 toyMC)
median expected limit: r < 4.0346 @ 95%CL (1 toyMC)
   68% expected band : 4.0346 < r < 4.0346
   95% expected band : 4.0346 < r < 4.0346
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1971083383
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.08001 +/- 0.00668747 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.08001 @ 95%CL (1 toyMC)
median expected limit: r < 5.08001 @ 95%CL (1 toyMC)
   68% expected band : 5.08001 < r < 5.08001
   95% expected band : 5.08001 < r < 5.08001
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1169473976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70665 +/- 0.00527862 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.70665 @ 95%CL (1 toyMC)
median expected limit: r < 2.70665 @ 95%CL (1 toyMC)
   68% expected band : 2.70665 < r < 2.70665
   95% expected band : 2.70665 < r < 2.70665
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1083627127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.03296 +/- 0.0075726 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.03296 @ 95%CL (1 toyMC)
median expected limit: r < 5.03296 @ 95%CL (1 toyMC)
   68% expected band : 5.03296 < r < 5.03296
   95% expected band : 5.03296 < r < 5.03296
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1309719187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.82512 +/- 0.00796577 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.82512 @ 95%CL (1 toyMC)
median expected limit: r < 5.82512 @ 95%CL (1 toyMC)
   68% expected band : 5.82512 < r < 5.82512
   95% expected band : 5.82512 < r < 5.82512
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1014933234.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1026229694.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-103647770.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1112528327.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1254133688.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1280781279.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1281449949.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1294802478.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1360475031.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-140038379.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1404378301.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1461954431.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1510342151.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1532918465.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1594900516.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1600208195.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1610738850.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1626907206.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1642390669.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1695625183.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1749180654.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1755193814.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1787159817.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1835785640.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1853583416.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1876163215.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1888726365.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1907548066.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-1971083383.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-1975060770.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-2004047515.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-2004524918.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-2011710994.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-2145851869.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-226401642.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-257499504.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-353280505.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-365534931.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-420529736.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-430821111.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-450775064.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-47650826.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-479660685.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-521578591.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-541412784.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-594603661.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-598345255.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-63442295.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-663484998.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-665414950.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-702920772.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-734203512.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.-763253228.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.-775619686.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.-810166138.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.-81216433.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.-950829969.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.-981675296.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.-989221819.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1000882811.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1032048591.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1070878919.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1083627127.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1107240339.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1169473976.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1227529985.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1283172175.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1309719187.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1373145859.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1410637791.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1445500015.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1505339103.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1589135425.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1675416581.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1724487983.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1810924684.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1849633638.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1933144249.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1950713630.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2000263143.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2084015581.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2108211580.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.2111587845.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.212940121.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.289543295.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.328844811.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.377022265.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.418621776.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.464973356.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.610569431.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.707112907.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.717239904.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.76128450.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.775265851.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.798340959.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.826755427.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.849491157.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.867355905.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.892043036.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.923857685.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1919789349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61756 +/- 0.0066019 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.61756 @ 95%CL (1 toyMC)
median expected limit: r < 3.61756 @ 95%CL (1 toyMC)
   68% expected band : 3.61756 < r < 3.61756
   95% expected band : 3.61756 < r < 3.61756
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1708470078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.78343 +/- 0.00679309 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.78343 @ 95%CL (1 toyMC)
median expected limit: r < 2.78343 @ 95%CL (1 toyMC)
   68% expected band : 2.78343 < r < 2.78343
   95% expected band : 2.78343 < r < 2.78343
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 337260079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.71074 +/- 0.00722444 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.71074 @ 95%CL (1 toyMC)
median expected limit: r < 5.71074 @ 95%CL (1 toyMC)
   68% expected band : 5.71074 < r < 5.71074
   95% expected band : 5.71074 < r < 5.71074
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1258728216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11247 +/- 0.00619624 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.11247 @ 95%CL (1 toyMC)
median expected limit: r < 5.11247 @ 95%CL (1 toyMC)
   68% expected band : 5.11247 < r < 5.11247
   95% expected band : 5.11247 < r < 5.11247
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1338292158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.22557 +/- 0.006998 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.22557 @ 95%CL (1 toyMC)
median expected limit: r < 6.22557 @ 95%CL (1 toyMC)
   68% expected band : 6.22557 < r < 6.22557
   95% expected band : 6.22557 < r < 6.22557
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -110328825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.13777 +/- 0.00528856 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.13777 @ 95%CL (1 toyMC)
median expected limit: r < 4.13777 @ 95%CL (1 toyMC)
   68% expected band : 4.13777 < r < 4.13777
   95% expected band : 4.13777 < r < 4.13777
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -333042471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.0324 +/- 0.00662499 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.0324 @ 95%CL (1 toyMC)
median expected limit: r < 3.0324 @ 95%CL (1 toyMC)
   68% expected band : 3.0324 < r < 3.0324
   95% expected band : 3.0324 < r < 3.0324
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1732218270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60949 +/- 0.00723002 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.60949 @ 95%CL (1 toyMC)
median expected limit: r < 4.60949 @ 95%CL (1 toyMC)
   68% expected band : 4.60949 < r < 4.60949
   95% expected band : 4.60949 < r < 4.60949
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1626388078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18151 +/- 0.00748309 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.18151 @ 95%CL (1 toyMC)
median expected limit: r < 3.18151 @ 95%CL (1 toyMC)
   68% expected band : 3.18151 < r < 3.18151
   95% expected band : 3.18151 < r < 3.18151
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 686337295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77774 +/- 0.00632868 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.77774 @ 95%CL (1 toyMC)
median expected limit: r < 2.77774 @ 95%CL (1 toyMC)
   68% expected band : 2.77774 < r < 2.77774
   95% expected band : 2.77774 < r < 2.77774
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 533089232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.65832 +/- 0.00572578 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.65832 @ 95%CL (1 toyMC)
median expected limit: r < 3.65832 @ 95%CL (1 toyMC)
   68% expected band : 3.65832 < r < 3.65832
   95% expected band : 3.65832 < r < 3.65832
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1273747961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.95153 +/- 0.0079386 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.95153 @ 95%CL (1 toyMC)
median expected limit: r < 4.95153 @ 95%CL (1 toyMC)
   68% expected band : 4.95153 < r < 4.95153
   95% expected band : 4.95153 < r < 4.95153
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1961029709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85996 +/- 0.00389064 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.85996 @ 95%CL (1 toyMC)
median expected limit: r < 1.85996 @ 95%CL (1 toyMC)
   68% expected band : 1.85996 < r < 1.85996
   95% expected band : 1.85996 < r < 1.85996
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1462573416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.6789 +/- 0.00878118 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.6789 @ 95%CL (1 toyMC)
median expected limit: r < 6.6789 @ 95%CL (1 toyMC)
   68% expected band : 6.6789 < r < 6.6789
   95% expected band : 6.6789 < r < 6.6789
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -600732986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.22627 +/- 0.0057461 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.22627 @ 95%CL (1 toyMC)
median expected limit: r < 3.22627 @ 95%CL (1 toyMC)
   68% expected band : 3.22627 < r < 3.22627
   95% expected band : 3.22627 < r < 3.22627
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 421495101
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85171 +/- 0.00678724 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.85171 @ 95%CL (1 toyMC)
median expected limit: r < 2.85171 @ 95%CL (1 toyMC)
   68% expected band : 2.85171 < r < 2.85171
   95% expected band : 2.85171 < r < 2.85171
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -721625738
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.16244 +/- 0.00731543 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.16244 @ 95%CL (1 toyMC)
median expected limit: r < 3.16244 @ 95%CL (1 toyMC)
   68% expected band : 3.16244 < r < 3.16244
   95% expected band : 3.16244 < r < 3.16244
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1760281950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67431 +/- 0.00664624 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.67431 @ 95%CL (1 toyMC)
median expected limit: r < 3.67431 @ 95%CL (1 toyMC)
   68% expected band : 3.67431 < r < 3.67431
   95% expected band : 3.67431 < r < 3.67431
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -529889673
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1087 +/- 0.00539258 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 2.1087 @ 95%CL (1 toyMC)
median expected limit: r < 2.1087 @ 95%CL (1 toyMC)
   68% expected band : 2.1087 < r < 2.1087
   95% expected band : 2.1087 < r < 2.1087
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1723071159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.04783 +/- 0.00518608 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.04783 @ 95%CL (1 toyMC)
median expected limit: r < 3.04783 @ 95%CL (1 toyMC)
   68% expected band : 3.04783 < r < 3.04783
   95% expected band : 3.04783 < r < 3.04783
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1090044470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.16924 +/- 0.00787452 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.16924 @ 95%CL (1 toyMC)
median expected limit: r < 4.16924 @ 95%CL (1 toyMC)
   68% expected band : 4.16924 < r < 4.16924
   95% expected band : 4.16924 < r < 4.16924
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 142676190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.79395 +/- 0.00886032 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.79395 @ 95%CL (1 toyMC)
median expected limit: r < 7.79395 @ 95%CL (1 toyMC)
   68% expected band : 7.79395 < r < 7.79395
   95% expected band : 7.79395 < r < 7.79395
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1282921259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73582 +/- 0.00705865 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.73582 @ 95%CL (1 toyMC)
median expected limit: r < 4.73582 @ 95%CL (1 toyMC)
   68% expected band : 4.73582 < r < 4.73582
   95% expected band : 4.73582 < r < 4.73582
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2008529648
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.3862 +/- 0.00790915 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.3862 @ 95%CL (1 toyMC)
median expected limit: r < 5.3862 @ 95%CL (1 toyMC)
   68% expected band : 5.3862 < r < 5.3862
   95% expected band : 5.3862 < r < 5.3862
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 55591202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.06425 +/- 0.00828796 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.06425 @ 95%CL (1 toyMC)
median expected limit: r < 4.06425 @ 95%CL (1 toyMC)
   68% expected band : 4.06425 < r < 4.06425
   95% expected band : 4.06425 < r < 4.06425
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -94345861
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1732 +/- 0.00595881 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.1732 @ 95%CL (1 toyMC)
median expected limit: r < 4.1732 @ 95%CL (1 toyMC)
   68% expected band : 4.1732 < r < 4.1732
   95% expected band : 4.1732 < r < 4.1732
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1399416093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.94474 +/- 0.00742369 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.94474 @ 95%CL (1 toyMC)
median expected limit: r < 4.94474 @ 95%CL (1 toyMC)
   68% expected band : 4.94474 < r < 4.94474
   95% expected band : 4.94474 < r < 4.94474
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -950260274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.7099 +/- 0.00789945 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.7099 @ 95%CL (1 toyMC)
median expected limit: r < 3.7099 @ 95%CL (1 toyMC)
   68% expected band : 3.7099 < r < 3.7099
   95% expected band : 3.7099 < r < 3.7099
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1891346007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.12881 +/- 0.00749635 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.12881 @ 95%CL (1 toyMC)
median expected limit: r < 4.12881 @ 95%CL (1 toyMC)
   68% expected band : 4.12881 < r < 4.12881
   95% expected band : 4.12881 < r < 4.12881
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 860927743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.67738 +/- 0.00952606 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.67738 @ 95%CL (1 toyMC)
median expected limit: r < 5.67738 @ 95%CL (1 toyMC)
   68% expected band : 5.67738 < r < 5.67738
   95% expected band : 5.67738 < r < 5.67738
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 537796181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.92929 +/- 0.0108897 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.92929 @ 95%CL (1 toyMC)
median expected limit: r < 9.92929 @ 95%CL (1 toyMC)
   68% expected band : 9.92929 < r < 9.92929
   95% expected band : 9.92929 < r < 9.92929
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -644610896
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.05117 +/- 0.00816427 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.05117 @ 95%CL (1 toyMC)
median expected limit: r < 9.05117 @ 95%CL (1 toyMC)
   68% expected band : 9.05117 < r < 9.05117
   95% expected band : 9.05117 < r < 9.05117
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1672795525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1538 +/- 0.00669157 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.1538 @ 95%CL (1 toyMC)
median expected limit: r < 4.1538 @ 95%CL (1 toyMC)
   68% expected band : 4.1538 < r < 4.1538
   95% expected band : 4.1538 < r < 4.1538
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 35834893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.13836 +/- 0.00703809 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.13836 @ 95%CL (1 toyMC)
median expected limit: r < 4.13836 @ 95%CL (1 toyMC)
   68% expected band : 4.13836 < r < 4.13836
   95% expected band : 4.13836 < r < 4.13836
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 700050516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.87327 +/- 0.00932577 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.87327 @ 95%CL (1 toyMC)
median expected limit: r < 7.87327 @ 95%CL (1 toyMC)
   68% expected band : 7.87327 < r < 7.87327
   95% expected band : 7.87327 < r < 7.87327
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1526528299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.99989 +/- 0.0077553 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.99989 @ 95%CL (1 toyMC)
median expected limit: r < 3.99989 @ 95%CL (1 toyMC)
   68% expected band : 3.99989 < r < 3.99989
   95% expected band : 3.99989 < r < 3.99989
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 132852234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.49681 +/- 0.00773194 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.49681 @ 95%CL (1 toyMC)
median expected limit: r < 5.49681 @ 95%CL (1 toyMC)
   68% expected band : 5.49681 < r < 5.49681
   95% expected band : 5.49681 < r < 5.49681
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1537108202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.41865 +/- 0.00598338 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.41865 @ 95%CL (1 toyMC)
median expected limit: r < 3.41865 @ 95%CL (1 toyMC)
   68% expected band : 3.41865 < r < 3.41865
   95% expected band : 3.41865 < r < 3.41865
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1914599384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.69051 +/- 0.00832666 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.69051 @ 95%CL (1 toyMC)
median expected limit: r < 5.69051 @ 95%CL (1 toyMC)
   68% expected band : 5.69051 < r < 5.69051
   95% expected band : 5.69051 < r < 5.69051
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 636176014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.13933 +/- 0.00685712 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.13933 @ 95%CL (1 toyMC)
median expected limit: r < 4.13933 @ 95%CL (1 toyMC)
   68% expected band : 4.13933 < r < 4.13933
   95% expected band : 4.13933 < r < 4.13933
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -337258190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.33332 +/- 0.00711727 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.33332 @ 95%CL (1 toyMC)
median expected limit: r < 4.33332 @ 95%CL (1 toyMC)
   68% expected band : 4.33332 < r < 4.33332
   95% expected band : 4.33332 < r < 4.33332
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2098338390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.65805 +/- 0.00667305 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.65805 @ 95%CL (1 toyMC)
median expected limit: r < 4.65805 @ 95%CL (1 toyMC)
   68% expected band : 4.65805 < r < 4.65805
   95% expected band : 4.65805 < r < 4.65805
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1639531581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.29415 +/- 0.00767674 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.29415 @ 95%CL (1 toyMC)
median expected limit: r < 4.29415 @ 95%CL (1 toyMC)
   68% expected band : 4.29415 < r < 4.29415
   95% expected band : 4.29415 < r < 4.29415
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 12454075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.53356 +/- 0.00591115 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.53356 @ 95%CL (1 toyMC)
median expected limit: r < 3.53356 @ 95%CL (1 toyMC)
   68% expected band : 3.53356 < r < 3.53356
   95% expected band : 3.53356 < r < 3.53356
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -197043335
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.05118 +/- 0.00532961 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.05118 @ 95%CL (1 toyMC)
median expected limit: r < 2.05118 @ 95%CL (1 toyMC)
   68% expected band : 2.05118 < r < 2.05118
   95% expected band : 2.05118 < r < 2.05118
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1124906537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.81388 +/- 0.0082063 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.81388 @ 95%CL (1 toyMC)
median expected limit: r < 7.81388 @ 95%CL (1 toyMC)
   68% expected band : 7.81388 < r < 7.81388
   95% expected band : 7.81388 < r < 7.81388
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1895176493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.34113 +/- 0.00856712 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 7.34113 @ 95%CL (1 toyMC)
median expected limit: r < 7.34113 @ 95%CL (1 toyMC)
   68% expected band : 7.34113 < r < 7.34113
   95% expected band : 7.34113 < r < 7.34113
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -198863497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.2751 +/- 0.00762744 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.2751 @ 95%CL (1 toyMC)
median expected limit: r < 5.2751 @ 95%CL (1 toyMC)
   68% expected band : 5.2751 < r < 5.2751
   95% expected band : 5.2751 < r < 5.2751
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1186781615
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.65693 +/- 0.00944452 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.65693 @ 95%CL (1 toyMC)
median expected limit: r < 5.65693 @ 95%CL (1 toyMC)
   68% expected band : 5.65693 < r < 5.65693
   95% expected band : 5.65693 < r < 5.65693
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -825249862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.74226 +/- 0.00811531 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.74226 @ 95%CL (1 toyMC)
median expected limit: r < 4.74226 @ 95%CL (1 toyMC)
   68% expected band : 4.74226 < r < 4.74226
   95% expected band : 4.74226 < r < 4.74226
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -698639310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.58723 +/- 0.00654469 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.58723 @ 95%CL (1 toyMC)
median expected limit: r < 3.58723 @ 95%CL (1 toyMC)
   68% expected band : 3.58723 < r < 3.58723
   95% expected band : 3.58723 < r < 3.58723
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1859015812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.71297 +/- 0.00840036 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 6.71297 @ 95%CL (1 toyMC)
median expected limit: r < 6.71297 @ 95%CL (1 toyMC)
   68% expected band : 6.71297 < r < 6.71297
   95% expected band : 6.71297 < r < 6.71297
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1103447329
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18981 +/- 0.00626574 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.18981 @ 95%CL (1 toyMC)
median expected limit: r < 3.18981 @ 95%CL (1 toyMC)
   68% expected band : 3.18981 < r < 3.18981
   95% expected band : 3.18981 < r < 3.18981
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 191705014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73392 +/- 0.00750375 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.73392 @ 95%CL (1 toyMC)
median expected limit: r < 4.73392 @ 95%CL (1 toyMC)
   68% expected band : 4.73392 < r < 4.73392
   95% expected band : 4.73392 < r < 4.73392
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1286150878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9243 +/- 0.00717941 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.9243 @ 95%CL (1 toyMC)
median expected limit: r < 3.9243 @ 95%CL (1 toyMC)
   68% expected band : 3.9243 < r < 3.9243
   95% expected band : 3.9243 < r < 3.9243
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 262414724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.67898 +/- 0.00873272 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.67898 @ 95%CL (1 toyMC)
median expected limit: r < 6.67898 @ 95%CL (1 toyMC)
   68% expected band : 6.67898 < r < 6.67898
   95% expected band : 6.67898 < r < 6.67898
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1988505202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.4805 +/- 0.00865228 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.4805 @ 95%CL (1 toyMC)
median expected limit: r < 5.4805 @ 95%CL (1 toyMC)
   68% expected band : 5.4805 < r < 5.4805
   95% expected band : 5.4805 < r < 5.4805
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -512854403
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.06403 +/- 0.00632381 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.06403 @ 95%CL (1 toyMC)
median expected limit: r < 4.06403 @ 95%CL (1 toyMC)
   68% expected band : 4.06403 < r < 4.06403
   95% expected band : 4.06403 < r < 4.06403
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1922768192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82965 +/- 0.00617929 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.82965 @ 95%CL (1 toyMC)
median expected limit: r < 2.82965 @ 95%CL (1 toyMC)
   68% expected band : 2.82965 < r < 2.82965
   95% expected band : 2.82965 < r < 2.82965
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1290649856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.42981 +/- 0.00801009 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.42981 @ 95%CL (1 toyMC)
median expected limit: r < 5.42981 @ 95%CL (1 toyMC)
   68% expected band : 5.42981 < r < 5.42981
   95% expected band : 5.42981 < r < 5.42981
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1714181006
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.69884 +/- 0.00828264 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.69884 @ 95%CL (1 toyMC)
median expected limit: r < 6.69884 @ 95%CL (1 toyMC)
   68% expected band : 6.69884 < r < 6.69884
   95% expected band : 6.69884 < r < 6.69884
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -147860825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11548 +/- 0.00926894 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.11548 @ 95%CL (1 toyMC)
median expected limit: r < 5.11548 @ 95%CL (1 toyMC)
   68% expected band : 5.11548 < r < 5.11548
   95% expected band : 5.11548 < r < 5.11548
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1028394625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1848 +/- 0.00966724 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.1848 @ 95%CL (1 toyMC)
median expected limit: r < 10.1848 @ 95%CL (1 toyMC)
   68% expected band : 10.1848 < r < 10.1848
   95% expected band : 10.1848 < r < 10.1848
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 323266373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.14141 +/- 0.00892661 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.14141 @ 95%CL (1 toyMC)
median expected limit: r < 6.14141 @ 95%CL (1 toyMC)
   68% expected band : 6.14141 < r < 6.14141
   95% expected band : 6.14141 < r < 6.14141
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -291356595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.35791 +/- 0.00808037 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.35791 @ 95%CL (1 toyMC)
median expected limit: r < 6.35791 @ 95%CL (1 toyMC)
   68% expected band : 6.35791 < r < 6.35791
   95% expected band : 6.35791 < r < 6.35791
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -319920358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.25242 +/- 0.00694041 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.25242 @ 95%CL (1 toyMC)
median expected limit: r < 5.25242 @ 95%CL (1 toyMC)
   68% expected band : 5.25242 < r < 5.25242
   95% expected band : 5.25242 < r < 5.25242
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1903874327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.87255 +/- 0.00736845 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 4.87255 @ 95%CL (1 toyMC)
median expected limit: r < 4.87255 @ 95%CL (1 toyMC)
   68% expected band : 4.87255 < r < 4.87255
   95% expected band : 4.87255 < r < 4.87255
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1499902132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.4721 +/- 0.00546071 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.4721 @ 95%CL (1 toyMC)
median expected limit: r < 3.4721 @ 95%CL (1 toyMC)
   68% expected band : 3.4721 < r < 3.4721
   95% expected band : 3.4721 < r < 3.4721
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -220328343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.80209 +/- 0.0113362 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.80209 @ 95%CL (1 toyMC)
median expected limit: r < 8.80209 @ 95%CL (1 toyMC)
   68% expected band : 8.80209 < r < 8.80209
   95% expected band : 8.80209 < r < 8.80209
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1632447322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.68336 +/- 0.00928713 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.68336 @ 95%CL (1 toyMC)
median expected limit: r < 6.68336 @ 95%CL (1 toyMC)
   68% expected band : 6.68336 < r < 6.68336
   95% expected band : 6.68336 < r < 6.68336
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1262747022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49831 +/- 0.00686337 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.49831 @ 95%CL (1 toyMC)
median expected limit: r < 3.49831 @ 95%CL (1 toyMC)
   68% expected band : 3.49831 < r < 3.49831
   95% expected band : 3.49831 < r < 3.49831
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1092908756
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.5482 +/- 0.00688843 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.5482 @ 95%CL (1 toyMC)
median expected limit: r < 5.5482 @ 95%CL (1 toyMC)
   68% expected band : 5.5482 < r < 5.5482
   95% expected band : 5.5482 < r < 5.5482
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2121750170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.25546 +/- 0.00655558 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.25546 @ 95%CL (1 toyMC)
median expected limit: r < 5.25546 @ 95%CL (1 toyMC)
   68% expected band : 5.25546 < r < 5.25546
   95% expected band : 5.25546 < r < 5.25546
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1834822656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.99865 +/- 0.00626413 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.99865 @ 95%CL (1 toyMC)
median expected limit: r < 2.99865 @ 95%CL (1 toyMC)
   68% expected band : 2.99865 < r < 2.99865
   95% expected band : 2.99865 < r < 2.99865
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -149805349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.00249 +/- 0.0056229 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.00249 @ 95%CL (1 toyMC)
median expected limit: r < 3.00249 @ 95%CL (1 toyMC)
   68% expected band : 3.00249 < r < 3.00249
   95% expected band : 3.00249 < r < 3.00249
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1819604680
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.28424 +/- 0.00891561 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.28424 @ 95%CL (1 toyMC)
median expected limit: r < 6.28424 @ 95%CL (1 toyMC)
   68% expected band : 6.28424 < r < 6.28424
   95% expected band : 6.28424 < r < 6.28424
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -240836721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.90278 +/- 0.0059549 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.90278 @ 95%CL (1 toyMC)
median expected limit: r < 3.90278 @ 95%CL (1 toyMC)
   68% expected band : 3.90278 < r < 3.90278
   95% expected band : 3.90278 < r < 3.90278
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1468665900
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.43289 +/- 0.0058114 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.43289 @ 95%CL (1 toyMC)
median expected limit: r < 3.43289 @ 95%CL (1 toyMC)
   68% expected band : 3.43289 < r < 3.43289
   95% expected band : 3.43289 < r < 3.43289
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 126275190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.32325 +/- 0.00578675 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.32325 @ 95%CL (1 toyMC)
median expected limit: r < 3.32325 @ 95%CL (1 toyMC)
   68% expected band : 3.32325 < r < 3.32325
   95% expected band : 3.32325 < r < 3.32325
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1970326930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.83988 +/- 0.0064681 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.83988 @ 95%CL (1 toyMC)
median expected limit: r < 2.83988 @ 95%CL (1 toyMC)
   68% expected band : 2.83988 < r < 2.83988
   95% expected band : 2.83988 < r < 2.83988
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 162953054
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.50183 +/- 0.00915555 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.50183 @ 95%CL (1 toyMC)
median expected limit: r < 9.50183 @ 95%CL (1 toyMC)
   68% expected band : 9.50183 < r < 9.50183
   95% expected band : 9.50183 < r < 9.50183
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 994980327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.4667 +/- 0.00948194 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.4667 @ 95%CL (1 toyMC)
median expected limit: r < 7.4667 @ 95%CL (1 toyMC)
   68% expected band : 7.4667 < r < 7.4667
   95% expected band : 7.4667 < r < 7.4667
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 45485473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.08322 +/- 0.00661574 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.08322 @ 95%CL (1 toyMC)
median expected limit: r < 4.08322 @ 95%CL (1 toyMC)
   68% expected band : 4.08322 < r < 4.08322
   95% expected band : 4.08322 < r < 4.08322
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -38801504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.57975 +/- 0.00838417 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.57975 @ 95%CL (1 toyMC)
median expected limit: r < 6.57975 @ 95%CL (1 toyMC)
   68% expected band : 6.57975 < r < 6.57975
   95% expected band : 6.57975 < r < 6.57975
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -281511848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.40856 +/- 0.00893587 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.40856 @ 95%CL (1 toyMC)
median expected limit: r < 5.40856 @ 95%CL (1 toyMC)
   68% expected band : 5.40856 < r < 5.40856
   95% expected band : 5.40856 < r < 5.40856
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -272611296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88414 +/- 0.00595584 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.88414 @ 95%CL (1 toyMC)
median expected limit: r < 2.88414 @ 95%CL (1 toyMC)
   68% expected band : 2.88414 < r < 2.88414
   95% expected band : 2.88414 < r < 2.88414
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1396796188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.32783 +/- 0.0104179 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 7.32783 @ 95%CL (1 toyMC)
median expected limit: r < 7.32783 @ 95%CL (1 toyMC)
   68% expected band : 7.32783 < r < 7.32783
   95% expected band : 7.32783 < r < 7.32783
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 321064628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.78581 +/- 0.00555929 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.78581 @ 95%CL (1 toyMC)
median expected limit: r < 3.78581 @ 95%CL (1 toyMC)
   68% expected band : 3.78581 < r < 3.78581
   95% expected band : 3.78581 < r < 3.78581
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -949771415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.5097 +/- 0.00696446 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.5097 @ 95%CL (1 toyMC)
median expected limit: r < 3.5097 @ 95%CL (1 toyMC)
   68% expected band : 3.5097 < r < 3.5097
   95% expected band : 3.5097 < r < 3.5097
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 287501530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.33059 +/- 0.00899822 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.33059 @ 95%CL (1 toyMC)
median expected limit: r < 5.33059 @ 95%CL (1 toyMC)
   68% expected band : 5.33059 < r < 5.33059
   95% expected band : 5.33059 < r < 5.33059
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -778939679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.1456 +/- 0.0067468 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.1456 @ 95%CL (1 toyMC)
median expected limit: r < 6.1456 @ 95%CL (1 toyMC)
   68% expected band : 6.1456 < r < 6.1456
   95% expected band : 6.1456 < r < 6.1456
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -653637879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.24303 +/- 0.00666652 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.24303 @ 95%CL (1 toyMC)
median expected limit: r < 4.24303 @ 95%CL (1 toyMC)
   68% expected band : 4.24303 < r < 4.24303
   95% expected band : 4.24303 < r < 4.24303
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1325891573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.72852 +/- 0.0074006 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.72852 @ 95%CL (1 toyMC)
median expected limit: r < 6.72852 @ 95%CL (1 toyMC)
   68% expected band : 6.72852 < r < 6.72852
   95% expected band : 6.72852 < r < 6.72852
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1919594353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11809 +/- 0.00667956 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.11809 @ 95%CL (1 toyMC)
median expected limit: r < 5.11809 @ 95%CL (1 toyMC)
   68% expected band : 5.11809 < r < 5.11809
   95% expected band : 5.11809 < r < 5.11809
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -62307074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.05631 +/- 0.00628161 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.05631 @ 95%CL (1 toyMC)
median expected limit: r < 4.05631 @ 95%CL (1 toyMC)
   68% expected band : 4.05631 < r < 4.05631
   95% expected band : 4.05631 < r < 4.05631
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1076475399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.27294 +/- 0.00738209 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.27294 @ 95%CL (1 toyMC)
median expected limit: r < 5.27294 @ 95%CL (1 toyMC)
   68% expected band : 5.27294 < r < 5.27294
   95% expected band : 5.27294 < r < 5.27294
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1320128985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.32144 +/- 0.00598571 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.32144 @ 95%CL (1 toyMC)
median expected limit: r < 3.32144 @ 95%CL (1 toyMC)
   68% expected band : 3.32144 < r < 3.32144
   95% expected band : 3.32144 < r < 3.32144
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2063325060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.38201 +/- 0.00588448 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.38201 @ 95%CL (1 toyMC)
median expected limit: r < 2.38201 @ 95%CL (1 toyMC)
   68% expected band : 2.38201 < r < 2.38201
   95% expected band : 2.38201 < r < 2.38201
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1767222363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56243 +/- 0.00501225 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.56243 @ 95%CL (1 toyMC)
median expected limit: r < 3.56243 @ 95%CL (1 toyMC)
   68% expected band : 3.56243 < r < 3.56243
   95% expected band : 3.56243 < r < 3.56243
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -76351211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.59455 +/- 0.00769091 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.59455 @ 95%CL (1 toyMC)
median expected limit: r < 5.59455 @ 95%CL (1 toyMC)
   68% expected band : 5.59455 < r < 5.59455
   95% expected band : 5.59455 < r < 5.59455
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1076475399.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1090044470.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-110328825.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1124906537.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1258728216.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1262747022.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1282921259.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1290649856.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1320128985.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1338292158.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1468665900.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-147860825.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-149805349.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1499902132.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1537108202.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1708470078.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1714181006.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1723071159.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1859015812.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1891346007.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1895176493.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1914599384.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1919594353.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1919789349.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1961029709.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-197043335.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-198863497.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-2063325060.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2098338390.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-220328343.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-240836721.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-272611296.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-281511848.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-291356595.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-319920358.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-333042471.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-337258190.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-38801504.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-512854403.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-529889673.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-600732986.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-62307074.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-644610896.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-653637879.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-698639310.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-721625738.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-76351211.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-778939679.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-825249862.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-94345861.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-949771415.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-950260274.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1028394625.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1092908756.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1103447329.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1186781615.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.12454075.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.126275190.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1273747961.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1286150878.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1325891573.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.132852234.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1396796188.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1399416093.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.142676190.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1462573416.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1526528299.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1626388078.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.162953054.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1632447322.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1639531581.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1672795525.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1732218270.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1760281950.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1767222363.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1819604680.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1834822656.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1903874327.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.191705014.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.1922768192.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.1970326930.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.1988505202.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.2008529648.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.2121750170.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.262414724.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.287501530.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.321064628.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.323266373.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.337260079.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.35834893.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.421495101.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.45485473.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.533089232.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.537796181.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.55591202.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.636176014.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.686337295.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.700050516.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.860927743.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.994980327.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2015562311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.14402 +/- 0.00643291 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.14402 @ 95%CL (1 toyMC)
median expected limit: r < 3.14402 @ 95%CL (1 toyMC)
   68% expected band : 3.14402 < r < 3.14402
   95% expected band : 3.14402 < r < 3.14402
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1920553962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.41844 +/- 0.0101978 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.41844 @ 95%CL (1 toyMC)
median expected limit: r < 6.41844 @ 95%CL (1 toyMC)
   68% expected band : 6.41844 < r < 6.41844
   95% expected band : 6.41844 < r < 6.41844
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 606343493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06603 +/- 0.00643508 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.06603 @ 95%CL (1 toyMC)
median expected limit: r < 3.06603 @ 95%CL (1 toyMC)
   68% expected band : 3.06603 < r < 3.06603
   95% expected band : 3.06603 < r < 3.06603
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1072119888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.42176 +/- 0.00776273 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.42176 @ 95%CL (1 toyMC)
median expected limit: r < 7.42176 @ 95%CL (1 toyMC)
   68% expected band : 7.42176 < r < 7.42176
   95% expected band : 7.42176 < r < 7.42176
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1487204592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.65013 +/- 0.00844478 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.65013 @ 95%CL (1 toyMC)
median expected limit: r < 7.65013 @ 95%CL (1 toyMC)
   68% expected band : 7.65013 < r < 7.65013
   95% expected band : 7.65013 < r < 7.65013
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680200414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8435 +/- 0.009487 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.8435 @ 95%CL (1 toyMC)
median expected limit: r < 10.8435 @ 95%CL (1 toyMC)
   68% expected band : 10.8435 < r < 10.8435
   95% expected band : 10.8435 < r < 10.8435
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 97214848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.99484 +/- 0.0108958 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.99484 @ 95%CL (1 toyMC)
median expected limit: r < 6.99484 @ 95%CL (1 toyMC)
   68% expected band : 6.99484 < r < 6.99484
   95% expected band : 6.99484 < r < 6.99484
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 422460332
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.97265 +/- 0.00770589 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.97265 @ 95%CL (1 toyMC)
median expected limit: r < 4.97265 @ 95%CL (1 toyMC)
   68% expected band : 4.97265 < r < 4.97265
   95% expected band : 4.97265 < r < 4.97265
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 798712910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.08657 +/- 0.0109666 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.08657 @ 95%CL (1 toyMC)
median expected limit: r < 7.08657 @ 95%CL (1 toyMC)
   68% expected band : 7.08657 < r < 7.08657
   95% expected band : 7.08657 < r < 7.08657
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1594156671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.83575 +/- 0.00796155 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.83575 @ 95%CL (1 toyMC)
median expected limit: r < 4.83575 @ 95%CL (1 toyMC)
   68% expected band : 4.83575 < r < 4.83575
   95% expected band : 4.83575 < r < 4.83575
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1258903206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.76032 +/- 0.00815808 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.76032 @ 95%CL (1 toyMC)
median expected limit: r < 4.76032 @ 95%CL (1 toyMC)
   68% expected band : 4.76032 < r < 4.76032
   95% expected band : 4.76032 < r < 4.76032
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1069755596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.42465 +/- 0.00731112 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.42465 @ 95%CL (1 toyMC)
median expected limit: r < 4.42465 @ 95%CL (1 toyMC)
   68% expected band : 4.42465 < r < 4.42465
   95% expected band : 4.42465 < r < 4.42465
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1877812724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.81014 +/- 0.0071738 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.81014 @ 95%CL (1 toyMC)
median expected limit: r < 4.81014 @ 95%CL (1 toyMC)
   68% expected band : 4.81014 < r < 4.81014
   95% expected band : 4.81014 < r < 4.81014
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 98002908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.7782 +/- 0.00838906 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.7782 @ 95%CL (1 toyMC)
median expected limit: r < 5.7782 @ 95%CL (1 toyMC)
   68% expected band : 5.7782 < r < 5.7782
   95% expected band : 5.7782 < r < 5.7782
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1385778444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.41914 +/- 0.00999981 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.41914 @ 95%CL (1 toyMC)
median expected limit: r < 6.41914 @ 95%CL (1 toyMC)
   68% expected band : 6.41914 < r < 6.41914
   95% expected band : 6.41914 < r < 6.41914
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 353508602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.50719 +/- 0.0110641 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.50719 @ 95%CL (1 toyMC)
median expected limit: r < 6.50719 @ 95%CL (1 toyMC)
   68% expected band : 6.50719 < r < 6.50719
   95% expected band : 6.50719 < r < 6.50719
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 326293101
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3104 +/- 0.0059044 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.3104 @ 95%CL (1 toyMC)
median expected limit: r < 3.3104 @ 95%CL (1 toyMC)
   68% expected band : 3.3104 < r < 3.3104
   95% expected band : 3.3104 < r < 3.3104
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 627204150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.72802 +/- 0.00612502 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.72802 @ 95%CL (1 toyMC)
median expected limit: r < 4.72802 @ 95%CL (1 toyMC)
   68% expected band : 4.72802 < r < 4.72802
   95% expected band : 4.72802 < r < 4.72802
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -979605730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.95892 +/- 0.00708142 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.95892 @ 95%CL (1 toyMC)
median expected limit: r < 4.95892 @ 95%CL (1 toyMC)
   68% expected band : 4.95892 < r < 4.95892
   95% expected band : 4.95892 < r < 4.95892
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1760949397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.00127 +/- 0.00994023 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.00127 @ 95%CL (1 toyMC)
median expected limit: r < 6.00127 @ 95%CL (1 toyMC)
   68% expected band : 6.00127 < r < 6.00127
   95% expected band : 6.00127 < r < 6.00127
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -297122236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.76803 +/- 0.00800783 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.76803 @ 95%CL (1 toyMC)
median expected limit: r < 3.76803 @ 95%CL (1 toyMC)
   68% expected band : 3.76803 < r < 3.76803
   95% expected band : 3.76803 < r < 3.76803
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 123146089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.04597 +/- 0.00894685 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.04597 @ 95%CL (1 toyMC)
median expected limit: r < 6.04597 @ 95%CL (1 toyMC)
   68% expected band : 6.04597 < r < 6.04597
   95% expected band : 6.04597 < r < 6.04597
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 963069835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.02884 +/- 0.00823128 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.02884 @ 95%CL (1 toyMC)
median expected limit: r < 4.02884 @ 95%CL (1 toyMC)
   68% expected band : 4.02884 < r < 4.02884
   95% expected band : 4.02884 < r < 4.02884
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 5031108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.31457 +/- 0.00977802 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.31457 @ 95%CL (1 toyMC)
median expected limit: r < 5.31457 @ 95%CL (1 toyMC)
   68% expected band : 5.31457 < r < 5.31457
   95% expected band : 5.31457 < r < 5.31457
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -763646285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.26943 +/- 0.00773157 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.26943 @ 95%CL (1 toyMC)
median expected limit: r < 4.26943 @ 95%CL (1 toyMC)
   68% expected band : 4.26943 < r < 4.26943
   95% expected band : 4.26943 < r < 4.26943
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 281932925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.53487 +/- 0.00795796 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.53487 @ 95%CL (1 toyMC)
median expected limit: r < 4.53487 @ 95%CL (1 toyMC)
   68% expected band : 4.53487 < r < 4.53487
   95% expected band : 4.53487 < r < 4.53487
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1364833234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.87889 +/- 0.00808689 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.87889 @ 95%CL (1 toyMC)
median expected limit: r < 6.87889 @ 95%CL (1 toyMC)
   68% expected band : 6.87889 < r < 6.87889
   95% expected band : 6.87889 < r < 6.87889
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -604462005
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.90548 +/- 0.0102402 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 6.90548 @ 95%CL (1 toyMC)
median expected limit: r < 6.90548 @ 95%CL (1 toyMC)
   68% expected band : 6.90548 < r < 6.90548
   95% expected band : 6.90548 < r < 6.90548
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1187727337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4928 +/- 0.0103282 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.4928 @ 95%CL (1 toyMC)
median expected limit: r < 10.4928 @ 95%CL (1 toyMC)
   68% expected band : 10.4928 < r < 10.4928
   95% expected band : 10.4928 < r < 10.4928
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1444786081
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.46395 +/- 0.00740278 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.46395 @ 95%CL (1 toyMC)
median expected limit: r < 4.46395 @ 95%CL (1 toyMC)
   68% expected band : 4.46395 < r < 4.46395
   95% expected band : 4.46395 < r < 4.46395
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 752418242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.71327 +/- 0.0113669 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.71327 @ 95%CL (1 toyMC)
median expected limit: r < 8.71327 @ 95%CL (1 toyMC)
   68% expected band : 8.71327 < r < 8.71327
   95% expected band : 8.71327 < r < 8.71327
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1402757026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.57862 +/- 0.00746913 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.57862 @ 95%CL (1 toyMC)
median expected limit: r < 5.57862 @ 95%CL (1 toyMC)
   68% expected band : 5.57862 < r < 5.57862
   95% expected band : 5.57862 < r < 5.57862
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1121177989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.92494 +/- 0.00807402 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.92494 @ 95%CL (1 toyMC)
median expected limit: r < 3.92494 @ 95%CL (1 toyMC)
   68% expected band : 3.92494 < r < 3.92494
   95% expected band : 3.92494 < r < 3.92494
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1824557215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.42069 +/- 0.0078676 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.42069 @ 95%CL (1 toyMC)
median expected limit: r < 4.42069 @ 95%CL (1 toyMC)
   68% expected band : 4.42069 < r < 4.42069
   95% expected band : 4.42069 < r < 4.42069
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2145895974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.19879 +/- 0.00797148 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.19879 @ 95%CL (1 toyMC)
median expected limit: r < 7.19879 @ 95%CL (1 toyMC)
   68% expected band : 7.19879 < r < 7.19879
   95% expected band : 7.19879 < r < 7.19879
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1570852802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.38142 +/- 0.00710184 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.38142 @ 95%CL (1 toyMC)
median expected limit: r < 4.38142 @ 95%CL (1 toyMC)
   68% expected band : 4.38142 < r < 4.38142
   95% expected band : 4.38142 < r < 4.38142
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1905355137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.66123 +/- 0.00818279 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.66123 @ 95%CL (1 toyMC)
median expected limit: r < 4.66123 @ 95%CL (1 toyMC)
   68% expected band : 4.66123 < r < 4.66123
   95% expected band : 4.66123 < r < 4.66123
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1353827349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.89807 +/- 0.00735845 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.89807 @ 95%CL (1 toyMC)
median expected limit: r < 4.89807 @ 95%CL (1 toyMC)
   68% expected band : 4.89807 < r < 4.89807
   95% expected band : 4.89807 < r < 4.89807
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1534797360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.97774 +/- 0.00829115 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.97774 @ 95%CL (1 toyMC)
median expected limit: r < 5.97774 @ 95%CL (1 toyMC)
   68% expected band : 5.97774 < r < 5.97774
   95% expected band : 5.97774 < r < 5.97774
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1991596616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.33333 +/- 0.00914908 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.33333 @ 95%CL (1 toyMC)
median expected limit: r < 6.33333 @ 95%CL (1 toyMC)
   68% expected band : 6.33333 < r < 6.33333
   95% expected band : 6.33333 < r < 6.33333
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -900468832
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.83996 +/- 0.00808636 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.83996 @ 95%CL (1 toyMC)
median expected limit: r < 5.83996 @ 95%CL (1 toyMC)
   68% expected band : 5.83996 < r < 5.83996
   95% expected band : 5.83996 < r < 5.83996
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 673822982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.33159 +/- 0.00817305 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.33159 @ 95%CL (1 toyMC)
median expected limit: r < 4.33159 @ 95%CL (1 toyMC)
   68% expected band : 4.33159 < r < 4.33159
   95% expected band : 4.33159 < r < 4.33159
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2050404897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.27032 +/- 0.00673753 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.27032 @ 95%CL (1 toyMC)
median expected limit: r < 5.27032 @ 95%CL (1 toyMC)
   68% expected band : 5.27032 < r < 5.27032
   95% expected band : 5.27032 < r < 5.27032
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 601976916
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.71727 +/- 0.00903699 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.71727 @ 95%CL (1 toyMC)
median expected limit: r < 5.71727 @ 95%CL (1 toyMC)
   68% expected band : 5.71727 < r < 5.71727
   95% expected band : 5.71727 < r < 5.71727
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 404532393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.78418 +/- 0.0067498 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.78418 @ 95%CL (1 toyMC)
median expected limit: r < 3.78418 @ 95%CL (1 toyMC)
   68% expected band : 3.78418 < r < 3.78418
   95% expected band : 3.78418 < r < 3.78418
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1608359970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.53461 +/- 0.008052 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.53461 @ 95%CL (1 toyMC)
median expected limit: r < 5.53461 @ 95%CL (1 toyMC)
   68% expected band : 5.53461 < r < 5.53461
   95% expected band : 5.53461 < r < 5.53461
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -476934163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.21483 +/- 0.00952809 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.21483 @ 95%CL (1 toyMC)
median expected limit: r < 6.21483 @ 95%CL (1 toyMC)
   68% expected band : 6.21483 < r < 6.21483
   95% expected band : 6.21483 < r < 6.21483
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -846234779
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.97757 +/- 0.00843742 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.97757 @ 95%CL (1 toyMC)
median expected limit: r < 5.97757 @ 95%CL (1 toyMC)
   68% expected band : 5.97757 < r < 5.97757
   95% expected band : 5.97757 < r < 5.97757
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 181895387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.71416 +/- 0.00925214 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.71416 @ 95%CL (1 toyMC)
median expected limit: r < 7.71416 @ 95%CL (1 toyMC)
   68% expected band : 7.71416 < r < 7.71416
   95% expected band : 7.71416 < r < 7.71416
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1473777311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.34643 +/- 0.0109266 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.34643 @ 95%CL (1 toyMC)
median expected limit: r < 7.34643 @ 95%CL (1 toyMC)
   68% expected band : 7.34643 < r < 7.34643
   95% expected band : 7.34643 < r < 7.34643
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 669905302
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.65799 +/- 0.0082021 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.65799 @ 95%CL (1 toyMC)
median expected limit: r < 4.65799 @ 95%CL (1 toyMC)
   68% expected band : 4.65799 < r < 4.65799
   95% expected band : 4.65799 < r < 4.65799
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1628803319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.23358 +/- 0.00801621 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.23358 @ 95%CL (1 toyMC)
median expected limit: r < 6.23358 @ 95%CL (1 toyMC)
   68% expected band : 6.23358 < r < 6.23358
   95% expected band : 6.23358 < r < 6.23358
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 877300401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.03336 +/- 0.0070526 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.03336 @ 95%CL (1 toyMC)
median expected limit: r < 5.03336 @ 95%CL (1 toyMC)
   68% expected band : 5.03336 < r < 5.03336
   95% expected band : 5.03336 < r < 5.03336
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -358380791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.30611 +/- 0.00973862 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 7.30611 @ 95%CL (1 toyMC)
median expected limit: r < 7.30611 @ 95%CL (1 toyMC)
   68% expected band : 7.30611 < r < 7.30611
   95% expected band : 7.30611 < r < 7.30611
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1339061220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.83535 +/- 0.00682303 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.83535 @ 95%CL (1 toyMC)
median expected limit: r < 3.83535 @ 95%CL (1 toyMC)
   68% expected band : 3.83535 < r < 3.83535
   95% expected band : 3.83535 < r < 3.83535
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1853757008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.21391 +/- 0.00778928 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.21391 @ 95%CL (1 toyMC)
median expected limit: r < 3.21391 @ 95%CL (1 toyMC)
   68% expected band : 3.21391 < r < 3.21391
   95% expected band : 3.21391 < r < 3.21391
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2068286890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.22343 +/- 0.00874806 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.22343 @ 95%CL (1 toyMC)
median expected limit: r < 5.22343 @ 95%CL (1 toyMC)
   68% expected band : 5.22343 < r < 5.22343
   95% expected band : 5.22343 < r < 5.22343
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 60164567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.32233 +/- 0.00778798 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.32233 @ 95%CL (1 toyMC)
median expected limit: r < 4.32233 @ 95%CL (1 toyMC)
   68% expected band : 4.32233 < r < 4.32233
   95% expected band : 4.32233 < r < 4.32233
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 90283372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.46723 +/- 0.00919136 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.46723 @ 95%CL (1 toyMC)
median expected limit: r < 5.46723 @ 95%CL (1 toyMC)
   68% expected band : 5.46723 < r < 5.46723
   95% expected band : 5.46723 < r < 5.46723
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367419640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.91438 +/- 0.0095752 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.91438 @ 95%CL (1 toyMC)
median expected limit: r < 6.91438 @ 95%CL (1 toyMC)
   68% expected band : 6.91438 < r < 6.91438
   95% expected band : 6.91438 < r < 6.91438
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1386406315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.33432 +/- 0.00939488 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.33432 @ 95%CL (1 toyMC)
median expected limit: r < 7.33432 @ 95%CL (1 toyMC)
   68% expected band : 7.33432 < r < 7.33432
   95% expected band : 7.33432 < r < 7.33432
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 993959255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.31494 +/- 0.00714703 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.31494 @ 95%CL (1 toyMC)
median expected limit: r < 4.31494 @ 95%CL (1 toyMC)
   68% expected band : 4.31494 < r < 4.31494
   95% expected band : 4.31494 < r < 4.31494
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2105585432
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.63829 +/- 0.00919142 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.63829 @ 95%CL (1 toyMC)
median expected limit: r < 6.63829 @ 95%CL (1 toyMC)
   68% expected band : 6.63829 < r < 6.63829
   95% expected band : 6.63829 < r < 6.63829
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -815970533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99775 +/- 0.00942012 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.99775 @ 95%CL (1 toyMC)
median expected limit: r < 5.99775 @ 95%CL (1 toyMC)
   68% expected band : 5.99775 < r < 5.99775
   95% expected band : 5.99775 < r < 5.99775
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -348525223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.12078 +/- 0.00825614 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.12078 @ 95%CL (1 toyMC)
median expected limit: r < 7.12078 @ 95%CL (1 toyMC)
   68% expected band : 7.12078 < r < 7.12078
   95% expected band : 7.12078 < r < 7.12078
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -847748218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.05606 +/- 0.0109731 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.05606 @ 95%CL (1 toyMC)
median expected limit: r < 7.05606 @ 95%CL (1 toyMC)
   68% expected band : 7.05606 < r < 7.05606
   95% expected band : 7.05606 < r < 7.05606
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1295047421
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.89159 +/- 0.00948093 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.89159 @ 95%CL (1 toyMC)
median expected limit: r < 5.89159 @ 95%CL (1 toyMC)
   68% expected band : 5.89159 < r < 5.89159
   95% expected band : 5.89159 < r < 5.89159
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1447430121
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.91615 +/- 0.0102832 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.91615 @ 95%CL (1 toyMC)
median expected limit: r < 6.91615 @ 95%CL (1 toyMC)
   68% expected band : 6.91615 < r < 6.91615
   95% expected band : 6.91615 < r < 6.91615
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1070943613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.18756 +/- 0.00928918 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.18756 @ 95%CL (1 toyMC)
median expected limit: r < 7.18756 @ 95%CL (1 toyMC)
   68% expected band : 7.18756 < r < 7.18756
   95% expected band : 7.18756 < r < 7.18756
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1141662747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.59397 +/- 0.00731311 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.59397 @ 95%CL (1 toyMC)
median expected limit: r < 3.59397 @ 95%CL (1 toyMC)
   68% expected band : 3.59397 < r < 3.59397
   95% expected band : 3.59397 < r < 3.59397
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -779195513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.83889 +/- 0.0100606 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.83889 @ 95%CL (1 toyMC)
median expected limit: r < 5.83889 @ 95%CL (1 toyMC)
   68% expected band : 5.83889 < r < 5.83889
   95% expected band : 5.83889 < r < 5.83889
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 639907334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.76348 +/- 0.00523954 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.76348 @ 95%CL (1 toyMC)
median expected limit: r < 3.76348 @ 95%CL (1 toyMC)
   68% expected band : 3.76348 < r < 3.76348
   95% expected band : 3.76348 < r < 3.76348
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 123195870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.74362 +/- 0.0068394 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.74362 @ 95%CL (1 toyMC)
median expected limit: r < 3.74362 @ 95%CL (1 toyMC)
   68% expected band : 3.74362 < r < 3.74362
   95% expected band : 3.74362 < r < 3.74362
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 997786437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.80284 +/- 0.0101466 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.80284 @ 95%CL (1 toyMC)
median expected limit: r < 7.80284 @ 95%CL (1 toyMC)
   68% expected band : 7.80284 < r < 7.80284
   95% expected band : 7.80284 < r < 7.80284
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2053886021
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.85203 +/- 0.00764212 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.85203 @ 95%CL (1 toyMC)
median expected limit: r < 3.85203 @ 95%CL (1 toyMC)
   68% expected band : 3.85203 < r < 3.85203
   95% expected band : 3.85203 < r < 3.85203
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -921679105
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.79831 +/- 0.0081312 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.79831 @ 95%CL (1 toyMC)
median expected limit: r < 7.79831 @ 95%CL (1 toyMC)
   68% expected band : 7.79831 < r < 7.79831
   95% expected band : 7.79831 < r < 7.79831
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 592260350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.88372 +/- 0.00653916 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.88372 @ 95%CL (1 toyMC)
median expected limit: r < 3.88372 @ 95%CL (1 toyMC)
   68% expected band : 3.88372 < r < 3.88372
   95% expected band : 3.88372 < r < 3.88372
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1707676728
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.04769 +/- 0.0089793 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.04769 @ 95%CL (1 toyMC)
median expected limit: r < 5.04769 @ 95%CL (1 toyMC)
   68% expected band : 5.04769 < r < 5.04769
   95% expected band : 5.04769 < r < 5.04769
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 79445145
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.53269 +/- 0.00826019 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.53269 @ 95%CL (1 toyMC)
median expected limit: r < 5.53269 @ 95%CL (1 toyMC)
   68% expected band : 5.53269 < r < 5.53269
   95% expected band : 5.53269 < r < 5.53269
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1772797043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25571 +/- 0.00725922 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.25571 @ 95%CL (1 toyMC)
median expected limit: r < 3.25571 @ 95%CL (1 toyMC)
   68% expected band : 3.25571 < r < 3.25571
   95% expected band : 3.25571 < r < 3.25571
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -641001291
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.6695 +/- 0.00531696 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.6695 @ 95%CL (1 toyMC)
median expected limit: r < 3.6695 @ 95%CL (1 toyMC)
   68% expected band : 3.6695 < r < 3.6695
   95% expected band : 3.6695 < r < 3.6695
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1661181431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.91457 +/- 0.00825461 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.91457 @ 95%CL (1 toyMC)
median expected limit: r < 6.91457 @ 95%CL (1 toyMC)
   68% expected band : 6.91457 < r < 6.91457
   95% expected band : 6.91457 < r < 6.91457
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -830758692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.44953 +/- 0.00722355 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.44953 @ 95%CL (1 toyMC)
median expected limit: r < 3.44953 @ 95%CL (1 toyMC)
   68% expected band : 3.44953 < r < 3.44953
   95% expected band : 3.44953 < r < 3.44953
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -563962879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.834 +/- 0.0123893 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.834 @ 95%CL (1 toyMC)
median expected limit: r < 10.834 @ 95%CL (1 toyMC)
   68% expected band : 10.834 < r < 10.834
   95% expected band : 10.834 < r < 10.834
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 961020266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.23074 +/- 0.00862992 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.23074 @ 95%CL (1 toyMC)
median expected limit: r < 5.23074 @ 95%CL (1 toyMC)
   68% expected band : 5.23074 < r < 5.23074
   95% expected band : 5.23074 < r < 5.23074
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -872465211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.04636 +/- 0.00955948 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.04636 @ 95%CL (1 toyMC)
median expected limit: r < 5.04636 @ 95%CL (1 toyMC)
   68% expected band : 5.04636 < r < 5.04636
   95% expected band : 5.04636 < r < 5.04636
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 854398168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.79533 +/- 0.00705342 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.79533 @ 95%CL (1 toyMC)
median expected limit: r < 6.79533 @ 95%CL (1 toyMC)
   68% expected band : 6.79533 < r < 6.79533
   95% expected band : 6.79533 < r < 6.79533
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1541149168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.26533 +/- 0.00731272 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.26533 @ 95%CL (1 toyMC)
median expected limit: r < 4.26533 @ 95%CL (1 toyMC)
   68% expected band : 4.26533 < r < 4.26533
   95% expected band : 4.26533 < r < 4.26533
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -934480467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.80783 +/- 0.00730173 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.80783 @ 95%CL (1 toyMC)
median expected limit: r < 7.80783 @ 95%CL (1 toyMC)
   68% expected band : 7.80783 < r < 7.80783
   95% expected band : 7.80783 < r < 7.80783
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1226298805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.80363 +/- 0.0076898 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.80363 @ 95%CL (1 toyMC)
median expected limit: r < 4.80363 @ 95%CL (1 toyMC)
   68% expected band : 4.80363 < r < 4.80363
   95% expected band : 4.80363 < r < 4.80363
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 824390326
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.39099 +/- 0.012236 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.39099 @ 95%CL (1 toyMC)
median expected limit: r < 6.39099 @ 95%CL (1 toyMC)
   68% expected band : 6.39099 < r < 6.39099
   95% expected band : 6.39099 < r < 6.39099
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1770426455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.27417 +/- 0.00862993 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.27417 @ 95%CL (1 toyMC)
median expected limit: r < 5.27417 @ 95%CL (1 toyMC)
   68% expected band : 5.27417 < r < 5.27417
   95% expected band : 5.27417 < r < 5.27417
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1029057323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.34494 +/- 0.0107098 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.34494 @ 95%CL (1 toyMC)
median expected limit: r < 8.34494 @ 95%CL (1 toyMC)
   68% expected band : 8.34494 < r < 8.34494
   95% expected band : 8.34494 < r < 8.34494
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1966178793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.81791 +/- 0.00901676 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.81791 @ 95%CL (1 toyMC)
median expected limit: r < 6.81791 @ 95%CL (1 toyMC)
   68% expected band : 6.81791 < r < 6.81791
   95% expected band : 6.81791 < r < 6.81791
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1883790497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.47691 +/- 0.00796612 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.47691 @ 95%CL (1 toyMC)
median expected limit: r < 4.47691 @ 95%CL (1 toyMC)
   68% expected band : 4.47691 < r < 4.47691
   95% expected band : 4.47691 < r < 4.47691
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 331850206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1846 +/- 0.00628312 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.1846 @ 95%CL (1 toyMC)
median expected limit: r < 2.1846 @ 95%CL (1 toyMC)
   68% expected band : 2.1846 < r < 2.1846
   95% expected band : 2.1846 < r < 2.1846
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1572123198
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.09422 +/- 0.00961028 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.09422 @ 95%CL (1 toyMC)
median expected limit: r < 5.09422 @ 95%CL (1 toyMC)
   68% expected band : 5.09422 < r < 5.09422
   95% expected band : 5.09422 < r < 5.09422
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 249507130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50364 +/- 0.00917393 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.50364 @ 95%CL (1 toyMC)
median expected limit: r < 5.50364 @ 95%CL (1 toyMC)
   68% expected band : 5.50364 < r < 5.50364
   95% expected band : 5.50364 < r < 5.50364
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1196330490
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86616 +/- 0.00905052 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.86616 @ 95%CL (1 toyMC)
median expected limit: r < 4.86616 @ 95%CL (1 toyMC)
   68% expected band : 4.86616 < r < 4.86616
   95% expected band : 4.86616 < r < 4.86616
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 862618275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.3119 +/- 0.00903921 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.3119 @ 95%CL (1 toyMC)
median expected limit: r < 4.3119 @ 95%CL (1 toyMC)
   68% expected band : 4.3119 < r < 4.3119
   95% expected band : 4.3119 < r < 4.3119
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1029057323.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1121177989.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1187727337.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1196330490.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1226298805.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1258903206.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1295047421.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1386406315.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1402757026.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1487204592.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1608359970.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1707676728.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1770426455.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1772797043.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1824557215.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1853757008.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1877812724.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1905355137.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1991596616.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-2015562311.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-2050404897.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-2068286890.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-297122236.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-348525223.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-358380791.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-476934163.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-563962879.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-604462005.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-641001291.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-763646285.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-779195513.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-815970533.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-830758692.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-846234779.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-847748218.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-872465211.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-900468832.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-921679105.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-934480467.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-979605730.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.1069755596.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.1070943613.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.1072119888.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.1141662747.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.123146089.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.123195870.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1339061220.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1353827349.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1364833234.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1367419640.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1385778444.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1444786081.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1447430121.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1473777311.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1534797360.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1541149168.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1570852802.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1572123198.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1594156671.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1628803319.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1661181431.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1680200414.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1760949397.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.181895387.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1883790497.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1920553962.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1966178793.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.2053886021.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.2105585432.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.2145895974.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.249507130.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.281932925.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.326293101.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.331850206.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.353508602.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.404532393.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.422460332.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.5031108.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.592260350.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.60164567.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.601976916.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.606343493.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.627204150.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.639907334.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.669905302.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.673822982.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.752418242.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.79445145.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.798712910.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.824390326.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.854398168.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.862618275.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.877300401.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.90283372.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.961020266.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.963069835.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.97214848.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.98002908.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.993959255.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.997786437.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1565434831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.96198 +/- 0.00752658 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.96198 @ 95%CL (1 toyMC)
median expected limit: r < 5.96198 @ 95%CL (1 toyMC)
   68% expected band : 5.96198 < r < 5.96198
   95% expected band : 5.96198 < r < 5.96198
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -670314956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.24191 +/- 0.00657543 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.24191 @ 95%CL (1 toyMC)
median expected limit: r < 3.24191 @ 95%CL (1 toyMC)
   68% expected band : 3.24191 < r < 3.24191
   95% expected band : 3.24191 < r < 3.24191
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1417250806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.40716 +/- 0.00839869 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.40716 @ 95%CL (1 toyMC)
median expected limit: r < 6.40716 @ 95%CL (1 toyMC)
   68% expected band : 6.40716 < r < 6.40716
   95% expected band : 6.40716 < r < 6.40716
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -167849774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7587 +/- 0.01178 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.7587 @ 95%CL (1 toyMC)
median expected limit: r < 10.7587 @ 95%CL (1 toyMC)
   68% expected band : 10.7587 < r < 10.7587
   95% expected band : 10.7587 < r < 10.7587
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2024995304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.0644 +/- 0.0116153 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 9.0644 @ 95%CL (1 toyMC)
median expected limit: r < 9.0644 @ 95%CL (1 toyMC)
   68% expected band : 9.0644 < r < 9.0644
   95% expected band : 9.0644 < r < 9.0644
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2141983381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.90187 +/- 0.0103348 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.90187 @ 95%CL (1 toyMC)
median expected limit: r < 8.90187 @ 95%CL (1 toyMC)
   68% expected band : 8.90187 < r < 8.90187
   95% expected band : 8.90187 < r < 8.90187
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -466500468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.37266 +/- 0.00874706 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.37266 @ 95%CL (1 toyMC)
median expected limit: r < 4.37266 @ 95%CL (1 toyMC)
   68% expected band : 4.37266 < r < 4.37266
   95% expected band : 4.37266 < r < 4.37266
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 200190929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.59495 +/- 0.00823405 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.59495 @ 95%CL (1 toyMC)
median expected limit: r < 5.59495 @ 95%CL (1 toyMC)
   68% expected band : 5.59495 < r < 5.59495
   95% expected band : 5.59495 < r < 5.59495
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2073617637
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.88617 +/- 0.0105946 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.88617 @ 95%CL (1 toyMC)
median expected limit: r < 8.88617 @ 95%CL (1 toyMC)
   68% expected band : 8.88617 < r < 8.88617
   95% expected band : 8.88617 < r < 8.88617
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -246262171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73584 +/- 0.00711845 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.73584 @ 95%CL (1 toyMC)
median expected limit: r < 4.73584 @ 95%CL (1 toyMC)
   68% expected band : 4.73584 < r < 4.73584
   95% expected band : 4.73584 < r < 4.73584
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -653016675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10285 +/- 0.0108437 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.10285 @ 95%CL (1 toyMC)
median expected limit: r < 7.10285 @ 95%CL (1 toyMC)
   68% expected band : 7.10285 < r < 7.10285
   95% expected band : 7.10285 < r < 7.10285
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1431292859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.01813 +/- 0.0108441 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.01813 @ 95%CL (1 toyMC)
median expected limit: r < 8.01813 @ 95%CL (1 toyMC)
   68% expected band : 8.01813 < r < 8.01813
   95% expected band : 8.01813 < r < 8.01813
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -50200708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.02678 +/- 0.00843388 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.02678 @ 95%CL (1 toyMC)
median expected limit: r < 5.02678 @ 95%CL (1 toyMC)
   68% expected band : 5.02678 < r < 5.02678
   95% expected band : 5.02678 < r < 5.02678
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 13772071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.03297 +/- 0.0124314 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.03297 @ 95%CL (1 toyMC)
median expected limit: r < 9.03297 @ 95%CL (1 toyMC)
   68% expected band : 9.03297 < r < 9.03297
   95% expected band : 9.03297 < r < 9.03297
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 846409310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.47885 +/- 0.0106492 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.47885 @ 95%CL (1 toyMC)
median expected limit: r < 6.47885 @ 95%CL (1 toyMC)
   68% expected band : 6.47885 < r < 6.47885
   95% expected band : 6.47885 < r < 6.47885
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2136681031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.17453 +/- 0.0107347 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.17453 @ 95%CL (1 toyMC)
median expected limit: r < 8.17453 @ 95%CL (1 toyMC)
   68% expected band : 8.17453 < r < 8.17453
   95% expected band : 8.17453 < r < 8.17453
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 862066499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.12672 +/- 0.00920894 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.12672 @ 95%CL (1 toyMC)
median expected limit: r < 7.12672 @ 95%CL (1 toyMC)
   68% expected band : 7.12672 < r < 7.12672
   95% expected band : 7.12672 < r < 7.12672
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1405655837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.17085 +/- 0.00737197 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.17085 @ 95%CL (1 toyMC)
median expected limit: r < 4.17085 @ 95%CL (1 toyMC)
   68% expected band : 4.17085 < r < 4.17085
   95% expected band : 4.17085 < r < 4.17085
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -299756995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.35336 +/- 0.00726444 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.35336 @ 95%CL (1 toyMC)
median expected limit: r < 4.35336 @ 95%CL (1 toyMC)
   68% expected band : 4.35336 < r < 4.35336
   95% expected band : 4.35336 < r < 4.35336
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -560376859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.08812 +/- 0.009764 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.08812 @ 95%CL (1 toyMC)
median expected limit: r < 5.08812 @ 95%CL (1 toyMC)
   68% expected band : 5.08812 < r < 5.08812
   95% expected band : 5.08812 < r < 5.08812
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -870764399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.75666 +/- 0.0102186 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.75666 @ 95%CL (1 toyMC)
median expected limit: r < 7.75666 @ 95%CL (1 toyMC)
   68% expected band : 7.75666 < r < 7.75666
   95% expected band : 7.75666 < r < 7.75666
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 686890308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.7333 +/- 0.0108828 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.7333 @ 95%CL (1 toyMC)
median expected limit: r < 7.7333 @ 95%CL (1 toyMC)
   68% expected band : 7.7333 < r < 7.7333
   95% expected band : 7.7333 < r < 7.7333
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -559362878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90359 +/- 0.00788459 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.90359 @ 95%CL (1 toyMC)
median expected limit: r < 4.90359 @ 95%CL (1 toyMC)
   68% expected band : 4.90359 < r < 4.90359
   95% expected band : 4.90359 < r < 4.90359
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -21937989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.5067 +/- 0.00781389 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.5067 @ 95%CL (1 toyMC)
median expected limit: r < 5.5067 @ 95%CL (1 toyMC)
   68% expected band : 5.5067 < r < 5.5067
   95% expected band : 5.5067 < r < 5.5067
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1546582898
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.89435 +/- 0.00999123 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.89435 @ 95%CL (1 toyMC)
median expected limit: r < 5.89435 @ 95%CL (1 toyMC)
   68% expected band : 5.89435 < r < 5.89435
   95% expected band : 5.89435 < r < 5.89435
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 677394020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1378 +/- 0.0112105 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.1378 @ 95%CL (1 toyMC)
median expected limit: r < 13.1378 @ 95%CL (1 toyMC)
   68% expected band : 13.1378 < r < 13.1378
   95% expected band : 13.1378 < r < 13.1378
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -319912135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.59592 +/- 0.00888293 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.59592 @ 95%CL (1 toyMC)
median expected limit: r < 4.59592 @ 95%CL (1 toyMC)
   68% expected band : 4.59592 < r < 4.59592
   95% expected band : 4.59592 < r < 4.59592
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1606917216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.81101 +/- 0.0104297 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.81101 @ 95%CL (1 toyMC)
median expected limit: r < 6.81101 @ 95%CL (1 toyMC)
   68% expected band : 6.81101 < r < 6.81101
   95% expected band : 6.81101 < r < 6.81101
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1927501283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49442 +/- 0.00575505 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.49442 @ 95%CL (1 toyMC)
median expected limit: r < 2.49442 @ 95%CL (1 toyMC)
   68% expected band : 2.49442 < r < 2.49442
   95% expected band : 2.49442 < r < 2.49442
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -962360587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01137 +/- 0.0108514 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.01137 @ 95%CL (1 toyMC)
median expected limit: r < 6.01137 @ 95%CL (1 toyMC)
   68% expected band : 6.01137 < r < 6.01137
   95% expected band : 6.01137 < r < 6.01137
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -976443047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51624 +/- 0.00868807 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.51624 @ 95%CL (1 toyMC)
median expected limit: r < 5.51624 @ 95%CL (1 toyMC)
   68% expected band : 5.51624 < r < 5.51624
   95% expected band : 5.51624 < r < 5.51624
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1935123949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.49284 +/- 0.0070532 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.49284 @ 95%CL (1 toyMC)
median expected limit: r < 4.49284 @ 95%CL (1 toyMC)
   68% expected band : 4.49284 < r < 4.49284
   95% expected band : 4.49284 < r < 4.49284
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1179848760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.06223 +/- 0.0110838 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.06223 @ 95%CL (1 toyMC)
median expected limit: r < 7.06223 @ 95%CL (1 toyMC)
   68% expected band : 7.06223 < r < 7.06223
   95% expected band : 7.06223 < r < 7.06223
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 583479179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.63205 +/- 0.0109074 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.63205 @ 95%CL (1 toyMC)
median expected limit: r < 9.63205 @ 95%CL (1 toyMC)
   68% expected band : 9.63205 < r < 9.63205
   95% expected band : 9.63205 < r < 9.63205
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 831801796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.52923 +/- 0.0110842 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.52923 @ 95%CL (1 toyMC)
median expected limit: r < 5.52923 @ 95%CL (1 toyMC)
   68% expected band : 5.52923 < r < 5.52923
   95% expected band : 5.52923 < r < 5.52923
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -590265149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.06946 +/- 0.0100776 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.06946 @ 95%CL (1 toyMC)
median expected limit: r < 7.06946 @ 95%CL (1 toyMC)
   68% expected band : 7.06946 < r < 7.06946
   95% expected band : 7.06946 < r < 7.06946
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1316324056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.52236 +/- 0.0106659 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.52236 @ 95%CL (1 toyMC)
median expected limit: r < 6.52236 @ 95%CL (1 toyMC)
   68% expected band : 6.52236 < r < 6.52236
   95% expected band : 6.52236 < r < 6.52236
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -239760833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.12359 +/- 0.00809986 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.12359 @ 95%CL (1 toyMC)
median expected limit: r < 5.12359 @ 95%CL (1 toyMC)
   68% expected band : 5.12359 < r < 5.12359
   95% expected band : 5.12359 < r < 5.12359
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1975722067
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.00533 +/- 0.00802782 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.00533 @ 95%CL (1 toyMC)
median expected limit: r < 4.00533 @ 95%CL (1 toyMC)
   68% expected band : 4.00533 < r < 4.00533
   95% expected band : 4.00533 < r < 4.00533
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 953176386
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.19523 +/- 0.00662184 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.19523 @ 95%CL (1 toyMC)
median expected limit: r < 5.19523 @ 95%CL (1 toyMC)
   68% expected band : 5.19523 < r < 5.19523
   95% expected band : 5.19523 < r < 5.19523
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1573837389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.7812 +/- 0.00840398 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.7812 @ 95%CL (1 toyMC)
median expected limit: r < 4.7812 @ 95%CL (1 toyMC)
   68% expected band : 4.7812 < r < 4.7812
   95% expected band : 4.7812 < r < 4.7812
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 53961423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.31995 +/- 0.00917209 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.31995 @ 95%CL (1 toyMC)
median expected limit: r < 5.31995 @ 95%CL (1 toyMC)
   68% expected band : 5.31995 < r < 5.31995
   95% expected band : 5.31995 < r < 5.31995
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1988781874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.7685 +/- 0.00915199 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.7685 @ 95%CL (1 toyMC)
median expected limit: r < 4.7685 @ 95%CL (1 toyMC)
   68% expected band : 4.7685 < r < 4.7685
   95% expected band : 4.7685 < r < 4.7685
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 54660143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.64497 +/- 0.00636595 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.64497 @ 95%CL (1 toyMC)
median expected limit: r < 3.64497 @ 95%CL (1 toyMC)
   68% expected band : 3.64497 < r < 3.64497
   95% expected band : 3.64497 < r < 3.64497
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1936013890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77781 +/- 0.0106693 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.77781 @ 95%CL (1 toyMC)
median expected limit: r < 6.77781 @ 95%CL (1 toyMC)
   68% expected band : 6.77781 < r < 6.77781
   95% expected band : 6.77781 < r < 6.77781
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1504616233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.67621 +/- 0.00915022 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.67621 @ 95%CL (1 toyMC)
median expected limit: r < 6.67621 @ 95%CL (1 toyMC)
   68% expected band : 6.67621 < r < 6.67621
   95% expected band : 6.67621 < r < 6.67621
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2130771296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.26098 +/- 0.00768985 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.26098 @ 95%CL (1 toyMC)
median expected limit: r < 4.26098 @ 95%CL (1 toyMC)
   68% expected band : 4.26098 < r < 4.26098
   95% expected band : 4.26098 < r < 4.26098
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1409932630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.43918 +/- 0.0106007 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.43918 @ 95%CL (1 toyMC)
median expected limit: r < 8.43918 @ 95%CL (1 toyMC)
   68% expected band : 8.43918 < r < 8.43918
   95% expected band : 8.43918 < r < 8.43918
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -568468786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03678 +/- 0.00714734 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.03678 @ 95%CL (1 toyMC)
median expected limit: r < 4.03678 @ 95%CL (1 toyMC)
   68% expected band : 4.03678 < r < 4.03678
   95% expected band : 4.03678 < r < 4.03678
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -798812537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.71429 +/- 0.00919877 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.71429 @ 95%CL (1 toyMC)
median expected limit: r < 4.71429 @ 95%CL (1 toyMC)
   68% expected band : 4.71429 < r < 4.71429
   95% expected band : 4.71429 < r < 4.71429
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1029215257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.37854 +/- 0.00784255 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.37854 @ 95%CL (1 toyMC)
median expected limit: r < 4.37854 @ 95%CL (1 toyMC)
   68% expected band : 4.37854 < r < 4.37854
   95% expected band : 4.37854 < r < 4.37854
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 330105988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.50646 +/- 0.0090028 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.50646 @ 95%CL (1 toyMC)
median expected limit: r < 4.50646 @ 95%CL (1 toyMC)
   68% expected band : 4.50646 < r < 4.50646
   95% expected band : 4.50646 < r < 4.50646
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1314160078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.77184 +/- 0.0114136 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.77184 @ 95%CL (1 toyMC)
median expected limit: r < 7.77184 @ 95%CL (1 toyMC)
   68% expected band : 7.77184 < r < 7.77184
   95% expected band : 7.77184 < r < 7.77184
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1890761285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5548 +/- 0.00957153 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.5548 @ 95%CL (1 toyMC)
median expected limit: r < 12.5548 @ 95%CL (1 toyMC)
   68% expected band : 12.5548 < r < 12.5548
   95% expected band : 12.5548 < r < 12.5548
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 464487909
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8075 +/- 0.0137368 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.8075 @ 95%CL (1 toyMC)
median expected limit: r < 12.8075 @ 95%CL (1 toyMC)
   68% expected band : 12.8075 < r < 12.8075
   95% expected band : 12.8075 < r < 12.8075
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2023499257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.25679 +/- 0.00818759 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.25679 @ 95%CL (1 toyMC)
median expected limit: r < 5.25679 @ 95%CL (1 toyMC)
   68% expected band : 5.25679 < r < 5.25679
   95% expected band : 5.25679 < r < 5.25679
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1967990610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.80981 +/- 0.00956522 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.80981 @ 95%CL (1 toyMC)
median expected limit: r < 8.80981 @ 95%CL (1 toyMC)
   68% expected band : 8.80981 < r < 8.80981
   95% expected band : 8.80981 < r < 8.80981
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -907009227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.26605 +/- 0.0103946 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.26605 @ 95%CL (1 toyMC)
median expected limit: r < 7.26605 @ 95%CL (1 toyMC)
   68% expected band : 7.26605 < r < 7.26605
   95% expected band : 7.26605 < r < 7.26605
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 127977603
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.7687 +/- 0.01048 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.7687 @ 95%CL (1 toyMC)
median expected limit: r < 5.7687 @ 95%CL (1 toyMC)
   68% expected band : 5.7687 < r < 5.7687
   95% expected band : 5.7687 < r < 5.7687
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1419138724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.10437 +/- 0.00855847 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.10437 @ 95%CL (1 toyMC)
median expected limit: r < 5.10437 @ 95%CL (1 toyMC)
   68% expected band : 5.10437 < r < 5.10437
   95% expected band : 5.10437 < r < 5.10437
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1342850185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0638 +/- 0.0102737 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.0638 @ 95%CL (1 toyMC)
median expected limit: r < 11.0638 @ 95%CL (1 toyMC)
   68% expected band : 11.0638 < r < 11.0638
   95% expected band : 11.0638 < r < 11.0638
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 244248633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.154 +/- 0.0121315 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.154 @ 95%CL (1 toyMC)
median expected limit: r < 11.154 @ 95%CL (1 toyMC)
   68% expected band : 11.154 < r < 11.154
   95% expected band : 11.154 < r < 11.154
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 225525662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.70626 +/- 0.0097325 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.70626 @ 95%CL (1 toyMC)
median expected limit: r < 5.70626 @ 95%CL (1 toyMC)
   68% expected band : 5.70626 < r < 5.70626
   95% expected band : 5.70626 < r < 5.70626
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1418799289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.21025 +/- 0.00835502 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.21025 @ 95%CL (1 toyMC)
median expected limit: r < 4.21025 @ 95%CL (1 toyMC)
   68% expected band : 4.21025 < r < 4.21025
   95% expected band : 4.21025 < r < 4.21025
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 834354229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.1149 +/- 0.0127494 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.1149 @ 95%CL (1 toyMC)
median expected limit: r < 9.1149 @ 95%CL (1 toyMC)
   68% expected band : 9.1149 < r < 9.1149
   95% expected band : 9.1149 < r < 9.1149
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -873650998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.50417 +/- 0.00866063 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.50417 @ 95%CL (1 toyMC)
median expected limit: r < 6.50417 @ 95%CL (1 toyMC)
   68% expected band : 6.50417 < r < 6.50417
   95% expected band : 6.50417 < r < 6.50417
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -803025146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.10452 +/- 0.00655062 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.10452 @ 95%CL (1 toyMC)
median expected limit: r < 4.10452 @ 95%CL (1 toyMC)
   68% expected band : 4.10452 < r < 4.10452
   95% expected band : 4.10452 < r < 4.10452
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 847464020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.88369 +/- 0.00836949 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.88369 @ 95%CL (1 toyMC)
median expected limit: r < 5.88369 @ 95%CL (1 toyMC)
   68% expected band : 5.88369 < r < 5.88369
   95% expected band : 5.88369 < r < 5.88369
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -669995182
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.05416 +/- 0.00917755 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.05416 @ 95%CL (1 toyMC)
median expected limit: r < 4.05416 @ 95%CL (1 toyMC)
   68% expected band : 4.05416 < r < 4.05416
   95% expected band : 4.05416 < r < 4.05416
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1987068032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.75959 +/- 0.00887329 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.75959 @ 95%CL (1 toyMC)
median expected limit: r < 5.75959 @ 95%CL (1 toyMC)
   68% expected band : 5.75959 < r < 5.75959
   95% expected band : 5.75959 < r < 5.75959
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1521985252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.32025 +/- 0.00871344 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.32025 @ 95%CL (1 toyMC)
median expected limit: r < 5.32025 @ 95%CL (1 toyMC)
   68% expected band : 5.32025 < r < 5.32025
   95% expected band : 5.32025 < r < 5.32025
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -888250468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.08107 +/- 0.0101056 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.08107 @ 95%CL (1 toyMC)
median expected limit: r < 8.08107 @ 95%CL (1 toyMC)
   68% expected band : 8.08107 < r < 8.08107
   95% expected band : 8.08107 < r < 8.08107
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 41050565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0828 +/- 0.0108235 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.0828 @ 95%CL (1 toyMC)
median expected limit: r < 11.0828 @ 95%CL (1 toyMC)
   68% expected band : 11.0828 < r < 11.0828
   95% expected band : 11.0828 < r < 11.0828
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -242313320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.03516 +/- 0.00919598 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.03516 @ 95%CL (1 toyMC)
median expected limit: r < 9.03516 @ 95%CL (1 toyMC)
   68% expected band : 9.03516 < r < 9.03516
   95% expected band : 9.03516 < r < 9.03516
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -136043879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.16596 +/- 0.00847197 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.16596 @ 95%CL (1 toyMC)
median expected limit: r < 4.16596 @ 95%CL (1 toyMC)
   68% expected band : 4.16596 < r < 4.16596
   95% expected band : 4.16596 < r < 4.16596
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1064035022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.29499 +/- 0.00686072 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.29499 @ 95%CL (1 toyMC)
median expected limit: r < 3.29499 @ 95%CL (1 toyMC)
   68% expected band : 3.29499 < r < 3.29499
   95% expected band : 3.29499 < r < 3.29499
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -627195376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.07629 +/- 0.0109313 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.07629 @ 95%CL (1 toyMC)
median expected limit: r < 7.07629 @ 95%CL (1 toyMC)
   68% expected band : 7.07629 < r < 7.07629
   95% expected band : 7.07629 < r < 7.07629
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1024290553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.70443 +/- 0.00890833 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.70443 @ 95%CL (1 toyMC)
median expected limit: r < 3.70443 @ 95%CL (1 toyMC)
   68% expected band : 3.70443 < r < 3.70443
   95% expected band : 3.70443 < r < 3.70443
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -45469432
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.8728 +/- 0.0104086 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.8728 @ 95%CL (1 toyMC)
median expected limit: r < 5.8728 @ 95%CL (1 toyMC)
   68% expected band : 5.8728 < r < 5.8728
   95% expected band : 5.8728 < r < 5.8728
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -855980002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.84544 +/- 0.00971453 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.84544 @ 95%CL (1 toyMC)
median expected limit: r < 4.84544 @ 95%CL (1 toyMC)
   68% expected band : 4.84544 < r < 4.84544
   95% expected band : 4.84544 < r < 4.84544
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 435887143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.89152 +/- 0.0122054 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 7.89152 @ 95%CL (1 toyMC)
median expected limit: r < 7.89152 @ 95%CL (1 toyMC)
   68% expected band : 7.89152 < r < 7.89152
   95% expected band : 7.89152 < r < 7.89152
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1342180393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.61278 +/- 0.0113048 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.61278 @ 95%CL (1 toyMC)
median expected limit: r < 7.61278 @ 95%CL (1 toyMC)
   68% expected band : 7.61278 < r < 7.61278
   95% expected band : 7.61278 < r < 7.61278
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1449059235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.28026 +/- 0.00888937 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.28026 @ 95%CL (1 toyMC)
median expected limit: r < 6.28026 @ 95%CL (1 toyMC)
   68% expected band : 6.28026 < r < 6.28026
   95% expected band : 6.28026 < r < 6.28026
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1797671565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.35682 +/- 0.00695884 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.35682 @ 95%CL (1 toyMC)
median expected limit: r < 5.35682 @ 95%CL (1 toyMC)
   68% expected band : 5.35682 < r < 5.35682
   95% expected band : 5.35682 < r < 5.35682
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 483770271
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.86895 +/- 0.00842823 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.86895 @ 95%CL (1 toyMC)
median expected limit: r < 3.86895 @ 95%CL (1 toyMC)
   68% expected band : 3.86895 < r < 3.86895
   95% expected band : 3.86895 < r < 3.86895
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -6216879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.15872 +/- 0.00909793 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.15872 @ 95%CL (1 toyMC)
median expected limit: r < 6.15872 @ 95%CL (1 toyMC)
   68% expected band : 6.15872 < r < 6.15872
   95% expected band : 6.15872 < r < 6.15872
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 93530466
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.2365 +/- 0.00821614 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.2365 @ 95%CL (1 toyMC)
median expected limit: r < 5.2365 @ 95%CL (1 toyMC)
   68% expected band : 5.2365 < r < 5.2365
   95% expected band : 5.2365 < r < 5.2365
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1469657906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.38052 +/- 0.0104971 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.38052 @ 95%CL (1 toyMC)
median expected limit: r < 5.38052 @ 95%CL (1 toyMC)
   68% expected band : 5.38052 < r < 5.38052
   95% expected band : 5.38052 < r < 5.38052
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1068265728
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.21553 +/- 0.00968883 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.21553 @ 95%CL (1 toyMC)
median expected limit: r < 7.21553 @ 95%CL (1 toyMC)
   68% expected band : 7.21553 < r < 7.21553
   95% expected band : 7.21553 < r < 7.21553
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1018473822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.39947 +/- 0.010537 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.39947 @ 95%CL (1 toyMC)
median expected limit: r < 6.39947 @ 95%CL (1 toyMC)
   68% expected band : 6.39947 < r < 6.39947
   95% expected band : 6.39947 < r < 6.39947
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1625661138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.9664 +/- 0.0115827 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.9664 @ 95%CL (1 toyMC)
median expected limit: r < 4.9664 @ 95%CL (1 toyMC)
   68% expected band : 4.9664 < r < 4.9664
   95% expected band : 4.9664 < r < 4.9664
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -203566515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.0584 +/- 0.00971636 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.0584 @ 95%CL (1 toyMC)
median expected limit: r < 7.0584 @ 95%CL (1 toyMC)
   68% expected band : 7.0584 < r < 7.0584
   95% expected band : 7.0584 < r < 7.0584
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2068406681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.6006 +/- 0.0085129 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.6006 @ 95%CL (1 toyMC)
median expected limit: r < 4.6006 @ 95%CL (1 toyMC)
   68% expected band : 4.6006 < r < 4.6006
   95% expected band : 4.6006 < r < 4.6006
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1236649326
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.67697 +/- 0.0128952 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.67697 @ 95%CL (1 toyMC)
median expected limit: r < 8.67697 @ 95%CL (1 toyMC)
   68% expected band : 8.67697 < r < 8.67697
   95% expected band : 8.67697 < r < 8.67697
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 945714708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.03709 +/- 0.00780461 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.03709 @ 95%CL (1 toyMC)
median expected limit: r < 5.03709 @ 95%CL (1 toyMC)
   68% expected band : 5.03709 < r < 5.03709
   95% expected band : 5.03709 < r < 5.03709
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 46770297
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.11395 +/- 0.00780698 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.11395 @ 95%CL (1 toyMC)
median expected limit: r < 4.11395 @ 95%CL (1 toyMC)
   68% expected band : 4.11395 < r < 4.11395
   95% expected band : 4.11395 < r < 4.11395
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2142368071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.33058 +/- 0.00872818 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.33058 @ 95%CL (1 toyMC)
median expected limit: r < 5.33058 @ 95%CL (1 toyMC)
   68% expected band : 5.33058 < r < 5.33058
   95% expected band : 5.33058 < r < 5.33058
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 705219409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.58293 +/- 0.0116779 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.58293 @ 95%CL (1 toyMC)
median expected limit: r < 4.58293 @ 95%CL (1 toyMC)
   68% expected band : 4.58293 < r < 4.58293
   95% expected band : 4.58293 < r < 4.58293
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -798707625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.48131 +/- 0.00606749 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.48131 @ 95%CL (1 toyMC)
median expected limit: r < 4.48131 @ 95%CL (1 toyMC)
   68% expected band : 4.48131 < r < 4.48131
   95% expected band : 4.48131 < r < 4.48131
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 100458658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.65006 +/- 0.0109725 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.65006 @ 95%CL (1 toyMC)
median expected limit: r < 8.65006 @ 95%CL (1 toyMC)
   68% expected band : 8.65006 < r < 8.65006
   95% expected band : 8.65006 < r < 8.65006
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1018473822.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1024290553.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1064035022.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1068265728.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1316324056.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-136043879.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1405655837.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1418799289.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1469657906.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1521985252.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1606917216.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-167849774.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1927501283.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1936013890.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-203566515.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-2073617637.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-2130771296.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-2142368071.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-21937989.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-239760833.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-242313320.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-246262171.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-299756995.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-319912135.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-45469432.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-466500468.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-50200708.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-559362878.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-560376859.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-568468786.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-590265149.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-6216879.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-627195376.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-653016675.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-669995182.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-670314956.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-798707625.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-798812537.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-803025146.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-855980002.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-870764399.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-873650998.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-888250468.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-907009227.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-962360587.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-976443047.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.100458658.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1029215257.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1179848760.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1236649326.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.127977603.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1314160078.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1342180393.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1342850185.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.13772071.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1409932630.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1417250806.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1419138724.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1431292859.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1449059235.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1504616233.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1546582898.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1565434831.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1573837389.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1625661138.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1797671565.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1890761285.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1935123949.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1967990610.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1975722067.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1987068032.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1988781874.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.200190929.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.2023499257.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.2024995304.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.2068406681.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2136681031.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2141983381.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.225525662.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.244248633.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.330105988.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.41050565.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.435887143.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.464487909.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.46770297.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.483770271.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.53961423.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.54660143.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.583479179.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.677394020.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.686890308.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.705219409.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.831801796.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.834354229.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.846409310.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.847464020.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.862066499.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.93530466.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.945714708.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.953176386.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 67334060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.98689 +/- 0.0091493 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.98689 @ 95%CL (1 toyMC)
median expected limit: r < 5.98689 @ 95%CL (1 toyMC)
   68% expected band : 5.98689 < r < 5.98689
   95% expected band : 5.98689 < r < 5.98689
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 585349042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.93237 +/- 0.0111846 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.93237 @ 95%CL (1 toyMC)
median expected limit: r < 7.93237 @ 95%CL (1 toyMC)
   68% expected band : 7.93237 < r < 7.93237
   95% expected band : 7.93237 < r < 7.93237
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 422677492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.30102 +/- 0.0124131 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.30102 @ 95%CL (1 toyMC)
median expected limit: r < 5.30102 @ 95%CL (1 toyMC)
   68% expected band : 5.30102 < r < 5.30102
   95% expected band : 5.30102 < r < 5.30102
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2052625725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.27359 +/- 0.0107692 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.27359 @ 95%CL (1 toyMC)
median expected limit: r < 6.27359 @ 95%CL (1 toyMC)
   68% expected band : 6.27359 < r < 6.27359
   95% expected band : 6.27359 < r < 6.27359
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2069282061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99441 +/- 0.00929282 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.99441 @ 95%CL (1 toyMC)
median expected limit: r < 5.99441 @ 95%CL (1 toyMC)
   68% expected band : 5.99441 < r < 5.99441
   95% expected band : 5.99441 < r < 5.99441
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 276509459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.18309 +/- 0.0101719 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.18309 @ 95%CL (1 toyMC)
median expected limit: r < 5.18309 @ 95%CL (1 toyMC)
   68% expected band : 5.18309 < r < 5.18309
   95% expected band : 5.18309 < r < 5.18309
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -603587621
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.53742 +/- 0.0117665 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.53742 @ 95%CL (1 toyMC)
median expected limit: r < 7.53742 @ 95%CL (1 toyMC)
   68% expected band : 7.53742 < r < 7.53742
   95% expected band : 7.53742 < r < 7.53742
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 982738019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.32619 +/- 0.0121313 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.32619 @ 95%CL (1 toyMC)
median expected limit: r < 8.32619 @ 95%CL (1 toyMC)
   68% expected band : 8.32619 < r < 8.32619
   95% expected band : 8.32619 < r < 8.32619
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2061286833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.12035 +/- 0.00970866 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.12035 @ 95%CL (1 toyMC)
median expected limit: r < 5.12035 @ 95%CL (1 toyMC)
   68% expected band : 5.12035 < r < 5.12035
   95% expected band : 5.12035 < r < 5.12035
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1911638483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.82924 +/- 0.0140038 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.82924 @ 95%CL (1 toyMC)
median expected limit: r < 8.82924 @ 95%CL (1 toyMC)
   68% expected band : 8.82924 < r < 8.82924
   95% expected band : 8.82924 < r < 8.82924
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -308535594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.64832 +/- 0.0104331 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.64832 @ 95%CL (1 toyMC)
median expected limit: r < 6.64832 @ 95%CL (1 toyMC)
   68% expected band : 6.64832 < r < 6.64832
   95% expected band : 6.64832 < r < 6.64832
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1666087709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.67019 +/- 0.0084471 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.67019 @ 95%CL (1 toyMC)
median expected limit: r < 4.67019 @ 95%CL (1 toyMC)
   68% expected band : 4.67019 < r < 4.67019
   95% expected band : 4.67019 < r < 4.67019
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1054529531
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.7514 +/- 0.0125584 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 9.7514 @ 95%CL (1 toyMC)
median expected limit: r < 9.7514 @ 95%CL (1 toyMC)
   68% expected band : 9.7514 < r < 9.7514
   95% expected band : 9.7514 < r < 9.7514
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2006014209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.51379 +/- 0.00774059 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.51379 @ 95%CL (1 toyMC)
median expected limit: r < 4.51379 @ 95%CL (1 toyMC)
   68% expected band : 4.51379 < r < 4.51379
   95% expected band : 4.51379 < r < 4.51379
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1117206754
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.17703 +/- 0.0112965 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.17703 @ 95%CL (1 toyMC)
median expected limit: r < 8.17703 @ 95%CL (1 toyMC)
   68% expected band : 8.17703 < r < 8.17703
   95% expected band : 8.17703 < r < 8.17703
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -80763394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.45445 +/- 0.00956483 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.45445 @ 95%CL (1 toyMC)
median expected limit: r < 5.45445 @ 95%CL (1 toyMC)
   68% expected band : 5.45445 < r < 5.45445
   95% expected band : 5.45445 < r < 5.45445
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1514729702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.49409 +/- 0.00907727 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.49409 @ 95%CL (1 toyMC)
median expected limit: r < 6.49409 @ 95%CL (1 toyMC)
   68% expected band : 6.49409 < r < 6.49409
   95% expected band : 6.49409 < r < 6.49409
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 64047948
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.49004 +/- 0.00889557 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.49004 @ 95%CL (1 toyMC)
median expected limit: r < 4.49004 @ 95%CL (1 toyMC)
   68% expected band : 4.49004 < r < 4.49004
   95% expected band : 4.49004 < r < 4.49004
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1594312029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.18114 +/- 0.0119349 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.18114 @ 95%CL (1 toyMC)
median expected limit: r < 9.18114 @ 95%CL (1 toyMC)
   68% expected band : 9.18114 < r < 9.18114
   95% expected band : 9.18114 < r < 9.18114
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 13890462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.6214 +/- 0.0113124 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.6214 @ 95%CL (1 toyMC)
median expected limit: r < 4.6214 @ 95%CL (1 toyMC)
   68% expected band : 4.6214 < r < 4.6214
   95% expected band : 4.6214 < r < 4.6214
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1574687231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.88252 +/- 0.00817341 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.88252 @ 95%CL (1 toyMC)
median expected limit: r < 5.88252 @ 95%CL (1 toyMC)
   68% expected band : 5.88252 < r < 5.88252
   95% expected band : 5.88252 < r < 5.88252
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 380401826
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.48391 +/- 0.0117578 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.48391 @ 95%CL (1 toyMC)
median expected limit: r < 7.48391 @ 95%CL (1 toyMC)
   68% expected band : 7.48391 < r < 7.48391
   95% expected band : 7.48391 < r < 7.48391
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1048794269
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.10741 +/- 0.00847255 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.10741 @ 95%CL (1 toyMC)
median expected limit: r < 5.10741 @ 95%CL (1 toyMC)
   68% expected band : 5.10741 < r < 5.10741
   95% expected band : 5.10741 < r < 5.10741
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1231574109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.66046 +/- 0.0119609 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.66046 @ 95%CL (1 toyMC)
median expected limit: r < 6.66046 @ 95%CL (1 toyMC)
   68% expected band : 6.66046 < r < 6.66046
   95% expected band : 6.66046 < r < 6.66046
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1443113823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.78367 +/- 0.0117673 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.78367 @ 95%CL (1 toyMC)
median expected limit: r < 5.78367 @ 95%CL (1 toyMC)
   68% expected band : 5.78367 < r < 5.78367
   95% expected band : 5.78367 < r < 5.78367
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2089895204
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.90185 +/- 0.0080537 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.90185 @ 95%CL (1 toyMC)
median expected limit: r < 3.90185 @ 95%CL (1 toyMC)
   68% expected band : 3.90185 < r < 3.90185
   95% expected band : 3.90185 < r < 3.90185
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1257225645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.9045 +/- 0.0104318 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.9045 @ 95%CL (1 toyMC)
median expected limit: r < 4.9045 @ 95%CL (1 toyMC)
   68% expected band : 4.9045 < r < 4.9045
   95% expected band : 4.9045 < r < 4.9045
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1965147665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.71092 +/- 0.00791837 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.71092 @ 95%CL (1 toyMC)
median expected limit: r < 3.71092 @ 95%CL (1 toyMC)
   68% expected band : 3.71092 < r < 3.71092
   95% expected band : 3.71092 < r < 3.71092
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 336264017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6326 +/- 0.0141074 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.6326 @ 95%CL (1 toyMC)
median expected limit: r < 10.6326 @ 95%CL (1 toyMC)
   68% expected band : 10.6326 < r < 10.6326
   95% expected band : 10.6326 < r < 10.6326
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1155983273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20109 +/- 0.0106974 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.20109 @ 95%CL (1 toyMC)
median expected limit: r < 6.20109 @ 95%CL (1 toyMC)
   68% expected band : 6.20109 < r < 6.20109
   95% expected band : 6.20109 < r < 6.20109
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -382765989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.56378 +/- 0.0133292 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.56378 @ 95%CL (1 toyMC)
median expected limit: r < 6.56378 @ 95%CL (1 toyMC)
   68% expected band : 6.56378 < r < 6.56378
   95% expected band : 6.56378 < r < 6.56378
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1198688724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.47232 +/- 0.0133005 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.47232 @ 95%CL (1 toyMC)
median expected limit: r < 7.47232 @ 95%CL (1 toyMC)
   68% expected band : 7.47232 < r < 7.47232
   95% expected band : 7.47232 < r < 7.47232
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2082058309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.53214 +/- 0.0100528 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.53214 @ 95%CL (1 toyMC)
median expected limit: r < 6.53214 @ 95%CL (1 toyMC)
   68% expected band : 6.53214 < r < 6.53214
   95% expected band : 6.53214 < r < 6.53214
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 139589677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.12484 +/- 0.0102625 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.12484 @ 95%CL (1 toyMC)
median expected limit: r < 5.12484 @ 95%CL (1 toyMC)
   68% expected band : 5.12484 < r < 5.12484
   95% expected band : 5.12484 < r < 5.12484
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 601969894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.11521 +/- 0.00903782 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.11521 @ 95%CL (1 toyMC)
median expected limit: r < 5.11521 @ 95%CL (1 toyMC)
   68% expected band : 5.11521 < r < 5.11521
   95% expected band : 5.11521 < r < 5.11521
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1456594917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.75997 +/- 0.0117642 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.75997 @ 95%CL (1 toyMC)
median expected limit: r < 8.75997 @ 95%CL (1 toyMC)
   68% expected band : 8.75997 < r < 8.75997
   95% expected band : 8.75997 < r < 8.75997
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1925587278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73067 +/- 0.00750507 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.73067 @ 95%CL (1 toyMC)
median expected limit: r < 4.73067 @ 95%CL (1 toyMC)
   68% expected band : 4.73067 < r < 4.73067
   95% expected band : 4.73067 < r < 4.73067
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1052656228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.69436 +/- 0.00936521 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.69436 @ 95%CL (1 toyMC)
median expected limit: r < 5.69436 @ 95%CL (1 toyMC)
   68% expected band : 5.69436 < r < 5.69436
   95% expected band : 5.69436 < r < 5.69436
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1263398461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.03566 +/- 0.011465 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.03566 @ 95%CL (1 toyMC)
median expected limit: r < 6.03566 @ 95%CL (1 toyMC)
   68% expected band : 6.03566 < r < 6.03566
   95% expected band : 6.03566 < r < 6.03566
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -261009078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.78671 +/- 0.0118199 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 8.78671 @ 95%CL (1 toyMC)
median expected limit: r < 8.78671 @ 95%CL (1 toyMC)
   68% expected band : 8.78671 < r < 8.78671
   95% expected band : 8.78671 < r < 8.78671
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2074227288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.72081 +/- 0.011496 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.72081 @ 95%CL (1 toyMC)
median expected limit: r < 6.72081 @ 95%CL (1 toyMC)
   68% expected band : 6.72081 < r < 6.72081
   95% expected band : 6.72081 < r < 6.72081
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 956421520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.46412 +/- 0.00958487 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.46412 @ 95%CL (1 toyMC)
median expected limit: r < 6.46412 @ 95%CL (1 toyMC)
   68% expected band : 6.46412 < r < 6.46412
   95% expected band : 6.46412 < r < 6.46412
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 574588298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.6454 +/- 0.00713076 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.6454 @ 95%CL (1 toyMC)
median expected limit: r < 4.6454 @ 95%CL (1 toyMC)
   68% expected band : 4.6454 < r < 4.6454
   95% expected band : 4.6454 < r < 4.6454
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -200960105
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.46948 +/- 0.00931194 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.46948 @ 95%CL (1 toyMC)
median expected limit: r < 4.46948 @ 95%CL (1 toyMC)
   68% expected band : 4.46948 < r < 4.46948
   95% expected band : 4.46948 < r < 4.46948
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1609962349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.2149 +/- 0.012045 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.2149 @ 95%CL (1 toyMC)
median expected limit: r < 9.2149 @ 95%CL (1 toyMC)
   68% expected band : 9.2149 < r < 9.2149
   95% expected band : 9.2149 < r < 9.2149
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -931290222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99947 +/- 0.0128801 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.99947 @ 95%CL (1 toyMC)
median expected limit: r < 5.99947 @ 95%CL (1 toyMC)
   68% expected band : 5.99947 < r < 5.99947
   95% expected band : 5.99947 < r < 5.99947
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2097803753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.27025 +/- 0.00937438 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.27025 @ 95%CL (1 toyMC)
median expected limit: r < 5.27025 @ 95%CL (1 toyMC)
   68% expected band : 5.27025 < r < 5.27025
   95% expected band : 5.27025 < r < 5.27025
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1617996896
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.99874 +/- 0.0122984 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.99874 @ 95%CL (1 toyMC)
median expected limit: r < 6.99874 @ 95%CL (1 toyMC)
   68% expected band : 6.99874 < r < 6.99874
   95% expected band : 6.99874 < r < 6.99874
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1232620958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.73866 +/- 0.0145475 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 9.73866 @ 95%CL (1 toyMC)
median expected limit: r < 9.73866 @ 95%CL (1 toyMC)
   68% expected band : 9.73866 < r < 9.73866
   95% expected band : 9.73866 < r < 9.73866
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2085799722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.67145 +/- 0.0139681 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.67145 @ 95%CL (1 toyMC)
median expected limit: r < 8.67145 @ 95%CL (1 toyMC)
   68% expected band : 8.67145 < r < 8.67145
   95% expected band : 8.67145 < r < 8.67145
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -374483906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.88869 +/- 0.00799351 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.88869 @ 95%CL (1 toyMC)
median expected limit: r < 4.88869 @ 95%CL (1 toyMC)
   68% expected band : 4.88869 < r < 4.88869
   95% expected band : 4.88869 < r < 4.88869
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1038503051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.84659 +/- 0.00982072 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.84659 @ 95%CL (1 toyMC)
median expected limit: r < 6.84659 @ 95%CL (1 toyMC)
   68% expected band : 6.84659 < r < 6.84659
   95% expected band : 6.84659 < r < 6.84659
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 408643221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56714 +/- 0.00744552 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.56714 @ 95%CL (1 toyMC)
median expected limit: r < 4.56714 @ 95%CL (1 toyMC)
   68% expected band : 4.56714 < r < 4.56714
   95% expected band : 4.56714 < r < 4.56714
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -585358779
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1194 +/- 0.0123046 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.1194 @ 95%CL (1 toyMC)
median expected limit: r < 11.1194 @ 95%CL (1 toyMC)
   68% expected band : 11.1194 < r < 11.1194
   95% expected band : 11.1194 < r < 11.1194
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1388914176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.50765 +/- 0.0092088 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.50765 @ 95%CL (1 toyMC)
median expected limit: r < 4.50765 @ 95%CL (1 toyMC)
   68% expected band : 4.50765 < r < 4.50765
   95% expected band : 4.50765 < r < 4.50765
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 906021695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.95424 +/- 0.0131513 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 8.95424 @ 95%CL (1 toyMC)
median expected limit: r < 8.95424 @ 95%CL (1 toyMC)
   68% expected band : 8.95424 < r < 8.95424
   95% expected band : 8.95424 < r < 8.95424
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 45614880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.03 +/- 0.0128595 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.03 @ 95%CL (1 toyMC)
median expected limit: r < 14.03 @ 95%CL (1 toyMC)
   68% expected band : 14.03 < r < 14.03
   95% expected band : 14.03 < r < 14.03
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -86732939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.31162 +/- 0.00926402 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.31162 @ 95%CL (1 toyMC)
median expected limit: r < 6.31162 @ 95%CL (1 toyMC)
   68% expected band : 6.31162 < r < 6.31162
   95% expected band : 6.31162 < r < 6.31162
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2063178795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.22742 +/- 0.0101349 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.22742 @ 95%CL (1 toyMC)
median expected limit: r < 5.22742 @ 95%CL (1 toyMC)
   68% expected band : 5.22742 < r < 5.22742
   95% expected band : 5.22742 < r < 5.22742
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1780188328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.25044 +/- 0.00904256 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.25044 @ 95%CL (1 toyMC)
median expected limit: r < 5.25044 @ 95%CL (1 toyMC)
   68% expected band : 5.25044 < r < 5.25044
   95% expected band : 5.25044 < r < 5.25044
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1871776511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9868 +/- 0.00725701 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.9868 @ 95%CL (1 toyMC)
median expected limit: r < 3.9868 @ 95%CL (1 toyMC)
   68% expected band : 3.9868 < r < 3.9868
   95% expected band : 3.9868 < r < 3.9868
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1765714605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6555 +/- 0.0132949 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.6555 @ 95%CL (1 toyMC)
median expected limit: r < 12.6555 @ 95%CL (1 toyMC)
   68% expected band : 12.6555 < r < 12.6555
   95% expected band : 12.6555 < r < 12.6555
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1817430103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.83667 +/- 0.00964479 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.83667 @ 95%CL (1 toyMC)
median expected limit: r < 4.83667 @ 95%CL (1 toyMC)
   68% expected band : 4.83667 < r < 4.83667
   95% expected band : 4.83667 < r < 4.83667
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -753058936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.8789 +/- 0.00848969 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.8789 @ 95%CL (1 toyMC)
median expected limit: r < 4.8789 @ 95%CL (1 toyMC)
   68% expected band : 4.8789 < r < 4.8789
   95% expected band : 4.8789 < r < 4.8789
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 579291685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3054 +/- 0.0106399 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.3054 @ 95%CL (1 toyMC)
median expected limit: r < 10.3054 @ 95%CL (1 toyMC)
   68% expected band : 10.3054 < r < 10.3054
   95% expected band : 10.3054 < r < 10.3054
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -467061250
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.63204 +/- 0.011015 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 8.63204 @ 95%CL (1 toyMC)
median expected limit: r < 8.63204 @ 95%CL (1 toyMC)
   68% expected band : 8.63204 < r < 8.63204
   95% expected band : 8.63204 < r < 8.63204
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1770643031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.50195 +/- 0.00555052 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.50195 @ 95%CL (1 toyMC)
median expected limit: r < 3.50195 @ 95%CL (1 toyMC)
   68% expected band : 3.50195 < r < 3.50195
   95% expected band : 3.50195 < r < 3.50195
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1060335623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.68331 +/- 0.008852 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.68331 @ 95%CL (1 toyMC)
median expected limit: r < 4.68331 @ 95%CL (1 toyMC)
   68% expected band : 4.68331 < r < 4.68331
   95% expected band : 4.68331 < r < 4.68331
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 950706792
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.68848 +/- 0.00823726 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.68848 @ 95%CL (1 toyMC)
median expected limit: r < 5.68848 @ 95%CL (1 toyMC)
   68% expected band : 5.68848 < r < 5.68848
   95% expected band : 5.68848 < r < 5.68848
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2135935249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56087 +/- 0.00862773 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.56087 @ 95%CL (1 toyMC)
median expected limit: r < 3.56087 @ 95%CL (1 toyMC)
   68% expected band : 3.56087 < r < 3.56087
   95% expected band : 3.56087 < r < 3.56087
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1600406160
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.238 +/- 0.0116488 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.238 @ 95%CL (1 toyMC)
median expected limit: r < 7.238 @ 95%CL (1 toyMC)
   68% expected band : 7.238 < r < 7.238
   95% expected band : 7.238 < r < 7.238
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -714297747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1654 +/- 0.0110042 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.1654 @ 95%CL (1 toyMC)
median expected limit: r < 15.1654 @ 95%CL (1 toyMC)
   68% expected band : 15.1654 < r < 15.1654
   95% expected band : 15.1654 < r < 15.1654
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1992904176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.45577 +/- 0.00792209 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.45577 @ 95%CL (1 toyMC)
median expected limit: r < 6.45577 @ 95%CL (1 toyMC)
   68% expected band : 6.45577 < r < 6.45577
   95% expected band : 6.45577 < r < 6.45577
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -789592154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.98054 +/- 0.0113043 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.98054 @ 95%CL (1 toyMC)
median expected limit: r < 4.98054 @ 95%CL (1 toyMC)
   68% expected band : 4.98054 < r < 4.98054
   95% expected band : 4.98054 < r < 4.98054
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -329201223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.02132 +/- 0.00670748 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.02132 @ 95%CL (1 toyMC)
median expected limit: r < 4.02132 @ 95%CL (1 toyMC)
   68% expected band : 4.02132 < r < 4.02132
   95% expected band : 4.02132 < r < 4.02132
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1168288938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61352 +/- 0.00719786 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.61352 @ 95%CL (1 toyMC)
median expected limit: r < 3.61352 @ 95%CL (1 toyMC)
   68% expected band : 3.61352 < r < 3.61352
   95% expected band : 3.61352 < r < 3.61352
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -949606610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38075 +/- 0.00821692 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.38075 @ 95%CL (1 toyMC)
median expected limit: r < 7.38075 @ 95%CL (1 toyMC)
   68% expected band : 7.38075 < r < 7.38075
   95% expected band : 7.38075 < r < 7.38075
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 881118693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.40748 +/- 0.0112632 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.40748 @ 95%CL (1 toyMC)
median expected limit: r < 8.40748 @ 95%CL (1 toyMC)
   68% expected band : 8.40748 < r < 8.40748
   95% expected band : 8.40748 < r < 8.40748
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1247116188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18592 +/- 0.00635721 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.18592 @ 95%CL (1 toyMC)
median expected limit: r < 3.18592 @ 95%CL (1 toyMC)
   68% expected band : 3.18592 < r < 3.18592
   95% expected band : 3.18592 < r < 3.18592
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -831728435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.53963 +/- 0.0112503 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.53963 @ 95%CL (1 toyMC)
median expected limit: r < 7.53963 @ 95%CL (1 toyMC)
   68% expected band : 7.53963 < r < 7.53963
   95% expected band : 7.53963 < r < 7.53963
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 448025166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01308 +/- 0.0116657 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.01308 @ 95%CL (1 toyMC)
median expected limit: r < 6.01308 @ 95%CL (1 toyMC)
   68% expected band : 6.01308 < r < 6.01308
   95% expected band : 6.01308 < r < 6.01308
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1696178115
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7812 +/- 0.0142247 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.7812 @ 95%CL (1 toyMC)
median expected limit: r < 11.7812 @ 95%CL (1 toyMC)
   68% expected band : 11.7812 < r < 11.7812
   95% expected band : 11.7812 < r < 11.7812
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1947148527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.90272 +/- 0.0089237 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.90272 @ 95%CL (1 toyMC)
median expected limit: r < 5.90272 @ 95%CL (1 toyMC)
   68% expected band : 5.90272 < r < 5.90272
   95% expected band : 5.90272 < r < 5.90272
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1141058013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.7881 +/- 0.0104745 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.7881 @ 95%CL (1 toyMC)
median expected limit: r < 7.7881 @ 95%CL (1 toyMC)
   68% expected band : 7.7881 < r < 7.7881
   95% expected band : 7.7881 < r < 7.7881
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1277126589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.84282 +/- 0.0125239 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.84282 @ 95%CL (1 toyMC)
median expected limit: r < 8.84282 @ 95%CL (1 toyMC)
   68% expected band : 8.84282 < r < 8.84282
   95% expected band : 8.84282 < r < 8.84282
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1262038932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.91878 +/- 0.0111976 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.91878 @ 95%CL (1 toyMC)
median expected limit: r < 6.91878 @ 95%CL (1 toyMC)
   68% expected band : 6.91878 < r < 6.91878
   95% expected band : 6.91878 < r < 6.91878
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 764442279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.65892 +/- 0.0100435 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.65892 @ 95%CL (1 toyMC)
median expected limit: r < 5.65892 @ 95%CL (1 toyMC)
   68% expected band : 5.65892 < r < 5.65892
   95% expected band : 5.65892 < r < 5.65892
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1411631855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01583 +/- 0.0119346 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.01583 @ 95%CL (1 toyMC)
median expected limit: r < 6.01583 @ 95%CL (1 toyMC)
   68% expected band : 6.01583 < r < 6.01583
   95% expected band : 6.01583 < r < 6.01583
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1462763142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.60599 +/- 0.0110229 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.60599 @ 95%CL (1 toyMC)
median expected limit: r < 5.60599 @ 95%CL (1 toyMC)
   68% expected band : 5.60599 < r < 5.60599
   95% expected band : 5.60599 < r < 5.60599
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 501244597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.24616 +/- 0.0113315 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.24616 @ 95%CL (1 toyMC)
median expected limit: r < 9.24616 @ 95%CL (1 toyMC)
   68% expected band : 9.24616 < r < 9.24616
   95% expected band : 9.24616 < r < 9.24616
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1342760189
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.02814 +/- 0.011813 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.02814 @ 95%CL (1 toyMC)
median expected limit: r < 7.02814 @ 95%CL (1 toyMC)
   68% expected band : 7.02814 < r < 7.02814
   95% expected band : 7.02814 < r < 7.02814
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 54867067
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.04456 +/- 0.0125054 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.04456 @ 95%CL (1 toyMC)
median expected limit: r < 6.04456 @ 95%CL (1 toyMC)
   68% expected band : 6.04456 < r < 6.04456
   95% expected band : 6.04456 < r < 6.04456
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1599757282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.56492 +/- 0.0121103 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.56492 @ 95%CL (1 toyMC)
median expected limit: r < 7.56492 @ 95%CL (1 toyMC)
   68% expected band : 7.56492 < r < 7.56492
   95% expected band : 7.56492 < r < 7.56492
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1534354424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.41575 +/- 0.00856773 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.41575 @ 95%CL (1 toyMC)
median expected limit: r < 4.41575 @ 95%CL (1 toyMC)
   68% expected band : 4.41575 < r < 4.41575
   95% expected band : 4.41575 < r < 4.41575
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 754983893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.77979 +/- 0.0106328 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.77979 @ 95%CL (1 toyMC)
median expected limit: r < 9.77979 @ 95%CL (1 toyMC)
   68% expected band : 9.77979 < r < 9.77979
   95% expected band : 9.77979 < r < 9.77979
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 378174858
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.79097 +/- 0.00908656 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.79097 @ 95%CL (1 toyMC)
median expected limit: r < 5.79097 @ 95%CL (1 toyMC)
   68% expected band : 5.79097 < r < 5.79097
   95% expected band : 5.79097 < r < 5.79097
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 953010725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2376 +/- 0.0128645 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.2376 @ 95%CL (1 toyMC)
median expected limit: r < 10.2376 @ 95%CL (1 toyMC)
   68% expected band : 10.2376 < r < 10.2376
   95% expected band : 10.2376 < r < 10.2376
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -513550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.7458 +/- 0.00963703 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.7458 @ 95%CL (1 toyMC)
median expected limit: r < 4.7458 @ 95%CL (1 toyMC)
   68% expected band : 4.7458 < r < 4.7458
   95% expected band : 4.7458 < r < 4.7458
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -478402529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19089 +/- 0.00817626 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.19089 @ 95%CL (1 toyMC)
median expected limit: r < 6.19089 @ 95%CL (1 toyMC)
   68% expected band : 6.19089 < r < 6.19089
   95% expected band : 6.19089 < r < 6.19089
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1150325105
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.942 +/- 0.0152423 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.942 @ 95%CL (1 toyMC)
median expected limit: r < 10.942 @ 95%CL (1 toyMC)
   68% expected band : 10.942 < r < 10.942
   95% expected band : 10.942 < r < 10.942
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1038503051.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1048794269.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1052656228.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1054529531.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1060335623.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1141058013.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1155983273.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1168288938.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1257225645.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1262038932.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1263398461.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1277126589.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1342760189.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1411631855.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1462763142.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1514729702.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1574687231.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1594312029.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1770643031.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1780188328.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1911638483.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-2006014209.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-200960105.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-2052625725.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-2069282061.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-2089895204.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-2135935249.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-261009078.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-308535594.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-329201223.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-374483906.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-382765989.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-467061250.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-478402529.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-513550.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-585358779.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-603587621.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-714297747.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-753058936.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-789592154.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-80763394.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-831728435.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-86732939.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-931290222.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-949606610.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.1117206754.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1150325105.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1198688724.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1231574109.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1232620958.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1247116188.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1388914176.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.13890462.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.139589677.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1443113823.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1456594917.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1534354424.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1599757282.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1600406160.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1609962349.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1617996896.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1666087709.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1696178115.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1765714605.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1817430103.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1871776511.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1925587278.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1947148527.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1965147665.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1992904176.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.2061286833.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.2063178795.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.2074227288.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.2082058309.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.2085799722.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.2097803753.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.276509459.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.336264017.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.378174858.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.380401826.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.408643221.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.422677492.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.448025166.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.45614880.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.501244597.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.54867067.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.574588298.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.579291685.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.585349042.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.601969894.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.64047948.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.67334060.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.754983893.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.764442279.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.881118693.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.906021695.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.950706792.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.953010725.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.956421520.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.982738019.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1722834848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.06793 +/- 0.0100972 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 5.06793 @ 95%CL (1 toyMC)
median expected limit: r < 5.06793 @ 95%CL (1 toyMC)
   68% expected band : 5.06793 < r < 5.06793
   95% expected band : 5.06793 < r < 5.06793
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 410710773
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5407 +/- 0.0154439 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.5407 @ 95%CL (1 toyMC)
median expected limit: r < 12.5407 @ 95%CL (1 toyMC)
   68% expected band : 12.5407 < r < 12.5407
   95% expected band : 12.5407 < r < 12.5407
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -362445857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.96918 +/- 0.0154638 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.96918 @ 95%CL (1 toyMC)
median expected limit: r < 7.96918 @ 95%CL (1 toyMC)
   68% expected band : 7.96918 < r < 7.96918
   95% expected band : 7.96918 < r < 7.96918
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1373883471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.80185 +/- 0.0147759 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.80185 @ 95%CL (1 toyMC)
median expected limit: r < 9.80185 @ 95%CL (1 toyMC)
   68% expected band : 9.80185 < r < 9.80185
   95% expected band : 9.80185 < r < 9.80185
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1937524459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.33594 +/- 0.0164784 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.33594 @ 95%CL (1 toyMC)
median expected limit: r < 8.33594 @ 95%CL (1 toyMC)
   68% expected band : 8.33594 < r < 8.33594
   95% expected band : 8.33594 < r < 8.33594
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1106767806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0293 +/- 0.017756 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.0293 @ 95%CL (1 toyMC)
median expected limit: r < 10.0293 @ 95%CL (1 toyMC)
   68% expected band : 10.0293 < r < 10.0293
   95% expected band : 10.0293 < r < 10.0293
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1295546860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.45641 +/- 0.0123438 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 6.45641 @ 95%CL (1 toyMC)
median expected limit: r < 6.45641 @ 95%CL (1 toyMC)
   68% expected band : 6.45641 < r < 6.45641
   95% expected band : 6.45641 < r < 6.45641
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1907486004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.52081 +/- 0.0176383 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.52081 @ 95%CL (1 toyMC)
median expected limit: r < 8.52081 @ 95%CL (1 toyMC)
   68% expected band : 8.52081 < r < 8.52081
   95% expected band : 8.52081 < r < 8.52081
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -737534544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10138 +/- 0.0170497 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.10138 @ 95%CL (1 toyMC)
median expected limit: r < 7.10138 @ 95%CL (1 toyMC)
   68% expected band : 7.10138 < r < 7.10138
   95% expected band : 7.10138 < r < 7.10138
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 364571339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.2867 +/- 0.0186982 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.2867 @ 95%CL (1 toyMC)
median expected limit: r < 8.2867 @ 95%CL (1 toyMC)
   68% expected band : 8.2867 < r < 8.2867
   95% expected band : 8.2867 < r < 8.2867
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -958962069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5021 +/- 0.0168634 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.5021 @ 95%CL (1 toyMC)
median expected limit: r < 13.5021 @ 95%CL (1 toyMC)
   68% expected band : 13.5021 < r < 13.5021
   95% expected band : 13.5021 < r < 13.5021
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 401529356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.11986 +/- 0.0161473 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.11986 @ 95%CL (1 toyMC)
median expected limit: r < 9.11986 @ 95%CL (1 toyMC)
   68% expected band : 9.11986 < r < 9.11986
   95% expected band : 9.11986 < r < 9.11986
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 832767699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.93632 +/- 0.0161996 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.93632 @ 95%CL (1 toyMC)
median expected limit: r < 6.93632 @ 95%CL (1 toyMC)
   68% expected band : 6.93632 < r < 6.93632
   95% expected band : 6.93632 < r < 6.93632
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 414064340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.99856 +/- 0.0160496 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.99856 @ 95%CL (1 toyMC)
median expected limit: r < 8.99856 @ 95%CL (1 toyMC)
   68% expected band : 8.99856 < r < 8.99856
   95% expected band : 8.99856 < r < 8.99856
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1105202321
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.91421 +/- 0.0170414 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.91421 @ 95%CL (1 toyMC)
median expected limit: r < 6.91421 @ 95%CL (1 toyMC)
   68% expected band : 6.91421 < r < 6.91421
   95% expected band : 6.91421 < r < 6.91421
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2012834286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9885 +/- 0.0124948 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.9885 @ 95%CL (1 toyMC)
median expected limit: r < 16.9885 @ 95%CL (1 toyMC)
   68% expected band : 16.9885 < r < 16.9885
   95% expected band : 16.9885 < r < 16.9885
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -600917893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5799 +/- 0.0202416 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5799 @ 95%CL (1 toyMC)
median expected limit: r < 10.5799 @ 95%CL (1 toyMC)
   68% expected band : 10.5799 < r < 10.5799
   95% expected band : 10.5799 < r < 10.5799
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -317229140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2333 +/- 0.0179531 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.2333 @ 95%CL (1 toyMC)
median expected limit: r < 10.2333 @ 95%CL (1 toyMC)
   68% expected band : 10.2333 < r < 10.2333
   95% expected band : 10.2333 < r < 10.2333
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 781912246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.26839 +/- 0.019117 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.26839 @ 95%CL (1 toyMC)
median expected limit: r < 8.26839 @ 95%CL (1 toyMC)
   68% expected band : 8.26839 < r < 8.26839
   95% expected band : 8.26839 < r < 8.26839
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1068367290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.44315 +/- 0.0162406 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 6.44315 @ 95%CL (1 toyMC)
median expected limit: r < 6.44315 @ 95%CL (1 toyMC)
   68% expected band : 6.44315 < r < 6.44315
   95% expected band : 6.44315 < r < 6.44315
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1470987645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5542 +/- 0.0154242 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5542 @ 95%CL (1 toyMC)
median expected limit: r < 10.5542 @ 95%CL (1 toyMC)
   68% expected band : 10.5542 < r < 10.5542
   95% expected band : 10.5542 < r < 10.5542
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -587446005
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.46513 +/- 0.0177546 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.46513 @ 95%CL (1 toyMC)
median expected limit: r < 7.46513 @ 95%CL (1 toyMC)
   68% expected band : 7.46513 < r < 7.46513
   95% expected band : 7.46513 < r < 7.46513
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -589680275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1413 +/- 0.0211742 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.1413 @ 95%CL (1 toyMC)
median expected limit: r < 10.1413 @ 95%CL (1 toyMC)
   68% expected band : 10.1413 < r < 10.1413
   95% expected band : 10.1413 < r < 10.1413
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1012179788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.60325 +/- 0.013389 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.60325 @ 95%CL (1 toyMC)
median expected limit: r < 6.60325 @ 95%CL (1 toyMC)
   68% expected band : 6.60325 < r < 6.60325
   95% expected band : 6.60325 < r < 6.60325
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -54117927
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4254 +/- 0.00602472 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.4254 @ 95%CL (1 toyMC)
median expected limit: r < 18.4254 @ 95%CL (1 toyMC)
   68% expected band : 18.4254 < r < 18.4254
   95% expected band : 18.4254 < r < 18.4254
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1249616218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.97822 +/- 0.014559 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.97822 @ 95%CL (1 toyMC)
median expected limit: r < 9.97822 @ 95%CL (1 toyMC)
   68% expected band : 9.97822 < r < 9.97822
   95% expected band : 9.97822 < r < 9.97822
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1185108185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.84367 +/- 0.0176545 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.84367 @ 95%CL (1 toyMC)
median expected limit: r < 7.84367 @ 95%CL (1 toyMC)
   68% expected band : 7.84367 < r < 7.84367
   95% expected band : 7.84367 < r < 7.84367
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -524691878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.88124 +/- 0.0128243 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.88124 @ 95%CL (1 toyMC)
median expected limit: r < 6.88124 @ 95%CL (1 toyMC)
   68% expected band : 6.88124 < r < 6.88124
   95% expected band : 6.88124 < r < 6.88124
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 825112310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7272 +/- 0.0165419 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.7272 @ 95%CL (1 toyMC)
median expected limit: r < 14.7272 @ 95%CL (1 toyMC)
   68% expected band : 14.7272 < r < 14.7272
   95% expected band : 14.7272 < r < 14.7272
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -537919974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9103 +/- 0.0154166 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.9103 @ 95%CL (1 toyMC)
median expected limit: r < 10.9103 @ 95%CL (1 toyMC)
   68% expected band : 10.9103 < r < 10.9103
   95% expected band : 10.9103 < r < 10.9103
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1367622084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.49352 +/- 0.0199821 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.49352 @ 95%CL (1 toyMC)
median expected limit: r < 7.49352 @ 95%CL (1 toyMC)
   68% expected band : 7.49352 < r < 7.49352
   95% expected band : 7.49352 < r < 7.49352
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -691894594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.60317 +/- 0.0111517 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.60317 @ 95%CL (1 toyMC)
median expected limit: r < 5.60317 @ 95%CL (1 toyMC)
   68% expected band : 5.60317 < r < 5.60317
   95% expected band : 5.60317 < r < 5.60317
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 326780591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.49609 +/- 0.016277 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.49609 @ 95%CL (1 toyMC)
median expected limit: r < 8.49609 @ 95%CL (1 toyMC)
   68% expected band : 8.49609 < r < 8.49609
   95% expected band : 8.49609 < r < 8.49609
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1180012174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.923 +/- 0.0120307 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.923 @ 95%CL (1 toyMC)
median expected limit: r < 16.923 @ 95%CL (1 toyMC)
   68% expected band : 16.923 < r < 16.923
   95% expected band : 16.923 < r < 16.923
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1802352249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3591 +/- 0.0186752 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.3591 @ 95%CL (1 toyMC)
median expected limit: r < 12.3591 @ 95%CL (1 toyMC)
   68% expected band : 12.3591 < r < 12.3591
   95% expected band : 12.3591 < r < 12.3591
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1423370253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.99043 +/- 0.0202918 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.99043 @ 95%CL (1 toyMC)
median expected limit: r < 8.99043 @ 95%CL (1 toyMC)
   68% expected band : 8.99043 < r < 8.99043
   95% expected band : 8.99043 < r < 8.99043
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1208988175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7866 +/- 0.0114449 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.7866 @ 95%CL (1 toyMC)
median expected limit: r < 16.7866 @ 95%CL (1 toyMC)
   68% expected band : 16.7866 < r < 16.7866
   95% expected band : 16.7866 < r < 16.7866
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1595623395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5266 +/- 0.0133202 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.5266 @ 95%CL (1 toyMC)
median expected limit: r < 14.5266 @ 95%CL (1 toyMC)
   68% expected band : 14.5266 < r < 14.5266
   95% expected band : 14.5266 < r < 14.5266
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1490408635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2327 +/- 0.018502 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.2327 @ 95%CL (1 toyMC)
median expected limit: r < 12.2327 @ 95%CL (1 toyMC)
   68% expected band : 12.2327 < r < 12.2327
   95% expected band : 12.2327 < r < 12.2327
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2076345261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.90472 +/- 0.0181879 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.90472 @ 95%CL (1 toyMC)
median expected limit: r < 6.90472 @ 95%CL (1 toyMC)
   68% expected band : 6.90472 < r < 6.90472
   95% expected band : 6.90472 < r < 6.90472
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1847355511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3675 +/- 0.0109189 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.3675 @ 95%CL (1 toyMC)
median expected limit: r < 16.3675 @ 95%CL (1 toyMC)
   68% expected band : 16.3675 < r < 16.3675
   95% expected band : 16.3675 < r < 16.3675
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 648936589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.27912 +/- 0.019205 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.27912 @ 95%CL (1 toyMC)
median expected limit: r < 9.27912 @ 95%CL (1 toyMC)
   68% expected band : 9.27912 < r < 9.27912
   95% expected band : 9.27912 < r < 9.27912
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1297250248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.63114 +/- 0.0185424 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.63114 @ 95%CL (1 toyMC)
median expected limit: r < 8.63114 @ 95%CL (1 toyMC)
   68% expected band : 8.63114 < r < 8.63114
   95% expected band : 8.63114 < r < 8.63114
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -676615633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.86581 +/- 0.0184519 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.86581 @ 95%CL (1 toyMC)
median expected limit: r < 9.86581 @ 95%CL (1 toyMC)
   68% expected band : 9.86581 < r < 9.86581
   95% expected band : 9.86581 < r < 9.86581
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1598298580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.88403 +/- 0.016537 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.88403 @ 95%CL (1 toyMC)
median expected limit: r < 7.88403 @ 95%CL (1 toyMC)
   68% expected band : 7.88403 < r < 7.88403
   95% expected band : 7.88403 < r < 7.88403
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 957617947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19315 +/- 0.0139169 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.19315 @ 95%CL (1 toyMC)
median expected limit: r < 6.19315 @ 95%CL (1 toyMC)
   68% expected band : 6.19315 < r < 6.19315
   95% expected band : 6.19315 < r < 6.19315
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1805185989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.67436 +/- 0.0141405 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.67436 @ 95%CL (1 toyMC)
median expected limit: r < 6.67436 @ 95%CL (1 toyMC)
   68% expected band : 6.67436 < r < 6.67436
   95% expected band : 6.67436 < r < 6.67436
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -571220430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3967 +/- 0.0191646 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.3967 @ 95%CL (1 toyMC)
median expected limit: r < 11.3967 @ 95%CL (1 toyMC)
   68% expected band : 11.3967 < r < 11.3967
   95% expected band : 11.3967 < r < 11.3967
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1289958126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6378 +/- 0.0107411 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.6378 @ 95%CL (1 toyMC)
median expected limit: r < 16.6378 @ 95%CL (1 toyMC)
   68% expected band : 16.6378 < r < 16.6378
   95% expected band : 16.6378 < r < 16.6378
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1253032598
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9227 +/- 0.0167835 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.9227 @ 95%CL (1 toyMC)
median expected limit: r < 12.9227 @ 95%CL (1 toyMC)
   68% expected band : 12.9227 < r < 12.9227
   95% expected band : 12.9227 < r < 12.9227
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 302951098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.60977 +/- 0.0140623 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.60977 @ 95%CL (1 toyMC)
median expected limit: r < 9.60977 @ 95%CL (1 toyMC)
   68% expected band : 9.60977 < r < 9.60977
   95% expected band : 9.60977 < r < 9.60977
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2050418719
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.74711 +/- 0.0150309 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.74711 @ 95%CL (1 toyMC)
median expected limit: r < 7.74711 @ 95%CL (1 toyMC)
   68% expected band : 7.74711 < r < 7.74711
   95% expected band : 7.74711 < r < 7.74711
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -481101922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3411 +/- 0.0141094 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.3411 @ 95%CL (1 toyMC)
median expected limit: r < 10.3411 @ 95%CL (1 toyMC)
   68% expected band : 10.3411 < r < 10.3411
   95% expected band : 10.3411 < r < 10.3411
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1407764609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.2781 +/- 0.0170515 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.2781 @ 95%CL (1 toyMC)
median expected limit: r < 9.2781 @ 95%CL (1 toyMC)
   68% expected band : 9.2781 < r < 9.2781
   95% expected band : 9.2781 < r < 9.2781
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2086288519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8864 +/- 0.0181497 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.8864 @ 95%CL (1 toyMC)
median expected limit: r < 10.8864 @ 95%CL (1 toyMC)
   68% expected band : 10.8864 < r < 10.8864
   95% expected band : 10.8864 < r < 10.8864
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 591154060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.22079 +/- 0.0169712 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.22079 @ 95%CL (1 toyMC)
median expected limit: r < 8.22079 @ 95%CL (1 toyMC)
   68% expected band : 8.22079 < r < 8.22079
   95% expected band : 8.22079 < r < 8.22079
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1908844767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.44926 +/- 0.0180562 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.44926 @ 95%CL (1 toyMC)
median expected limit: r < 7.44926 @ 95%CL (1 toyMC)
   68% expected band : 7.44926 < r < 7.44926
   95% expected band : 7.44926 < r < 7.44926
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1786707647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99244 +/- 0.0141393 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.99244 @ 95%CL (1 toyMC)
median expected limit: r < 5.99244 @ 95%CL (1 toyMC)
   68% expected band : 5.99244 < r < 5.99244
   95% expected band : 5.99244 < r < 5.99244
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -225851940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9135 +/- 0.0210824 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.9135 @ 95%CL (1 toyMC)
median expected limit: r < 10.9135 @ 95%CL (1 toyMC)
   68% expected band : 10.9135 < r < 10.9135
   95% expected band : 10.9135 < r < 10.9135
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1205710587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7411 +/- 0.0173821 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.7411 @ 95%CL (1 toyMC)
median expected limit: r < 10.7411 @ 95%CL (1 toyMC)
   68% expected band : 10.7411 < r < 10.7411
   95% expected band : 10.7411 < r < 10.7411
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 659622422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.16615 +/- 0.0161797 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.16615 @ 95%CL (1 toyMC)
median expected limit: r < 8.16615 @ 95%CL (1 toyMC)
   68% expected band : 8.16615 < r < 8.16615
   95% expected band : 8.16615 < r < 8.16615
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -668564025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0499 +/- 0.0107642 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.0499 @ 95%CL (1 toyMC)
median expected limit: r < 5.0499 @ 95%CL (1 toyMC)
   68% expected band : 5.0499 < r < 5.0499
   95% expected band : 5.0499 < r < 5.0499
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1226578938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.98023 +/- 0.0131009 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.98023 @ 95%CL (1 toyMC)
median expected limit: r < 6.98023 @ 95%CL (1 toyMC)
   68% expected band : 6.98023 < r < 6.98023
   95% expected band : 6.98023 < r < 6.98023
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1077733645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.347 +/- 0.0209466 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.347 @ 95%CL (1 toyMC)
median expected limit: r < 8.347 @ 95%CL (1 toyMC)
   68% expected band : 8.347 < r < 8.347
   95% expected band : 8.347 < r < 8.347
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1417648339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1546 +/- 0.0167296 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.1546 @ 95%CL (1 toyMC)
median expected limit: r < 10.1546 @ 95%CL (1 toyMC)
   68% expected band : 10.1546 < r < 10.1546
   95% expected band : 10.1546 < r < 10.1546
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 734389255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.25533 +/- 0.0163132 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.25533 @ 95%CL (1 toyMC)
median expected limit: r < 8.25533 @ 95%CL (1 toyMC)
   68% expected band : 8.25533 < r < 8.25533
   95% expected band : 8.25533 < r < 8.25533
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1324825744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.98067 +/- 0.0157937 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.98067 @ 95%CL (1 toyMC)
median expected limit: r < 7.98067 @ 95%CL (1 toyMC)
   68% expected band : 7.98067 < r < 7.98067
   95% expected band : 7.98067 < r < 7.98067
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1532777761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8959 +/- 0.0166785 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.8959 @ 95%CL (1 toyMC)
median expected limit: r < 11.8959 @ 95%CL (1 toyMC)
   68% expected band : 11.8959 < r < 11.8959
   95% expected band : 11.8959 < r < 11.8959
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1345392817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3259 +/- 0.0176262 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.3259 @ 95%CL (1 toyMC)
median expected limit: r < 12.3259 @ 95%CL (1 toyMC)
   68% expected band : 12.3259 < r < 12.3259
   95% expected band : 12.3259 < r < 12.3259
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1801116917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.81109 +/- 0.0132333 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.81109 @ 95%CL (1 toyMC)
median expected limit: r < 5.81109 @ 95%CL (1 toyMC)
   68% expected band : 5.81109 < r < 5.81109
   95% expected band : 5.81109 < r < 5.81109
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1090848815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6169 +/- 0.0175902 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.6169 @ 95%CL (1 toyMC)
median expected limit: r < 12.6169 @ 95%CL (1 toyMC)
   68% expected band : 12.6169 < r < 12.6169
   95% expected band : 12.6169 < r < 12.6169
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -635170168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6469 +/- 0.0159058 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.6469 @ 95%CL (1 toyMC)
median expected limit: r < 13.6469 @ 95%CL (1 toyMC)
   68% expected band : 13.6469 < r < 13.6469
   95% expected band : 13.6469 < r < 13.6469
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -799442713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6096 +/- 0.0145826 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.6096 @ 95%CL (1 toyMC)
median expected limit: r < 14.6096 @ 95%CL (1 toyMC)
   68% expected band : 14.6096 < r < 14.6096
   95% expected band : 14.6096 < r < 14.6096
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1330924359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0801 +/- 0.0133862 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.0801 @ 95%CL (1 toyMC)
median expected limit: r < 5.0801 @ 95%CL (1 toyMC)
   68% expected band : 5.0801 < r < 5.0801
   95% expected band : 5.0801 < r < 5.0801
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1601575484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.77133 +/- 0.0165853 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.77133 @ 95%CL (1 toyMC)
median expected limit: r < 9.77133 @ 95%CL (1 toyMC)
   68% expected band : 9.77133 < r < 9.77133
   95% expected band : 9.77133 < r < 9.77133
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1185295994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1833 +/- 0.0162472 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.1833 @ 95%CL (1 toyMC)
median expected limit: r < 13.1833 @ 95%CL (1 toyMC)
   68% expected band : 13.1833 < r < 13.1833
   95% expected band : 13.1833 < r < 13.1833
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1899787452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0329 +/- 0.0154471 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.0329 @ 95%CL (1 toyMC)
median expected limit: r < 11.0329 @ 95%CL (1 toyMC)
   68% expected band : 11.0329 < r < 11.0329
   95% expected band : 11.0329 < r < 11.0329
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 191695292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.41878 +/- 0.0177075 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.41878 @ 95%CL (1 toyMC)
median expected limit: r < 7.41878 @ 95%CL (1 toyMC)
   68% expected band : 7.41878 < r < 7.41878
   95% expected band : 7.41878 < r < 7.41878
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 491028945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3228 +/- 0.0131454 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.3228 @ 95%CL (1 toyMC)
median expected limit: r < 16.3228 @ 95%CL (1 toyMC)
   68% expected band : 16.3228 < r < 16.3228
   95% expected band : 16.3228 < r < 16.3228
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -534749918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.88121 +/- 0.0158379 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.88121 @ 95%CL (1 toyMC)
median expected limit: r < 7.88121 @ 95%CL (1 toyMC)
   68% expected band : 7.88121 < r < 7.88121
   95% expected band : 7.88121 < r < 7.88121
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1778922753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.559 +/- 0.0166183 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.559 @ 95%CL (1 toyMC)
median expected limit: r < 14.559 @ 95%CL (1 toyMC)
   68% expected band : 14.559 < r < 14.559
   95% expected band : 14.559 < r < 14.559
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1257018389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.92873 +/- 0.0154609 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.92873 @ 95%CL (1 toyMC)
median expected limit: r < 8.92873 @ 95%CL (1 toyMC)
   68% expected band : 8.92873 < r < 8.92873
   95% expected band : 8.92873 < r < 8.92873
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1396346069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2022 +/- 0.0162536 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2022 @ 95%CL (1 toyMC)
median expected limit: r < 10.2022 @ 95%CL (1 toyMC)
   68% expected band : 10.2022 < r < 10.2022
   95% expected band : 10.2022 < r < 10.2022
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 47338407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.42506 +/- 0.0166189 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.42506 @ 95%CL (1 toyMC)
median expected limit: r < 8.42506 @ 95%CL (1 toyMC)
   68% expected band : 8.42506 < r < 8.42506
   95% expected band : 8.42506 < r < 8.42506
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1405825623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.53528 +/- 0.022514 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.53528 @ 95%CL (1 toyMC)
median expected limit: r < 8.53528 @ 95%CL (1 toyMC)
   68% expected band : 8.53528 < r < 8.53528
   95% expected band : 8.53528 < r < 8.53528
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1131103427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9504 +/- 0.0162126 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.9504 @ 95%CL (1 toyMC)
median expected limit: r < 10.9504 @ 95%CL (1 toyMC)
   68% expected band : 10.9504 < r < 10.9504
   95% expected band : 10.9504 < r < 10.9504
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -914133163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.30862 +/- 0.0170907 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.30862 @ 95%CL (1 toyMC)
median expected limit: r < 8.30862 @ 95%CL (1 toyMC)
   68% expected band : 8.30862 < r < 8.30862
   95% expected band : 8.30862 < r < 8.30862
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 985320348
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3497 +/- 0.0140841 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.3497 @ 95%CL (1 toyMC)
median expected limit: r < 12.3497 @ 95%CL (1 toyMC)
   68% expected band : 12.3497 < r < 12.3497
   95% expected band : 12.3497 < r < 12.3497
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 669900995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.15071 +/- 0.0148771 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 7.15071 @ 95%CL (1 toyMC)
median expected limit: r < 7.15071 @ 95%CL (1 toyMC)
   68% expected band : 7.15071 < r < 7.15071
   95% expected band : 7.15071 < r < 7.15071
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1283672941
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38712 +/- 0.0176001 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.38712 @ 95%CL (1 toyMC)
median expected limit: r < 7.38712 @ 95%CL (1 toyMC)
   68% expected band : 7.38712 < r < 7.38712
   95% expected band : 7.38712 < r < 7.38712
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1874904206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.40615 +/- 0.0155224 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.40615 @ 95%CL (1 toyMC)
median expected limit: r < 8.40615 @ 95%CL (1 toyMC)
   68% expected band : 8.40615 < r < 8.40615
   95% expected band : 8.40615 < r < 8.40615
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -775168175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2924 +/- 0.0190017 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.2924 @ 95%CL (1 toyMC)
median expected limit: r < 12.2924 @ 95%CL (1 toyMC)
   68% expected band : 12.2924 < r < 12.2924
   95% expected band : 12.2924 < r < 12.2924
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1698430416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.1163 +/- 0.0150351 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.1163 @ 95%CL (1 toyMC)
median expected limit: r < 9.1163 @ 95%CL (1 toyMC)
   68% expected band : 9.1163 < r < 9.1163
   95% expected band : 9.1163 < r < 9.1163
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -281321783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5957 +/- 0.0186312 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5957 @ 95%CL (1 toyMC)
median expected limit: r < 10.5957 @ 95%CL (1 toyMC)
   68% expected band : 10.5957 < r < 10.5957
   95% expected band : 10.5957 < r < 10.5957
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -714388732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.63535 +/- 0.0147947 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.63535 @ 95%CL (1 toyMC)
median expected limit: r < 5.63535 @ 95%CL (1 toyMC)
   68% expected band : 5.63535 < r < 5.63535
   95% expected band : 5.63535 < r < 5.63535
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -619740418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.92259 +/- 0.0165066 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.92259 @ 95%CL (1 toyMC)
median expected limit: r < 8.92259 @ 95%CL (1 toyMC)
   68% expected band : 8.92259 < r < 8.92259
   95% expected band : 8.92259 < r < 8.92259
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1905272882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8288 +/- 0.0144027 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.8288 @ 95%CL (1 toyMC)
median expected limit: r < 10.8288 @ 95%CL (1 toyMC)
   68% expected band : 10.8288 < r < 10.8288
   95% expected band : 10.8288 < r < 10.8288
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1270815154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.37572 +/- 0.0197385 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.37572 @ 95%CL (1 toyMC)
median expected limit: r < 9.37572 @ 95%CL (1 toyMC)
   68% expected band : 9.37572 < r < 9.37572
   95% expected band : 9.37572 < r < 9.37572
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -787226146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.64037 +/- 0.0167633 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.64037 @ 95%CL (1 toyMC)
median expected limit: r < 7.64037 @ 95%CL (1 toyMC)
   68% expected band : 7.64037 < r < 7.64037
   95% expected band : 7.64037 < r < 7.64037
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1102086641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.60003 +/- 0.0149531 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.60003 @ 95%CL (1 toyMC)
median expected limit: r < 8.60003 @ 95%CL (1 toyMC)
   68% expected band : 8.60003 < r < 8.60003
   95% expected band : 8.60003 < r < 8.60003
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1102086641.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1105202321.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1131103427.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1205710587.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1208988175.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1226578938.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1253032598.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1283672941.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1289958126.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1295546860.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1324825744.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1330924359.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1345392817.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1367622084.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1373883471.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1407764609.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1417648339.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1423370253.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1598298580.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1698430416.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1778922753.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1786707647.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1802352249.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1805185989.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1874904206.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1899787452.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1908844767.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1937524459.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2086288519.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-225851940.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-281321783.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-317229140.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-362445857.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-481101922.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-524691878.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-534749918.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-537919974.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-54117927.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-571220430.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-587446005.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-589680275.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-600917893.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-619740418.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-635170168.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-668564025.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-676615633.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-691894594.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-714388732.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-737534544.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-775168175.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-787226146.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-799442713.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.-914133163.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.-958962069.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1012179788.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1068367290.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1077733645.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1090848815.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1106767806.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1180012174.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1185108185.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1185295994.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1249616218.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1257018389.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1270815154.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1297250248.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1396346069.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1405825623.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1470987645.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1490408635.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1532777761.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1595623395.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1601575484.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1722834848.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1801116917.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1847355511.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1905272882.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1907486004.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.191695292.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2012834286.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2050418719.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2076345261.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.302951098.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.326780591.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.364571339.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.401529356.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.410710773.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.414064340.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.47338407.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.491028945.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.591154060.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.648936589.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.659622422.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.669900995.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.734389255.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.781912246.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.825112310.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.832767699.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.957617947.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.985320348.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 231515994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8433 +/- 0.0163238 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.8433 @ 95%CL (1 toyMC)
median expected limit: r < 11.8433 @ 95%CL (1 toyMC)
   68% expected band : 11.8433 < r < 11.8433
   95% expected band : 11.8433 < r < 11.8433
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1998608802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6225 +/- 0.00706559 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6225 @ 95%CL (1 toyMC)
median expected limit: r < 17.6225 @ 95%CL (1 toyMC)
   68% expected band : 17.6225 < r < 17.6225
   95% expected band : 17.6225 < r < 17.6225
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1443347549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.468 +/- 0.0156714 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.468 @ 95%CL (1 toyMC)
median expected limit: r < 11.468 @ 95%CL (1 toyMC)
   68% expected band : 11.468 < r < 11.468
   95% expected band : 11.468 < r < 11.468
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1028422565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4365 +/- 0.0129093 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.4365 @ 95%CL (1 toyMC)
median expected limit: r < 12.4365 @ 95%CL (1 toyMC)
   68% expected band : 12.4365 < r < 12.4365
   95% expected band : 12.4365 < r < 12.4365
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 301994350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.38948 +/- 0.0189452 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.38948 @ 95%CL (1 toyMC)
median expected limit: r < 9.38948 @ 95%CL (1 toyMC)
   68% expected band : 9.38948 < r < 9.38948
   95% expected band : 9.38948 < r < 9.38948
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -50344807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.229 +/- 0.0104598 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.229 @ 95%CL (1 toyMC)
median expected limit: r < 15.229 @ 95%CL (1 toyMC)
   68% expected band : 15.229 < r < 15.229
   95% expected band : 15.229 < r < 15.229
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1366262324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.61719 +/- 0.0118305 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.61719 @ 95%CL (1 toyMC)
median expected limit: r < 7.61719 @ 95%CL (1 toyMC)
   68% expected band : 7.61719 < r < 7.61719
   95% expected band : 7.61719 < r < 7.61719
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 953949856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0917 +/- 0.0179627 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.0917 @ 95%CL (1 toyMC)
median expected limit: r < 10.0917 @ 95%CL (1 toyMC)
   68% expected band : 10.0917 < r < 10.0917
   95% expected band : 10.0917 < r < 10.0917
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -624638794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.88094 +/- 0.0155043 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.88094 @ 95%CL (1 toyMC)
median expected limit: r < 7.88094 @ 95%CL (1 toyMC)
   68% expected band : 7.88094 < r < 7.88094
   95% expected band : 7.88094 < r < 7.88094
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -110652171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.20561 +/- 0.014197 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.20561 @ 95%CL (1 toyMC)
median expected limit: r < 7.20561 @ 95%CL (1 toyMC)
   68% expected band : 7.20561 < r < 7.20561
   95% expected band : 7.20561 < r < 7.20561
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1949033506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.31008 +/- 0.0118328 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.31008 @ 95%CL (1 toyMC)
median expected limit: r < 6.31008 @ 95%CL (1 toyMC)
   68% expected band : 6.31008 < r < 6.31008
   95% expected band : 6.31008 < r < 6.31008
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 225297070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99683 +/- 0.0117196 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.99683 @ 95%CL (1 toyMC)
median expected limit: r < 5.99683 @ 95%CL (1 toyMC)
   68% expected band : 5.99683 < r < 5.99683
   95% expected band : 5.99683 < r < 5.99683
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 370668564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.765 +/- 0.0140054 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.765 @ 95%CL (1 toyMC)
median expected limit: r < 11.765 @ 95%CL (1 toyMC)
   68% expected band : 11.765 < r < 11.765
   95% expected band : 11.765 < r < 11.765
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -758530340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0599 +/- 0.0153587 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.0599 @ 95%CL (1 toyMC)
median expected limit: r < 10.0599 @ 95%CL (1 toyMC)
   68% expected band : 10.0599 < r < 10.0599
   95% expected band : 10.0599 < r < 10.0599
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -585247971
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1194 +/- 0.0146899 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.1194 @ 95%CL (1 toyMC)
median expected limit: r < 13.1194 @ 95%CL (1 toyMC)
   68% expected band : 13.1194 < r < 13.1194
   95% expected band : 13.1194 < r < 13.1194
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1038671648
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9654 +/- 0.0180757 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.9654 @ 95%CL (1 toyMC)
median expected limit: r < 12.9654 @ 95%CL (1 toyMC)
   68% expected band : 12.9654 < r < 12.9654
   95% expected band : 12.9654 < r < 12.9654
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -904307615
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2888 +/- 0.0178993 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.2888 @ 95%CL (1 toyMC)
median expected limit: r < 10.2888 @ 95%CL (1 toyMC)
   68% expected band : 10.2888 < r < 10.2888
   95% expected band : 10.2888 < r < 10.2888
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -69453366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.18651 +/- 0.0123792 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.18651 @ 95%CL (1 toyMC)
median expected limit: r < 5.18651 @ 95%CL (1 toyMC)
   68% expected band : 5.18651 < r < 5.18651
   95% expected band : 5.18651 < r < 5.18651
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 260368087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.52982 +/- 0.0144021 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.52982 @ 95%CL (1 toyMC)
median expected limit: r < 9.52982 @ 95%CL (1 toyMC)
   68% expected band : 9.52982 < r < 9.52982
   95% expected band : 9.52982 < r < 9.52982
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1637448211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.58019 +/- 0.0162079 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.58019 @ 95%CL (1 toyMC)
median expected limit: r < 8.58019 @ 95%CL (1 toyMC)
   68% expected band : 8.58019 < r < 8.58019
   95% expected band : 8.58019 < r < 8.58019
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2056655656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.445 +/- 0.0129161 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.445 @ 95%CL (1 toyMC)
median expected limit: r < 14.445 @ 95%CL (1 toyMC)
   68% expected band : 14.445 < r < 14.445
   95% expected band : 14.445 < r < 14.445
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -412883940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2497 +/- 0.0185275 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.2497 @ 95%CL (1 toyMC)
median expected limit: r < 10.2497 @ 95%CL (1 toyMC)
   68% expected band : 10.2497 < r < 10.2497
   95% expected band : 10.2497 < r < 10.2497
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1339079561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5348 +/- 0.0144903 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5348 @ 95%CL (1 toyMC)
median expected limit: r < 10.5348 @ 95%CL (1 toyMC)
   68% expected band : 10.5348 < r < 10.5348
   95% expected band : 10.5348 < r < 10.5348
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1968292319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.24794 +/- 0.0139145 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 6.24794 @ 95%CL (1 toyMC)
median expected limit: r < 6.24794 @ 95%CL (1 toyMC)
   68% expected band : 6.24794 < r < 6.24794
   95% expected band : 6.24794 < r < 6.24794
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1570481327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1344 +/- 0.015698 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.1344 @ 95%CL (1 toyMC)
median expected limit: r < 11.1344 @ 95%CL (1 toyMC)
   68% expected band : 11.1344 < r < 11.1344
   95% expected band : 11.1344 < r < 11.1344
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -91602410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.41653 +/- 0.0131684 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.41653 @ 95%CL (1 toyMC)
median expected limit: r < 8.41653 @ 95%CL (1 toyMC)
   68% expected band : 8.41653 < r < 8.41653
   95% expected band : 8.41653 < r < 8.41653
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -974133630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3651 +/- 0.014844 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.3651 @ 95%CL (1 toyMC)
median expected limit: r < 12.3651 @ 95%CL (1 toyMC)
   68% expected band : 12.3651 < r < 12.3651
   95% expected band : 12.3651 < r < 12.3651
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -247097183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.17514 +/- 0.0132303 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 5.17514 @ 95%CL (1 toyMC)
median expected limit: r < 5.17514 @ 95%CL (1 toyMC)
   68% expected band : 5.17514 < r < 5.17514
   95% expected band : 5.17514 < r < 5.17514
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367077412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.994 +/- 0.0094366 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.994 @ 95%CL (1 toyMC)
median expected limit: r < 14.994 @ 95%CL (1 toyMC)
   68% expected band : 14.994 < r < 14.994
   95% expected band : 14.994 < r < 14.994
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 309099033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.12564 +/- 0.0130011 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.12564 @ 95%CL (1 toyMC)
median expected limit: r < 7.12564 @ 95%CL (1 toyMC)
   68% expected band : 7.12564 < r < 7.12564
   95% expected band : 7.12564 < r < 7.12564
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2052398579
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.20502 +/- 0.0122428 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.20502 @ 95%CL (1 toyMC)
median expected limit: r < 8.20502 @ 95%CL (1 toyMC)
   68% expected band : 8.20502 < r < 8.20502
   95% expected band : 8.20502 < r < 8.20502
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1976211547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.15301 +/- 0.0156663 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.15301 @ 95%CL (1 toyMC)
median expected limit: r < 8.15301 @ 95%CL (1 toyMC)
   68% expected band : 8.15301 < r < 8.15301
   95% expected band : 8.15301 < r < 8.15301
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1587321584
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.94318 +/- 0.0133563 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.94318 @ 95%CL (1 toyMC)
median expected limit: r < 8.94318 @ 95%CL (1 toyMC)
   68% expected band : 8.94318 < r < 8.94318
   95% expected band : 8.94318 < r < 8.94318
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1162221748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4922 +/- 0.0142127 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.4922 @ 95%CL (1 toyMC)
median expected limit: r < 11.4922 @ 95%CL (1 toyMC)
   68% expected band : 11.4922 < r < 11.4922
   95% expected band : 11.4922 < r < 11.4922
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 207858930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.66293 +/- 0.0126413 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.66293 @ 95%CL (1 toyMC)
median expected limit: r < 7.66293 @ 95%CL (1 toyMC)
   68% expected band : 7.66293 < r < 7.66293
   95% expected band : 7.66293 < r < 7.66293
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 754236338
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.58526 +/- 0.0132874 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.58526 @ 95%CL (1 toyMC)
median expected limit: r < 7.58526 @ 95%CL (1 toyMC)
   68% expected band : 7.58526 < r < 7.58526
   95% expected band : 7.58526 < r < 7.58526
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1677722381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.59133 +/- 0.014906 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.59133 @ 95%CL (1 toyMC)
median expected limit: r < 8.59133 @ 95%CL (1 toyMC)
   68% expected band : 8.59133 < r < 8.59133
   95% expected band : 8.59133 < r < 8.59133
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -924918688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0346 +/- 0.014271 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.0346 @ 95%CL (1 toyMC)
median expected limit: r < 14.0346 @ 95%CL (1 toyMC)
   68% expected band : 14.0346 < r < 14.0346
   95% expected band : 14.0346 < r < 14.0346
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -884687191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.5362 +/- 0.0135818 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.5362 @ 95%CL (1 toyMC)
median expected limit: r < 8.5362 @ 95%CL (1 toyMC)
   68% expected band : 8.5362 < r < 8.5362
   95% expected band : 8.5362 < r < 8.5362
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1281668175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.66103 +/- 0.0157929 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.66103 @ 95%CL (1 toyMC)
median expected limit: r < 9.66103 @ 95%CL (1 toyMC)
   68% expected band : 9.66103 < r < 9.66103
   95% expected band : 9.66103 < r < 9.66103
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -367117006
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.19058 +/- 0.0108264 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.19058 @ 95%CL (1 toyMC)
median expected limit: r < 5.19058 @ 95%CL (1 toyMC)
   68% expected band : 5.19058 < r < 5.19058
   95% expected band : 5.19058 < r < 5.19058
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1799837758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.20983 +/- 0.0119428 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.20983 @ 95%CL (1 toyMC)
median expected limit: r < 5.20983 @ 95%CL (1 toyMC)
   68% expected band : 5.20983 < r < 5.20983
   95% expected band : 5.20983 < r < 5.20983
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 41092059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.09079 +/- 0.0135559 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.09079 @ 95%CL (1 toyMC)
median expected limit: r < 9.09079 @ 95%CL (1 toyMC)
   68% expected band : 9.09079 < r < 9.09079
   95% expected band : 9.09079 < r < 9.09079
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2113208152
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9022 +/- 0.0139552 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.9022 @ 95%CL (1 toyMC)
median expected limit: r < 13.9022 @ 95%CL (1 toyMC)
   68% expected band : 13.9022 < r < 13.9022
   95% expected band : 13.9022 < r < 13.9022
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 241190707
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.304 +/- 0.0131673 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.304 @ 95%CL (1 toyMC)
median expected limit: r < 13.304 @ 95%CL (1 toyMC)
   68% expected band : 13.304 < r < 13.304
   95% expected band : 13.304 < r < 13.304
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1267542505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.35026 +/- 0.0129667 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.35026 @ 95%CL (1 toyMC)
median expected limit: r < 8.35026 @ 95%CL (1 toyMC)
   68% expected band : 8.35026 < r < 8.35026
   95% expected band : 8.35026 < r < 8.35026
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 669447822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7112 +/- 0.0123468 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.7112 @ 95%CL (1 toyMC)
median expected limit: r < 13.7112 @ 95%CL (1 toyMC)
   68% expected band : 13.7112 < r < 13.7112
   95% expected band : 13.7112 < r < 13.7112
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 852283500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.4079 +/- 0.0138565 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.4079 @ 95%CL (1 toyMC)
median expected limit: r < 9.4079 @ 95%CL (1 toyMC)
   68% expected band : 9.4079 < r < 9.4079
   95% expected band : 9.4079 < r < 9.4079
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 413922727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.93628 +/- 0.0151089 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.93628 @ 95%CL (1 toyMC)
median expected limit: r < 9.93628 @ 95%CL (1 toyMC)
   68% expected band : 9.93628 < r < 9.93628
   95% expected band : 9.93628 < r < 9.93628
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -22222847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.64583 +/- 0.0163953 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.64583 @ 95%CL (1 toyMC)
median expected limit: r < 8.64583 @ 95%CL (1 toyMC)
   68% expected band : 8.64583 < r < 8.64583
   95% expected band : 8.64583 < r < 8.64583
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2084697743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0461 +/- 0.0173812 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.0461 @ 95%CL (1 toyMC)
median expected limit: r < 12.0461 @ 95%CL (1 toyMC)
   68% expected band : 12.0461 < r < 12.0461
   95% expected band : 12.0461 < r < 12.0461
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1037949363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4673 +/- 0.0149393 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.4673 @ 95%CL (1 toyMC)
median expected limit: r < 13.4673 @ 95%CL (1 toyMC)
   68% expected band : 13.4673 < r < 13.4673
   95% expected band : 13.4673 < r < 13.4673
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2046312917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.37662 +/- 0.0154863 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.37662 @ 95%CL (1 toyMC)
median expected limit: r < 9.37662 @ 95%CL (1 toyMC)
   68% expected band : 9.37662 < r < 9.37662
   95% expected band : 9.37662 < r < 9.37662
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -385089975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5743 +/- 0.0100254 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.5743 @ 95%CL (1 toyMC)
median expected limit: r < 16.5743 @ 95%CL (1 toyMC)
   68% expected band : 16.5743 < r < 16.5743
   95% expected band : 16.5743 < r < 16.5743
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 703806183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.24748 +/- 0.0161078 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.24748 @ 95%CL (1 toyMC)
median expected limit: r < 9.24748 @ 95%CL (1 toyMC)
   68% expected band : 9.24748 < r < 9.24748
   95% expected band : 9.24748 < r < 9.24748
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1348724008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.20655 +/- 0.0104989 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.20655 @ 95%CL (1 toyMC)
median expected limit: r < 5.20655 @ 95%CL (1 toyMC)
   68% expected band : 5.20655 < r < 5.20655
   95% expected band : 5.20655 < r < 5.20655
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1074763040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.36029 +/- 0.0146519 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.36029 @ 95%CL (1 toyMC)
median expected limit: r < 7.36029 @ 95%CL (1 toyMC)
   68% expected band : 7.36029 < r < 7.36029
   95% expected band : 7.36029 < r < 7.36029
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1333922156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.65662 +/- 0.0150511 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.65662 @ 95%CL (1 toyMC)
median expected limit: r < 8.65662 @ 95%CL (1 toyMC)
   68% expected band : 8.65662 < r < 8.65662
   95% expected band : 8.65662 < r < 8.65662
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1896181053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.05895 +/- 0.0111557 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 6.05895 @ 95%CL (1 toyMC)
median expected limit: r < 6.05895 @ 95%CL (1 toyMC)
   68% expected band : 6.05895 < r < 6.05895
   95% expected band : 6.05895 < r < 6.05895
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1184458612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.95812 +/- 0.0123312 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.95812 @ 95%CL (1 toyMC)
median expected limit: r < 5.95812 @ 95%CL (1 toyMC)
   68% expected band : 5.95812 < r < 5.95812
   95% expected band : 5.95812 < r < 5.95812
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1968685548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.7727 +/- 0.0133386 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.7727 @ 95%CL (1 toyMC)
median expected limit: r < 8.7727 @ 95%CL (1 toyMC)
   68% expected band : 8.7727 < r < 8.7727
   95% expected band : 8.7727 < r < 8.7727
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1378844942
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9209 +/- 0.0175879 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.9209 @ 95%CL (1 toyMC)
median expected limit: r < 11.9209 @ 95%CL (1 toyMC)
   68% expected band : 11.9209 < r < 11.9209
   95% expected band : 11.9209 < r < 11.9209
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1852130156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8435 +/- 0.015642 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.8435 @ 95%CL (1 toyMC)
median expected limit: r < 12.8435 @ 95%CL (1 toyMC)
   68% expected band : 12.8435 < r < 12.8435
   95% expected band : 12.8435 < r < 12.8435
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1853654634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.23799 +/- 0.0100266 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 6.23799 @ 95%CL (1 toyMC)
median expected limit: r < 6.23799 @ 95%CL (1 toyMC)
   68% expected band : 6.23799 < r < 6.23799
   95% expected band : 6.23799 < r < 6.23799
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1042532175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.616 +/- 0.0108429 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.616 @ 95%CL (1 toyMC)
median expected limit: r < 15.616 @ 95%CL (1 toyMC)
   68% expected band : 15.616 < r < 15.616
   95% expected band : 15.616 < r < 15.616
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2006158653
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9435 +/- 0.00926573 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.9435 @ 95%CL (1 toyMC)
median expected limit: r < 15.9435 @ 95%CL (1 toyMC)
   68% expected band : 15.9435 < r < 15.9435
   95% expected band : 15.9435 < r < 15.9435
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2054822094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4762 +/- 0.0126009 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.4762 @ 95%CL (1 toyMC)
median expected limit: r < 13.4762 @ 95%CL (1 toyMC)
   68% expected band : 13.4762 < r < 13.4762
   95% expected band : 13.4762 < r < 13.4762
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 76241983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.35009 +/- 0.0156623 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.35009 @ 95%CL (1 toyMC)
median expected limit: r < 8.35009 @ 95%CL (1 toyMC)
   68% expected band : 8.35009 < r < 8.35009
   95% expected band : 8.35009 < r < 8.35009
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1375889663
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.11235 +/- 0.0123917 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.11235 @ 95%CL (1 toyMC)
median expected limit: r < 6.11235 @ 95%CL (1 toyMC)
   68% expected band : 6.11235 < r < 6.11235
   95% expected band : 6.11235 < r < 6.11235
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -144952652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5445 +/- 0.0126885 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.5445 @ 95%CL (1 toyMC)
median expected limit: r < 15.5445 @ 95%CL (1 toyMC)
   68% expected band : 15.5445 < r < 15.5445
   95% expected band : 15.5445 < r < 15.5445
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1036060553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.72652 +/- 0.0151823 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.72652 @ 95%CL (1 toyMC)
median expected limit: r < 8.72652 @ 95%CL (1 toyMC)
   68% expected band : 8.72652 < r < 8.72652
   95% expected band : 8.72652 < r < 8.72652
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1947840923
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.82623 +/- 0.0147202 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.82623 @ 95%CL (1 toyMC)
median expected limit: r < 8.82623 @ 95%CL (1 toyMC)
   68% expected band : 8.82623 < r < 8.82623
   95% expected band : 8.82623 < r < 8.82623
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1030998312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.17028 +/- 0.012147 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.17028 @ 95%CL (1 toyMC)
median expected limit: r < 5.17028 @ 95%CL (1 toyMC)
   68% expected band : 5.17028 < r < 5.17028
   95% expected band : 5.17028 < r < 5.17028
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2084848232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8537 +/- 0.0160405 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.8537 @ 95%CL (1 toyMC)
median expected limit: r < 11.8537 @ 95%CL (1 toyMC)
   68% expected band : 11.8537 < r < 11.8537
   95% expected band : 11.8537 < r < 11.8537
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 557148147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4734 +/- 0.00735414 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.4734 @ 95%CL (1 toyMC)
median expected limit: r < 17.4734 @ 95%CL (1 toyMC)
   68% expected band : 17.4734 < r < 17.4734
   95% expected band : 17.4734 < r < 17.4734
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1298545895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87796 +/- 0.0173863 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.87796 @ 95%CL (1 toyMC)
median expected limit: r < 9.87796 @ 95%CL (1 toyMC)
   68% expected band : 9.87796 < r < 9.87796
   95% expected band : 9.87796 < r < 9.87796
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1927577890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8385 +/- 0.0133481 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 11.8385 @ 95%CL (1 toyMC)
median expected limit: r < 11.8385 @ 95%CL (1 toyMC)
   68% expected band : 11.8385 < r < 11.8385
   95% expected band : 11.8385 < r < 11.8385
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1798359603
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.2605 +/- 0.013043 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.2605 @ 95%CL (1 toyMC)
median expected limit: r < 8.2605 @ 95%CL (1 toyMC)
   68% expected band : 8.2605 < r < 8.2605
   95% expected band : 8.2605 < r < 8.2605
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -201238595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.94952 +/- 0.0115402 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.94952 @ 95%CL (1 toyMC)
median expected limit: r < 5.94952 @ 95%CL (1 toyMC)
   68% expected band : 5.94952 < r < 5.94952
   95% expected band : 5.94952 < r < 5.94952
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1221495687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.64003 +/- 0.0153045 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.64003 @ 95%CL (1 toyMC)
median expected limit: r < 8.64003 @ 95%CL (1 toyMC)
   68% expected band : 8.64003 < r < 8.64003
   95% expected band : 8.64003 < r < 8.64003
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 394667825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.42373 +/- 0.0108713 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.42373 @ 95%CL (1 toyMC)
median expected limit: r < 7.42373 @ 95%CL (1 toyMC)
   68% expected band : 7.42373 < r < 7.42373
   95% expected band : 7.42373 < r < 7.42373
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 102829732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1419 +/- 0.00987012 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.1419 @ 95%CL (1 toyMC)
median expected limit: r < 16.1419 @ 95%CL (1 toyMC)
   68% expected band : 16.1419 < r < 16.1419
   95% expected band : 16.1419 < r < 16.1419
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -381904043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.00773 +/- 0.0117166 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 6.00773 @ 95%CL (1 toyMC)
median expected limit: r < 6.00773 @ 95%CL (1 toyMC)
   68% expected band : 6.00773 < r < 6.00773
   95% expected band : 6.00773 < r < 6.00773
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1920158438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.21553 +/- 0.0148504 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.21553 @ 95%CL (1 toyMC)
median expected limit: r < 7.21553 @ 95%CL (1 toyMC)
   68% expected band : 7.21553 < r < 7.21553
   95% expected band : 7.21553 < r < 7.21553
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1235520280
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.397 +/- 0.0143096 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.397 @ 95%CL (1 toyMC)
median expected limit: r < 11.397 @ 95%CL (1 toyMC)
   68% expected band : 11.397 < r < 11.397
   95% expected band : 11.397 < r < 11.397
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1065608462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.41531 +/- 0.0143542 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.41531 @ 95%CL (1 toyMC)
median expected limit: r < 8.41531 @ 95%CL (1 toyMC)
   68% expected band : 8.41531 < r < 8.41531
   95% expected band : 8.41531 < r < 8.41531
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 386422026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.90272 +/- 0.0163727 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.90272 @ 95%CL (1 toyMC)
median expected limit: r < 9.90272 @ 95%CL (1 toyMC)
   68% expected band : 9.90272 < r < 9.90272
   95% expected band : 9.90272 < r < 9.90272
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1733485814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7118 +/- 0.0163072 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.7118 @ 95%CL (1 toyMC)
median expected limit: r < 11.7118 @ 95%CL (1 toyMC)
   68% expected band : 11.7118 < r < 11.7118
   95% expected band : 11.7118 < r < 11.7118
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 5881258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5373 +/- 0.0193835 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5373 @ 95%CL (1 toyMC)
median expected limit: r < 10.5373 @ 95%CL (1 toyMC)
   68% expected band : 10.5373 < r < 10.5373
   95% expected band : 10.5373 < r < 10.5373
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1452741852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2652 +/- 0.0151476 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.2652 @ 95%CL (1 toyMC)
median expected limit: r < 10.2652 @ 95%CL (1 toyMC)
   68% expected band : 10.2652 < r < 10.2652
   95% expected band : 10.2652 < r < 10.2652
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1952271352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.02665 +/- 0.0169977 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.02665 @ 95%CL (1 toyMC)
median expected limit: r < 9.02665 @ 95%CL (1 toyMC)
   68% expected band : 9.02665 < r < 9.02665
   95% expected band : 9.02665 < r < 9.02665
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 447825891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5479 +/- 0.0155866 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5479 @ 95%CL (1 toyMC)
median expected limit: r < 10.5479 @ 95%CL (1 toyMC)
   68% expected band : 10.5479 < r < 10.5479
   95% expected band : 10.5479 < r < 10.5479
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1063647404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.20018 +/- 0.00768948 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.20018 @ 95%CL (1 toyMC)
median expected limit: r < 5.20018 @ 95%CL (1 toyMC)
   68% expected band : 5.20018 < r < 5.20018
   95% expected band : 5.20018 < r < 5.20018
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 325970484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.376 +/- 0.0164831 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.376 @ 95%CL (1 toyMC)
median expected limit: r < 10.376 @ 95%CL (1 toyMC)
   68% expected band : 10.376 < r < 10.376
   95% expected band : 10.376 < r < 10.376
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1584032350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9875 +/- 0.0152231 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.9875 @ 95%CL (1 toyMC)
median expected limit: r < 10.9875 @ 95%CL (1 toyMC)
   68% expected band : 10.9875 < r < 10.9875
   95% expected band : 10.9875 < r < 10.9875
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 648978798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.88986 +/- 0.0124175 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.88986 @ 95%CL (1 toyMC)
median expected limit: r < 5.88986 @ 95%CL (1 toyMC)
   68% expected band : 5.88986 < r < 5.88986
   95% expected band : 5.88986 < r < 5.88986
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -297442390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.7284 +/- 0.0154224 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.7284 @ 95%CL (1 toyMC)
median expected limit: r < 6.7284 @ 95%CL (1 toyMC)
   68% expected band : 6.7284 < r < 6.7284
   95% expected band : 6.7284 < r < 6.7284
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1283750604
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.47646 +/- 0.0151655 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.47646 @ 95%CL (1 toyMC)
median expected limit: r < 9.47646 @ 95%CL (1 toyMC)
   68% expected band : 9.47646 < r < 9.47646
   95% expected band : 9.47646 < r < 9.47646
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2087963619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3283 +/- 0.0187852 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.3283 @ 95%CL (1 toyMC)
median expected limit: r < 10.3283 @ 95%CL (1 toyMC)
   68% expected band : 10.3283 < r < 10.3283
   95% expected band : 10.3283 < r < 10.3283
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 46881709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.4164 +/- 0.0147926 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.4164 @ 95%CL (1 toyMC)
median expected limit: r < 7.4164 @ 95%CL (1 toyMC)
   68% expected band : 7.4164 < r < 7.4164
   95% expected band : 7.4164 < r < 7.4164
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1030998312.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1037949363.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1038671648.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1042532175.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1065608462.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1074763040.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-110652171.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1267542505.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1281668175.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1283750604.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1339079561.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1348724008.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1375889663.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1443347549.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-144952652.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1452741852.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1570481327.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1587321584.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1637448211.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1733485814.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1798359603.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1799837758.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1852130156.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1853654634.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1896181053.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1920158438.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1927577890.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1952271352.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-1968292319.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-1968685548.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-1976211547.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-1998608802.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-201238595.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-2046312917.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-2054822094.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-2056655656.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-2087963619.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-2113208152.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-22222847.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-247097183.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-297442390.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-367117006.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-381904043.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-385089975.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-412883940.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-50344807.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-585247971.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-624638794.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-69453366.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-758530340.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-884687191.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-904307615.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.-91602410.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.-924918688.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.-974133630.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.102829732.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1028422565.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1036060553.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1063647404.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1162221748.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1184458612.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1221495687.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1235520280.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1298545895.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1333922156.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1366262324.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1367077412.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1378844942.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1584032350.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1677722381.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1947840923.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1949033506.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.2006158653.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.2052398579.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.207858930.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.2084697743.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2084848232.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.225297070.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.231515994.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.241190707.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.260368087.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.301994350.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.309099033.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.325970484.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.370668564.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.386422026.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.394667825.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.41092059.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.413922727.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.447825891.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.46881709.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.557148147.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.5881258.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.648978798.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.669447822.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.703806183.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.754236338.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.76241983.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.852283500.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.953949856.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1024938253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3732 +/- 0.0145385 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.3732 @ 95%CL (1 toyMC)
median expected limit: r < 12.3732 @ 95%CL (1 toyMC)
   68% expected band : 12.3732 < r < 12.3732
   95% expected band : 12.3732 < r < 12.3732
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1590236517
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6646 +/- 0.0156555 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.6646 @ 95%CL (1 toyMC)
median expected limit: r < 13.6646 @ 95%CL (1 toyMC)
   68% expected band : 13.6646 < r < 13.6646
   95% expected band : 13.6646 < r < 13.6646
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 314193911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.47997 +/- 0.0109814 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.47997 @ 95%CL (1 toyMC)
median expected limit: r < 8.47997 @ 95%CL (1 toyMC)
   68% expected band : 8.47997 < r < 8.47997
   95% expected band : 8.47997 < r < 8.47997
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 481086436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3622 +/- 0.00843666 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.3622 @ 95%CL (1 toyMC)
median expected limit: r < 17.3622 @ 95%CL (1 toyMC)
   68% expected band : 17.3622 < r < 17.3622
   95% expected band : 17.3622 < r < 17.3622
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 238717001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8157 +/- 0.0154969 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.8157 @ 95%CL (1 toyMC)
median expected limit: r < 12.8157 @ 95%CL (1 toyMC)
   68% expected band : 12.8157 < r < 12.8157
   95% expected band : 12.8157 < r < 12.8157
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1123159113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5077 +/- 0.0112122 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.5077 @ 95%CL (1 toyMC)
median expected limit: r < 14.5077 @ 95%CL (1 toyMC)
   68% expected band : 14.5077 < r < 14.5077
   95% expected band : 14.5077 < r < 14.5077
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -498881443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.4705 +/- 0.0171559 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.4705 @ 95%CL (1 toyMC)
median expected limit: r < 9.4705 @ 95%CL (1 toyMC)
   68% expected band : 9.4705 < r < 9.4705
   95% expected band : 9.4705 < r < 9.4705
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1241778852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.41313 +/- 0.0142369 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.41313 @ 95%CL (1 toyMC)
median expected limit: r < 9.41313 @ 95%CL (1 toyMC)
   68% expected band : 9.41313 < r < 9.41313
   95% expected band : 9.41313 < r < 9.41313
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1274991248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.91113 +/- 0.0141396 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.91113 @ 95%CL (1 toyMC)
median expected limit: r < 7.91113 @ 95%CL (1 toyMC)
   68% expected band : 7.91113 < r < 7.91113
   95% expected band : 7.91113 < r < 7.91113
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 738241735
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5483 +/- 0.0155438 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5483 @ 95%CL (1 toyMC)
median expected limit: r < 10.5483 @ 95%CL (1 toyMC)
   68% expected band : 10.5483 < r < 10.5483
   95% expected band : 10.5483 < r < 10.5483
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1478097842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1235 +/- 0.00871954 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.1235 @ 95%CL (1 toyMC)
median expected limit: r < 16.1235 @ 95%CL (1 toyMC)
   68% expected band : 16.1235 < r < 16.1235
   95% expected band : 16.1235 < r < 16.1235
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 397651396
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.36788 +/- 0.0139813 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.36788 @ 95%CL (1 toyMC)
median expected limit: r < 7.36788 @ 95%CL (1 toyMC)
   68% expected band : 7.36788 < r < 7.36788
   95% expected band : 7.36788 < r < 7.36788
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1900909315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.3432 +/- 0.0195559 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.3432 @ 95%CL (1 toyMC)
median expected limit: r < 8.3432 @ 95%CL (1 toyMC)
   68% expected band : 8.3432 < r < 8.3432
   95% expected band : 8.3432 < r < 8.3432
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1030194290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.39309 +/- 0.0139476 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.39309 @ 95%CL (1 toyMC)
median expected limit: r < 9.39309 @ 95%CL (1 toyMC)
   68% expected band : 9.39309 < r < 9.39309
   95% expected band : 9.39309 < r < 9.39309
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1143540349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.41105 +/- 0.0142721 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.41105 @ 95%CL (1 toyMC)
median expected limit: r < 7.41105 @ 95%CL (1 toyMC)
   68% expected band : 7.41105 < r < 7.41105
   95% expected band : 7.41105 < r < 7.41105
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1737432410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6892 +/- 0.0135592 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.6892 @ 95%CL (1 toyMC)
median expected limit: r < 12.6892 @ 95%CL (1 toyMC)
   68% expected band : 12.6892 < r < 12.6892
   95% expected band : 12.6892 < r < 12.6892
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 184983713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.42674 +/- 0.0146269 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.42674 @ 95%CL (1 toyMC)
median expected limit: r < 9.42674 @ 95%CL (1 toyMC)
   68% expected band : 9.42674 < r < 9.42674
   95% expected band : 9.42674 < r < 9.42674
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1524286036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.91958 +/- 0.0182243 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.91958 @ 95%CL (1 toyMC)
median expected limit: r < 8.91958 @ 95%CL (1 toyMC)
   68% expected band : 8.91958 < r < 8.91958
   95% expected band : 8.91958 < r < 8.91958
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1284940370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.535 +/- 0.00949009 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.535 @ 95%CL (1 toyMC)
median expected limit: r < 16.535 @ 95%CL (1 toyMC)
   68% expected band : 16.535 < r < 16.535
   95% expected band : 16.535 < r < 16.535
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1916423141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.762 +/- 0.0143362 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.762 @ 95%CL (1 toyMC)
median expected limit: r < 10.762 @ 95%CL (1 toyMC)
   68% expected band : 10.762 < r < 10.762
   95% expected band : 10.762 < r < 10.762
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1989738273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.72491 +/- 0.0161837 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.72491 @ 95%CL (1 toyMC)
median expected limit: r < 9.72491 @ 95%CL (1 toyMC)
   68% expected band : 9.72491 < r < 9.72491
   95% expected band : 9.72491 < r < 9.72491
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1128081736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.82467 +/- 0.0129831 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.82467 @ 95%CL (1 toyMC)
median expected limit: r < 7.82467 @ 95%CL (1 toyMC)
   68% expected band : 7.82467 < r < 7.82467
   95% expected band : 7.82467 < r < 7.82467
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1342542791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.26837 +/- 0.0183841 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.26837 @ 95%CL (1 toyMC)
median expected limit: r < 9.26837 @ 95%CL (1 toyMC)
   68% expected band : 9.26837 < r < 9.26837
   95% expected band : 9.26837 < r < 9.26837
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1091336089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.36992 +/- 0.0148088 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.36992 @ 95%CL (1 toyMC)
median expected limit: r < 9.36992 @ 95%CL (1 toyMC)
   68% expected band : 9.36992 < r < 9.36992
   95% expected band : 9.36992 < r < 9.36992
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1785834275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2666 +/- 0.0171765 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.2666 @ 95%CL (1 toyMC)
median expected limit: r < 11.2666 @ 95%CL (1 toyMC)
   68% expected band : 11.2666 < r < 11.2666
   95% expected band : 11.2666 < r < 11.2666
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1701890564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.129 +/- 0.0170681 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.129 @ 95%CL (1 toyMC)
median expected limit: r < 11.129 @ 95%CL (1 toyMC)
   68% expected band : 11.129 < r < 11.129
   95% expected band : 11.129 < r < 11.129
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1250631448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5708 +/- 0.0130113 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.5708 @ 95%CL (1 toyMC)
median expected limit: r < 12.5708 @ 95%CL (1 toyMC)
   68% expected band : 12.5708 < r < 12.5708
   95% expected band : 12.5708 < r < 12.5708
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1161549436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.90235 +/- 0.0174004 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.90235 @ 95%CL (1 toyMC)
median expected limit: r < 9.90235 @ 95%CL (1 toyMC)
   68% expected band : 9.90235 < r < 9.90235
   95% expected band : 9.90235 < r < 9.90235
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 167169127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4136 +/- 0.0146329 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.4136 @ 95%CL (1 toyMC)
median expected limit: r < 11.4136 @ 95%CL (1 toyMC)
   68% expected band : 11.4136 < r < 11.4136
   95% expected band : 11.4136 < r < 11.4136
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 641068514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8735 +/- 0.0104191 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.8735 @ 95%CL (1 toyMC)
median expected limit: r < 14.8735 @ 95%CL (1 toyMC)
   68% expected band : 14.8735 < r < 14.8735
   95% expected band : 14.8735 < r < 14.8735
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1282376583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.84037 +/- 0.0164027 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.84037 @ 95%CL (1 toyMC)
median expected limit: r < 7.84037 @ 95%CL (1 toyMC)
   68% expected band : 7.84037 < r < 7.84037
   95% expected band : 7.84037 < r < 7.84037
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 89839359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4472 +/- 0.0133765 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.4472 @ 95%CL (1 toyMC)
median expected limit: r < 11.4472 @ 95%CL (1 toyMC)
   68% expected band : 11.4472 < r < 11.4472
   95% expected band : 11.4472 < r < 11.4472
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1119774556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.713 +/- 0.0186046 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.713 @ 95%CL (1 toyMC)
median expected limit: r < 10.713 @ 95%CL (1 toyMC)
   68% expected band : 10.713 < r < 10.713
   95% expected band : 10.713 < r < 10.713
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1977653698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0312 +/- 0.0119422 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0312 @ 95%CL (1 toyMC)
median expected limit: r < 15.0312 @ 95%CL (1 toyMC)
   68% expected band : 15.0312 < r < 15.0312
   95% expected band : 15.0312 < r < 15.0312
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1145414385
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.37105 +/- 0.0145231 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.37105 @ 95%CL (1 toyMC)
median expected limit: r < 6.37105 @ 95%CL (1 toyMC)
   68% expected band : 6.37105 < r < 6.37105
   95% expected band : 6.37105 < r < 6.37105
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1407409815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.50629 +/- 0.0162095 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.50629 @ 95%CL (1 toyMC)
median expected limit: r < 9.50629 @ 95%CL (1 toyMC)
   68% expected band : 9.50629 < r < 9.50629
   95% expected band : 9.50629 < r < 9.50629
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 832712899
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1388 +/- 0.00637551 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.1388 @ 95%CL (1 toyMC)
median expected limit: r < 18.1388 @ 95%CL (1 toyMC)
   68% expected band : 18.1388 < r < 18.1388
   95% expected band : 18.1388 < r < 18.1388
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 57962268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.309 +/- 0.0158979 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.309 @ 95%CL (1 toyMC)
median expected limit: r < 13.309 @ 95%CL (1 toyMC)
   68% expected band : 13.309 < r < 13.309
   95% expected band : 13.309 < r < 13.309
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1286757126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.36451 +/- 0.0149878 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.36451 @ 95%CL (1 toyMC)
median expected limit: r < 7.36451 @ 95%CL (1 toyMC)
   68% expected band : 7.36451 < r < 7.36451
   95% expected band : 7.36451 < r < 7.36451
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1432069209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.68538 +/- 0.0157106 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.68538 @ 95%CL (1 toyMC)
median expected limit: r < 8.68538 @ 95%CL (1 toyMC)
   68% expected band : 8.68538 < r < 8.68538
   95% expected band : 8.68538 < r < 8.68538
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 348189038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7718 +/- 0.00845673 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.7718 @ 95%CL (1 toyMC)
median expected limit: r < 16.7718 @ 95%CL (1 toyMC)
   68% expected band : 16.7718 < r < 16.7718
   95% expected band : 16.7718 < r < 16.7718
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1133021592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9068 +/- 0.0162999 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.9068 @ 95%CL (1 toyMC)
median expected limit: r < 10.9068 @ 95%CL (1 toyMC)
   68% expected band : 10.9068 < r < 10.9068
   95% expected band : 10.9068 < r < 10.9068
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1214011320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7737 +/- 0.0124126 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.7737 @ 95%CL (1 toyMC)
median expected limit: r < 13.7737 @ 95%CL (1 toyMC)
   68% expected band : 13.7737 < r < 13.7737
   95% expected band : 13.7737 < r < 13.7737
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1569507159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.488 +/- 0.0176295 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.488 @ 95%CL (1 toyMC)
median expected limit: r < 10.488 @ 95%CL (1 toyMC)
   68% expected band : 10.488 < r < 10.488
   95% expected band : 10.488 < r < 10.488
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2145866083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.48909 +/- 0.0167709 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.48909 @ 95%CL (1 toyMC)
median expected limit: r < 9.48909 @ 95%CL (1 toyMC)
   68% expected band : 9.48909 < r < 9.48909
   95% expected band : 9.48909 < r < 9.48909
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 694931270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0173 +/- 0.0167188 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.0173 @ 95%CL (1 toyMC)
median expected limit: r < 11.0173 @ 95%CL (1 toyMC)
   68% expected band : 11.0173 < r < 11.0173
   95% expected band : 11.0173 < r < 11.0173
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1208085940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7703 +/- 0.0175048 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.7703 @ 95%CL (1 toyMC)
median expected limit: r < 12.7703 @ 95%CL (1 toyMC)
   68% expected band : 12.7703 < r < 12.7703
   95% expected band : 12.7703 < r < 12.7703
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1647525983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.39572 +/- 0.0105628 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.39572 @ 95%CL (1 toyMC)
median expected limit: r < 6.39572 @ 95%CL (1 toyMC)
   68% expected band : 6.39572 < r < 6.39572
   95% expected band : 6.39572 < r < 6.39572
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1595717658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.751 +/- 0.0166148 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.751 @ 95%CL (1 toyMC)
median expected limit: r < 10.751 @ 95%CL (1 toyMC)
   68% expected band : 10.751 < r < 10.751
   95% expected band : 10.751 < r < 10.751
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 314996758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.087 +/- 0.0168894 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.087 @ 95%CL (1 toyMC)
median expected limit: r < 11.087 @ 95%CL (1 toyMC)
   68% expected band : 11.087 < r < 11.087
   95% expected band : 11.087 < r < 11.087
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2056179175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9444 +/- 0.0135234 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 12.9444 @ 95%CL (1 toyMC)
median expected limit: r < 12.9444 @ 95%CL (1 toyMC)
   68% expected band : 12.9444 < r < 12.9444
   95% expected band : 12.9444 < r < 12.9444
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 913909241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.69454 +/- 0.0159476 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.69454 @ 95%CL (1 toyMC)
median expected limit: r < 8.69454 @ 95%CL (1 toyMC)
   68% expected band : 8.69454 < r < 8.69454
   95% expected band : 8.69454 < r < 8.69454
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2103424623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9057 +/- 0.0149932 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.9057 @ 95%CL (1 toyMC)
median expected limit: r < 10.9057 @ 95%CL (1 toyMC)
   68% expected band : 10.9057 < r < 10.9057
   95% expected band : 10.9057 < r < 10.9057
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 923607056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.075 +/- 0.0151458 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.075 @ 95%CL (1 toyMC)
median expected limit: r < 11.075 @ 95%CL (1 toyMC)
   68% expected band : 11.075 < r < 11.075
   95% expected band : 11.075 < r < 11.075
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -389247616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.81441 +/- 0.0142037 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.81441 @ 95%CL (1 toyMC)
median expected limit: r < 8.81441 @ 95%CL (1 toyMC)
   68% expected band : 8.81441 < r < 8.81441
   95% expected band : 8.81441 < r < 8.81441
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 792710670
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9688 +/- 0.0109791 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 14.9688 @ 95%CL (1 toyMC)
median expected limit: r < 14.9688 @ 95%CL (1 toyMC)
   68% expected band : 14.9688 < r < 14.9688
   95% expected band : 14.9688 < r < 14.9688
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1588851180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.13637 +/- 0.0132421 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.13637 @ 95%CL (1 toyMC)
median expected limit: r < 8.13637 @ 95%CL (1 toyMC)
   68% expected band : 8.13637 < r < 8.13637
   95% expected band : 8.13637 < r < 8.13637
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 599836671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.22215 +/- 0.0114897 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.22215 @ 95%CL (1 toyMC)
median expected limit: r < 9.22215 @ 95%CL (1 toyMC)
   68% expected band : 9.22215 < r < 9.22215
   95% expected band : 9.22215 < r < 9.22215
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 292344604
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.36288 +/- 0.0127649 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.36288 @ 95%CL (1 toyMC)
median expected limit: r < 7.36288 @ 95%CL (1 toyMC)
   68% expected band : 7.36288 < r < 7.36288
   95% expected band : 7.36288 < r < 7.36288
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -953586001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3295 +/- 0.0141503 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 12.3295 @ 95%CL (1 toyMC)
median expected limit: r < 12.3295 @ 95%CL (1 toyMC)
   68% expected band : 12.3295 < r < 12.3295
   95% expected band : 12.3295 < r < 12.3295
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1452584688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.09337 +/- 0.0189151 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.09337 @ 95%CL (1 toyMC)
median expected limit: r < 8.09337 @ 95%CL (1 toyMC)
   68% expected band : 8.09337 < r < 8.09337
   95% expected band : 8.09337 < r < 8.09337
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -247345664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.91108 +/- 0.0137788 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.91108 @ 95%CL (1 toyMC)
median expected limit: r < 7.91108 @ 95%CL (1 toyMC)
   68% expected band : 7.91108 < r < 7.91108
   95% expected band : 7.91108 < r < 7.91108
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 522686347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.8595 +/- 0.0157521 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.8595 @ 95%CL (1 toyMC)
median expected limit: r < 7.8595 @ 95%CL (1 toyMC)
   68% expected band : 7.8595 < r < 7.8595
   95% expected band : 7.8595 < r < 7.8595
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1848367893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.40332 +/- 0.0135772 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.40332 @ 95%CL (1 toyMC)
median expected limit: r < 7.40332 @ 95%CL (1 toyMC)
   68% expected band : 7.40332 < r < 7.40332
   95% expected band : 7.40332 < r < 7.40332
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1424209204
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.52034 +/- 0.0168929 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.52034 @ 95%CL (1 toyMC)
median expected limit: r < 8.52034 @ 95%CL (1 toyMC)
   68% expected band : 8.52034 < r < 8.52034
   95% expected band : 8.52034 < r < 8.52034
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -4506752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.831 +/- 0.016237 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.831 @ 95%CL (1 toyMC)
median expected limit: r < 10.831 @ 95%CL (1 toyMC)
   68% expected band : 10.831 < r < 10.831
   95% expected band : 10.831 < r < 10.831
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1386082283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.06206 +/- 0.0133668 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.06206 @ 95%CL (1 toyMC)
median expected limit: r < 8.06206 @ 95%CL (1 toyMC)
   68% expected band : 8.06206 < r < 8.06206
   95% expected band : 8.06206 < r < 8.06206
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1540185930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.85127 +/- 0.016506 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.85127 @ 95%CL (1 toyMC)
median expected limit: r < 7.85127 @ 95%CL (1 toyMC)
   68% expected band : 7.85127 < r < 7.85127
   95% expected band : 7.85127 < r < 7.85127
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -499435842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.59977 +/- 0.0186949 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.59977 @ 95%CL (1 toyMC)
median expected limit: r < 9.59977 @ 95%CL (1 toyMC)
   68% expected band : 9.59977 < r < 9.59977
   95% expected band : 9.59977 < r < 9.59977
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1372653420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.14435 +/- 0.0165111 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.14435 @ 95%CL (1 toyMC)
median expected limit: r < 7.14435 @ 95%CL (1 toyMC)
   68% expected band : 7.14435 < r < 7.14435
   95% expected band : 7.14435 < r < 7.14435
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 310673203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.43766 +/- 0.0130455 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.43766 @ 95%CL (1 toyMC)
median expected limit: r < 8.43766 @ 95%CL (1 toyMC)
   68% expected band : 8.43766 < r < 8.43766
   95% expected band : 8.43766 < r < 8.43766
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 88652865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.40767 +/- 0.0145611 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.40767 @ 95%CL (1 toyMC)
median expected limit: r < 9.40767 @ 95%CL (1 toyMC)
   68% expected band : 9.40767 < r < 9.40767
   95% expected band : 9.40767 < r < 9.40767
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -330007753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.08243 +/- 0.0146999 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.08243 @ 95%CL (1 toyMC)
median expected limit: r < 9.08243 @ 95%CL (1 toyMC)
   68% expected band : 9.08243 < r < 9.08243
   95% expected band : 9.08243 < r < 9.08243
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -250085320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8368 +/- 0.0152642 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.8368 @ 95%CL (1 toyMC)
median expected limit: r < 10.8368 @ 95%CL (1 toyMC)
   68% expected band : 10.8368 < r < 10.8368
   95% expected band : 10.8368 < r < 10.8368
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 201366877
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.308 +/- 0.0164668 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.308 @ 95%CL (1 toyMC)
median expected limit: r < 11.308 @ 95%CL (1 toyMC)
   68% expected band : 11.308 < r < 11.308
   95% expected band : 11.308 < r < 11.308
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 728910137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.57225 +/- 0.017222 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.57225 @ 95%CL (1 toyMC)
median expected limit: r < 9.57225 @ 95%CL (1 toyMC)
   68% expected band : 9.57225 < r < 9.57225
   95% expected band : 9.57225 < r < 9.57225
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1717762533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0128 +/- 0.0123 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0128 @ 95%CL (1 toyMC)
median expected limit: r < 15.0128 @ 95%CL (1 toyMC)
   68% expected band : 15.0128 < r < 15.0128
   95% expected band : 15.0128 < r < 15.0128
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 317994695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7932 +/- 0.0165244 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.7932 @ 95%CL (1 toyMC)
median expected limit: r < 11.7932 @ 95%CL (1 toyMC)
   68% expected band : 11.7932 < r < 11.7932
   95% expected band : 11.7932 < r < 11.7932
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 9644518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10827 +/- 0.015138 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 7.10827 @ 95%CL (1 toyMC)
median expected limit: r < 7.10827 @ 95%CL (1 toyMC)
   68% expected band : 7.10827 < r < 7.10827
   95% expected band : 7.10827 < r < 7.10827
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1813941440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5749 +/- 0.0102624 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5749 @ 95%CL (1 toyMC)
median expected limit: r < 16.5749 @ 95%CL (1 toyMC)
   68% expected band : 16.5749 < r < 16.5749
   95% expected band : 16.5749 < r < 16.5749
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 914664961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5221 +/- 0.0175734 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.5221 @ 95%CL (1 toyMC)
median expected limit: r < 12.5221 @ 95%CL (1 toyMC)
   68% expected band : 12.5221 < r < 12.5221
   95% expected band : 12.5221 < r < 12.5221
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -276746843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6052 +/- 0.0139501 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.6052 @ 95%CL (1 toyMC)
median expected limit: r < 13.6052 @ 95%CL (1 toyMC)
   68% expected band : 13.6052 < r < 13.6052
   95% expected band : 13.6052 < r < 13.6052
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1717235229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.8984 +/- 0.0145864 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.8984 @ 95%CL (1 toyMC)
median expected limit: r < 9.8984 @ 95%CL (1 toyMC)
   68% expected band : 9.8984 < r < 9.8984
   95% expected band : 9.8984 < r < 9.8984
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 832992826
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2838 +/- 0.0127079 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.2838 @ 95%CL (1 toyMC)
median expected limit: r < 13.2838 @ 95%CL (1 toyMC)
   68% expected band : 13.2838 < r < 13.2838
   95% expected band : 13.2838 < r < 13.2838
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1625399224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.42713 +/- 0.0163111 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.42713 @ 95%CL (1 toyMC)
median expected limit: r < 9.42713 @ 95%CL (1 toyMC)
   68% expected band : 9.42713 < r < 9.42713
   95% expected band : 9.42713 < r < 9.42713
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 195525613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5773 +/- 0.0169101 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5773 @ 95%CL (1 toyMC)
median expected limit: r < 10.5773 @ 95%CL (1 toyMC)
   68% expected band : 10.5773 < r < 10.5773
   95% expected band : 10.5773 < r < 10.5773
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1320646424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3753 +/- 0.00976075 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.3753 @ 95%CL (1 toyMC)
median expected limit: r < 16.3753 @ 95%CL (1 toyMC)
   68% expected band : 16.3753 < r < 16.3753
   95% expected band : 16.3753 < r < 16.3753
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -811736875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4369 +/- 0.0117669 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.4369 @ 95%CL (1 toyMC)
median expected limit: r < 15.4369 @ 95%CL (1 toyMC)
   68% expected band : 15.4369 < r < 15.4369
   95% expected band : 15.4369 < r < 15.4369
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1743321428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.27464 +/- 0.0173916 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.27464 @ 95%CL (1 toyMC)
median expected limit: r < 8.27464 @ 95%CL (1 toyMC)
   68% expected band : 8.27464 < r < 8.27464
   95% expected band : 8.27464 < r < 8.27464
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 845175350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8551 +/- 0.0146134 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.8551 @ 95%CL (1 toyMC)
median expected limit: r < 11.8551 @ 95%CL (1 toyMC)
   68% expected band : 11.8551 < r < 11.8551
   95% expected band : 11.8551 < r < 11.8551
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2023131196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.34377 +/- 0.0151563 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.34377 @ 95%CL (1 toyMC)
median expected limit: r < 9.34377 @ 95%CL (1 toyMC)
   68% expected band : 9.34377 < r < 9.34377
   95% expected band : 9.34377 < r < 9.34377
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 645759344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.12793 +/- 0.0145661 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.12793 @ 95%CL (1 toyMC)
median expected limit: r < 9.12793 @ 95%CL (1 toyMC)
   68% expected band : 9.12793 < r < 9.12793
   95% expected band : 9.12793 < r < 9.12793
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 387569128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.3574 +/- 0.01436 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.3574 @ 95%CL (1 toyMC)
median expected limit: r < 6.3574 @ 95%CL (1 toyMC)
   68% expected band : 6.3574 < r < 6.3574
   95% expected band : 6.3574 < r < 6.3574
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -932796607
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.74 +/- 0.0164235 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.74 @ 95%CL (1 toyMC)
median expected limit: r < 9.74 @ 95%CL (1 toyMC)
   68% expected band : 9.74 < r < 9.74
   95% expected band : 9.74 < r < 9.74
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 42685817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5168 +/- 0.014442 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.5168 @ 95%CL (1 toyMC)
median expected limit: r < 10.5168 @ 95%CL (1 toyMC)
   68% expected band : 10.5168 < r < 10.5168
   95% expected band : 10.5168 < r < 10.5168
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 358404447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.06278 +/- 0.0168096 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.06278 @ 95%CL (1 toyMC)
median expected limit: r < 9.06278 @ 95%CL (1 toyMC)
   68% expected band : 9.06278 < r < 9.06278
   95% expected band : 9.06278 < r < 9.06278
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 931668478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.4116 +/- 0.0158676 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.4116 @ 95%CL (1 toyMC)
median expected limit: r < 7.4116 @ 95%CL (1 toyMC)
   68% expected band : 7.4116 < r < 7.4116
   95% expected band : 7.4116 < r < 7.4116
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1277101261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10562 +/- 0.0154284 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.10562 @ 95%CL (1 toyMC)
median expected limit: r < 7.10562 @ 95%CL (1 toyMC)
   68% expected band : 7.10562 < r < 7.10562
   95% expected band : 7.10562 < r < 7.10562
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -349462771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6331 +/- 0.0156518 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.6331 @ 95%CL (1 toyMC)
median expected limit: r < 14.6331 @ 95%CL (1 toyMC)
   68% expected band : 14.6331 < r < 14.6331
   95% expected band : 14.6331 < r < 14.6331
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 132396045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.36364 +/- 0.012664 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.36364 @ 95%CL (1 toyMC)
median expected limit: r < 6.36364 @ 95%CL (1 toyMC)
   68% expected band : 6.36364 < r < 6.36364
   95% expected band : 6.36364 < r < 6.36364
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1119774556.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1128081736.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1143540349.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1208085940.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1241778852.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1282376583.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1284940370.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1286757126.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1342542791.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1386082283.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1424209204.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1524286036.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1590236517.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1647525983.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1717762533.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1737432410.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1743321428.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1848367893.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1916423141.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-2023131196.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-2145866083.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-247345664.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-250085320.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-276746843.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-330007753.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-349462771.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-389247616.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-4506752.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-498881443.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-499435842.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-811736875.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-932796607.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-953586001.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.1024938253.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.1030194290.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.1091336089.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.1123159113.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.1133021592.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.1145414385.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.1161549436.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.1214011320.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.1250631448.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.1274991248.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.1277101261.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.1320646424.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.132396045.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1372653420.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1407409815.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1432069209.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1452584688.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1478097842.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1540185930.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1569507159.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1588851180.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1595717658.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1625399224.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.167169127.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1701890564.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1717235229.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1785834275.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1813941440.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.184983713.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1900909315.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.195525613.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1977653698.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1989738273.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.201366877.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.2056179175.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.2103424623.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.238717001.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.292344604.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.310673203.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.314193911.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.314996758.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.317994695.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.348189038.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.358404447.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.387569128.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.397651396.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.42685817.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.481086436.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.522686347.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.57962268.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.599836671.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.641068514.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.645759344.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.694931270.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.728910137.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.738241735.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.792710670.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.832712899.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.832992826.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.845175350.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.88652865.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.89839359.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.913909241.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.914664961.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.923607056.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.931668478.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.9644518.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1046772717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7441 +/- 0.0153278 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.7441 @ 95%CL (1 toyMC)
median expected limit: r < 11.7441 @ 95%CL (1 toyMC)
   68% expected band : 11.7441 < r < 11.7441
   95% expected band : 11.7441 < r < 11.7441
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -388915841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2566 +/- 0.00871046 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2566 @ 95%CL (1 toyMC)
median expected limit: r < 16.2566 @ 95%CL (1 toyMC)
   68% expected band : 16.2566 < r < 16.2566
   95% expected band : 16.2566 < r < 16.2566
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1952722614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0701 +/- 0.00892611 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.0701 @ 95%CL (1 toyMC)
median expected limit: r < 15.0701 @ 95%CL (1 toyMC)
   68% expected band : 15.0701 < r < 15.0701
   95% expected band : 15.0701 < r < 15.0701
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 225800594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4055 +/- 0.0204795 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.4055 @ 95%CL (1 toyMC)
median expected limit: r < 11.4055 @ 95%CL (1 toyMC)
   68% expected band : 11.4055 < r < 11.4055
   95% expected band : 11.4055 < r < 11.4055
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 476221151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0969 +/- 0.0183818 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0969 @ 95%CL (1 toyMC)
median expected limit: r < 12.0969 @ 95%CL (1 toyMC)
   68% expected band : 12.0969 < r < 12.0969
   95% expected band : 12.0969 < r < 12.0969
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1537204390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3736 +/- 0.0164801 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.3736 @ 95%CL (1 toyMC)
median expected limit: r < 10.3736 @ 95%CL (1 toyMC)
   68% expected band : 10.3736 < r < 10.3736
   95% expected band : 10.3736 < r < 10.3736
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -739583126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2446 +/- 0.0163088 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2446 @ 95%CL (1 toyMC)
median expected limit: r < 10.2446 @ 95%CL (1 toyMC)
   68% expected band : 10.2446 < r < 10.2446
   95% expected band : 10.2446 < r < 10.2446
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -607359858
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5873 +/- 0.0104375 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.5873 @ 95%CL (1 toyMC)
median expected limit: r < 14.5873 @ 95%CL (1 toyMC)
   68% expected band : 14.5873 < r < 14.5873
   95% expected band : 14.5873 < r < 14.5873
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -256524578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.352 +/- 0.0114276 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.352 @ 95%CL (1 toyMC)
median expected limit: r < 14.352 @ 95%CL (1 toyMC)
   68% expected band : 14.352 < r < 14.352
   95% expected band : 14.352 < r < 14.352
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1845101936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5434 +/- 0.00851561 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5434 @ 95%CL (1 toyMC)
median expected limit: r < 16.5434 @ 95%CL (1 toyMC)
   68% expected band : 16.5434 < r < 16.5434
   95% expected band : 16.5434 < r < 16.5434
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 204364146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1926 +/- 0.00662166 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.1926 @ 95%CL (1 toyMC)
median expected limit: r < 17.1926 @ 95%CL (1 toyMC)
   68% expected band : 17.1926 < r < 17.1926
   95% expected band : 17.1926 < r < 17.1926
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1563691322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.86185 +/- 0.0173901 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.86185 @ 95%CL (1 toyMC)
median expected limit: r < 9.86185 @ 95%CL (1 toyMC)
   68% expected band : 9.86185 < r < 9.86185
   95% expected band : 9.86185 < r < 9.86185
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -374177700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.288 +/- 0.0191284 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.288 @ 95%CL (1 toyMC)
median expected limit: r < 13.288 @ 95%CL (1 toyMC)
   68% expected band : 13.288 < r < 13.288
   95% expected band : 13.288 < r < 13.288
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1924427437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8405 +/- 0.00981153 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.8405 @ 95%CL (1 toyMC)
median expected limit: r < 16.8405 @ 95%CL (1 toyMC)
   68% expected band : 16.8405 < r < 16.8405
   95% expected band : 16.8405 < r < 16.8405
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -625544999
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.60748 +/- 0.015471 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 8.60748 @ 95%CL (1 toyMC)
median expected limit: r < 8.60748 @ 95%CL (1 toyMC)
   68% expected band : 8.60748 < r < 8.60748
   95% expected band : 8.60748 < r < 8.60748
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680363393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7584 +/- 0.0135665 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.7584 @ 95%CL (1 toyMC)
median expected limit: r < 14.7584 @ 95%CL (1 toyMC)
   68% expected band : 14.7584 < r < 14.7584
   95% expected band : 14.7584 < r < 14.7584
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1069270908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.595 +/- 0.0134696 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.595 @ 95%CL (1 toyMC)
median expected limit: r < 12.595 @ 95%CL (1 toyMC)
   68% expected band : 12.595 < r < 12.595
   95% expected band : 12.595 < r < 12.595
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -111743289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1131 +/- 0.0179736 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.1131 @ 95%CL (1 toyMC)
median expected limit: r < 12.1131 @ 95%CL (1 toyMC)
   68% expected band : 12.1131 < r < 12.1131
   95% expected band : 12.1131 < r < 12.1131
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1455438145
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.222 +/- 0.0142747 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.222 @ 95%CL (1 toyMC)
median expected limit: r < 13.222 @ 95%CL (1 toyMC)
   68% expected band : 13.222 < r < 13.222
   95% expected band : 13.222 < r < 13.222
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1146613989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7957 +/- 0.0195874 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.7957 @ 95%CL (1 toyMC)
median expected limit: r < 10.7957 @ 95%CL (1 toyMC)
   68% expected band : 10.7957 < r < 10.7957
   95% expected band : 10.7957 < r < 10.7957
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -741895452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4527 +/- 0.0112858 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.4527 @ 95%CL (1 toyMC)
median expected limit: r < 15.4527 @ 95%CL (1 toyMC)
   68% expected band : 15.4527 < r < 15.4527
   95% expected band : 15.4527 < r < 15.4527
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -133028468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.56686 +/- 0.0177784 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.56686 @ 95%CL (1 toyMC)
median expected limit: r < 8.56686 @ 95%CL (1 toyMC)
   68% expected band : 8.56686 < r < 8.56686
   95% expected band : 8.56686 < r < 8.56686
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1070963463
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.922 +/- 0.0128209 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.922 @ 95%CL (1 toyMC)
median expected limit: r < 12.922 @ 95%CL (1 toyMC)
   68% expected band : 12.922 < r < 12.922
   95% expected band : 12.922 < r < 12.922
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1822372562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2055 +/- 0.0169721 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2055 @ 95%CL (1 toyMC)
median expected limit: r < 10.2055 @ 95%CL (1 toyMC)
   68% expected band : 10.2055 < r < 10.2055
   95% expected band : 10.2055 < r < 10.2055
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -284482989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5902 +/- 0.0166142 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.5902 @ 95%CL (1 toyMC)
median expected limit: r < 13.5902 @ 95%CL (1 toyMC)
   68% expected band : 13.5902 < r < 13.5902
   95% expected band : 13.5902 < r < 13.5902
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -945428979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.54068 +/- 0.0200654 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.54068 @ 95%CL (1 toyMC)
median expected limit: r < 8.54068 @ 95%CL (1 toyMC)
   68% expected band : 8.54068 < r < 8.54068
   95% expected band : 8.54068 < r < 8.54068
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -868353116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6836 +/- 0.017604 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.6836 @ 95%CL (1 toyMC)
median expected limit: r < 12.6836 @ 95%CL (1 toyMC)
   68% expected band : 12.6836 < r < 12.6836
   95% expected band : 12.6836 < r < 12.6836
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1800284036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3344 +/- 0.0201771 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.3344 @ 95%CL (1 toyMC)
median expected limit: r < 10.3344 @ 95%CL (1 toyMC)
   68% expected band : 10.3344 < r < 10.3344
   95% expected band : 10.3344 < r < 10.3344
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1479318377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6542 +/- 0.00722053 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.6542 @ 95%CL (1 toyMC)
median expected limit: r < 17.6542 @ 95%CL (1 toyMC)
   68% expected band : 17.6542 < r < 17.6542
   95% expected band : 17.6542 < r < 17.6542
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -73661949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6043 +/- 0.0191149 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.6043 @ 95%CL (1 toyMC)
median expected limit: r < 11.6043 @ 95%CL (1 toyMC)
   68% expected band : 11.6043 < r < 11.6043
   95% expected band : 11.6043 < r < 11.6043
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1423224449
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0838 +/- 0.0122025 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.0838 @ 95%CL (1 toyMC)
median expected limit: r < 15.0838 @ 95%CL (1 toyMC)
   68% expected band : 15.0838 < r < 15.0838
   95% expected band : 15.0838 < r < 15.0838
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1241292311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0049 +/- 0.0134864 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.0049 @ 95%CL (1 toyMC)
median expected limit: r < 15.0049 @ 95%CL (1 toyMC)
   68% expected band : 15.0049 < r < 15.0049
   95% expected band : 15.0049 < r < 15.0049
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 843614128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7056 +/- 0.0144845 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.7056 @ 95%CL (1 toyMC)
median expected limit: r < 11.7056 @ 95%CL (1 toyMC)
   68% expected band : 11.7056 < r < 11.7056
   95% expected band : 11.7056 < r < 11.7056
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -835162556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4871 +/- 0.00934568 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.4871 @ 95%CL (1 toyMC)
median expected limit: r < 16.4871 @ 95%CL (1 toyMC)
   68% expected band : 16.4871 < r < 16.4871
   95% expected band : 16.4871 < r < 16.4871
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -492137190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.807 +/- 0.0181884 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.807 @ 95%CL (1 toyMC)
median expected limit: r < 10.807 @ 95%CL (1 toyMC)
   68% expected band : 10.807 < r < 10.807
   95% expected band : 10.807 < r < 10.807
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1304973398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.244 +/- 0.00997311 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.244 @ 95%CL (1 toyMC)
median expected limit: r < 13.244 @ 95%CL (1 toyMC)
   68% expected band : 13.244 < r < 13.244
   95% expected band : 13.244 < r < 13.244
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1505731427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9942 +/- 0.0153156 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.9942 @ 95%CL (1 toyMC)
median expected limit: r < 13.9942 @ 95%CL (1 toyMC)
   68% expected band : 13.9942 < r < 13.9942
   95% expected band : 13.9942 < r < 13.9942
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 54626354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4302 +/- 0.0143514 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.4302 @ 95%CL (1 toyMC)
median expected limit: r < 10.4302 @ 95%CL (1 toyMC)
   68% expected band : 10.4302 < r < 10.4302
   95% expected band : 10.4302 < r < 10.4302
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1666716871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4658 +/- 0.007513 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.4658 @ 95%CL (1 toyMC)
median expected limit: r < 16.4658 @ 95%CL (1 toyMC)
   68% expected band : 16.4658 < r < 16.4658
   95% expected band : 16.4658 < r < 16.4658
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1668845195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7732 +/- 0.0183839 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.7732 @ 95%CL (1 toyMC)
median expected limit: r < 10.7732 @ 95%CL (1 toyMC)
   68% expected band : 10.7732 < r < 10.7732
   95% expected band : 10.7732 < r < 10.7732
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 762148330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.589 +/- 0.0193872 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.589 @ 95%CL (1 toyMC)
median expected limit: r < 12.589 @ 95%CL (1 toyMC)
   68% expected band : 12.589 < r < 12.589
   95% expected band : 12.589 < r < 12.589
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -294524539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9797 +/- 0.0192997 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.9797 @ 95%CL (1 toyMC)
median expected limit: r < 12.9797 @ 95%CL (1 toyMC)
   68% expected band : 12.9797 < r < 12.9797
   95% expected band : 12.9797 < r < 12.9797
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2092682047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8756 +/- 0.011144 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.8756 @ 95%CL (1 toyMC)
median expected limit: r < 14.8756 @ 95%CL (1 toyMC)
   68% expected band : 14.8756 < r < 14.8756
   95% expected band : 14.8756 < r < 14.8756
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1623484820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3721 +/- 0.00774994 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.3721 @ 95%CL (1 toyMC)
median expected limit: r < 17.3721 @ 95%CL (1 toyMC)
   68% expected band : 17.3721 < r < 17.3721
   95% expected band : 17.3721 < r < 17.3721
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1734896125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8983 +/- 0.0195206 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.8983 @ 95%CL (1 toyMC)
median expected limit: r < 10.8983 @ 95%CL (1 toyMC)
   68% expected band : 10.8983 < r < 10.8983
   95% expected band : 10.8983 < r < 10.8983
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 821495412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1876 +/- 0.0192493 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.1876 @ 95%CL (1 toyMC)
median expected limit: r < 10.1876 @ 95%CL (1 toyMC)
   68% expected band : 10.1876 < r < 10.1876
   95% expected band : 10.1876 < r < 10.1876
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 963016415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7369 +/- 0.0118964 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.7369 @ 95%CL (1 toyMC)
median expected limit: r < 13.7369 @ 95%CL (1 toyMC)
   68% expected band : 13.7369 < r < 13.7369
   95% expected band : 13.7369 < r < 13.7369
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1472735007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5795 +/- 0.00441803 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.5795 @ 95%CL (1 toyMC)
median expected limit: r < 18.5795 @ 95%CL (1 toyMC)
   68% expected band : 18.5795 < r < 18.5795
   95% expected band : 18.5795 < r < 18.5795
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1633746395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3591 +/- 0.0133409 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.3591 @ 95%CL (1 toyMC)
median expected limit: r < 14.3591 @ 95%CL (1 toyMC)
   68% expected band : 14.3591 < r < 14.3591
   95% expected band : 14.3591 < r < 14.3591
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1086587797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2899 +/- 0.0224199 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2899 @ 95%CL (1 toyMC)
median expected limit: r < 10.2899 @ 95%CL (1 toyMC)
   68% expected band : 10.2899 < r < 10.2899
   95% expected band : 10.2899 < r < 10.2899
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1579029053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4398 +/- 0.0173469 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.4398 @ 95%CL (1 toyMC)
median expected limit: r < 12.4398 @ 95%CL (1 toyMC)
   68% expected band : 12.4398 < r < 12.4398
   95% expected band : 12.4398 < r < 12.4398
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1465566512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.61537 +/- 0.0171565 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.61537 @ 95%CL (1 toyMC)
median expected limit: r < 8.61537 @ 95%CL (1 toyMC)
   68% expected band : 8.61537 < r < 8.61537
   95% expected band : 8.61537 < r < 8.61537
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 482016440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7225 +/- 0.0209469 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.7225 @ 95%CL (1 toyMC)
median expected limit: r < 11.7225 @ 95%CL (1 toyMC)
   68% expected band : 11.7225 < r < 11.7225
   95% expected band : 11.7225 < r < 11.7225
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 587787400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1897 +/- 0.0194459 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.1897 @ 95%CL (1 toyMC)
median expected limit: r < 10.1897 @ 95%CL (1 toyMC)
   68% expected band : 10.1897 < r < 10.1897
   95% expected band : 10.1897 < r < 10.1897
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -146106543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5824 +/- 0.00871593 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5824 @ 95%CL (1 toyMC)
median expected limit: r < 16.5824 @ 95%CL (1 toyMC)
   68% expected band : 16.5824 < r < 16.5824
   95% expected band : 16.5824 < r < 16.5824
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1373585329
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.55353 +/- 0.0159481 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.55353 @ 95%CL (1 toyMC)
median expected limit: r < 8.55353 @ 95%CL (1 toyMC)
   68% expected band : 8.55353 < r < 8.55353
   95% expected band : 8.55353 < r < 8.55353
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1362641430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.59275 +/- 0.0187428 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.59275 @ 95%CL (1 toyMC)
median expected limit: r < 8.59275 @ 95%CL (1 toyMC)
   68% expected band : 8.59275 < r < 8.59275
   95% expected band : 8.59275 < r < 8.59275
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1309239192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.58491 +/- 0.0177707 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.58491 @ 95%CL (1 toyMC)
median expected limit: r < 8.58491 @ 95%CL (1 toyMC)
   68% expected band : 8.58491 < r < 8.58491
   95% expected band : 8.58491 < r < 8.58491
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1218344823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7996 +/- 0.014253 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.7996 @ 95%CL (1 toyMC)
median expected limit: r < 13.7996 @ 95%CL (1 toyMC)
   68% expected band : 13.7996 < r < 13.7996
   95% expected band : 13.7996 < r < 13.7996
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682726276
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.59776 +/- 0.0189069 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.59776 @ 95%CL (1 toyMC)
median expected limit: r < 8.59776 @ 95%CL (1 toyMC)
   68% expected band : 8.59776 < r < 8.59776
   95% expected band : 8.59776 < r < 8.59776
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 146176965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1914 +/- 0.0218697 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.1914 @ 95%CL (1 toyMC)
median expected limit: r < 10.1914 @ 95%CL (1 toyMC)
   68% expected band : 10.1914 < r < 10.1914
   95% expected band : 10.1914 < r < 10.1914
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 401680330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.4164 +/- 0.00234837 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.4164 @ 95%CL (1 toyMC)
median expected limit: r < 19.4164 @ 95%CL (1 toyMC)
   68% expected band : 19.4164 < r < 19.4164
   95% expected band : 19.4164 < r < 19.4164
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1557073477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.61902 +/- 0.0184593 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.61902 @ 95%CL (1 toyMC)
median expected limit: r < 8.61902 @ 95%CL (1 toyMC)
   68% expected band : 8.61902 < r < 8.61902
   95% expected band : 8.61902 < r < 8.61902
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1375900956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.324 +/- 0.0191422 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.324 @ 95%CL (1 toyMC)
median expected limit: r < 10.324 @ 95%CL (1 toyMC)
   68% expected band : 10.324 < r < 10.324
   95% expected band : 10.324 < r < 10.324
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1376695049
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8548 +/- 0.00674467 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.8548 @ 95%CL (1 toyMC)
median expected limit: r < 17.8548 @ 95%CL (1 toyMC)
   68% expected band : 17.8548 < r < 17.8548
   95% expected band : 17.8548 < r < 17.8548
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 122952928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5134 +/- 0.0194704 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5134 @ 95%CL (1 toyMC)
median expected limit: r < 10.5134 @ 95%CL (1 toyMC)
   68% expected band : 10.5134 < r < 10.5134
   95% expected band : 10.5134 < r < 10.5134
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 589100254
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.804 +/- 0.0191546 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.804 @ 95%CL (1 toyMC)
median expected limit: r < 10.804 @ 95%CL (1 toyMC)
   68% expected band : 10.804 < r < 10.804
   95% expected band : 10.804 < r < 10.804
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1202434708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0286 +/- 0.0175491 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0286 @ 95%CL (1 toyMC)
median expected limit: r < 12.0286 @ 95%CL (1 toyMC)
   68% expected band : 12.0286 < r < 12.0286
   95% expected band : 12.0286 < r < 12.0286
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -267292323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.61935 +/- 0.0224487 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.61935 @ 95%CL (1 toyMC)
median expected limit: r < 8.61935 @ 95%CL (1 toyMC)
   68% expected band : 8.61935 < r < 8.61935
   95% expected band : 8.61935 < r < 8.61935
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1046699283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8705 +/- 0.00915298 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.8705 @ 95%CL (1 toyMC)
median expected limit: r < 16.8705 @ 95%CL (1 toyMC)
   68% expected band : 16.8705 < r < 16.8705
   95% expected band : 16.8705 < r < 16.8705
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1272125556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2138 +/- 0.0161638 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2138 @ 95%CL (1 toyMC)
median expected limit: r < 10.2138 @ 95%CL (1 toyMC)
   68% expected band : 10.2138 < r < 10.2138
   95% expected band : 10.2138 < r < 10.2138
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 292337657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3395 +/- 0.0182435 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.3395 @ 95%CL (1 toyMC)
median expected limit: r < 10.3395 @ 95%CL (1 toyMC)
   68% expected band : 10.3395 < r < 10.3395
   95% expected band : 10.3395 < r < 10.3395
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -563765442
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4276 +/- 0.0162557 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.4276 @ 95%CL (1 toyMC)
median expected limit: r < 10.4276 @ 95%CL (1 toyMC)
   68% expected band : 10.4276 < r < 10.4276
   95% expected band : 10.4276 < r < 10.4276
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -342415271
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4644 +/- 0.00895605 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.4644 @ 95%CL (1 toyMC)
median expected limit: r < 16.4644 @ 95%CL (1 toyMC)
   68% expected band : 16.4644 < r < 16.4644
   95% expected band : 16.4644 < r < 16.4644
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1901508940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8897 +/- 0.0209896 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.8897 @ 95%CL (1 toyMC)
median expected limit: r < 11.8897 @ 95%CL (1 toyMC)
   68% expected band : 11.8897 < r < 11.8897
   95% expected band : 11.8897 < r < 11.8897
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1578719252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.249 +/- 0.0158572 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 10.249 @ 95%CL (1 toyMC)
median expected limit: r < 10.249 @ 95%CL (1 toyMC)
   68% expected band : 10.249 < r < 10.249
   95% expected band : 10.249 < r < 10.249
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1696308381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4294 +/- 0.00862147 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.4294 @ 95%CL (1 toyMC)
median expected limit: r < 16.4294 @ 95%CL (1 toyMC)
   68% expected band : 16.4294 < r < 16.4294
   95% expected band : 16.4294 < r < 16.4294
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 995865007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1704 +/- 0.0177962 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.1704 @ 95%CL (1 toyMC)
median expected limit: r < 12.1704 @ 95%CL (1 toyMC)
   68% expected band : 12.1704 < r < 12.1704
   95% expected band : 12.1704 < r < 12.1704
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 689979085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9514 +/- 0.0150595 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.9514 @ 95%CL (1 toyMC)
median expected limit: r < 12.9514 @ 95%CL (1 toyMC)
   68% expected band : 12.9514 < r < 12.9514
   95% expected band : 12.9514 < r < 12.9514
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1321116217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7805 +/- 0.0169333 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.7805 @ 95%CL (1 toyMC)
median expected limit: r < 11.7805 @ 95%CL (1 toyMC)
   68% expected band : 11.7805 < r < 11.7805
   95% expected band : 11.7805 < r < 11.7805
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -756815803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8362 +/- 0.0125972 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.8362 @ 95%CL (1 toyMC)
median expected limit: r < 13.8362 @ 95%CL (1 toyMC)
   68% expected band : 13.8362 < r < 13.8362
   95% expected band : 13.8362 < r < 13.8362
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -304605689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3519 +/- 0.00718785 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.3519 @ 95%CL (1 toyMC)
median expected limit: r < 17.3519 @ 95%CL (1 toyMC)
   68% expected band : 17.3519 < r < 17.3519
   95% expected band : 17.3519 < r < 17.3519
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1635307891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.55561 +/- 0.0145632 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.55561 @ 95%CL (1 toyMC)
median expected limit: r < 8.55561 @ 95%CL (1 toyMC)
   68% expected band : 8.55561 < r < 8.55561
   95% expected band : 8.55561 < r < 8.55561
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2043229238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.61387 +/- 0.0210649 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.61387 @ 95%CL (1 toyMC)
median expected limit: r < 8.61387 @ 95%CL (1 toyMC)
   68% expected band : 8.61387 < r < 8.61387
   95% expected band : 8.61387 < r < 8.61387
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1305049577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7553 +/- 0.00875468 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.7553 @ 95%CL (1 toyMC)
median expected limit: r < 16.7553 @ 95%CL (1 toyMC)
   68% expected band : 16.7553 < r < 16.7553
   95% expected band : 16.7553 < r < 16.7553
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 52992209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0486 +/- 0.0171286 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0486 @ 95%CL (1 toyMC)
median expected limit: r < 12.0486 @ 95%CL (1 toyMC)
   68% expected band : 12.0486 < r < 12.0486
   95% expected band : 12.0486 < r < 12.0486
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 468545902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3656 +/- 0.0201813 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.3656 @ 95%CL (1 toyMC)
median expected limit: r < 12.3656 @ 95%CL (1 toyMC)
   68% expected band : 12.3656 < r < 12.3656
   95% expected band : 12.3656 < r < 12.3656
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1647790028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2889 +/- 0.0157461 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.2889 @ 95%CL (1 toyMC)
median expected limit: r < 12.2889 @ 95%CL (1 toyMC)
   68% expected band : 12.2889 < r < 12.2889
   95% expected band : 12.2889 < r < 12.2889
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1152296823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8122 +/- 0.0200868 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8122 @ 95%CL (1 toyMC)
median expected limit: r < 10.8122 @ 95%CL (1 toyMC)
   68% expected band : 10.8122 < r < 10.8122
   95% expected band : 10.8122 < r < 10.8122
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1654108976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5531 +/- 0.0111925 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5531 @ 95%CL (1 toyMC)
median expected limit: r < 16.5531 @ 95%CL (1 toyMC)
   68% expected band : 16.5531 < r < 16.5531
   95% expected band : 16.5531 < r < 16.5531
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -946897757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2286 +/- 0.0119551 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.2286 @ 95%CL (1 toyMC)
median expected limit: r < 14.2286 @ 95%CL (1 toyMC)
   68% expected band : 14.2286 < r < 14.2286
   95% expected band : 14.2286 < r < 14.2286
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 223412626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.688 +/- 0.0192438 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.688 @ 95%CL (1 toyMC)
median expected limit: r < 12.688 @ 95%CL (1 toyMC)
   68% expected band : 12.688 < r < 12.688
   95% expected band : 12.688 < r < 12.688
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2100402830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1733 +/- 0.0195055 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.1733 @ 95%CL (1 toyMC)
median expected limit: r < 10.1733 @ 95%CL (1 toyMC)
   68% expected band : 10.1733 < r < 10.1733
   95% expected band : 10.1733 < r < 10.1733
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1670603854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2792 +/- 0.0164076 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2792 @ 95%CL (1 toyMC)
median expected limit: r < 10.2792 @ 95%CL (1 toyMC)
   68% expected band : 10.2792 < r < 10.2792
   95% expected band : 10.2792 < r < 10.2792
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -380533983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8299 +/- 0.0101297 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.8299 @ 95%CL (1 toyMC)
median expected limit: r < 15.8299 @ 95%CL (1 toyMC)
   68% expected band : 15.8299 < r < 15.8299
   95% expected band : 15.8299 < r < 15.8299
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -57022593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.59015 +/- 0.0174103 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.59015 @ 95%CL (1 toyMC)
median expected limit: r < 8.59015 @ 95%CL (1 toyMC)
   68% expected band : 8.59015 < r < 8.59015
   95% expected band : 8.59015 < r < 8.59015
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -705505004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3067 +/- 0.00823076 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.3067 @ 95%CL (1 toyMC)
median expected limit: r < 17.3067 @ 95%CL (1 toyMC)
   68% expected band : 17.3067 < r < 17.3067
   95% expected band : 17.3067 < r < 17.3067
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 287214341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5735 +/- 0.0108548 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.5735 @ 95%CL (1 toyMC)
median expected limit: r < 15.5735 @ 95%CL (1 toyMC)
   68% expected band : 15.5735 < r < 15.5735
   95% expected band : 15.5735 < r < 15.5735
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1353744737
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2449 +/- 0.019039 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2449 @ 95%CL (1 toyMC)
median expected limit: r < 10.2449 @ 95%CL (1 toyMC)
   68% expected band : 10.2449 < r < 10.2449
   95% expected band : 10.2449 < r < 10.2449
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1737085467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2902 +/- 0.0188852 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2902 @ 95%CL (1 toyMC)
median expected limit: r < 10.2902 @ 95%CL (1 toyMC)
   68% expected band : 10.2902 < r < 10.2902
   95% expected band : 10.2902 < r < 10.2902
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1046699283.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1046772717.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1069270908.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1070963463.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1086587797.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-111743289.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1152296823.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1202434708.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1218344823.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1241292311.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1321116217.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-133028468.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1362641430.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1375900956.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1455438145.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-146106543.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1472735007.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1505731427.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1623484820.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1654108976.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1668845195.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1670603854.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1737085467.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1822372562.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1924427437.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1952722614.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-2043229238.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-2092682047.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2100402830.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-256524578.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-267292323.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-284482989.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-294524539.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-304605689.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-342415271.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-374177700.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-380533983.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-388915841.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-492137190.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-563765442.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-57022593.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-607359858.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-625544999.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-705505004.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-73661949.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-739583126.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-741895452.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-756815803.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-835162556.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-868353116.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-945428979.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-946897757.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1146613989.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.122952928.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1272125556.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1304973398.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1305049577.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1309239192.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1353744737.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1373585329.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1376695049.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1423224449.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.146176965.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1465566512.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1479318377.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1537204390.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1557073477.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1563691322.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1578719252.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1579029053.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1633746395.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1635307891.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1647790028.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1666716871.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1680363393.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1682726276.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1696308381.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1734896125.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1800284036.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.1845101936.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.1901508940.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.204364146.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.223412626.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.225800594.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.287214341.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.292337657.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.401680330.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.468545902.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.476221151.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.482016440.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.52992209.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.54626354.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.587787400.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.589100254.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.689979085.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.762148330.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.821495412.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.843614128.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.963016415.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.995865007.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 628508126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9853 +/- 0.0186257 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.9853 @ 95%CL (1 toyMC)
median expected limit: r < 12.9853 @ 95%CL (1 toyMC)
   68% expected band : 12.9853 < r < 12.9853
   95% expected band : 12.9853 < r < 12.9853
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1244792675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8949 +/- 0.0190143 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8949 @ 95%CL (1 toyMC)
median expected limit: r < 10.8949 @ 95%CL (1 toyMC)
   68% expected band : 10.8949 < r < 10.8949
   95% expected band : 10.8949 < r < 10.8949
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -986054707
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6024 +/- 0.0183219 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.6024 @ 95%CL (1 toyMC)
median expected limit: r < 12.6024 @ 95%CL (1 toyMC)
   68% expected band : 12.6024 < r < 12.6024
   95% expected band : 12.6024 < r < 12.6024
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1962310519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7924 +/- 0.00916623 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.7924 @ 95%CL (1 toyMC)
median expected limit: r < 16.7924 @ 95%CL (1 toyMC)
   68% expected band : 16.7924 < r < 16.7924
   95% expected band : 16.7924 < r < 16.7924
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1794734083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.896 +/- 0.0191037 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.896 @ 95%CL (1 toyMC)
median expected limit: r < 10.896 @ 95%CL (1 toyMC)
   68% expected band : 10.896 < r < 10.896
   95% expected band : 10.896 < r < 10.896
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1422619990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8868 +/- 0.0194669 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8868 @ 95%CL (1 toyMC)
median expected limit: r < 10.8868 @ 95%CL (1 toyMC)
   68% expected band : 10.8868 < r < 10.8868
   95% expected band : 10.8868 < r < 10.8868
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1378315112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4049 +/- 0.0122246 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.4049 @ 95%CL (1 toyMC)
median expected limit: r < 15.4049 @ 95%CL (1 toyMC)
   68% expected band : 15.4049 < r < 15.4049
   95% expected band : 15.4049 < r < 15.4049
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1804374407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6953 +/- 0.00983711 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.6953 @ 95%CL (1 toyMC)
median expected limit: r < 16.6953 @ 95%CL (1 toyMC)
   68% expected band : 16.6953 < r < 16.6953
   95% expected band : 16.6953 < r < 16.6953
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -867488642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8704 +/- 0.020124 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8704 @ 95%CL (1 toyMC)
median expected limit: r < 10.8704 @ 95%CL (1 toyMC)
   68% expected band : 10.8704 < r < 10.8704
   95% expected band : 10.8704 < r < 10.8704
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2138879866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.913 +/- 0.0193602 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.913 @ 95%CL (1 toyMC)
median expected limit: r < 10.913 @ 95%CL (1 toyMC)
   68% expected band : 10.913 < r < 10.913
   95% expected band : 10.913 < r < 10.913
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1513225853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3815 +/- 0.0161619 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.3815 @ 95%CL (1 toyMC)
median expected limit: r < 13.3815 @ 95%CL (1 toyMC)
   68% expected band : 13.3815 < r < 13.3815
   95% expected band : 13.3815 < r < 13.3815
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1098537669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9117 +/- 0.0203173 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 10.9117 @ 95%CL (1 toyMC)
median expected limit: r < 10.9117 @ 95%CL (1 toyMC)
   68% expected band : 10.9117 < r < 10.9117
   95% expected band : 10.9117 < r < 10.9117
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 87925506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6927 +/- 0.0108138 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.6927 @ 95%CL (1 toyMC)
median expected limit: r < 16.6927 @ 95%CL (1 toyMC)
   68% expected band : 16.6927 < r < 16.6927
   95% expected band : 16.6927 < r < 16.6927
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1767483918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9461 +/- 0.0201462 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.9461 @ 95%CL (1 toyMC)
median expected limit: r < 10.9461 @ 95%CL (1 toyMC)
   68% expected band : 10.9461 < r < 10.9461
   95% expected band : 10.9461 < r < 10.9461
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 465194095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4228 +/- 0.0111077 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.4228 @ 95%CL (1 toyMC)
median expected limit: r < 15.4228 @ 95%CL (1 toyMC)
   68% expected band : 15.4228 < r < 15.4228
   95% expected band : 15.4228 < r < 15.4228
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 705313678
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3356 +/- 0.0150256 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.3356 @ 95%CL (1 toyMC)
median expected limit: r < 15.3356 @ 95%CL (1 toyMC)
   68% expected band : 15.3356 < r < 15.3356
   95% expected band : 15.3356 < r < 15.3356
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1665192190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.227 +/- 0.0130408 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.227 @ 95%CL (1 toyMC)
median expected limit: r < 15.227 @ 95%CL (1 toyMC)
   68% expected band : 15.227 < r < 15.227
   95% expected band : 15.227 < r < 15.227
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 287872927
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5524 +/- 0.00930323 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.5524 @ 95%CL (1 toyMC)
median expected limit: r < 15.5524 @ 95%CL (1 toyMC)
   68% expected band : 15.5524 < r < 15.5524
   95% expected band : 15.5524 < r < 15.5524
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1754669281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8441 +/- 0.0173687 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8441 @ 95%CL (1 toyMC)
median expected limit: r < 10.8441 @ 95%CL (1 toyMC)
   68% expected band : 10.8441 < r < 10.8441
   95% expected band : 10.8441 < r < 10.8441
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 151982977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9678 +/- 0.017553 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.9678 @ 95%CL (1 toyMC)
median expected limit: r < 12.9678 @ 95%CL (1 toyMC)
   68% expected band : 12.9678 < r < 12.9678
   95% expected band : 12.9678 < r < 12.9678
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 46651410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8955 +/- 0.0184125 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8955 @ 95%CL (1 toyMC)
median expected limit: r < 10.8955 @ 95%CL (1 toyMC)
   68% expected band : 10.8955 < r < 10.8955
   95% expected band : 10.8955 < r < 10.8955
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 634377295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9458 +/- 0.0140062 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.9458 @ 95%CL (1 toyMC)
median expected limit: r < 12.9458 @ 95%CL (1 toyMC)
   68% expected band : 12.9458 < r < 12.9458
   95% expected band : 12.9458 < r < 12.9458
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1445108449
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1073 +/- 0.0137438 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.1073 @ 95%CL (1 toyMC)
median expected limit: r < 13.1073 @ 95%CL (1 toyMC)
   68% expected band : 13.1073 < r < 13.1073
   95% expected band : 13.1073 < r < 13.1073
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1382261465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2412 +/- 0.0108269 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.2412 @ 95%CL (1 toyMC)
median expected limit: r < 15.2412 @ 95%CL (1 toyMC)
   68% expected band : 15.2412 < r < 15.2412
   95% expected band : 15.2412 < r < 15.2412
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -498353799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8741 +/- 0.0182026 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8741 @ 95%CL (1 toyMC)
median expected limit: r < 10.8741 @ 95%CL (1 toyMC)
   68% expected band : 10.8741 < r < 10.8741
   95% expected band : 10.8741 < r < 10.8741
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -581975566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3232 +/- 0.0156462 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3232 @ 95%CL (1 toyMC)
median expected limit: r < 13.3232 @ 95%CL (1 toyMC)
   68% expected band : 13.3232 < r < 13.3232
   95% expected band : 13.3232 < r < 13.3232
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2131224571
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9588 +/- 0.0136282 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.9588 @ 95%CL (1 toyMC)
median expected limit: r < 12.9588 @ 95%CL (1 toyMC)
   68% expected band : 12.9588 < r < 12.9588
   95% expected band : 12.9588 < r < 12.9588
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1992992415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0585 +/- 0.0142808 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0585 @ 95%CL (1 toyMC)
median expected limit: r < 15.0585 @ 95%CL (1 toyMC)
   68% expected band : 15.0585 < r < 15.0585
   95% expected band : 15.0585 < r < 15.0585
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1024879717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9151 +/- 0.0217368 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.9151 @ 95%CL (1 toyMC)
median expected limit: r < 10.9151 @ 95%CL (1 toyMC)
   68% expected band : 10.9151 < r < 10.9151
   95% expected band : 10.9151 < r < 10.9151
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1650087216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9167 +/- 0.0143103 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.9167 @ 95%CL (1 toyMC)
median expected limit: r < 10.9167 @ 95%CL (1 toyMC)
   68% expected band : 10.9167 < r < 10.9167
   95% expected band : 10.9167 < r < 10.9167
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1605401666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0043 +/- 0.0150433 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.0043 @ 95%CL (1 toyMC)
median expected limit: r < 13.0043 @ 95%CL (1 toyMC)
   68% expected band : 13.0043 < r < 13.0043
   95% expected band : 13.0043 < r < 13.0043
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1812195807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4093 +/- 0.0129852 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4093 @ 95%CL (1 toyMC)
median expected limit: r < 14.4093 @ 95%CL (1 toyMC)
   68% expected band : 14.4093 < r < 14.4093
   95% expected band : 14.4093 < r < 14.4093
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 138845886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2375 +/- 0.0116487 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.2375 @ 95%CL (1 toyMC)
median expected limit: r < 15.2375 @ 95%CL (1 toyMC)
   68% expected band : 15.2375 < r < 15.2375
   95% expected band : 15.2375 < r < 15.2375
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -719358059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9653 +/- 0.0213658 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.9653 @ 95%CL (1 toyMC)
median expected limit: r < 12.9653 @ 95%CL (1 toyMC)
   68% expected band : 12.9653 < r < 12.9653
   95% expected band : 12.9653 < r < 12.9653
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1734529840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.199 +/- 0.0160809 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.199 @ 95%CL (1 toyMC)
median expected limit: r < 14.199 @ 95%CL (1 toyMC)
   68% expected band : 14.199 < r < 14.199
   95% expected band : 14.199 < r < 14.199
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1896666611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3525 +/- 0.0139028 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.3525 @ 95%CL (1 toyMC)
median expected limit: r < 14.3525 @ 95%CL (1 toyMC)
   68% expected band : 14.3525 < r < 14.3525
   95% expected band : 14.3525 < r < 14.3525
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 868457474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6006 +/- 0.0171395 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.6006 @ 95%CL (1 toyMC)
median expected limit: r < 13.6006 @ 95%CL (1 toyMC)
   68% expected band : 13.6006 < r < 13.6006
   95% expected band : 13.6006 < r < 13.6006
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1568430192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2334 +/- 0.0126853 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 15.2334 @ 95%CL (1 toyMC)
median expected limit: r < 15.2334 @ 95%CL (1 toyMC)
   68% expected band : 15.2334 < r < 15.2334
   95% expected band : 15.2334 < r < 15.2334
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2144363848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0463 +/- 0.0189641 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.0463 @ 95%CL (1 toyMC)
median expected limit: r < 13.0463 @ 95%CL (1 toyMC)
   68% expected band : 13.0463 < r < 13.0463
   95% expected band : 13.0463 < r < 13.0463
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1938376344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1383 +/- 0.0114268 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.1383 @ 95%CL (1 toyMC)
median expected limit: r < 15.1383 @ 95%CL (1 toyMC)
   68% expected band : 15.1383 < r < 15.1383
   95% expected band : 15.1383 < r < 15.1383
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1253558539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.503 +/- 0.00500064 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.503 @ 95%CL (1 toyMC)
median expected limit: r < 18.503 @ 95%CL (1 toyMC)
   68% expected band : 18.503 < r < 18.503
   95% expected band : 18.503 < r < 18.503
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -942373831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0827 +/- 0.0129161 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.0827 @ 95%CL (1 toyMC)
median expected limit: r < 16.0827 @ 95%CL (1 toyMC)
   68% expected band : 16.0827 < r < 16.0827
   95% expected band : 16.0827 < r < 16.0827
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2043784801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8706 +/- 0.01609 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.8706 @ 95%CL (1 toyMC)
median expected limit: r < 10.8706 @ 95%CL (1 toyMC)
   68% expected band : 10.8706 < r < 10.8706
   95% expected band : 10.8706 < r < 10.8706
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -622158226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2593 +/- 0.0155869 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.2593 @ 95%CL (1 toyMC)
median expected limit: r < 14.2593 @ 95%CL (1 toyMC)
   68% expected band : 14.2593 < r < 14.2593
   95% expected band : 14.2593 < r < 14.2593
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1802356238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.667 +/- 0.0167934 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.667 @ 95%CL (1 toyMC)
median expected limit: r < 14.667 @ 95%CL (1 toyMC)
   68% expected band : 14.667 < r < 14.667
   95% expected band : 14.667 < r < 14.667
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1655025219
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8951 +/- 0.00700625 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.8951 @ 95%CL (1 toyMC)
median expected limit: r < 17.8951 @ 95%CL (1 toyMC)
   68% expected band : 17.8951 < r < 17.8951
   95% expected band : 17.8951 < r < 17.8951
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -337510309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.712 +/- 0.00785048 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.712 @ 95%CL (1 toyMC)
median expected limit: r < 17.712 @ 95%CL (1 toyMC)
   68% expected band : 17.712 < r < 17.712
   95% expected band : 17.712 < r < 17.712
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1994574079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1796 +/- 0.0168676 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.1796 @ 95%CL (1 toyMC)
median expected limit: r < 13.1796 @ 95%CL (1 toyMC)
   68% expected band : 13.1796 < r < 13.1796
   95% expected band : 13.1796 < r < 13.1796
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1487443197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4282 +/- 0.01618 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.4282 @ 95%CL (1 toyMC)
median expected limit: r < 14.4282 @ 95%CL (1 toyMC)
   68% expected band : 14.4282 < r < 14.4282
   95% expected band : 14.4282 < r < 14.4282
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1369509820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3546 +/- 0.0156039 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.3546 @ 95%CL (1 toyMC)
median expected limit: r < 14.3546 @ 95%CL (1 toyMC)
   68% expected band : 14.3546 < r < 14.3546
   95% expected band : 14.3546 < r < 14.3546
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1931776874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5604 +/- 0.00893114 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5604 @ 95%CL (1 toyMC)
median expected limit: r < 16.5604 @ 95%CL (1 toyMC)
   68% expected band : 16.5604 < r < 16.5604
   95% expected band : 16.5604 < r < 16.5604
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1179318441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3442 +/- 0.014066 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.3442 @ 95%CL (1 toyMC)
median expected limit: r < 14.3442 @ 95%CL (1 toyMC)
   68% expected band : 14.3442 < r < 14.3442
   95% expected band : 14.3442 < r < 14.3442
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -216814377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2106 +/- 0.00702983 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.2106 @ 95%CL (1 toyMC)
median expected limit: r < 18.2106 @ 95%CL (1 toyMC)
   68% expected band : 18.2106 < r < 18.2106
   95% expected band : 18.2106 < r < 18.2106
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1588441796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1898 +/- 0.0108426 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1898 @ 95%CL (1 toyMC)
median expected limit: r < 16.1898 @ 95%CL (1 toyMC)
   68% expected band : 16.1898 < r < 16.1898
   95% expected band : 16.1898 < r < 16.1898
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1712965970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9853 +/- 0.0134617 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.9853 @ 95%CL (1 toyMC)
median expected limit: r < 14.9853 @ 95%CL (1 toyMC)
   68% expected band : 14.9853 < r < 14.9853
   95% expected band : 14.9853 < r < 14.9853
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -958514619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4516 +/- 0.0119295 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.4516 @ 95%CL (1 toyMC)
median expected limit: r < 15.4516 @ 95%CL (1 toyMC)
   68% expected band : 15.4516 < r < 15.4516
   95% expected band : 15.4516 < r < 15.4516
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 903427893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1526 +/- 0.0154162 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.1526 @ 95%CL (1 toyMC)
median expected limit: r < 13.1526 @ 95%CL (1 toyMC)
   68% expected band : 13.1526 < r < 13.1526
   95% expected band : 13.1526 < r < 13.1526
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -375005098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3362 +/- 0.00884614 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.3362 @ 95%CL (1 toyMC)
median expected limit: r < 17.3362 @ 95%CL (1 toyMC)
   68% expected band : 17.3362 < r < 17.3362
   95% expected band : 17.3362 < r < 17.3362
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1563120300
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6165 +/- 0.0126393 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.6165 @ 95%CL (1 toyMC)
median expected limit: r < 14.6165 @ 95%CL (1 toyMC)
   68% expected band : 14.6165 < r < 14.6165
   95% expected band : 14.6165 < r < 14.6165
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 921736689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9249 +/- 0.0198219 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.9249 @ 95%CL (1 toyMC)
median expected limit: r < 10.9249 @ 95%CL (1 toyMC)
   68% expected band : 10.9249 < r < 10.9249
   95% expected band : 10.9249 < r < 10.9249
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1148106626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7289 +/- 0.00863679 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.7289 @ 95%CL (1 toyMC)
median expected limit: r < 16.7289 @ 95%CL (1 toyMC)
   68% expected band : 16.7289 < r < 16.7289
   95% expected band : 16.7289 < r < 16.7289
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -203937477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9432 +/- 0.0151713 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.9432 @ 95%CL (1 toyMC)
median expected limit: r < 14.9432 @ 95%CL (1 toyMC)
   68% expected band : 14.9432 < r < 14.9432
   95% expected band : 14.9432 < r < 14.9432
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -999849177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6109 +/- 0.0199254 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.6109 @ 95%CL (1 toyMC)
median expected limit: r < 13.6109 @ 95%CL (1 toyMC)
   68% expected band : 13.6109 < r < 13.6109
   95% expected band : 13.6109 < r < 13.6109
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1926994604
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2748 +/- 0.0136768 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2748 @ 95%CL (1 toyMC)
median expected limit: r < 14.2748 @ 95%CL (1 toyMC)
   68% expected band : 14.2748 < r < 14.2748
   95% expected band : 14.2748 < r < 14.2748
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1051174436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9532 +/- 0.0198553 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.9532 @ 95%CL (1 toyMC)
median expected limit: r < 10.9532 @ 95%CL (1 toyMC)
   68% expected band : 10.9532 < r < 10.9532
   95% expected band : 10.9532 < r < 10.9532
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -194453248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8998 +/- 0.0202428 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.8998 @ 95%CL (1 toyMC)
median expected limit: r < 12.8998 @ 95%CL (1 toyMC)
   68% expected band : 12.8998 < r < 12.8998
   95% expected band : 12.8998 < r < 12.8998
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 634918013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9238 +/- 0.0189323 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.9238 @ 95%CL (1 toyMC)
median expected limit: r < 10.9238 @ 95%CL (1 toyMC)
   68% expected band : 10.9238 < r < 10.9238
   95% expected band : 10.9238 < r < 10.9238
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 211726452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9256 +/- 0.0168806 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.9256 @ 95%CL (1 toyMC)
median expected limit: r < 10.9256 @ 95%CL (1 toyMC)
   68% expected band : 10.9256 < r < 10.9256
   95% expected band : 10.9256 < r < 10.9256
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -366205699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5484 +/- 0.00470925 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.5484 @ 95%CL (1 toyMC)
median expected limit: r < 18.5484 @ 95%CL (1 toyMC)
   68% expected band : 18.5484 < r < 18.5484
   95% expected band : 18.5484 < r < 18.5484
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 581975759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.911 +/- 0.01603 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.911 @ 95%CL (1 toyMC)
median expected limit: r < 12.911 @ 95%CL (1 toyMC)
   68% expected band : 12.911 < r < 12.911
   95% expected band : 12.911 < r < 12.911
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -220728713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.126 +/- 0.00482837 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.126 @ 95%CL (1 toyMC)
median expected limit: r < 18.126 @ 95%CL (1 toyMC)
   68% expected band : 18.126 < r < 18.126
   95% expected band : 18.126 < r < 18.126
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 554734463
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.465 +/- 0.00921147 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.465 @ 95%CL (1 toyMC)
median expected limit: r < 16.465 @ 95%CL (1 toyMC)
   68% expected band : 16.465 < r < 16.465
   95% expected band : 16.465 < r < 16.465
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 688303001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0929 +/- 0.0125601 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.0929 @ 95%CL (1 toyMC)
median expected limit: r < 15.0929 @ 95%CL (1 toyMC)
   68% expected band : 15.0929 < r < 15.0929
   95% expected band : 15.0929 < r < 15.0929
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -477813305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6042 +/- 0.0213559 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.6042 @ 95%CL (1 toyMC)
median expected limit: r < 12.6042 @ 95%CL (1 toyMC)
   68% expected band : 12.6042 < r < 12.6042
   95% expected band : 12.6042 < r < 12.6042
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1481087580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8006 +/- 0.00703348 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.8006 @ 95%CL (1 toyMC)
median expected limit: r < 17.8006 @ 95%CL (1 toyMC)
   68% expected band : 17.8006 < r < 17.8006
   95% expected band : 17.8006 < r < 17.8006
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -372285290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4966 +/- 0.0078591 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.4966 @ 95%CL (1 toyMC)
median expected limit: r < 16.4966 @ 95%CL (1 toyMC)
   68% expected band : 16.4966 < r < 16.4966
   95% expected band : 16.4966 < r < 16.4966
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1746526314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8527 +/- 0.00786824 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.8527 @ 95%CL (1 toyMC)
median expected limit: r < 16.8527 @ 95%CL (1 toyMC)
   68% expected band : 16.8527 < r < 16.8527
   95% expected band : 16.8527 < r < 16.8527
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 440458282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1805 +/- 0.0173574 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.1805 @ 95%CL (1 toyMC)
median expected limit: r < 13.1805 @ 95%CL (1 toyMC)
   68% expected band : 13.1805 < r < 13.1805
   95% expected band : 13.1805 < r < 13.1805
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1088514194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9334 +/- 0.0215932 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.9334 @ 95%CL (1 toyMC)
median expected limit: r < 10.9334 @ 95%CL (1 toyMC)
   68% expected band : 10.9334 < r < 10.9334
   95% expected band : 10.9334 < r < 10.9334
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 412822883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9381 +/- 0.0206266 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.9381 @ 95%CL (1 toyMC)
median expected limit: r < 10.9381 @ 95%CL (1 toyMC)
   68% expected band : 10.9381 < r < 10.9381
   95% expected band : 10.9381 < r < 10.9381
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1315346871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6635 +/- 0.0117986 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.6635 @ 95%CL (1 toyMC)
median expected limit: r < 14.6635 @ 95%CL (1 toyMC)
   68% expected band : 14.6635 < r < 14.6635
   95% expected band : 14.6635 < r < 14.6635
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1492092193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0569 +/- 0.00665726 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.0569 @ 95%CL (1 toyMC)
median expected limit: r < 18.0569 @ 95%CL (1 toyMC)
   68% expected band : 18.0569 < r < 18.0569
   95% expected band : 18.0569 < r < 18.0569
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -833811319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5357 +/- 0.0148709 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.5357 @ 95%CL (1 toyMC)
median expected limit: r < 15.5357 @ 95%CL (1 toyMC)
   68% expected band : 15.5357 < r < 15.5357
   95% expected band : 15.5357 < r < 15.5357
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1878229597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0574 +/- 0.0141414 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0574 @ 95%CL (1 toyMC)
median expected limit: r < 15.0574 @ 95%CL (1 toyMC)
   68% expected band : 15.0574 < r < 15.0574
   95% expected band : 15.0574 < r < 15.0574
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1499513138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0756 +/- 0.0138274 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.0756 @ 95%CL (1 toyMC)
median expected limit: r < 13.0756 @ 95%CL (1 toyMC)
   68% expected band : 13.0756 < r < 13.0756
   95% expected band : 13.0756 < r < 13.0756
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1626061762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9376 +/- 0.00987185 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.9376 @ 95%CL (1 toyMC)
median expected limit: r < 16.9376 @ 95%CL (1 toyMC)
   68% expected band : 16.9376 < r < 16.9376
   95% expected band : 16.9376 < r < 16.9376
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1627506041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1927 +/- 0.0190564 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.1927 @ 95%CL (1 toyMC)
median expected limit: r < 13.1927 @ 95%CL (1 toyMC)
   68% expected band : 13.1927 < r < 13.1927
   95% expected band : 13.1927 < r < 13.1927
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -788319336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1048 +/- 0.0103974 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.1048 @ 95%CL (1 toyMC)
median expected limit: r < 15.1048 @ 95%CL (1 toyMC)
   68% expected band : 15.1048 < r < 15.1048
   95% expected band : 15.1048 < r < 15.1048
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -298937539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6606 +/- 0.0123992 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.6606 @ 95%CL (1 toyMC)
median expected limit: r < 15.6606 @ 95%CL (1 toyMC)
   68% expected band : 15.6606 < r < 15.6606
   95% expected band : 15.6606 < r < 15.6606
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1299064991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7083 +/- 0.0134083 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.7083 @ 95%CL (1 toyMC)
median expected limit: r < 14.7083 @ 95%CL (1 toyMC)
   68% expected band : 14.7083 < r < 14.7083
   95% expected band : 14.7083 < r < 14.7083
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1737764581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6501 +/- 0.0134901 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.6501 @ 95%CL (1 toyMC)
median expected limit: r < 14.6501 @ 95%CL (1 toyMC)
   68% expected band : 14.6501 < r < 14.6501
   95% expected band : 14.6501 < r < 14.6501
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1338635748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8916 +/- 0.0212301 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8916 @ 95%CL (1 toyMC)
median expected limit: r < 10.8916 @ 95%CL (1 toyMC)
   68% expected band : 10.8916 < r < 10.8916
   95% expected band : 10.8916 < r < 10.8916
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1849646744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9539 +/- 0.019753 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.9539 @ 95%CL (1 toyMC)
median expected limit: r < 12.9539 @ 95%CL (1 toyMC)
   68% expected band : 12.9539 < r < 12.9539
   95% expected band : 12.9539 < r < 12.9539
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 699828172
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6557 +/- 0.00924535 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.6557 @ 95%CL (1 toyMC)
median expected limit: r < 16.6557 @ 95%CL (1 toyMC)
   68% expected band : 16.6557 < r < 16.6557
   95% expected band : 16.6557 < r < 16.6557
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -172258120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9746 +/- 0.00512283 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.9746 @ 95%CL (1 toyMC)
median expected limit: r < 17.9746 @ 95%CL (1 toyMC)
   68% expected band : 17.9746 < r < 17.9746
   95% expected band : 17.9746 < r < 17.9746
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 370863015
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1607 +/- 0.0099374 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1607 @ 95%CL (1 toyMC)
median expected limit: r < 16.1607 @ 95%CL (1 toyMC)
   68% expected band : 16.1607 < r < 16.1607
   95% expected band : 16.1607 < r < 16.1607
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -188495480
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8836 +/- 0.0177193 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8836 @ 95%CL (1 toyMC)
median expected limit: r < 10.8836 @ 95%CL (1 toyMC)
   68% expected band : 10.8836 < r < 10.8836
   95% expected band : 10.8836 < r < 10.8836
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1022398559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4841 +/- 0.0124267 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.4841 @ 95%CL (1 toyMC)
median expected limit: r < 16.4841 @ 95%CL (1 toyMC)
   68% expected band : 16.4841 < r < 16.4841
   95% expected band : 16.4841 < r < 16.4841
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1606741029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8772 +/- 0.021986 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8772 @ 95%CL (1 toyMC)
median expected limit: r < 10.8772 @ 95%CL (1 toyMC)
   68% expected band : 10.8772 < r < 10.8772
   95% expected band : 10.8772 < r < 10.8772
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 361980556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3123 +/- 0.0164309 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3123 @ 95%CL (1 toyMC)
median expected limit: r < 13.3123 @ 95%CL (1 toyMC)
   68% expected band : 13.3123 < r < 13.3123
   95% expected band : 13.3123 < r < 13.3123
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1022398559.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1024879717.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1179318441.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1253558539.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1315346871.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1338635748.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1369509820.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1382261465.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1499513138.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1563120300.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1588441796.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1712965970.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-172258120.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1734529840.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1746526314.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1754669281.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1802356238.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1812195807.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1878229597.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-188495480.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1931776874.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-194453248.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1992992415.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1994574079.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-203937477.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-2144363848.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-216814377.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-220728713.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-298937539.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-337510309.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-366205699.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-372285290.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-375005098.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-477813305.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-498353799.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-581975566.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-622158226.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-719358059.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-788319336.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-833811319.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-867488642.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-942373831.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-958514619.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-986054707.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-999849177.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.1051174436.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1088514194.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1098537669.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1148106626.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1244792675.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1299064991.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1378315112.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.138845886.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1422619990.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1445108449.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1481087580.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1487443197.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1492092193.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1513225853.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.151982977.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1568430192.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1605401666.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1606741029.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1626061762.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1627506041.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1650087216.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1655025219.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1665192190.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1737764581.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1767483918.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1794734083.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1804374407.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1849646744.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1896666611.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1926994604.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1938376344.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1962310519.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2043784801.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.211726452.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2131224571.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2138879866.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.287872927.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.361980556.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.370863015.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.412822883.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.440458282.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.465194095.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.46651410.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.554734463.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.581975759.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.628508126.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.634377295.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.634918013.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.688303001.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.699828172.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.705313678.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.868457474.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.87925506.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.903427893.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.921736689.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -237999441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4356 +/- 0.0114214 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.4356 @ 95%CL (1 toyMC)
median expected limit: r < 16.4356 @ 95%CL (1 toyMC)
   68% expected band : 16.4356 < r < 16.4356
   95% expected band : 16.4356 < r < 16.4356
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2138048974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9686 +/- 0.010834 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.9686 @ 95%CL (1 toyMC)
median expected limit: r < 16.9686 @ 95%CL (1 toyMC)
   68% expected band : 16.9686 < r < 16.9686
   95% expected band : 16.9686 < r < 16.9686
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2106413595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9802 +/- 0.0210335 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9802 @ 95%CL (1 toyMC)
median expected limit: r < 11.9802 @ 95%CL (1 toyMC)
   68% expected band : 11.9802 < r < 11.9802
   95% expected band : 11.9802 < r < 11.9802
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 392246868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9907 +/- 0.0203095 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.9907 @ 95%CL (1 toyMC)
median expected limit: r < 11.9907 @ 95%CL (1 toyMC)
   68% expected band : 11.9907 < r < 11.9907
   95% expected band : 11.9907 < r < 11.9907
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1320734150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9354 +/- 0.00881505 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.9354 @ 95%CL (1 toyMC)
median expected limit: r < 16.9354 @ 95%CL (1 toyMC)
   68% expected band : 16.9354 < r < 16.9354
   95% expected band : 16.9354 < r < 16.9354
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2097233447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9858 +/- 0.0202818 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9858 @ 95%CL (1 toyMC)
median expected limit: r < 11.9858 @ 95%CL (1 toyMC)
   68% expected band : 11.9858 < r < 11.9858
   95% expected band : 11.9858 < r < 11.9858
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1502028834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9633 +/- 0.0199513 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9633 @ 95%CL (1 toyMC)
median expected limit: r < 11.9633 @ 95%CL (1 toyMC)
   68% expected band : 11.9633 < r < 11.9633
   95% expected band : 11.9633 < r < 11.9633
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1457124194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2372 +/- 0.0152455 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2372 @ 95%CL (1 toyMC)
median expected limit: r < 14.2372 @ 95%CL (1 toyMC)
   68% expected band : 14.2372 < r < 14.2372
   95% expected band : 14.2372 < r < 14.2372
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1025222313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7101 +/- 0.0161703 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.7101 @ 95%CL (1 toyMC)
median expected limit: r < 14.7101 @ 95%CL (1 toyMC)
   68% expected band : 14.7101 < r < 14.7101
   95% expected band : 14.7101 < r < 14.7101
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2127777514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0088 +/- 0.0185232 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0088 @ 95%CL (1 toyMC)
median expected limit: r < 12.0088 @ 95%CL (1 toyMC)
   68% expected band : 12.0088 < r < 12.0088
   95% expected band : 12.0088 < r < 12.0088
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 486479457
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.011 +/- 0.0206283 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.011 @ 95%CL (1 toyMC)
median expected limit: r < 12.011 @ 95%CL (1 toyMC)
   68% expected band : 12.011 < r < 12.011
   95% expected band : 12.011 < r < 12.011
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2054771789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1584 +/- 0.0115638 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1584 @ 95%CL (1 toyMC)
median expected limit: r < 16.1584 @ 95%CL (1 toyMC)
   68% expected band : 16.1584 < r < 16.1584
   95% expected band : 16.1584 < r < 16.1584
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1923580438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9705 +/- 0.00952125 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.9705 @ 95%CL (1 toyMC)
median expected limit: r < 16.9705 @ 95%CL (1 toyMC)
   68% expected band : 16.9705 < r < 16.9705
   95% expected band : 16.9705 < r < 16.9705
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -403816536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4921 +/- 0.00963111 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.4921 @ 95%CL (1 toyMC)
median expected limit: r < 16.4921 @ 95%CL (1 toyMC)
   68% expected band : 16.4921 < r < 16.4921
   95% expected band : 16.4921 < r < 16.4921
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1451313327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4414 +/- 0.0119275 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4414 @ 95%CL (1 toyMC)
median expected limit: r < 14.4414 @ 95%CL (1 toyMC)
   68% expected band : 14.4414 < r < 14.4414
   95% expected band : 14.4414 < r < 14.4414
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1770189894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4899 +/- 0.00980705 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.4899 @ 95%CL (1 toyMC)
median expected limit: r < 16.4899 @ 95%CL (1 toyMC)
   68% expected band : 16.4899 < r < 16.4899
   95% expected band : 16.4899 < r < 16.4899
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2097739025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9352 +/- 0.00877274 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.9352 @ 95%CL (1 toyMC)
median expected limit: r < 16.9352 @ 95%CL (1 toyMC)
   68% expected band : 16.9352 < r < 16.9352
   95% expected band : 16.9352 < r < 16.9352
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -640408628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0067 +/- 0.015771 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.0067 @ 95%CL (1 toyMC)
median expected limit: r < 12.0067 @ 95%CL (1 toyMC)
   68% expected band : 12.0067 < r < 12.0067
   95% expected band : 12.0067 < r < 12.0067
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1611693194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5843 +/- 0.0100578 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.5843 @ 95%CL (1 toyMC)
median expected limit: r < 14.5843 @ 95%CL (1 toyMC)
   68% expected band : 14.5843 < r < 14.5843
   95% expected band : 14.5843 < r < 14.5843
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1181548424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9724 +/- 0.0189833 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9724 @ 95%CL (1 toyMC)
median expected limit: r < 11.9724 @ 95%CL (1 toyMC)
   68% expected band : 11.9724 < r < 11.9724
   95% expected band : 11.9724 < r < 11.9724
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1415401133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9905 +/- 0.019455 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.9905 @ 95%CL (1 toyMC)
median expected limit: r < 11.9905 @ 95%CL (1 toyMC)
   68% expected band : 11.9905 < r < 11.9905
   95% expected band : 11.9905 < r < 11.9905
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1543732583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9749 +/- 0.0182178 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9749 @ 95%CL (1 toyMC)
median expected limit: r < 11.9749 @ 95%CL (1 toyMC)
   68% expected band : 11.9749 < r < 11.9749
   95% expected band : 11.9749 < r < 11.9749
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -227422084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3873 +/- 0.00742982 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.3873 @ 95%CL (1 toyMC)
median expected limit: r < 17.3873 @ 95%CL (1 toyMC)
   68% expected band : 17.3873 < r < 17.3873
   95% expected band : 17.3873 < r < 17.3873
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -381814641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0895 +/- 0.00577925 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.0895 @ 95%CL (1 toyMC)
median expected limit: r < 18.0895 @ 95%CL (1 toyMC)
   68% expected band : 18.0895 < r < 18.0895
   95% expected band : 18.0895 < r < 18.0895
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1455605462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7336 +/- 0.00669761 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.7336 @ 95%CL (1 toyMC)
median expected limit: r < 17.7336 @ 95%CL (1 toyMC)
   68% expected band : 17.7336 < r < 17.7336
   95% expected band : 17.7336 < r < 17.7336
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -602930149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3742 +/- 0.0106342 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.3742 @ 95%CL (1 toyMC)
median expected limit: r < 15.3742 @ 95%CL (1 toyMC)
   68% expected band : 15.3742 < r < 15.3742
   95% expected band : 15.3742 < r < 15.3742
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399232354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.656 +/- 0.0041211 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.656 @ 95%CL (1 toyMC)
median expected limit: r < 18.656 @ 95%CL (1 toyMC)
   68% expected band : 18.656 < r < 18.656
   95% expected band : 18.656 < r < 18.656
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1909774104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3002 +/- 0.00548307 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.3002 @ 95%CL (1 toyMC)
median expected limit: r < 18.3002 @ 95%CL (1 toyMC)
   68% expected band : 18.3002 < r < 18.3002
   95% expected band : 18.3002 < r < 18.3002
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 124181461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0977 +/- 0.0146953 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.0977 @ 95%CL (1 toyMC)
median expected limit: r < 14.0977 @ 95%CL (1 toyMC)
   68% expected band : 14.0977 < r < 14.0977
   95% expected band : 14.0977 < r < 14.0977
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1331827769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9742 +/- 0.0197925 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.9742 @ 95%CL (1 toyMC)
median expected limit: r < 11.9742 @ 95%CL (1 toyMC)
   68% expected band : 11.9742 < r < 11.9742
   95% expected band : 11.9742 < r < 11.9742
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 484602012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2401 +/- 0.0139241 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2401 @ 95%CL (1 toyMC)
median expected limit: r < 14.2401 @ 95%CL (1 toyMC)
   68% expected band : 14.2401 < r < 14.2401
   95% expected band : 14.2401 < r < 14.2401
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1142876433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4618 +/- 0.0166442 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4618 @ 95%CL (1 toyMC)
median expected limit: r < 14.4618 @ 95%CL (1 toyMC)
   68% expected band : 14.4618 < r < 14.4618
   95% expected band : 14.4618 < r < 14.4618
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1897216583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3379 +/- 0.0110783 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.3379 @ 95%CL (1 toyMC)
median expected limit: r < 15.3379 @ 95%CL (1 toyMC)
   68% expected band : 15.3379 < r < 15.3379
   95% expected band : 15.3379 < r < 15.3379
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 504489726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0741 +/- 0.00700858 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.0741 @ 95%CL (1 toyMC)
median expected limit: r < 17.0741 @ 95%CL (1 toyMC)
   68% expected band : 17.0741 < r < 17.0741
   95% expected band : 17.0741 < r < 17.0741
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1901433250
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1834 +/- 0.0109035 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.1834 @ 95%CL (1 toyMC)
median expected limit: r < 16.1834 @ 95%CL (1 toyMC)
   68% expected band : 16.1834 < r < 16.1834
   95% expected band : 16.1834 < r < 16.1834
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1761896725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9466 +/- 0.0176536 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9466 @ 95%CL (1 toyMC)
median expected limit: r < 11.9466 @ 95%CL (1 toyMC)
   68% expected band : 11.9466 < r < 11.9466
   95% expected band : 11.9466 < r < 11.9466
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -529305171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1342 +/- 0.00642491 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.1342 @ 95%CL (1 toyMC)
median expected limit: r < 18.1342 @ 95%CL (1 toyMC)
   68% expected band : 18.1342 < r < 18.1342
   95% expected band : 18.1342 < r < 18.1342
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -157611035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9416 +/- 0.0156107 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9416 @ 95%CL (1 toyMC)
median expected limit: r < 11.9416 @ 95%CL (1 toyMC)
   68% expected band : 11.9416 < r < 11.9416
   95% expected band : 11.9416 < r < 11.9416
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 768401210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0692 +/- 0.0114326 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.0692 @ 95%CL (1 toyMC)
median expected limit: r < 16.0692 @ 95%CL (1 toyMC)
   68% expected band : 16.0692 < r < 16.0692
   95% expected band : 16.0692 < r < 16.0692
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -4556996
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1271 +/- 0.00630922 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.1271 @ 95%CL (1 toyMC)
median expected limit: r < 18.1271 @ 95%CL (1 toyMC)
   68% expected band : 18.1271 < r < 18.1271
   95% expected band : 18.1271 < r < 18.1271
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 68430868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9374 +/- 0.018534 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9374 @ 95%CL (1 toyMC)
median expected limit: r < 11.9374 @ 95%CL (1 toyMC)
   68% expected band : 11.9374 < r < 11.9374
   95% expected band : 11.9374 < r < 11.9374
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1033959565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9538 +/- 0.0172602 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.9538 @ 95%CL (1 toyMC)
median expected limit: r < 11.9538 @ 95%CL (1 toyMC)
   68% expected band : 11.9538 < r < 11.9538
   95% expected band : 11.9538 < r < 11.9538
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2112859645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.998 +/- 0.0178724 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.998 @ 95%CL (1 toyMC)
median expected limit: r < 11.998 @ 95%CL (1 toyMC)
   68% expected band : 11.998 < r < 11.998
   95% expected band : 11.998 < r < 11.998
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1591344884
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0223 +/- 0.0175925 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.0223 @ 95%CL (1 toyMC)
median expected limit: r < 12.0223 @ 95%CL (1 toyMC)
   68% expected band : 12.0223 < r < 12.0223
   95% expected band : 12.0223 < r < 12.0223
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1415790935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8566 +/- 0.0146527 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.8566 @ 95%CL (1 toyMC)
median expected limit: r < 14.8566 @ 95%CL (1 toyMC)
   68% expected band : 14.8566 < r < 14.8566
   95% expected band : 14.8566 < r < 14.8566
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1473638478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9739 +/- 0.0100846 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.9739 @ 95%CL (1 toyMC)
median expected limit: r < 15.9739 @ 95%CL (1 toyMC)
   68% expected band : 15.9739 < r < 15.9739
   95% expected band : 15.9739 < r < 15.9739
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1509797039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2373 +/- 0.0153638 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2373 @ 95%CL (1 toyMC)
median expected limit: r < 14.2373 @ 95%CL (1 toyMC)
   68% expected band : 14.2373 < r < 14.2373
   95% expected band : 14.2373 < r < 14.2373
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1621947112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9807 +/- 0.0169916 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.9807 @ 95%CL (1 toyMC)
median expected limit: r < 11.9807 @ 95%CL (1 toyMC)
   68% expected band : 11.9807 < r < 11.9807
   95% expected band : 11.9807 < r < 11.9807
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -44371222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3174 +/- 0.0149391 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.3174 @ 95%CL (1 toyMC)
median expected limit: r < 14.3174 @ 95%CL (1 toyMC)
   68% expected band : 14.3174 < r < 14.3174
   95% expected band : 14.3174 < r < 14.3174
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 562175568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9593 +/- 0.0192854 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9593 @ 95%CL (1 toyMC)
median expected limit: r < 11.9593 @ 95%CL (1 toyMC)
   68% expected band : 11.9593 < r < 11.9593
   95% expected band : 11.9593 < r < 11.9593
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 997028787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4316 +/- 0.0128067 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.4316 @ 95%CL (1 toyMC)
median expected limit: r < 14.4316 @ 95%CL (1 toyMC)
   68% expected band : 14.4316 < r < 14.4316
   95% expected band : 14.4316 < r < 14.4316
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -804397700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9623 +/- 0.0200237 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.9623 @ 95%CL (1 toyMC)
median expected limit: r < 11.9623 @ 95%CL (1 toyMC)
   68% expected band : 11.9623 < r < 11.9623
   95% expected band : 11.9623 < r < 11.9623
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1763379364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.3979 +/- 0.00275005 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 19.3979 @ 95%CL (1 toyMC)
median expected limit: r < 19.3979 @ 95%CL (1 toyMC)
   68% expected band : 19.3979 < r < 19.3979
   95% expected band : 19.3979 < r < 19.3979
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2128947797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9198 +/- 0.00878111 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.9198 @ 95%CL (1 toyMC)
median expected limit: r < 16.9198 @ 95%CL (1 toyMC)
   68% expected band : 16.9198 < r < 16.9198
   95% expected band : 16.9198 < r < 16.9198
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -645703852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0288 +/- 0.0170398 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 12.0288 @ 95%CL (1 toyMC)
median expected limit: r < 12.0288 @ 95%CL (1 toyMC)
   68% expected band : 12.0288 < r < 12.0288
   95% expected band : 12.0288 < r < 12.0288
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1774326258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2493 +/- 0.0177848 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.2493 @ 95%CL (1 toyMC)
median expected limit: r < 14.2493 @ 95%CL (1 toyMC)
   68% expected band : 14.2493 < r < 14.2493
   95% expected band : 14.2493 < r < 14.2493
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -509047524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1353 +/- 0.0140138 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1353 @ 95%CL (1 toyMC)
median expected limit: r < 14.1353 @ 95%CL (1 toyMC)
   68% expected band : 14.1353 < r < 14.1353
   95% expected band : 14.1353 < r < 14.1353
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 230601716
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0361 +/- 0.0163804 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.0361 @ 95%CL (1 toyMC)
median expected limit: r < 12.0361 @ 95%CL (1 toyMC)
   68% expected band : 12.0361 < r < 12.0361
   95% expected band : 12.0361 < r < 12.0361
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -177890439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0473 +/- 0.0191048 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 12.0473 @ 95%CL (1 toyMC)
median expected limit: r < 12.0473 @ 95%CL (1 toyMC)
   68% expected band : 12.0473 < r < 12.0473
   95% expected band : 12.0473 < r < 12.0473
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1760888586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9294 +/- 0.014607 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9294 @ 95%CL (1 toyMC)
median expected limit: r < 11.9294 @ 95%CL (1 toyMC)
   68% expected band : 11.9294 < r < 11.9294
   95% expected band : 11.9294 < r < 11.9294
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1695845566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3194 +/- 0.0169045 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.3194 @ 95%CL (1 toyMC)
median expected limit: r < 14.3194 @ 95%CL (1 toyMC)
   68% expected band : 14.3194 < r < 14.3194
   95% expected band : 14.3194 < r < 14.3194
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -868200228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3442 +/- 0.0177568 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.3442 @ 95%CL (1 toyMC)
median expected limit: r < 14.3442 @ 95%CL (1 toyMC)
   68% expected band : 14.3442 < r < 14.3442
   95% expected band : 14.3442 < r < 14.3442
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1246047287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0019 +/- 0.0215468 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.0019 @ 95%CL (1 toyMC)
median expected limit: r < 12.0019 @ 95%CL (1 toyMC)
   68% expected band : 12.0019 < r < 12.0019
   95% expected band : 12.0019 < r < 12.0019
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 49690450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9817 +/- 0.0165111 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9817 @ 95%CL (1 toyMC)
median expected limit: r < 11.9817 @ 95%CL (1 toyMC)
   68% expected band : 11.9817 < r < 11.9817
   95% expected band : 11.9817 < r < 11.9817
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 22509936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0981 +/- 0.009141 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.0981 @ 95%CL (1 toyMC)
median expected limit: r < 16.0981 @ 95%CL (1 toyMC)
   68% expected band : 16.0981 < r < 16.0981
   95% expected band : 16.0981 < r < 16.0981
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 116630113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0892 +/- 0.0106581 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.0892 @ 95%CL (1 toyMC)
median expected limit: r < 17.0892 @ 95%CL (1 toyMC)
   68% expected band : 17.0892 < r < 17.0892
   95% expected band : 17.0892 < r < 17.0892
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1484216764
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2372 +/- 0.0155104 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.2372 @ 95%CL (1 toyMC)
median expected limit: r < 14.2372 @ 95%CL (1 toyMC)
   68% expected band : 14.2372 < r < 14.2372
   95% expected band : 14.2372 < r < 14.2372
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 404438632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9601 +/- 0.0180614 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.9601 @ 95%CL (1 toyMC)
median expected limit: r < 11.9601 @ 95%CL (1 toyMC)
   68% expected band : 11.9601 < r < 11.9601
   95% expected band : 11.9601 < r < 11.9601
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 957752851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.368 +/- 0.0171158 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.368 @ 95%CL (1 toyMC)
median expected limit: r < 14.368 @ 95%CL (1 toyMC)
   68% expected band : 14.368 < r < 14.368
   95% expected band : 14.368 < r < 14.368
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -998514387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0138 +/- 0.0169808 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.0138 @ 95%CL (1 toyMC)
median expected limit: r < 12.0138 @ 95%CL (1 toyMC)
   68% expected band : 12.0138 < r < 12.0138
   95% expected band : 12.0138 < r < 12.0138
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1094616191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0049 +/- 0.0169691 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.0049 @ 95%CL (1 toyMC)
median expected limit: r < 12.0049 @ 95%CL (1 toyMC)
   68% expected band : 12.0049 < r < 12.0049
   95% expected band : 12.0049 < r < 12.0049
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1926540072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5696 +/- 0.0141065 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.5696 @ 95%CL (1 toyMC)
median expected limit: r < 14.5696 @ 95%CL (1 toyMC)
   68% expected band : 14.5696 < r < 14.5696
   95% expected band : 14.5696 < r < 14.5696
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1531971106
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1173 +/- 0.0117574 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.1173 @ 95%CL (1 toyMC)
median expected limit: r < 15.1173 @ 95%CL (1 toyMC)
   68% expected band : 15.1173 < r < 15.1173
   95% expected band : 15.1173 < r < 15.1173
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1762625448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4856 +/- 0.0132485 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.4856 @ 95%CL (1 toyMC)
median expected limit: r < 14.4856 @ 95%CL (1 toyMC)
   68% expected band : 14.4856 < r < 14.4856
   95% expected band : 14.4856 < r < 14.4856
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -177683144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9656 +/- 0.0159193 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9656 @ 95%CL (1 toyMC)
median expected limit: r < 11.9656 @ 95%CL (1 toyMC)
   68% expected band : 11.9656 < r < 11.9656
   95% expected band : 11.9656 < r < 11.9656
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1011426422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5174 +/- 0.00671147 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.5174 @ 95%CL (1 toyMC)
median expected limit: r < 17.5174 @ 95%CL (1 toyMC)
   68% expected band : 17.5174 < r < 17.5174
   95% expected band : 17.5174 < r < 17.5174
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1414406186
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.968 +/- 0.0115959 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.968 @ 95%CL (1 toyMC)
median expected limit: r < 15.968 @ 95%CL (1 toyMC)
   68% expected band : 15.968 < r < 15.968
   95% expected band : 15.968 < r < 15.968
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 634842888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.112 +/- 0.0139522 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.112 @ 95%CL (1 toyMC)
median expected limit: r < 14.112 @ 95%CL (1 toyMC)
   68% expected band : 14.112 < r < 14.112
   95% expected band : 14.112 < r < 14.112
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -121620408
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9116 +/- 0.0180099 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.9116 @ 95%CL (1 toyMC)
median expected limit: r < 11.9116 @ 95%CL (1 toyMC)
   68% expected band : 11.9116 < r < 11.9116
   95% expected band : 11.9116 < r < 11.9116
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1997600415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0552 +/- 0.0122196 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.0552 @ 95%CL (1 toyMC)
median expected limit: r < 16.0552 @ 95%CL (1 toyMC)
   68% expected band : 16.0552 < r < 16.0552
   95% expected band : 16.0552 < r < 16.0552
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1406923270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6923 +/- 0.00646248 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.6923 @ 95%CL (1 toyMC)
median expected limit: r < 17.6923 @ 95%CL (1 toyMC)
   68% expected band : 17.6923 < r < 17.6923
   95% expected band : 17.6923 < r < 17.6923
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1074888659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.988 +/- 0.0168551 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.988 @ 95%CL (1 toyMC)
median expected limit: r < 11.988 @ 95%CL (1 toyMC)
   68% expected band : 11.988 < r < 11.988
   95% expected band : 11.988 < r < 11.988
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1819874699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2209 +/- 0.0143605 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2209 @ 95%CL (1 toyMC)
median expected limit: r < 14.2209 @ 95%CL (1 toyMC)
   68% expected band : 14.2209 < r < 14.2209
   95% expected band : 14.2209 < r < 14.2209
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 91554379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5751 +/- 0.0117233 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.5751 @ 95%CL (1 toyMC)
median expected limit: r < 14.5751 @ 95%CL (1 toyMC)
   68% expected band : 14.5751 < r < 14.5751
   95% expected band : 14.5751 < r < 14.5751
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -273458908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1583 +/- 0.0106324 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1583 @ 95%CL (1 toyMC)
median expected limit: r < 16.1583 @ 95%CL (1 toyMC)
   68% expected band : 16.1583 < r < 16.1583
   95% expected band : 16.1583 < r < 16.1583
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2091009798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0015 +/- 0.0156124 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 12.0015 @ 95%CL (1 toyMC)
median expected limit: r < 12.0015 @ 95%CL (1 toyMC)
   68% expected band : 12.0015 < r < 12.0015
   95% expected band : 12.0015 < r < 12.0015
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 395350345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.256 +/- 0.0144307 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.256 @ 95%CL (1 toyMC)
median expected limit: r < 14.256 @ 95%CL (1 toyMC)
   68% expected band : 14.256 < r < 14.256
   95% expected band : 14.256 < r < 14.256
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -899978076
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3169 +/- 0.0146524 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.3169 @ 95%CL (1 toyMC)
median expected limit: r < 14.3169 @ 95%CL (1 toyMC)
   68% expected band : 14.3169 < r < 14.3169
   95% expected band : 14.3169 < r < 14.3169
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1682016211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3475 +/- 0.0167361 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.3475 @ 95%CL (1 toyMC)
median expected limit: r < 14.3475 @ 95%CL (1 toyMC)
   68% expected band : 14.3475 < r < 14.3475
   95% expected band : 14.3475 < r < 14.3475
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1377303575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.753 +/- 0.0135166 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.753 @ 95%CL (1 toyMC)
median expected limit: r < 14.753 @ 95%CL (1 toyMC)
   68% expected band : 14.753 < r < 14.753
   95% expected band : 14.753 < r < 14.753
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -231845113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2586 +/- 0.0133973 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.2586 @ 95%CL (1 toyMC)
median expected limit: r < 14.2586 @ 95%CL (1 toyMC)
   68% expected band : 14.2586 < r < 14.2586
   95% expected band : 14.2586 < r < 14.2586
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 205669136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9685 +/- 0.021837 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.9685 @ 95%CL (1 toyMC)
median expected limit: r < 11.9685 @ 95%CL (1 toyMC)
   68% expected band : 11.9685 < r < 11.9685
   95% expected band : 11.9685 < r < 11.9685
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1694317865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1287 +/- 0.00970194 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1287 @ 95%CL (1 toyMC)
median expected limit: r < 16.1287 @ 95%CL (1 toyMC)
   68% expected band : 16.1287 < r < 16.1287
   95% expected band : 16.1287 < r < 16.1287
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1175304568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.361 +/- 0.0149477 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.361 @ 95%CL (1 toyMC)
median expected limit: r < 14.361 @ 95%CL (1 toyMC)
   68% expected band : 14.361 < r < 14.361
   95% expected band : 14.361 < r < 14.361
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 492773681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.859 +/- 0.0103887 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.859 @ 95%CL (1 toyMC)
median expected limit: r < 16.859 @ 95%CL (1 toyMC)
   68% expected band : 16.859 < r < 16.859
   95% expected band : 16.859 < r < 16.859
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1159471108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5337 +/- 0.00926324 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.5337 @ 95%CL (1 toyMC)
median expected limit: r < 16.5337 @ 95%CL (1 toyMC)
   68% expected band : 16.5337 < r < 16.5337
   95% expected band : 16.5337 < r < 16.5337
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1234729543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0158 +/- 0.0155568 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.0158 @ 95%CL (1 toyMC)
median expected limit: r < 12.0158 @ 95%CL (1 toyMC)
   68% expected band : 12.0158 < r < 12.0158
   95% expected band : 12.0158 < r < 12.0158
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1023549103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3058 +/- 0.0129099 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.3058 @ 95%CL (1 toyMC)
median expected limit: r < 15.3058 @ 95%CL (1 toyMC)
   68% expected band : 15.3058 < r < 15.3058
   95% expected band : 15.3058 < r < 15.3058
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1944206744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9377 +/- 0.0201936 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.9377 @ 95%CL (1 toyMC)
median expected limit: r < 11.9377 @ 95%CL (1 toyMC)
   68% expected band : 11.9377 < r < 11.9377
   95% expected band : 11.9377 < r < 11.9377
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 186886562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3297 +/- 0.0123153 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.3297 @ 95%CL (1 toyMC)
median expected limit: r < 15.3297 @ 95%CL (1 toyMC)
   68% expected band : 15.3297 < r < 15.3297
   95% expected band : 15.3297 < r < 15.3297
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1011426422.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1033959565.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1074888659.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1142876433.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1175304568.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-121620408.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1234729543.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1399232354.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1415401133.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1451313327.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1455605462.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1484216764.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1509797039.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1531971106.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-157611035.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1611693194.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1682016211.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1760888586.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1762625448.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1763379364.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1770189894.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1774326258.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-177683144.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-177890439.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1819874699.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1897216583.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1901433250.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1923580438.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-1926540072.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-1944206744.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-2138048974.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-227422084.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-231845113.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-237999441.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-273458908.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-381814641.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-403816536.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-44371222.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-4556996.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-509047524.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-529305171.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-602930149.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-640408628.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-645703852.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-804397700.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-868200228.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-899978076.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-998514387.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1023549103.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1025222313.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1094616191.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1159471108.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.116630113.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1181548424.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.124181461.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1246047287.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1320734150.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1331827769.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1377303575.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1406923270.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1414406186.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1415790935.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1457124194.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1473638478.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1502028834.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1543732583.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1591344884.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1621947112.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1694317865.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1695845566.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1761896725.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.186886562.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1909774104.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1997600415.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.2054771789.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.205669136.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2091009798.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2097233447.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2097739025.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2106413595.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2112859645.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2127777514.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.2128947797.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.22509936.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.230601716.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.392246868.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.395350345.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.404438632.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.484602012.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.486479457.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.492773681.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.49690450.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.504489726.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.562175568.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.634842888.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.68430868.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.768401210.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.91554379.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.957752851.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.997028787.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 593470264
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2194 +/- 0.0196148 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.2194 @ 95%CL (1 toyMC)
median expected limit: r < 13.2194 @ 95%CL (1 toyMC)
   68% expected band : 13.2194 < r < 13.2194
   95% expected band : 13.2194 < r < 13.2194
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1253022381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6819 +/- 0.00538303 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6819 @ 95%CL (1 toyMC)
median expected limit: r < 18.6819 @ 95%CL (1 toyMC)
   68% expected band : 18.6819 < r < 18.6819
   95% expected band : 18.6819 < r < 18.6819
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1710041787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1726 +/- 0.0186747 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1726 @ 95%CL (1 toyMC)
median expected limit: r < 13.1726 @ 95%CL (1 toyMC)
   68% expected band : 13.1726 < r < 13.1726
   95% expected band : 13.1726 < r < 13.1726
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 801741577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2271 +/- 0.013992 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.2271 @ 95%CL (1 toyMC)
median expected limit: r < 13.2271 @ 95%CL (1 toyMC)
   68% expected band : 13.2271 < r < 13.2271
   95% expected band : 13.2271 < r < 13.2271
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1153553135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1694 +/- 0.012625 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1694 @ 95%CL (1 toyMC)
median expected limit: r < 13.1694 @ 95%CL (1 toyMC)
   68% expected band : 13.1694 < r < 13.1694
   95% expected band : 13.1694 < r < 13.1694
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2035741428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3667 +/- 0.0125964 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.3667 @ 95%CL (1 toyMC)
median expected limit: r < 16.3667 @ 95%CL (1 toyMC)
   68% expected band : 16.3667 < r < 16.3667
   95% expected band : 16.3667 < r < 16.3667
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1979279303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1639 +/- 0.0164724 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1639 @ 95%CL (1 toyMC)
median expected limit: r < 13.1639 @ 95%CL (1 toyMC)
   68% expected band : 13.1639 < r < 13.1639
   95% expected band : 13.1639 < r < 13.1639
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1916378608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9011 +/- 0.00868142 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9011 @ 95%CL (1 toyMC)
median expected limit: r < 16.9011 @ 95%CL (1 toyMC)
   68% expected band : 16.9011 < r < 16.9011
   95% expected band : 16.9011 < r < 16.9011
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 921222459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9007 +/- 0.00520558 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.9007 @ 95%CL (1 toyMC)
median expected limit: r < 17.9007 @ 95%CL (1 toyMC)
   68% expected band : 17.9007 < r < 17.9007
   95% expected band : 17.9007 < r < 17.9007
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1457567319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1862 +/- 0.0129149 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1862 @ 95%CL (1 toyMC)
median expected limit: r < 13.1862 @ 95%CL (1 toyMC)
   68% expected band : 13.1862 < r < 13.1862
   95% expected band : 13.1862 < r < 13.1862
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1666284159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1223 +/- 0.0214181 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1223 @ 95%CL (1 toyMC)
median expected limit: r < 13.1223 @ 95%CL (1 toyMC)
   68% expected band : 13.1223 < r < 13.1223
   95% expected band : 13.1223 < r < 13.1223
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -68285455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.537 +/- 0.00778838 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.537 @ 95%CL (1 toyMC)
median expected limit: r < 17.537 @ 95%CL (1 toyMC)
   68% expected band : 17.537 < r < 17.537
   95% expected band : 17.537 < r < 17.537
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1440556909
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5878 +/- 0.00685888 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.5878 @ 95%CL (1 toyMC)
median expected limit: r < 17.5878 @ 95%CL (1 toyMC)
   68% expected band : 17.5878 < r < 17.5878
   95% expected band : 17.5878 < r < 17.5878
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -280009624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.966 +/- 0.00574681 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.966 @ 95%CL (1 toyMC)
median expected limit: r < 17.966 @ 95%CL (1 toyMC)
   68% expected band : 17.966 < r < 17.966
   95% expected band : 17.966 < r < 17.966
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -616597153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1619 +/- 0.0161285 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.1619 @ 95%CL (1 toyMC)
median expected limit: r < 13.1619 @ 95%CL (1 toyMC)
   68% expected band : 13.1619 < r < 13.1619
   95% expected band : 13.1619 < r < 13.1619
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1333961812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2871 +/- 0.0126481 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.2871 @ 95%CL (1 toyMC)
median expected limit: r < 15.2871 @ 95%CL (1 toyMC)
   68% expected band : 15.2871 < r < 15.2871
   95% expected band : 15.2871 < r < 15.2871
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 967626376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2152 +/- 0.0187396 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.2152 @ 95%CL (1 toyMC)
median expected limit: r < 13.2152 @ 95%CL (1 toyMC)
   68% expected band : 13.2152 < r < 13.2152
   95% expected band : 13.2152 < r < 13.2152
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1552985313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2747 +/- 0.0105899 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2747 @ 95%CL (1 toyMC)
median expected limit: r < 16.2747 @ 95%CL (1 toyMC)
   68% expected band : 16.2747 < r < 16.2747
   95% expected band : 16.2747 < r < 16.2747
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1255447459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.401 +/- 0.0115837 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.401 @ 95%CL (1 toyMC)
median expected limit: r < 15.401 @ 95%CL (1 toyMC)
   68% expected band : 15.401 < r < 15.401
   95% expected band : 15.401 < r < 15.401
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1927752242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1591 +/- 0.0189936 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1591 @ 95%CL (1 toyMC)
median expected limit: r < 13.1591 @ 95%CL (1 toyMC)
   68% expected band : 13.1591 < r < 13.1591
   95% expected band : 13.1591 < r < 13.1591
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1105740848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1711 +/- 0.0193511 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1711 @ 95%CL (1 toyMC)
median expected limit: r < 13.1711 @ 95%CL (1 toyMC)
   68% expected band : 13.1711 < r < 13.1711
   95% expected band : 13.1711 < r < 13.1711
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1527403923
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1334 +/- 0.0175928 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1334 @ 95%CL (1 toyMC)
median expected limit: r < 13.1334 @ 95%CL (1 toyMC)
   68% expected band : 13.1334 < r < 13.1334
   95% expected band : 13.1334 < r < 13.1334
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1571868412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.182 +/- 0.0178169 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.182 @ 95%CL (1 toyMC)
median expected limit: r < 13.182 @ 95%CL (1 toyMC)
   68% expected band : 13.182 < r < 13.182
   95% expected band : 13.182 < r < 13.182
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -471629800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2318 +/- 0.0150951 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.2318 @ 95%CL (1 toyMC)
median expected limit: r < 15.2318 @ 95%CL (1 toyMC)
   68% expected band : 15.2318 < r < 15.2318
   95% expected band : 15.2318 < r < 15.2318
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1175466860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1783 +/- 0.0211432 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1783 @ 95%CL (1 toyMC)
median expected limit: r < 13.1783 @ 95%CL (1 toyMC)
   68% expected band : 13.1783 < r < 13.1783
   95% expected band : 13.1783 < r < 13.1783
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 449540589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8429 +/- 0.011103 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8429 @ 95%CL (1 toyMC)
median expected limit: r < 15.8429 @ 95%CL (1 toyMC)
   68% expected band : 15.8429 < r < 15.8429
   95% expected band : 15.8429 < r < 15.8429
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1986716660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1921 +/- 0.0150158 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1921 @ 95%CL (1 toyMC)
median expected limit: r < 13.1921 @ 95%CL (1 toyMC)
   68% expected band : 13.1921 < r < 13.1921
   95% expected band : 13.1921 < r < 13.1921
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1707976829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1765 +/- 0.0173927 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1765 @ 95%CL (1 toyMC)
median expected limit: r < 13.1765 @ 95%CL (1 toyMC)
   68% expected band : 13.1765 < r < 13.1765
   95% expected band : 13.1765 < r < 13.1765
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2018713810
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1589 +/- 0.0200023 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.1589 @ 95%CL (1 toyMC)
median expected limit: r < 13.1589 @ 95%CL (1 toyMC)
   68% expected band : 13.1589 < r < 13.1589
   95% expected band : 13.1589 < r < 13.1589
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1213258179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5876 +/- 0.00789172 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.5876 @ 95%CL (1 toyMC)
median expected limit: r < 17.5876 @ 95%CL (1 toyMC)
   68% expected band : 17.5876 < r < 17.5876
   95% expected band : 17.5876 < r < 17.5876
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -421760304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2742 +/- 0.00924088 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.2742 @ 95%CL (1 toyMC)
median expected limit: r < 16.2742 @ 95%CL (1 toyMC)
   68% expected band : 16.2742 < r < 16.2742
   95% expected band : 16.2742 < r < 16.2742
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1535876095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6133 +/- 0.00696492 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.6133 @ 95%CL (1 toyMC)
median expected limit: r < 17.6133 @ 95%CL (1 toyMC)
   68% expected band : 17.6133 < r < 17.6133
   95% expected band : 17.6133 < r < 17.6133
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1590940805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8453 +/- 0.0143677 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.8453 @ 95%CL (1 toyMC)
median expected limit: r < 15.8453 @ 95%CL (1 toyMC)
   68% expected band : 15.8453 < r < 15.8453
   95% expected band : 15.8453 < r < 15.8453
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 717134833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1262 +/- 0.0155566 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1262 @ 95%CL (1 toyMC)
median expected limit: r < 13.1262 @ 95%CL (1 toyMC)
   68% expected band : 13.1262 < r < 13.1262
   95% expected band : 13.1262 < r < 13.1262
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -940478759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2637 +/- 0.0157155 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.2637 @ 95%CL (1 toyMC)
median expected limit: r < 15.2637 @ 95%CL (1 toyMC)
   68% expected band : 15.2637 < r < 15.2637
   95% expected band : 15.2637 < r < 15.2637
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 742806866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.185 +/- 0.0171081 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.185 @ 95%CL (1 toyMC)
median expected limit: r < 13.185 @ 95%CL (1 toyMC)
   68% expected band : 13.185 < r < 13.185
   95% expected band : 13.185 < r < 13.185
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 543829413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4035 +/- 0.0104748 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.4035 @ 95%CL (1 toyMC)
median expected limit: r < 16.4035 @ 95%CL (1 toyMC)
   68% expected band : 16.4035 < r < 16.4035
   95% expected band : 16.4035 < r < 16.4035
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1833752274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1851 +/- 0.0183218 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.1851 @ 95%CL (1 toyMC)
median expected limit: r < 13.1851 @ 95%CL (1 toyMC)
   68% expected band : 13.1851 < r < 13.1851
   95% expected band : 13.1851 < r < 13.1851
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 416385888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1531 +/- 0.0171508 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1531 @ 95%CL (1 toyMC)
median expected limit: r < 13.1531 @ 95%CL (1 toyMC)
   68% expected band : 13.1531 < r < 13.1531
   95% expected band : 13.1531 < r < 13.1531
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1423278194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3173 +/- 0.00682791 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.3173 @ 95%CL (1 toyMC)
median expected limit: r < 17.3173 @ 95%CL (1 toyMC)
   68% expected band : 17.3173 < r < 17.3173
   95% expected band : 17.3173 < r < 17.3173
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -469449326
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.146 +/- 0.0176887 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.146 @ 95%CL (1 toyMC)
median expected limit: r < 13.146 @ 95%CL (1 toyMC)
   68% expected band : 13.146 < r < 13.146
   95% expected band : 13.146 < r < 13.146
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 45630358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1353 +/- 0.0129816 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1353 @ 95%CL (1 toyMC)
median expected limit: r < 13.1353 @ 95%CL (1 toyMC)
   68% expected band : 13.1353 < r < 13.1353
   95% expected band : 13.1353 < r < 13.1353
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1153645784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3124 +/- 0.0109451 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.3124 @ 95%CL (1 toyMC)
median expected limit: r < 15.3124 @ 95%CL (1 toyMC)
   68% expected band : 15.3124 < r < 15.3124
   95% expected band : 15.3124 < r < 15.3124
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -546853441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3892 +/- 0.014065 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.3892 @ 95%CL (1 toyMC)
median expected limit: r < 15.3892 @ 95%CL (1 toyMC)
   68% expected band : 15.3892 < r < 15.3892
   95% expected band : 15.3892 < r < 15.3892
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1760919973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.233 +/- 0.00870046 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.233 @ 95%CL (1 toyMC)
median expected limit: r < 17.233 @ 95%CL (1 toyMC)
   68% expected band : 17.233 < r < 17.233
   95% expected band : 17.233 < r < 17.233
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1021200464
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1996 +/- 0.0135177 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1996 @ 95%CL (1 toyMC)
median expected limit: r < 13.1996 @ 95%CL (1 toyMC)
   68% expected band : 13.1996 < r < 13.1996
   95% expected band : 13.1996 < r < 13.1996
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1999518934
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1717 +/- 0.0162642 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1717 @ 95%CL (1 toyMC)
median expected limit: r < 13.1717 @ 95%CL (1 toyMC)
   68% expected band : 13.1717 < r < 13.1717
   95% expected band : 13.1717 < r < 13.1717
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -982997833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1255 +/- 0.0129309 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1255 @ 95%CL (1 toyMC)
median expected limit: r < 16.1255 @ 95%CL (1 toyMC)
   68% expected band : 16.1255 < r < 16.1255
   95% expected band : 16.1255 < r < 16.1255
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -421469250
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3588 +/- 0.0126175 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.3588 @ 95%CL (1 toyMC)
median expected limit: r < 15.3588 @ 95%CL (1 toyMC)
   68% expected band : 15.3588 < r < 15.3588
   95% expected band : 15.3588 < r < 15.3588
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 137798004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4411 +/- 0.00722984 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.4411 @ 95%CL (1 toyMC)
median expected limit: r < 16.4411 @ 95%CL (1 toyMC)
   68% expected band : 16.4411 < r < 16.4411
   95% expected band : 16.4411 < r < 16.4411
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1278386630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0004 +/- 0.00817395 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.0004 @ 95%CL (1 toyMC)
median expected limit: r < 17.0004 @ 95%CL (1 toyMC)
   68% expected band : 17.0004 < r < 17.0004
   95% expected band : 17.0004 < r < 17.0004
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -188744085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1421 +/- 0.0213548 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1421 @ 95%CL (1 toyMC)
median expected limit: r < 13.1421 @ 95%CL (1 toyMC)
   68% expected band : 13.1421 < r < 13.1421
   95% expected band : 13.1421 < r < 13.1421
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1264465542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9145 +/- 0.00931936 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.9145 @ 95%CL (1 toyMC)
median expected limit: r < 16.9145 @ 95%CL (1 toyMC)
   68% expected band : 16.9145 < r < 16.9145
   95% expected band : 16.9145 < r < 16.9145
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -391297161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.32 +/- 0.0149443 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.32 @ 95%CL (1 toyMC)
median expected limit: r < 15.32 @ 95%CL (1 toyMC)
   68% expected band : 15.32 < r < 15.32
   95% expected band : 15.32 < r < 15.32
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -748042852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2908 +/- 0.0132639 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.2908 @ 95%CL (1 toyMC)
median expected limit: r < 15.2908 @ 95%CL (1 toyMC)
   68% expected band : 15.2908 < r < 15.2908
   95% expected band : 15.2908 < r < 15.2908
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1220155781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1974 +/- 0.0209044 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1974 @ 95%CL (1 toyMC)
median expected limit: r < 13.1974 @ 95%CL (1 toyMC)
   68% expected band : 13.1974 < r < 13.1974
   95% expected band : 13.1974 < r < 13.1974
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1559907474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1468 +/- 0.0172633 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1468 @ 95%CL (1 toyMC)
median expected limit: r < 13.1468 @ 95%CL (1 toyMC)
   68% expected band : 13.1468 < r < 13.1468
   95% expected band : 13.1468 < r < 13.1468
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -895015130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1388 +/- 0.0210282 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1388 @ 95%CL (1 toyMC)
median expected limit: r < 13.1388 @ 95%CL (1 toyMC)
   68% expected band : 13.1388 < r < 13.1388
   95% expected band : 13.1388 < r < 13.1388
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -877602834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3834 +/- 0.00989274 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.3834 @ 95%CL (1 toyMC)
median expected limit: r < 16.3834 @ 95%CL (1 toyMC)
   68% expected band : 16.3834 < r < 16.3834
   95% expected band : 16.3834 < r < 16.3834
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 332963492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.135 +/- 0.0161478 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.135 @ 95%CL (1 toyMC)
median expected limit: r < 13.135 @ 95%CL (1 toyMC)
   68% expected band : 13.135 < r < 13.135
   95% expected band : 13.135 < r < 13.135
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 251364494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3052 +/- 0.00463098 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.3052 @ 95%CL (1 toyMC)
median expected limit: r < 18.3052 @ 95%CL (1 toyMC)
   68% expected band : 18.3052 < r < 18.3052
   95% expected band : 18.3052 < r < 18.3052
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -467071688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.338 +/- 0.0131547 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.338 @ 95%CL (1 toyMC)
median expected limit: r < 15.338 @ 95%CL (1 toyMC)
   68% expected band : 15.338 < r < 15.338
   95% expected band : 15.338 < r < 15.338
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -521967880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1821 +/- 0.0215243 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1821 @ 95%CL (1 toyMC)
median expected limit: r < 13.1821 @ 95%CL (1 toyMC)
   68% expected band : 13.1821 < r < 13.1821
   95% expected band : 13.1821 < r < 13.1821
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -513178301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7737 +/- 0.00439517 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.7737 @ 95%CL (1 toyMC)
median expected limit: r < 18.7737 @ 95%CL (1 toyMC)
   68% expected band : 18.7737 < r < 18.7737
   95% expected band : 18.7737 < r < 18.7737
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1406054373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3804 +/- 0.0128271 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.3804 @ 95%CL (1 toyMC)
median expected limit: r < 15.3804 @ 95%CL (1 toyMC)
   68% expected band : 15.3804 < r < 15.3804
   95% expected band : 15.3804 < r < 15.3804
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1549626480
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1272 +/- 0.0208279 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1272 @ 95%CL (1 toyMC)
median expected limit: r < 13.1272 @ 95%CL (1 toyMC)
   68% expected band : 13.1272 < r < 13.1272
   95% expected band : 13.1272 < r < 13.1272
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1287810345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2009 +/- 0.0170504 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.2009 @ 95%CL (1 toyMC)
median expected limit: r < 13.2009 @ 95%CL (1 toyMC)
   68% expected band : 13.2009 < r < 13.2009
   95% expected band : 13.2009 < r < 13.2009
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 879389039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3039 +/- 0.00990846 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.3039 @ 95%CL (1 toyMC)
median expected limit: r < 15.3039 @ 95%CL (1 toyMC)
   68% expected band : 15.3039 < r < 15.3039
   95% expected band : 15.3039 < r < 15.3039
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 490199571
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3573 +/- 0.0117578 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.3573 @ 95%CL (1 toyMC)
median expected limit: r < 15.3573 @ 95%CL (1 toyMC)
   68% expected band : 15.3573 < r < 15.3573
   95% expected band : 15.3573 < r < 15.3573
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1133635599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1697 +/- 0.0167031 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1697 @ 95%CL (1 toyMC)
median expected limit: r < 13.1697 @ 95%CL (1 toyMC)
   68% expected band : 13.1697 < r < 13.1697
   95% expected band : 13.1697 < r < 13.1697
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2060616438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5911 +/- 0.0101677 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.5911 @ 95%CL (1 toyMC)
median expected limit: r < 16.5911 @ 95%CL (1 toyMC)
   68% expected band : 16.5911 < r < 16.5911
   95% expected band : 16.5911 < r < 16.5911
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1330780914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0316 +/- 0.00896551 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.0316 @ 95%CL (1 toyMC)
median expected limit: r < 17.0316 @ 95%CL (1 toyMC)
   68% expected band : 17.0316 < r < 17.0316
   95% expected band : 17.0316 < r < 17.0316
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1387487357
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1675 +/- 0.0185397 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1675 @ 95%CL (1 toyMC)
median expected limit: r < 13.1675 @ 95%CL (1 toyMC)
   68% expected band : 13.1675 < r < 13.1675
   95% expected band : 13.1675 < r < 13.1675
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 800168188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1587 +/- 0.0195389 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1587 @ 95%CL (1 toyMC)
median expected limit: r < 13.1587 @ 95%CL (1 toyMC)
   68% expected band : 13.1587 < r < 13.1587
   95% expected band : 13.1587 < r < 13.1587
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1722197542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3014 +/- 0.0133223 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.3014 @ 95%CL (1 toyMC)
median expected limit: r < 15.3014 @ 95%CL (1 toyMC)
   68% expected band : 15.3014 < r < 15.3014
   95% expected band : 15.3014 < r < 15.3014
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -465406242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7952 +/- 0.01329 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.7952 @ 95%CL (1 toyMC)
median expected limit: r < 15.7952 @ 95%CL (1 toyMC)
   68% expected band : 15.7952 < r < 15.7952
   95% expected band : 15.7952 < r < 15.7952
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -884940326
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6749 +/- 0.0057667 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6749 @ 95%CL (1 toyMC)
median expected limit: r < 17.6749 @ 95%CL (1 toyMC)
   68% expected band : 17.6749 < r < 17.6749
   95% expected band : 17.6749 < r < 17.6749
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 416327465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9611 +/- 0.00486836 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.9611 @ 95%CL (1 toyMC)
median expected limit: r < 17.9611 @ 95%CL (1 toyMC)
   68% expected band : 17.9611 < r < 17.9611
   95% expected band : 17.9611 < r < 17.9611
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 265983097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2969 +/- 0.0106896 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.2969 @ 95%CL (1 toyMC)
median expected limit: r < 15.2969 @ 95%CL (1 toyMC)
   68% expected band : 15.2969 < r < 15.2969
   95% expected band : 15.2969 < r < 15.2969
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1595222958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9801 +/- 0.00794492 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9801 @ 95%CL (1 toyMC)
median expected limit: r < 16.9801 @ 95%CL (1 toyMC)
   68% expected band : 16.9801 < r < 16.9801
   95% expected band : 16.9801 < r < 16.9801
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -437879144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2695 +/- 0.00702469 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.2695 @ 95%CL (1 toyMC)
median expected limit: r < 17.2695 @ 95%CL (1 toyMC)
   68% expected band : 17.2695 < r < 17.2695
   95% expected band : 17.2695 < r < 17.2695
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1795718907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1841 +/- 0.0162743 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1841 @ 95%CL (1 toyMC)
median expected limit: r < 13.1841 @ 95%CL (1 toyMC)
   68% expected band : 13.1841 < r < 13.1841
   95% expected band : 13.1841 < r < 13.1841
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -641919419
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1747 +/- 0.0213921 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1747 @ 95%CL (1 toyMC)
median expected limit: r < 13.1747 @ 95%CL (1 toyMC)
   68% expected band : 13.1747 < r < 13.1747
   95% expected band : 13.1747 < r < 13.1747
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 922974043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1233 +/- 0.0098458 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1233 @ 95%CL (1 toyMC)
median expected limit: r < 16.1233 @ 95%CL (1 toyMC)
   68% expected band : 16.1233 < r < 16.1233
   95% expected band : 16.1233 < r < 16.1233
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1352529355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6129 +/- 0.00840806 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.6129 @ 95%CL (1 toyMC)
median expected limit: r < 16.6129 @ 95%CL (1 toyMC)
   68% expected band : 16.6129 < r < 16.6129
   95% expected band : 16.6129 < r < 16.6129
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -139656559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7229 +/- 0.0121171 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.7229 @ 95%CL (1 toyMC)
median expected limit: r < 15.7229 @ 95%CL (1 toyMC)
   68% expected band : 15.7229 < r < 15.7229
   95% expected band : 15.7229 < r < 15.7229
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1240791887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1806 +/- 0.0168143 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1806 @ 95%CL (1 toyMC)
median expected limit: r < 13.1806 @ 95%CL (1 toyMC)
   68% expected band : 13.1806 < r < 13.1806
   95% expected band : 13.1806 < r < 13.1806
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -38186357
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5832 +/- 0.00712895 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.5832 @ 95%CL (1 toyMC)
median expected limit: r < 17.5832 @ 95%CL (1 toyMC)
   68% expected band : 17.5832 < r < 17.5832
   95% expected band : 17.5832 < r < 17.5832
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2134463139
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2975 +/- 0.0127067 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.2975 @ 95%CL (1 toyMC)
median expected limit: r < 15.2975 @ 95%CL (1 toyMC)
   68% expected band : 15.2975 < r < 15.2975
   95% expected band : 15.2975 < r < 15.2975
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1162471605
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3236 +/- 0.0119376 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.3236 @ 95%CL (1 toyMC)
median expected limit: r < 15.3236 @ 95%CL (1 toyMC)
   68% expected band : 15.3236 < r < 15.3236
   95% expected band : 15.3236 < r < 15.3236
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1053418461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9528 +/- 0.00860665 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.9528 @ 95%CL (1 toyMC)
median expected limit: r < 16.9528 @ 95%CL (1 toyMC)
   68% expected band : 16.9528 < r < 16.9528
   95% expected band : 16.9528 < r < 16.9528
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 63700043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1685 +/- 0.0143361 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.1685 @ 95%CL (1 toyMC)
median expected limit: r < 13.1685 @ 95%CL (1 toyMC)
   68% expected band : 13.1685 < r < 13.1685
   95% expected band : 13.1685 < r < 13.1685
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -112244740
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.336 +/- 0.0129201 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.336 @ 95%CL (1 toyMC)
median expected limit: r < 15.336 @ 95%CL (1 toyMC)
   68% expected band : 15.336 < r < 15.336
   95% expected band : 15.336 < r < 15.336
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1069566560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2077 +/- 0.0164823 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.2077 @ 95%CL (1 toyMC)
median expected limit: r < 13.2077 @ 95%CL (1 toyMC)
   68% expected band : 13.2077 < r < 13.2077
   95% expected band : 13.2077 < r < 13.2077
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 387494052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1535 +/- 0.0171653 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1535 @ 95%CL (1 toyMC)
median expected limit: r < 13.1535 @ 95%CL (1 toyMC)
   68% expected band : 13.1535 < r < 13.1535
   95% expected band : 13.1535 < r < 13.1535
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -73508414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.15 +/- 0.0133957 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.15 @ 95%CL (1 toyMC)
median expected limit: r < 13.15 @ 95%CL (1 toyMC)
   68% expected band : 13.15 < r < 13.15
   95% expected band : 13.15 < r < 13.15
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1347099061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2754 +/- 0.00497009 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.2754 @ 95%CL (1 toyMC)
median expected limit: r < 18.2754 @ 95%CL (1 toyMC)
   68% expected band : 18.2754 < r < 18.2754
   95% expected band : 18.2754 < r < 18.2754
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2103332318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5816 +/- 0.0149206 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.5816 @ 95%CL (1 toyMC)
median expected limit: r < 15.5816 @ 95%CL (1 toyMC)
   68% expected band : 15.5816 < r < 15.5816
   95% expected band : 15.5816 < r < 15.5816
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1963547365
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2116 +/- 0.0205581 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 13.2116 @ 95%CL (1 toyMC)
median expected limit: r < 13.2116 @ 95%CL (1 toyMC)
   68% expected band : 13.2116 < r < 13.2116
   95% expected band : 13.2116 < r < 13.2116
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1456497206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2196 +/- 0.0176939 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 13.2196 @ 95%CL (1 toyMC)
median expected limit: r < 13.2196 @ 95%CL (1 toyMC)
   68% expected band : 13.2196 < r < 13.2196
   95% expected band : 13.2196 < r < 13.2196
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1053418461.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1069566560.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1105740848.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-112244740.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1153645784.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1175466860.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1213258179.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1220155781.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1253022381.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1287810345.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1330780914.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1347099061.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-139656559.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1406054373.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1527403923.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1535876095.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1549626480.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1552985313.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1571868412.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1666284159.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1795718907.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1833752274.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-188744085.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1916378608.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1927752242.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1979279303.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-2060616438.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-280009624.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-38186357.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-391297161.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-421469250.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-421760304.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-437879144.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-465406242.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-467071688.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-469449326.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-471629800.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-513178301.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-521967880.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-546853441.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-616597153.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-641919419.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-68285455.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-73508414.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-748042852.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-877602834.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-884940326.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-895015130.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-940478759.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-982997833.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1021200464.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1133635599.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1153553135.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1162471605.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1240791887.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1255447459.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1264465542.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1278386630.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1333961812.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1352529355.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.137798004.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1387487357.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1423278194.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1440556909.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1456497206.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1457567319.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1559907474.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1590940805.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1595222958.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1707976829.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1710041787.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1722197542.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1760919973.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1963547365.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1986716660.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1999518934.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2018713810.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2035741428.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2103332318.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2134463139.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.251364494.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.265983097.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.332963492.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.387494052.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.416327465.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.416385888.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.449540589.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.45630358.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.490199571.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.543829413.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.593470264.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.63700043.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.717134833.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.742806866.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.800168188.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.801741577.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.879389039.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.921222459.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.922974043.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.967626376.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 528297627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9845 +/- 0.0178962 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.9845 @ 95%CL (1 toyMC)
median expected limit: r < 13.9845 @ 95%CL (1 toyMC)
   68% expected band : 13.9845 < r < 13.9845
   95% expected band : 13.9845 < r < 13.9845
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -520517877
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9105 +/- 0.00892362 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.9105 @ 95%CL (1 toyMC)
median expected limit: r < 16.9105 @ 95%CL (1 toyMC)
   68% expected band : 16.9105 < r < 16.9105
   95% expected band : 16.9105 < r < 16.9105
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -746886691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0203 +/- 0.017174 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0203 @ 95%CL (1 toyMC)
median expected limit: r < 14.0203 @ 95%CL (1 toyMC)
   68% expected band : 14.0203 < r < 14.0203
   95% expected band : 14.0203 < r < 14.0203
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 975724202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9826 +/- 0.0139583 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.9826 @ 95%CL (1 toyMC)
median expected limit: r < 13.9826 @ 95%CL (1 toyMC)
   68% expected band : 13.9826 < r < 13.9826
   95% expected band : 13.9826 < r < 13.9826
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1339043077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.062 +/- 0.0110393 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.062 @ 95%CL (1 toyMC)
median expected limit: r < 16.062 @ 95%CL (1 toyMC)
   68% expected band : 16.062 < r < 16.062
   95% expected band : 16.062 < r < 16.062
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1927369705
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0628 +/- 0.0111761 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0628 @ 95%CL (1 toyMC)
median expected limit: r < 14.0628 @ 95%CL (1 toyMC)
   68% expected band : 14.0628 < r < 14.0628
   95% expected band : 14.0628 < r < 14.0628
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -663852812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0384 +/- 0.0158338 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0384 @ 95%CL (1 toyMC)
median expected limit: r < 14.0384 @ 95%CL (1 toyMC)
   68% expected band : 14.0384 < r < 14.0384
   95% expected band : 14.0384 < r < 14.0384
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -747110994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0504 +/- 0.0165775 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0504 @ 95%CL (1 toyMC)
median expected limit: r < 14.0504 @ 95%CL (1 toyMC)
   68% expected band : 14.0504 < r < 14.0504
   95% expected band : 14.0504 < r < 14.0504
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2059956940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4256 +/- 0.0101377 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.4256 @ 95%CL (1 toyMC)
median expected limit: r < 16.4256 @ 95%CL (1 toyMC)
   68% expected band : 16.4256 < r < 16.4256
   95% expected band : 16.4256 < r < 16.4256
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 784795717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0143 +/- 0.00641509 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.0143 @ 95%CL (1 toyMC)
median expected limit: r < 18.0143 @ 95%CL (1 toyMC)
   68% expected band : 18.0143 < r < 18.0143
   95% expected band : 18.0143 < r < 18.0143
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 432419366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3913 +/- 0.0107323 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.3913 @ 95%CL (1 toyMC)
median expected limit: r < 16.3913 @ 95%CL (1 toyMC)
   68% expected band : 16.3913 < r < 16.3913
   95% expected band : 16.3913 < r < 16.3913
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1095719940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0368 +/- 0.0132498 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.0368 @ 95%CL (1 toyMC)
median expected limit: r < 16.0368 @ 95%CL (1 toyMC)
   68% expected band : 16.0368 < r < 16.0368
   95% expected band : 16.0368 < r < 16.0368
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2092896248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0478 +/- 0.0157783 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0478 @ 95%CL (1 toyMC)
median expected limit: r < 14.0478 @ 95%CL (1 toyMC)
   68% expected band : 14.0478 < r < 14.0478
   95% expected band : 14.0478 < r < 14.0478
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 14541624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0386 +/- 0.0200954 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0386 @ 95%CL (1 toyMC)
median expected limit: r < 14.0386 @ 95%CL (1 toyMC)
   68% expected band : 14.0386 < r < 14.0386
   95% expected band : 14.0386 < r < 14.0386
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -339303257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0571 +/- 0.0151115 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0571 @ 95%CL (1 toyMC)
median expected limit: r < 14.0571 @ 95%CL (1 toyMC)
   68% expected band : 14.0571 < r < 14.0571
   95% expected band : 14.0571 < r < 14.0571
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 577973072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0635 +/- 0.0159859 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0635 @ 95%CL (1 toyMC)
median expected limit: r < 14.0635 @ 95%CL (1 toyMC)
   68% expected band : 14.0635 < r < 14.0635
   95% expected band : 14.0635 < r < 14.0635
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1848872152
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0298 +/- 0.0170157 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0298 @ 95%CL (1 toyMC)
median expected limit: r < 14.0298 @ 95%CL (1 toyMC)
   68% expected band : 14.0298 < r < 14.0298
   95% expected band : 14.0298 < r < 14.0298
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 346098919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0747 +/- 0.0198992 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0747 @ 95%CL (1 toyMC)
median expected limit: r < 14.0747 @ 95%CL (1 toyMC)
   68% expected band : 14.0747 < r < 14.0747
   95% expected band : 14.0747 < r < 14.0747
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -14905222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.046 +/- 0.0114737 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.046 @ 95%CL (1 toyMC)
median expected limit: r < 16.046 @ 95%CL (1 toyMC)
   68% expected band : 16.046 < r < 16.046
   95% expected band : 16.046 < r < 16.046
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -515578894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.505 +/- 0.00598936 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.505 @ 95%CL (1 toyMC)
median expected limit: r < 16.505 @ 95%CL (1 toyMC)
   68% expected band : 16.505 < r < 16.505
   95% expected band : 16.505 < r < 16.505
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 186618661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4382 +/- 0.00720469 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4382 @ 95%CL (1 toyMC)
median expected limit: r < 17.4382 @ 95%CL (1 toyMC)
   68% expected band : 17.4382 < r < 17.4382
   95% expected band : 17.4382 < r < 17.4382
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -796487299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0074 +/- 0.0150838 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0074 @ 95%CL (1 toyMC)
median expected limit: r < 14.0074 @ 95%CL (1 toyMC)
   68% expected band : 14.0074 < r < 14.0074
   95% expected band : 14.0074 < r < 14.0074
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -175926465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0404 +/- 0.0160053 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0404 @ 95%CL (1 toyMC)
median expected limit: r < 14.0404 @ 95%CL (1 toyMC)
   68% expected band : 14.0404 < r < 14.0404
   95% expected band : 14.0404 < r < 14.0404
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -826589143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9704 +/- 0.0162603 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.9704 @ 95%CL (1 toyMC)
median expected limit: r < 13.9704 @ 95%CL (1 toyMC)
   68% expected band : 13.9704 < r < 13.9704
   95% expected band : 13.9704 < r < 13.9704
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1152950231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.295 +/- 0.00986656 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.295 @ 95%CL (1 toyMC)
median expected limit: r < 16.295 @ 95%CL (1 toyMC)
   68% expected band : 16.295 < r < 16.295
   95% expected band : 16.295 < r < 16.295
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1115311823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0104 +/- 0.0152822 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0104 @ 95%CL (1 toyMC)
median expected limit: r < 14.0104 @ 95%CL (1 toyMC)
   68% expected band : 14.0104 < r < 14.0104
   95% expected band : 14.0104 < r < 14.0104
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1411376399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1264 +/- 0.00792844 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.1264 @ 95%CL (1 toyMC)
median expected limit: r < 17.1264 @ 95%CL (1 toyMC)
   68% expected band : 17.1264 < r < 17.1264
   95% expected band : 17.1264 < r < 17.1264
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1819394477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5107 +/- 0.0109401 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.5107 @ 95%CL (1 toyMC)
median expected limit: r < 16.5107 @ 95%CL (1 toyMC)
   68% expected band : 16.5107 < r < 16.5107
   95% expected band : 16.5107 < r < 16.5107
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -376548702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0384 +/- 0.0159962 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 14.0384 @ 95%CL (1 toyMC)
median expected limit: r < 14.0384 @ 95%CL (1 toyMC)
   68% expected band : 14.0384 < r < 14.0384
   95% expected band : 14.0384 < r < 14.0384
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1418475908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0543 +/- 0.0172686 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0543 @ 95%CL (1 toyMC)
median expected limit: r < 14.0543 @ 95%CL (1 toyMC)
   68% expected band : 14.0543 < r < 14.0543
   95% expected band : 14.0543 < r < 14.0543
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1080155522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0114 +/- 0.0164752 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0114 @ 95%CL (1 toyMC)
median expected limit: r < 14.0114 @ 95%CL (1 toyMC)
   68% expected band : 14.0114 < r < 14.0114
   95% expected band : 14.0114 < r < 14.0114
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 381950930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1469 +/- 0.00992556 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1469 @ 95%CL (1 toyMC)
median expected limit: r < 16.1469 @ 95%CL (1 toyMC)
   68% expected band : 16.1469 < r < 16.1469
   95% expected band : 16.1469 < r < 16.1469
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1271370658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0598 +/- 0.017136 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0598 @ 95%CL (1 toyMC)
median expected limit: r < 14.0598 @ 95%CL (1 toyMC)
   68% expected band : 14.0598 < r < 14.0598
   95% expected band : 14.0598 < r < 14.0598
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -239545006
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6711 +/- 0.00430178 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6711 @ 95%CL (1 toyMC)
median expected limit: r < 18.6711 @ 95%CL (1 toyMC)
   68% expected band : 18.6711 < r < 18.6711
   95% expected band : 18.6711 < r < 18.6711
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1087963212
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0069 +/- 0.0109577 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.0069 @ 95%CL (1 toyMC)
median expected limit: r < 16.0069 @ 95%CL (1 toyMC)
   68% expected band : 16.0069 < r < 16.0069
   95% expected band : 16.0069 < r < 16.0069
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 411972155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1646 +/- 0.0133903 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.1646 @ 95%CL (1 toyMC)
median expected limit: r < 16.1646 @ 95%CL (1 toyMC)
   68% expected band : 16.1646 < r < 16.1646
   95% expected band : 16.1646 < r < 16.1646
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1248377762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3066 +/- 0.0103827 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.3066 @ 95%CL (1 toyMC)
median expected limit: r < 16.3066 @ 95%CL (1 toyMC)
   68% expected band : 16.3066 < r < 16.3066
   95% expected band : 16.3066 < r < 16.3066
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 660828536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0394 +/- 0.00336127 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0394 @ 95%CL (1 toyMC)
median expected limit: r < 19.0394 @ 95%CL (1 toyMC)
   68% expected band : 19.0394 < r < 19.0394
   95% expected band : 19.0394 < r < 19.0394
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 211421543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0511 +/- 0.0170268 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0511 @ 95%CL (1 toyMC)
median expected limit: r < 14.0511 @ 95%CL (1 toyMC)
   68% expected band : 14.0511 < r < 14.0511
   95% expected band : 14.0511 < r < 14.0511
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -666208134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9232 +/- 0.0115562 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.9232 @ 95%CL (1 toyMC)
median expected limit: r < 16.9232 @ 95%CL (1 toyMC)
   68% expected band : 16.9232 < r < 16.9232
   95% expected band : 16.9232 < r < 16.9232
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1488989118
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0646 +/- 0.0142691 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 14.0646 @ 95%CL (1 toyMC)
median expected limit: r < 14.0646 @ 95%CL (1 toyMC)
   68% expected band : 14.0646 < r < 14.0646
   95% expected band : 14.0646 < r < 14.0646
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1634734500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0365 +/- 0.0141647 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0365 @ 95%CL (1 toyMC)
median expected limit: r < 14.0365 @ 95%CL (1 toyMC)
   68% expected band : 14.0365 < r < 14.0365
   95% expected band : 14.0365 < r < 14.0365
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2038248376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0402 +/- 0.0201103 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0402 @ 95%CL (1 toyMC)
median expected limit: r < 14.0402 @ 95%CL (1 toyMC)
   68% expected band : 14.0402 < r < 14.0402
   95% expected band : 14.0402 < r < 14.0402
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -471288906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0508 +/- 0.0149222 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0508 @ 95%CL (1 toyMC)
median expected limit: r < 14.0508 @ 95%CL (1 toyMC)
   68% expected band : 14.0508 < r < 14.0508
   95% expected band : 14.0508 < r < 14.0508
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -93593047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0405 +/- 0.0171241 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0405 @ 95%CL (1 toyMC)
median expected limit: r < 14.0405 @ 95%CL (1 toyMC)
   68% expected band : 14.0405 < r < 14.0405
   95% expected band : 14.0405 < r < 14.0405
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1512801643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0256 +/- 0.0091714 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.0256 @ 95%CL (1 toyMC)
median expected limit: r < 17.0256 @ 95%CL (1 toyMC)
   68% expected band : 17.0256 < r < 17.0256
   95% expected band : 17.0256 < r < 17.0256
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1420958700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5966 +/- 0.00846428 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.5966 @ 95%CL (1 toyMC)
median expected limit: r < 16.5966 @ 95%CL (1 toyMC)
   68% expected band : 16.5966 < r < 16.5966
   95% expected band : 16.5966 < r < 16.5966
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -95672570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0549 +/- 0.0150598 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0549 @ 95%CL (1 toyMC)
median expected limit: r < 14.0549 @ 95%CL (1 toyMC)
   68% expected band : 14.0549 < r < 14.0549
   95% expected band : 14.0549 < r < 14.0549
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 562938715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3177 +/- 0.00795938 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.3177 @ 95%CL (1 toyMC)
median expected limit: r < 16.3177 @ 95%CL (1 toyMC)
   68% expected band : 16.3177 < r < 16.3177
   95% expected band : 16.3177 < r < 16.3177
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2038505348
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0208 +/- 0.015874 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0208 @ 95%CL (1 toyMC)
median expected limit: r < 14.0208 @ 95%CL (1 toyMC)
   68% expected band : 14.0208 < r < 14.0208
   95% expected band : 14.0208 < r < 14.0208
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1383498658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3084 +/- 0.0110097 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3084 @ 95%CL (1 toyMC)
median expected limit: r < 16.3084 @ 95%CL (1 toyMC)
   68% expected band : 16.3084 < r < 16.3084
   95% expected band : 16.3084 < r < 16.3084
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1637371689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1052 +/- 0.0171127 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.1052 @ 95%CL (1 toyMC)
median expected limit: r < 14.1052 @ 95%CL (1 toyMC)
   68% expected band : 14.1052 < r < 14.1052
   95% expected band : 14.1052 < r < 14.1052
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 772394795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0796 +/- 0.0158019 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0796 @ 95%CL (1 toyMC)
median expected limit: r < 14.0796 @ 95%CL (1 toyMC)
   68% expected band : 14.0796 < r < 14.0796
   95% expected band : 14.0796 < r < 14.0796
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1580151462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0025 +/- 0.0126188 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0025 @ 95%CL (1 toyMC)
median expected limit: r < 14.0025 @ 95%CL (1 toyMC)
   68% expected band : 14.0025 < r < 14.0025
   95% expected band : 14.0025 < r < 14.0025
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1069259110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8793 +/- 0.00959004 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.8793 @ 95%CL (1 toyMC)
median expected limit: r < 16.8793 @ 95%CL (1 toyMC)
   68% expected band : 16.8793 < r < 16.8793
   95% expected band : 16.8793 < r < 16.8793
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1061522881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9677 +/- 0.0193924 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.9677 @ 95%CL (1 toyMC)
median expected limit: r < 13.9677 @ 95%CL (1 toyMC)
   68% expected band : 13.9677 < r < 13.9677
   95% expected band : 13.9677 < r < 13.9677
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1507920834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0142 +/- 0.0132911 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0142 @ 95%CL (1 toyMC)
median expected limit: r < 14.0142 @ 95%CL (1 toyMC)
   68% expected band : 14.0142 < r < 14.0142
   95% expected band : 14.0142 < r < 14.0142
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1464317259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2752 +/- 0.0106729 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.2752 @ 95%CL (1 toyMC)
median expected limit: r < 16.2752 @ 95%CL (1 toyMC)
   68% expected band : 16.2752 < r < 16.2752
   95% expected band : 16.2752 < r < 16.2752
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1524177393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0839 +/- 0.0126284 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0839 @ 95%CL (1 toyMC)
median expected limit: r < 14.0839 @ 95%CL (1 toyMC)
   68% expected band : 14.0839 < r < 14.0839
   95% expected band : 14.0839 < r < 14.0839
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1235886382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1211 +/- 0.0137184 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.1211 @ 95%CL (1 toyMC)
median expected limit: r < 16.1211 @ 95%CL (1 toyMC)
   68% expected band : 16.1211 < r < 16.1211
   95% expected band : 16.1211 < r < 16.1211
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1362267761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0616 +/- 0.0112855 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.0616 @ 95%CL (1 toyMC)
median expected limit: r < 16.0616 @ 95%CL (1 toyMC)
   68% expected band : 16.0616 < r < 16.0616
   95% expected band : 16.0616 < r < 16.0616
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1031859281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.959 +/- 0.00793019 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.959 @ 95%CL (1 toyMC)
median expected limit: r < 16.959 @ 95%CL (1 toyMC)
   68% expected band : 16.959 < r < 16.959
   95% expected band : 16.959 < r < 16.959
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -99898267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0331 +/- 0.0176896 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0331 @ 95%CL (1 toyMC)
median expected limit: r < 14.0331 @ 95%CL (1 toyMC)
   68% expected band : 14.0331 < r < 14.0331
   95% expected band : 14.0331 < r < 14.0331
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -855389713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2548 +/- 0.00728264 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.2548 @ 95%CL (1 toyMC)
median expected limit: r < 17.2548 @ 95%CL (1 toyMC)
   68% expected band : 17.2548 < r < 17.2548
   95% expected band : 17.2548 < r < 17.2548
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 771993000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5779 +/- 0.00966489 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.5779 @ 95%CL (1 toyMC)
median expected limit: r < 16.5779 @ 95%CL (1 toyMC)
   68% expected band : 16.5779 < r < 16.5779
   95% expected band : 16.5779 < r < 16.5779
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1832323692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0646 +/- 0.017076 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0646 @ 95%CL (1 toyMC)
median expected limit: r < 14.0646 @ 95%CL (1 toyMC)
   68% expected band : 14.0646 < r < 14.0646
   95% expected band : 14.0646 < r < 14.0646
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 776438597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0157 +/- 0.0144267 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0157 @ 95%CL (1 toyMC)
median expected limit: r < 14.0157 @ 95%CL (1 toyMC)
   68% expected band : 14.0157 < r < 14.0157
   95% expected band : 14.0157 < r < 14.0157
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1316956812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0429 +/- 0.0157834 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0429 @ 95%CL (1 toyMC)
median expected limit: r < 14.0429 @ 95%CL (1 toyMC)
   68% expected band : 14.0429 < r < 14.0429
   95% expected band : 14.0429 < r < 14.0429
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1782968692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1541 +/- 0.00630447 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1541 @ 95%CL (1 toyMC)
median expected limit: r < 18.1541 @ 95%CL (1 toyMC)
   68% expected band : 18.1541 < r < 18.1541
   95% expected band : 18.1541 < r < 18.1541
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 571194596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0702 +/- 0.0126112 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0702 @ 95%CL (1 toyMC)
median expected limit: r < 14.0702 @ 95%CL (1 toyMC)
   68% expected band : 14.0702 < r < 14.0702
   95% expected band : 14.0702 < r < 14.0702
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1396416167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3313 +/- 0.0119322 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.3313 @ 95%CL (1 toyMC)
median expected limit: r < 16.3313 @ 95%CL (1 toyMC)
   68% expected band : 16.3313 < r < 16.3313
   95% expected band : 16.3313 < r < 16.3313
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1695259489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14 +/- 0.0160708 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14 @ 95%CL (1 toyMC)
median expected limit: r < 14 @ 95%CL (1 toyMC)
   68% expected band : 14 < r < 14
   95% expected band : 14 < r < 14
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1354373310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.3261 +/- 0.00354484 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.3261 @ 95%CL (1 toyMC)
median expected limit: r < 19.3261 @ 95%CL (1 toyMC)
   68% expected band : 19.3261 < r < 19.3261
   95% expected band : 19.3261 < r < 19.3261
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1387313091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0936 +/- 0.00552418 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.0936 @ 95%CL (1 toyMC)
median expected limit: r < 18.0936 @ 95%CL (1 toyMC)
   68% expected band : 18.0936 < r < 18.0936
   95% expected band : 18.0936 < r < 18.0936
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1142355467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0183 +/- 0.0147688 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.0183 @ 95%CL (1 toyMC)
median expected limit: r < 14.0183 @ 95%CL (1 toyMC)
   68% expected band : 14.0183 < r < 14.0183
   95% expected band : 14.0183 < r < 14.0183
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1876835166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1378 +/- 0.0110173 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.1378 @ 95%CL (1 toyMC)
median expected limit: r < 16.1378 @ 95%CL (1 toyMC)
   68% expected band : 16.1378 < r < 16.1378
   95% expected band : 16.1378 < r < 16.1378
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -178358414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0154 +/- 0.0132908 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0154 @ 95%CL (1 toyMC)
median expected limit: r < 14.0154 @ 95%CL (1 toyMC)
   68% expected band : 14.0154 < r < 14.0154
   95% expected band : 14.0154 < r < 14.0154
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -277211322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3776 +/- 0.0082464 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.3776 @ 95%CL (1 toyMC)
median expected limit: r < 17.3776 @ 95%CL (1 toyMC)
   68% expected band : 17.3776 < r < 17.3776
   95% expected band : 17.3776 < r < 17.3776
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1413912709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0899 +/- 0.00973752 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.0899 @ 95%CL (1 toyMC)
median expected limit: r < 17.0899 @ 95%CL (1 toyMC)
   68% expected band : 17.0899 < r < 17.0899
   95% expected band : 17.0899 < r < 17.0899
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -869305745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.035 +/- 0.0181938 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.035 @ 95%CL (1 toyMC)
median expected limit: r < 14.035 @ 95%CL (1 toyMC)
   68% expected band : 14.035 < r < 14.035
   95% expected band : 14.035 < r < 14.035
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1719600762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0623 +/- 0.0097305 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.0623 @ 95%CL (1 toyMC)
median expected limit: r < 16.0623 @ 95%CL (1 toyMC)
   68% expected band : 16.0623 < r < 16.0623
   95% expected band : 16.0623 < r < 16.0623
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1591524495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0497 +/- 0.0154414 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0497 @ 95%CL (1 toyMC)
median expected limit: r < 14.0497 @ 95%CL (1 toyMC)
   68% expected band : 14.0497 < r < 14.0497
   95% expected band : 14.0497 < r < 14.0497
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1974079361
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5561 +/- 0.0108791 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.5561 @ 95%CL (1 toyMC)
median expected limit: r < 16.5561 @ 95%CL (1 toyMC)
   68% expected band : 16.5561 < r < 16.5561
   95% expected band : 16.5561 < r < 16.5561
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2138047119
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0666 +/- 0.00968529 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.0666 @ 95%CL (1 toyMC)
median expected limit: r < 16.0666 @ 95%CL (1 toyMC)
   68% expected band : 16.0666 < r < 16.0666
   95% expected band : 16.0666 < r < 16.0666
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1787400579
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0141 +/- 0.0129432 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.0141 @ 95%CL (1 toyMC)
median expected limit: r < 16.0141 @ 95%CL (1 toyMC)
   68% expected band : 16.0141 < r < 16.0141
   95% expected band : 16.0141 < r < 16.0141
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -49106652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9931 +/- 0.0170255 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.9931 @ 95%CL (1 toyMC)
median expected limit: r < 13.9931 @ 95%CL (1 toyMC)
   68% expected band : 13.9931 < r < 13.9931
   95% expected band : 13.9931 < r < 13.9931
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -615924679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9067 +/- 0.00939758 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9067 @ 95%CL (1 toyMC)
median expected limit: r < 16.9067 @ 95%CL (1 toyMC)
   68% expected band : 16.9067 < r < 16.9067
   95% expected band : 16.9067 < r < 16.9067
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 486843238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0254 +/- 0.0110468 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.0254 @ 95%CL (1 toyMC)
median expected limit: r < 16.0254 @ 95%CL (1 toyMC)
   68% expected band : 16.0254 < r < 16.0254
   95% expected band : 16.0254 < r < 16.0254
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -371962482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3047 +/- 0.0111954 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.3047 @ 95%CL (1 toyMC)
median expected limit: r < 16.3047 @ 95%CL (1 toyMC)
   68% expected band : 16.3047 < r < 16.3047
   95% expected band : 16.3047 < r < 16.3047
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1370919745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0445 +/- 0.0142909 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0445 @ 95%CL (1 toyMC)
median expected limit: r < 14.0445 @ 95%CL (1 toyMC)
   68% expected band : 14.0445 < r < 14.0445
   95% expected band : 14.0445 < r < 14.0445
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1372928570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5198 +/- 0.00841564 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.5198 @ 95%CL (1 toyMC)
median expected limit: r < 16.5198 @ 95%CL (1 toyMC)
   68% expected band : 16.5198 < r < 16.5198
   95% expected band : 16.5198 < r < 16.5198
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -925478374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0524 +/- 0.016485 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0524 @ 95%CL (1 toyMC)
median expected limit: r < 14.0524 @ 95%CL (1 toyMC)
   68% expected band : 14.0524 < r < 14.0524
   95% expected band : 14.0524 < r < 14.0524
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -391831094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9946 +/- 0.0113297 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.9946 @ 95%CL (1 toyMC)
median expected limit: r < 15.9946 @ 95%CL (1 toyMC)
   68% expected band : 15.9946 < r < 15.9946
   95% expected band : 15.9946 < r < 15.9946
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2005180158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7872 +/- 0.00631985 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.7872 @ 95%CL (1 toyMC)
median expected limit: r < 17.7872 @ 95%CL (1 toyMC)
   68% expected band : 17.7872 < r < 17.7872
   95% expected band : 17.7872 < r < 17.7872
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 440961688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0163 +/- 0.0166099 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.0163 @ 95%CL (1 toyMC)
median expected limit: r < 14.0163 @ 95%CL (1 toyMC)
   68% expected band : 14.0163 < r < 14.0163
   95% expected band : 14.0163 < r < 14.0163
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2018798324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0363 +/- 0.0157937 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0363 @ 95%CL (1 toyMC)
median expected limit: r < 14.0363 @ 95%CL (1 toyMC)
   68% expected band : 14.0363 < r < 14.0363
   95% expected band : 14.0363 < r < 14.0363
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1020560634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0504 +/- 0.0146716 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0504 @ 95%CL (1 toyMC)
median expected limit: r < 14.0504 @ 95%CL (1 toyMC)
   68% expected band : 14.0504 < r < 14.0504
   95% expected band : 14.0504 < r < 14.0504
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2038667992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7972 +/- 0.00854711 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.7972 @ 95%CL (1 toyMC)
median expected limit: r < 16.7972 @ 95%CL (1 toyMC)
   68% expected band : 16.7972 < r < 16.7972
   95% expected band : 16.7972 < r < 16.7972
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1331555365
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0803 +/- 0.0144956 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0803 @ 95%CL (1 toyMC)
median expected limit: r < 14.0803 @ 95%CL (1 toyMC)
   68% expected band : 14.0803 < r < 14.0803
   95% expected band : 14.0803 < r < 14.0803
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1727786334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0447 +/- 0.0154813 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.0447 @ 95%CL (1 toyMC)
median expected limit: r < 14.0447 @ 95%CL (1 toyMC)
   68% expected band : 14.0447 < r < 14.0447
   95% expected band : 14.0447 < r < 14.0447
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1061522881.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1069259110.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1087963212.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1115311823.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1142355467.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1152950231.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1235886382.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1331555365.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1339043077.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1362267761.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1370919745.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1372928570.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1383498658.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1418475908.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1488989118.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-14905222.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1507920834.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1512801643.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1524177393.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1634734500.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1637371689.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1695259489.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1719600762.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1727786334.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-175926465.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-178358414.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1832323692.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1848872152.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-1876835166.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-1927369705.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-1974079361.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-2005180158.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-2018798324.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-2038505348.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-2038667992.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-2059956940.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-2092896248.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-239545006.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-277211322.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-339303257.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-371962482.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-376548702.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-391831094.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-471288906.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-49106652.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-515578894.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-520517877.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-615924679.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-663852812.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-666208134.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-746886691.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-747110994.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.-796487299.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.-826589143.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.-855389713.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.-869305745.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.-925478374.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.-93593047.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.-95672570.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.-99898267.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1020560634.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1031859281.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1080155522.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1095719940.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1248377762.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1271370658.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1316956812.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1354373310.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1387313091.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1396416167.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1411376399.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1413912709.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1420958700.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.14541624.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1464317259.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1580151462.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1591524495.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1782968692.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1787400579.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.1819394477.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.186618661.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2038248376.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.211421543.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.2138047119.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.346098919.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.381950930.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.411972155.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.432419366.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.440961688.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.486843238.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.528297627.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.562938715.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.571194596.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.577973072.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.660828536.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.771993000.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.772394795.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.776438597.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.784795717.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.975724202.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 316177852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6675 +/- 0.00709481 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.6675 @ 95%CL (1 toyMC)
median expected limit: r < 17.6675 @ 95%CL (1 toyMC)
   68% expected band : 17.6675 < r < 17.6675
   95% expected band : 17.6675 < r < 17.6675
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2101074311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7397 +/- 0.0129414 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7397 @ 95%CL (1 toyMC)
median expected limit: r < 14.7397 @ 95%CL (1 toyMC)
   68% expected band : 14.7397 < r < 14.7397
   95% expected band : 14.7397 < r < 14.7397
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1755898537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8376 +/- 0.00828375 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.8376 @ 95%CL (1 toyMC)
median expected limit: r < 17.8376 @ 95%CL (1 toyMC)
   68% expected band : 17.8376 < r < 17.8376
   95% expected band : 17.8376 < r < 17.8376
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1252332527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7441 +/- 0.0123338 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7441 @ 95%CL (1 toyMC)
median expected limit: r < 14.7441 @ 95%CL (1 toyMC)
   68% expected band : 14.7441 < r < 14.7441
   95% expected band : 14.7441 < r < 14.7441
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -50578053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6694 +/- 0.00522812 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6694 @ 95%CL (1 toyMC)
median expected limit: r < 18.6694 @ 95%CL (1 toyMC)
   68% expected band : 18.6694 < r < 18.6694
   95% expected band : 18.6694 < r < 18.6694
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1411920852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7952 +/- 0.0159 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7952 @ 95%CL (1 toyMC)
median expected limit: r < 14.7952 @ 95%CL (1 toyMC)
   68% expected band : 14.7952 < r < 14.7952
   95% expected band : 14.7952 < r < 14.7952
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 839902125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7483 +/- 0.015953 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7483 @ 95%CL (1 toyMC)
median expected limit: r < 14.7483 @ 95%CL (1 toyMC)
   68% expected band : 14.7483 < r < 14.7483
   95% expected band : 14.7483 < r < 14.7483
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -819349570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7247 +/- 0.015828 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7247 @ 95%CL (1 toyMC)
median expected limit: r < 14.7247 @ 95%CL (1 toyMC)
   68% expected band : 14.7247 < r < 14.7247
   95% expected band : 14.7247 < r < 14.7247
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1533580692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5805 +/- 0.00514705 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5805 @ 95%CL (1 toyMC)
median expected limit: r < 18.5805 @ 95%CL (1 toyMC)
   68% expected band : 18.5805 < r < 18.5805
   95% expected band : 18.5805 < r < 18.5805
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1770707589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7517 +/- 0.0129819 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7517 @ 95%CL (1 toyMC)
median expected limit: r < 14.7517 @ 95%CL (1 toyMC)
   68% expected band : 14.7517 < r < 14.7517
   95% expected band : 14.7517 < r < 14.7517
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 643265815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7849 +/- 0.0140841 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7849 @ 95%CL (1 toyMC)
median expected limit: r < 14.7849 @ 95%CL (1 toyMC)
   68% expected band : 14.7849 < r < 14.7849
   95% expected band : 14.7849 < r < 14.7849
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -673645728
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4585 +/- 0.0050097 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.4585 @ 95%CL (1 toyMC)
median expected limit: r < 18.4585 @ 95%CL (1 toyMC)
   68% expected band : 18.4585 < r < 18.4585
   95% expected band : 18.4585 < r < 18.4585
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1262410277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6881 +/- 0.0148957 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.6881 @ 95%CL (1 toyMC)
median expected limit: r < 14.6881 @ 95%CL (1 toyMC)
   68% expected band : 14.6881 < r < 14.6881
   95% expected band : 14.6881 < r < 14.6881
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -359046561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7581 +/- 0.0149426 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7581 @ 95%CL (1 toyMC)
median expected limit: r < 14.7581 @ 95%CL (1 toyMC)
   68% expected band : 14.7581 < r < 14.7581
   95% expected band : 14.7581 < r < 14.7581
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 528952104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7829 +/- 0.0153692 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7829 @ 95%CL (1 toyMC)
median expected limit: r < 14.7829 @ 95%CL (1 toyMC)
   68% expected band : 14.7829 < r < 14.7829
   95% expected band : 14.7829 < r < 14.7829
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 914439392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7245 +/- 0.0170323 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.7245 @ 95%CL (1 toyMC)
median expected limit: r < 14.7245 @ 95%CL (1 toyMC)
   68% expected band : 14.7245 < r < 14.7245
   95% expected band : 14.7245 < r < 14.7245
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -456374715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0452 +/- 0.00794617 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.0452 @ 95%CL (1 toyMC)
median expected limit: r < 17.0452 @ 95%CL (1 toyMC)
   68% expected band : 17.0452 < r < 17.0452
   95% expected band : 17.0452 < r < 17.0452
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -19190070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7555 +/- 0.0152527 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7555 @ 95%CL (1 toyMC)
median expected limit: r < 14.7555 @ 95%CL (1 toyMC)
   68% expected band : 14.7555 < r < 14.7555
   95% expected band : 14.7555 < r < 14.7555
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -52805806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8075 +/- 0.0140836 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.8075 @ 95%CL (1 toyMC)
median expected limit: r < 14.8075 @ 95%CL (1 toyMC)
   68% expected band : 14.8075 < r < 14.8075
   95% expected band : 14.8075 < r < 14.8075
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1455915720
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7232 +/- 0.0117844 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7232 @ 95%CL (1 toyMC)
median expected limit: r < 14.7232 @ 95%CL (1 toyMC)
   68% expected band : 14.7232 < r < 14.7232
   95% expected band : 14.7232 < r < 14.7232
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 372404444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7383 +/- 0.0155047 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7383 @ 95%CL (1 toyMC)
median expected limit: r < 14.7383 @ 95%CL (1 toyMC)
   68% expected band : 14.7383 < r < 14.7383
   95% expected band : 14.7383 < r < 14.7383
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2066772672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0977 +/- 0.00903081 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.0977 @ 95%CL (1 toyMC)
median expected limit: r < 17.0977 @ 95%CL (1 toyMC)
   68% expected band : 17.0977 < r < 17.0977
   95% expected band : 17.0977 < r < 17.0977
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1604316551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7302 +/- 0.0160673 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7302 @ 95%CL (1 toyMC)
median expected limit: r < 14.7302 @ 95%CL (1 toyMC)
   68% expected band : 14.7302 < r < 14.7302
   95% expected band : 14.7302 < r < 14.7302
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1828942938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3031 +/- 0.00372907 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3031 @ 95%CL (1 toyMC)
median expected limit: r < 18.3031 @ 95%CL (1 toyMC)
   68% expected band : 18.3031 < r < 18.3031
   95% expected band : 18.3031 < r < 18.3031
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 861850666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7499 +/- 0.014236 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7499 @ 95%CL (1 toyMC)
median expected limit: r < 14.7499 @ 95%CL (1 toyMC)
   68% expected band : 14.7499 < r < 14.7499
   95% expected band : 14.7499 < r < 14.7499
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1251185812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7626 +/- 0.00733283 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.7626 @ 95%CL (1 toyMC)
median expected limit: r < 17.7626 @ 95%CL (1 toyMC)
   68% expected band : 17.7626 < r < 17.7626
   95% expected band : 17.7626 < r < 17.7626
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -334411926
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7839 +/- 0.015725 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7839 @ 95%CL (1 toyMC)
median expected limit: r < 14.7839 @ 95%CL (1 toyMC)
   68% expected band : 14.7839 < r < 14.7839
   95% expected band : 14.7839 < r < 14.7839
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1304838
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6309 +/- 0.00642571 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.6309 @ 95%CL (1 toyMC)
median expected limit: r < 17.6309 @ 95%CL (1 toyMC)
   68% expected band : 17.6309 < r < 17.6309
   95% expected band : 17.6309 < r < 17.6309
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 83935282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2231 +/- 0.00471019 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.2231 @ 95%CL (1 toyMC)
median expected limit: r < 18.2231 @ 95%CL (1 toyMC)
   68% expected band : 18.2231 < r < 18.2231
   95% expected band : 18.2231 < r < 18.2231
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2122539853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4203 +/- 0.00505981 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.4203 @ 95%CL (1 toyMC)
median expected limit: r < 18.4203 @ 95%CL (1 toyMC)
   68% expected band : 18.4203 < r < 18.4203
   95% expected band : 18.4203 < r < 18.4203
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1026539555
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5702 +/- 0.0105191 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.5702 @ 95%CL (1 toyMC)
median expected limit: r < 16.5702 @ 95%CL (1 toyMC)
   68% expected band : 16.5702 < r < 16.5702
   95% expected band : 16.5702 < r < 16.5702
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 653198146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8577 +/- 0.00979065 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.8577 @ 95%CL (1 toyMC)
median expected limit: r < 16.8577 @ 95%CL (1 toyMC)
   68% expected band : 16.8577 < r < 16.8577
   95% expected band : 16.8577 < r < 16.8577
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 213128535
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6291 +/- 0.00952306 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.6291 @ 95%CL (1 toyMC)
median expected limit: r < 16.6291 @ 95%CL (1 toyMC)
   68% expected band : 16.6291 < r < 16.6291
   95% expected band : 16.6291 < r < 16.6291
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -213638405
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5793 +/- 0.00489499 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5793 @ 95%CL (1 toyMC)
median expected limit: r < 18.5793 @ 95%CL (1 toyMC)
   68% expected band : 18.5793 < r < 18.5793
   95% expected band : 18.5793 < r < 18.5793
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1502584233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7846 +/- 0.0158163 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7846 @ 95%CL (1 toyMC)
median expected limit: r < 14.7846 @ 95%CL (1 toyMC)
   68% expected band : 14.7846 < r < 14.7846
   95% expected band : 14.7846 < r < 14.7846
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1557911335
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7331 +/- 0.0155733 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7331 @ 95%CL (1 toyMC)
median expected limit: r < 14.7331 @ 95%CL (1 toyMC)
   68% expected band : 14.7331 < r < 14.7331
   95% expected band : 14.7331 < r < 14.7331
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1468899106
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8552 +/- 0.00854461 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.8552 @ 95%CL (1 toyMC)
median expected limit: r < 16.8552 @ 95%CL (1 toyMC)
   68% expected band : 16.8552 < r < 16.8552
   95% expected band : 16.8552 < r < 16.8552
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 52709892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3706 +/- 0.00761905 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.3706 @ 95%CL (1 toyMC)
median expected limit: r < 17.3706 @ 95%CL (1 toyMC)
   68% expected band : 17.3706 < r < 17.3706
   95% expected band : 17.3706 < r < 17.3706
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1190739240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8085 +/- 0.0123484 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8085 @ 95%CL (1 toyMC)
median expected limit: r < 14.8085 @ 95%CL (1 toyMC)
   68% expected band : 14.8085 < r < 14.8085
   95% expected band : 14.8085 < r < 14.8085
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1603980207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7651 +/- 0.0141993 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7651 @ 95%CL (1 toyMC)
median expected limit: r < 14.7651 @ 95%CL (1 toyMC)
   68% expected band : 14.7651 < r < 14.7651
   95% expected band : 14.7651 < r < 14.7651
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -864756503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7714 +/- 0.0124103 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7714 @ 95%CL (1 toyMC)
median expected limit: r < 14.7714 @ 95%CL (1 toyMC)
   68% expected band : 14.7714 < r < 14.7714
   95% expected band : 14.7714 < r < 14.7714
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 380707462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7721 +/- 0.0160754 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7721 @ 95%CL (1 toyMC)
median expected limit: r < 14.7721 @ 95%CL (1 toyMC)
   68% expected band : 14.7721 < r < 14.7721
   95% expected band : 14.7721 < r < 14.7721
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1202628746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7815 +/- 0.0137902 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7815 @ 95%CL (1 toyMC)
median expected limit: r < 14.7815 @ 95%CL (1 toyMC)
   68% expected band : 14.7815 < r < 14.7815
   95% expected band : 14.7815 < r < 14.7815
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1619386623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7768 +/- 0.0117383 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7768 @ 95%CL (1 toyMC)
median expected limit: r < 14.7768 @ 95%CL (1 toyMC)
   68% expected band : 14.7768 < r < 14.7768
   95% expected band : 14.7768 < r < 14.7768
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1281452617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5845 +/- 0.00751658 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.5845 @ 95%CL (1 toyMC)
median expected limit: r < 16.5845 @ 95%CL (1 toyMC)
   68% expected band : 16.5845 < r < 16.5845
   95% expected band : 16.5845 < r < 16.5845
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1948134582
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1497 +/- 0.00613445 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1497 @ 95%CL (1 toyMC)
median expected limit: r < 18.1497 @ 95%CL (1 toyMC)
   68% expected band : 18.1497 < r < 18.1497
   95% expected band : 18.1497 < r < 18.1497
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1178506079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.764 +/- 0.0169502 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.764 @ 95%CL (1 toyMC)
median expected limit: r < 14.764 @ 95%CL (1 toyMC)
   68% expected band : 14.764 < r < 14.764
   95% expected band : 14.764 < r < 14.764
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1942628080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.737 +/- 0.0172377 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.737 @ 95%CL (1 toyMC)
median expected limit: r < 14.737 @ 95%CL (1 toyMC)
   68% expected band : 14.737 < r < 14.737
   95% expected band : 14.737 < r < 14.737
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 739993288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8319 +/- 0.00375021 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8319 @ 95%CL (1 toyMC)
median expected limit: r < 18.8319 @ 95%CL (1 toyMC)
   68% expected band : 18.8319 < r < 18.8319
   95% expected band : 18.8319 < r < 18.8319
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1801281475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7349 +/- 0.0171422 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7349 @ 95%CL (1 toyMC)
median expected limit: r < 14.7349 @ 95%CL (1 toyMC)
   68% expected band : 14.7349 < r < 14.7349
   95% expected band : 14.7349 < r < 14.7349
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1841539591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5866 +/- 0.00643117 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.5866 @ 95%CL (1 toyMC)
median expected limit: r < 17.5866 @ 95%CL (1 toyMC)
   68% expected band : 17.5866 < r < 17.5866
   95% expected band : 17.5866 < r < 17.5866
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1381821658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7302 +/- 0.01634 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.7302 @ 95%CL (1 toyMC)
median expected limit: r < 14.7302 @ 95%CL (1 toyMC)
   68% expected band : 14.7302 < r < 14.7302
   95% expected band : 14.7302 < r < 14.7302
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1750241039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.617 +/- 0.0114939 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.617 @ 95%CL (1 toyMC)
median expected limit: r < 16.617 @ 95%CL (1 toyMC)
   68% expected band : 16.617 < r < 16.617
   95% expected band : 16.617 < r < 16.617
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2049811710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5583 +/- 0.00944122 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.5583 @ 95%CL (1 toyMC)
median expected limit: r < 16.5583 @ 95%CL (1 toyMC)
   68% expected band : 16.5583 < r < 16.5583
   95% expected band : 16.5583 < r < 16.5583
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1107489230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.36 +/- 0.00642332 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.36 @ 95%CL (1 toyMC)
median expected limit: r < 17.36 @ 95%CL (1 toyMC)
   68% expected band : 17.36 < r < 17.36
   95% expected band : 17.36 < r < 17.36
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1572564110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7399 +/- 0.0122174 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7399 @ 95%CL (1 toyMC)
median expected limit: r < 14.7399 @ 95%CL (1 toyMC)
   68% expected band : 14.7399 < r < 14.7399
   95% expected band : 14.7399 < r < 14.7399
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1528105273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8294 +/- 0.00961841 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.8294 @ 95%CL (1 toyMC)
median expected limit: r < 16.8294 @ 95%CL (1 toyMC)
   68% expected band : 16.8294 < r < 16.8294
   95% expected band : 16.8294 < r < 16.8294
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2071043610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4123 +/- 0.00461416 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4123 @ 95%CL (1 toyMC)
median expected limit: r < 18.4123 @ 95%CL (1 toyMC)
   68% expected band : 18.4123 < r < 18.4123
   95% expected band : 18.4123 < r < 18.4123
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1428027108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7537 +/- 0.0148012 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7537 @ 95%CL (1 toyMC)
median expected limit: r < 14.7537 @ 95%CL (1 toyMC)
   68% expected band : 14.7537 < r < 14.7537
   95% expected band : 14.7537 < r < 14.7537
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -413325032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7521 +/- 0.0152495 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7521 @ 95%CL (1 toyMC)
median expected limit: r < 14.7521 @ 95%CL (1 toyMC)
   68% expected band : 14.7521 < r < 14.7521
   95% expected band : 14.7521 < r < 14.7521
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1413612513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8547 +/- 0.0106867 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.8547 @ 95%CL (1 toyMC)
median expected limit: r < 16.8547 @ 95%CL (1 toyMC)
   68% expected band : 16.8547 < r < 16.8547
   95% expected band : 16.8547 < r < 16.8547
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1778081890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7933 +/- 0.0149426 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7933 @ 95%CL (1 toyMC)
median expected limit: r < 14.7933 @ 95%CL (1 toyMC)
   68% expected band : 14.7933 < r < 14.7933
   95% expected band : 14.7933 < r < 14.7933
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1020394472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3181 +/- 0.00507528 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3181 @ 95%CL (1 toyMC)
median expected limit: r < 18.3181 @ 95%CL (1 toyMC)
   68% expected band : 18.3181 < r < 18.3181
   95% expected band : 18.3181 < r < 18.3181
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -124218114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.772 +/- 0.0138987 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.772 @ 95%CL (1 toyMC)
median expected limit: r < 14.772 @ 95%CL (1 toyMC)
   68% expected band : 14.772 < r < 14.772
   95% expected band : 14.772 < r < 14.772
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1741306764
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7152 +/- 0.0141513 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7152 @ 95%CL (1 toyMC)
median expected limit: r < 14.7152 @ 95%CL (1 toyMC)
   68% expected band : 14.7152 < r < 14.7152
   95% expected band : 14.7152 < r < 14.7152
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -726734412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7868 +/- 0.0153291 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7868 @ 95%CL (1 toyMC)
median expected limit: r < 14.7868 @ 95%CL (1 toyMC)
   68% expected band : 14.7868 < r < 14.7868
   95% expected band : 14.7868 < r < 14.7868
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 399987469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7298 +/- 0.0165014 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7298 @ 95%CL (1 toyMC)
median expected limit: r < 14.7298 @ 95%CL (1 toyMC)
   68% expected band : 14.7298 < r < 14.7298
   95% expected band : 14.7298 < r < 14.7298
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -415019595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4314 +/- 0.00716722 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.4314 @ 95%CL (1 toyMC)
median expected limit: r < 17.4314 @ 95%CL (1 toyMC)
   68% expected band : 17.4314 < r < 17.4314
   95% expected band : 17.4314 < r < 17.4314
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -181817365
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7527 +/- 0.0138055 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7527 @ 95%CL (1 toyMC)
median expected limit: r < 14.7527 @ 95%CL (1 toyMC)
   68% expected band : 14.7527 < r < 14.7527
   95% expected band : 14.7527 < r < 14.7527
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 444518727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7747 +/- 0.015317 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7747 @ 95%CL (1 toyMC)
median expected limit: r < 14.7747 @ 95%CL (1 toyMC)
   68% expected band : 14.7747 < r < 14.7747
   95% expected band : 14.7747 < r < 14.7747
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -978936225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3921 +/- 0.00781466 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.3921 @ 95%CL (1 toyMC)
median expected limit: r < 17.3921 @ 95%CL (1 toyMC)
   68% expected band : 17.3921 < r < 17.3921
   95% expected band : 17.3921 < r < 17.3921
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1967194139
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7248 +/- 0.0152868 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7248 @ 95%CL (1 toyMC)
median expected limit: r < 14.7248 @ 95%CL (1 toyMC)
   68% expected band : 14.7248 < r < 14.7248
   95% expected band : 14.7248 < r < 14.7248
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2021685947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7745 +/- 0.0133633 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7745 @ 95%CL (1 toyMC)
median expected limit: r < 14.7745 @ 95%CL (1 toyMC)
   68% expected band : 14.7745 < r < 14.7745
   95% expected band : 14.7745 < r < 14.7745
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1324782787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.843 +/- 0.00670119 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.843 @ 95%CL (1 toyMC)
median expected limit: r < 17.843 @ 95%CL (1 toyMC)
   68% expected band : 17.843 < r < 17.843
   95% expected band : 17.843 < r < 17.843
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -424799134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7631 +/- 0.0153458 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7631 @ 95%CL (1 toyMC)
median expected limit: r < 14.7631 @ 95%CL (1 toyMC)
   68% expected band : 14.7631 < r < 14.7631
   95% expected band : 14.7631 < r < 14.7631
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -557491340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7743 +/- 0.0165514 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7743 @ 95%CL (1 toyMC)
median expected limit: r < 14.7743 @ 95%CL (1 toyMC)
   68% expected band : 14.7743 < r < 14.7743
   95% expected band : 14.7743 < r < 14.7743
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1146519985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7368 +/- 0.0133834 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7368 @ 95%CL (1 toyMC)
median expected limit: r < 14.7368 @ 95%CL (1 toyMC)
   68% expected band : 14.7368 < r < 14.7368
   95% expected band : 14.7368 < r < 14.7368
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1968154909
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7429 +/- 0.0160219 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7429 @ 95%CL (1 toyMC)
median expected limit: r < 14.7429 @ 95%CL (1 toyMC)
   68% expected band : 14.7429 < r < 14.7429
   95% expected band : 14.7429 < r < 14.7429
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1100040829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0205 +/- 0.00922877 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.0205 @ 95%CL (1 toyMC)
median expected limit: r < 17.0205 @ 95%CL (1 toyMC)
   68% expected band : 17.0205 < r < 17.0205
   95% expected band : 17.0205 < r < 17.0205
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1478411646
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6038 +/- 0.0091713 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.6038 @ 95%CL (1 toyMC)
median expected limit: r < 16.6038 @ 95%CL (1 toyMC)
   68% expected band : 16.6038 < r < 16.6038
   95% expected band : 16.6038 < r < 16.6038
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -902768611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7858 +/- 0.0158981 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7858 @ 95%CL (1 toyMC)
median expected limit: r < 14.7858 @ 95%CL (1 toyMC)
   68% expected band : 14.7858 < r < 14.7858
   95% expected band : 14.7858 < r < 14.7858
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -177790394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7248 +/- 0.0129705 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7248 @ 95%CL (1 toyMC)
median expected limit: r < 14.7248 @ 95%CL (1 toyMC)
   68% expected band : 14.7248 < r < 14.7248
   95% expected band : 14.7248 < r < 14.7248
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2015638347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.573 +/- 0.0112878 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.573 @ 95%CL (1 toyMC)
median expected limit: r < 16.573 @ 95%CL (1 toyMC)
   68% expected band : 16.573 < r < 16.573
   95% expected band : 16.573 < r < 16.573
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -114056498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7176 +/- 0.0166976 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7176 @ 95%CL (1 toyMC)
median expected limit: r < 14.7176 @ 95%CL (1 toyMC)
   68% expected band : 14.7176 < r < 14.7176
   95% expected band : 14.7176 < r < 14.7176
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 36425169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.616 +/- 0.0100203 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.616 @ 95%CL (1 toyMC)
median expected limit: r < 16.616 @ 95%CL (1 toyMC)
   68% expected band : 16.616 < r < 16.616
   95% expected band : 16.616 < r < 16.616
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1378533337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0044 +/- 0.00770397 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.0044 @ 95%CL (1 toyMC)
median expected limit: r < 17.0044 @ 95%CL (1 toyMC)
   68% expected band : 17.0044 < r < 17.0044
   95% expected band : 17.0044 < r < 17.0044
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 544415976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0228 +/- 0.00941544 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.0228 @ 95%CL (1 toyMC)
median expected limit: r < 17.0228 @ 95%CL (1 toyMC)
   68% expected band : 17.0228 < r < 17.0228
   95% expected band : 17.0228 < r < 17.0228
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2022173541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7599 +/- 0.0125063 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7599 @ 95%CL (1 toyMC)
median expected limit: r < 14.7599 @ 95%CL (1 toyMC)
   68% expected band : 14.7599 < r < 14.7599
   95% expected band : 14.7599 < r < 14.7599
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -359854478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7443 +/- 0.0170399 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7443 @ 95%CL (1 toyMC)
median expected limit: r < 14.7443 @ 95%CL (1 toyMC)
   68% expected band : 14.7443 < r < 14.7443
   95% expected band : 14.7443 < r < 14.7443
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1586666028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7806 +/- 0.0118951 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7806 @ 95%CL (1 toyMC)
median expected limit: r < 14.7806 @ 95%CL (1 toyMC)
   68% expected band : 14.7806 < r < 14.7806
   95% expected band : 14.7806 < r < 14.7806
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1956426339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7542 +/- 0.0131872 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7542 @ 95%CL (1 toyMC)
median expected limit: r < 14.7542 @ 95%CL (1 toyMC)
   68% expected band : 14.7542 < r < 14.7542
   95% expected band : 14.7542 < r < 14.7542
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 322072954
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6062 +/- 0.00971074 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.6062 @ 95%CL (1 toyMC)
median expected limit: r < 16.6062 @ 95%CL (1 toyMC)
   68% expected band : 16.6062 < r < 16.6062
   95% expected band : 16.6062 < r < 16.6062
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 243729549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7777 +/- 0.0137219 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7777 @ 95%CL (1 toyMC)
median expected limit: r < 14.7777 @ 95%CL (1 toyMC)
   68% expected band : 14.7777 < r < 14.7777
   95% expected band : 14.7777 < r < 14.7777
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -710829919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7744 +/- 0.0120115 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7744 @ 95%CL (1 toyMC)
median expected limit: r < 14.7744 @ 95%CL (1 toyMC)
   68% expected band : 14.7744 < r < 14.7744
   95% expected band : 14.7744 < r < 14.7744
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2137217521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7669 +/- 0.0152128 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7669 @ 95%CL (1 toyMC)
median expected limit: r < 14.7669 @ 95%CL (1 toyMC)
   68% expected band : 14.7669 < r < 14.7669
   95% expected band : 14.7669 < r < 14.7669
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1418146061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7719 +/- 0.0159617 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7719 @ 95%CL (1 toyMC)
median expected limit: r < 14.7719 @ 95%CL (1 toyMC)
   68% expected band : 14.7719 < r < 14.7719
   95% expected band : 14.7719 < r < 14.7719
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1634495304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7107 +/- 0.0123355 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7107 @ 95%CL (1 toyMC)
median expected limit: r < 14.7107 @ 95%CL (1 toyMC)
   68% expected band : 14.7107 < r < 14.7107
   95% expected band : 14.7107 < r < 14.7107
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1648588514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7849 +/- 0.0135549 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7849 @ 95%CL (1 toyMC)
median expected limit: r < 14.7849 @ 95%CL (1 toyMC)
   68% expected band : 14.7849 < r < 14.7849
   95% expected band : 14.7849 < r < 14.7849
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 395096075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3366 +/- 0.00866265 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.3366 @ 95%CL (1 toyMC)
median expected limit: r < 17.3366 @ 95%CL (1 toyMC)
   68% expected band : 17.3366 < r < 17.3366
   95% expected band : 17.3366 < r < 17.3366
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1190048283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7381 +/- 0.0155356 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.7381 @ 95%CL (1 toyMC)
median expected limit: r < 14.7381 @ 95%CL (1 toyMC)
   68% expected band : 14.7381 < r < 14.7381
   95% expected band : 14.7381 < r < 14.7381
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1107489230.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-114056498.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1178506079.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1190048283.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1190739240.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-124218114.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1252332527.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1262410277.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1324782787.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1378533337.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1381821658.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1413612513.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1455915720.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1478411646.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1533580692.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1572564110.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1586666028.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1634495304.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1648588514.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1750241039.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-177790394.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1778081890.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1801281475.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-181817365.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1841539591.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-19190070.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1942628080.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1956426339.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-1967194139.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-2015638347.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-2022173541.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-2049811710.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-2101074311.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-213638405.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-2137217521.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-334411926.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-359046561.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-359854478.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-413325032.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-415019595.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-424799134.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-456374715.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-50578053.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-52805806.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-557491340.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-673645728.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-710829919.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-726734412.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-819349570.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-864756503.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-902768611.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-978936225.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1020394472.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1026539555.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1100040829.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1146519985.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1202628746.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1251185812.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1281452617.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1304838.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1411920852.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1418146061.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1428027108.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1468899106.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1502584233.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1528105273.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1557911335.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1603980207.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1604316551.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1619386623.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1741306764.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1755898537.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1770707589.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1828942938.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1948134582.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1968154909.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2021685947.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2066772672.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2071043610.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2122539853.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.213128535.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.243729549.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.316177852.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.322072954.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.36425169.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.372404444.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.380707462.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.395096075.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.399987469.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.444518727.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.52709892.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.528952104.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.544415976.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.643265815.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.653198146.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.739993288.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.83935282.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.839902125.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.861850666.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.914439392.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -635556314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4066 +/- 0.0134409 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4066 @ 95%CL (1 toyMC)
median expected limit: r < 15.4066 @ 95%CL (1 toyMC)
   68% expected band : 15.4066 < r < 15.4066
   95% expected band : 15.4066 < r < 15.4066
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1942694898
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4249 +/- 0.0130301 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.4249 @ 95%CL (1 toyMC)
median expected limit: r < 15.4249 @ 95%CL (1 toyMC)
   68% expected band : 15.4249 < r < 15.4249
   95% expected band : 15.4249 < r < 15.4249
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -922081955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4149 +/- 0.013165 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.4149 @ 95%CL (1 toyMC)
median expected limit: r < 15.4149 @ 95%CL (1 toyMC)
   68% expected band : 15.4149 < r < 15.4149
   95% expected band : 15.4149 < r < 15.4149
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1417515818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4556 +/- 0.0156027 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.4556 @ 95%CL (1 toyMC)
median expected limit: r < 15.4556 @ 95%CL (1 toyMC)
   68% expected band : 15.4556 < r < 15.4556
   95% expected band : 15.4556 < r < 15.4556
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1266792863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3883 +/- 0.0140476 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.3883 @ 95%CL (1 toyMC)
median expected limit: r < 15.3883 @ 95%CL (1 toyMC)
   68% expected band : 15.3883 < r < 15.3883
   95% expected band : 15.3883 < r < 15.3883
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1647674990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3992 +/- 0.0128009 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.3992 @ 95%CL (1 toyMC)
median expected limit: r < 15.3992 @ 95%CL (1 toyMC)
   68% expected band : 15.3992 < r < 15.3992
   95% expected band : 15.3992 < r < 15.3992
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 890737253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4569 +/- 0.0145367 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.4569 @ 95%CL (1 toyMC)
median expected limit: r < 15.4569 @ 95%CL (1 toyMC)
   68% expected band : 15.4569 < r < 15.4569
   95% expected band : 15.4569 < r < 15.4569
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 308374429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3982 +/- 0.0139232 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.3982 @ 95%CL (1 toyMC)
median expected limit: r < 15.3982 @ 95%CL (1 toyMC)
   68% expected band : 15.3982 < r < 15.3982
   95% expected band : 15.3982 < r < 15.3982
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2054207750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9208 +/- 0.0039972 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.9208 @ 95%CL (1 toyMC)
median expected limit: r < 18.9208 @ 95%CL (1 toyMC)
   68% expected band : 18.9208 < r < 18.9208
   95% expected band : 18.9208 < r < 18.9208
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1006805522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.408 +/- 0.0127627 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.408 @ 95%CL (1 toyMC)
median expected limit: r < 15.408 @ 95%CL (1 toyMC)
   68% expected band : 15.408 < r < 15.408
   95% expected band : 15.408 < r < 15.408
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1689667617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8173 +/- 0.00661726 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.8173 @ 95%CL (1 toyMC)
median expected limit: r < 17.8173 @ 95%CL (1 toyMC)
   68% expected band : 17.8173 < r < 17.8173
   95% expected band : 17.8173 < r < 17.8173
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -479010007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4445 +/- 0.0159971 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4445 @ 95%CL (1 toyMC)
median expected limit: r < 15.4445 @ 95%CL (1 toyMC)
   68% expected band : 15.4445 < r < 15.4445
   95% expected band : 15.4445 < r < 15.4445
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -470871876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6909 +/- 0.00456947 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6909 @ 95%CL (1 toyMC)
median expected limit: r < 18.6909 @ 95%CL (1 toyMC)
   68% expected band : 18.6909 < r < 18.6909
   95% expected band : 18.6909 < r < 18.6909
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -543465908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4403 +/- 0.010358 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4403 @ 95%CL (1 toyMC)
median expected limit: r < 15.4403 @ 95%CL (1 toyMC)
   68% expected band : 15.4403 < r < 15.4403
   95% expected band : 15.4403 < r < 15.4403
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1619001034
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4242 +/- 0.0137983 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4242 @ 95%CL (1 toyMC)
median expected limit: r < 15.4242 @ 95%CL (1 toyMC)
   68% expected band : 15.4242 < r < 15.4242
   95% expected band : 15.4242 < r < 15.4242
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1601552661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4208 +/- 0.0160662 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4208 @ 95%CL (1 toyMC)
median expected limit: r < 15.4208 @ 95%CL (1 toyMC)
   68% expected band : 15.4208 < r < 15.4208
   95% expected band : 15.4208 < r < 15.4208
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -770125555
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.411 +/- 0.0142835 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.411 @ 95%CL (1 toyMC)
median expected limit: r < 15.411 @ 95%CL (1 toyMC)
   68% expected band : 15.411 < r < 15.411
   95% expected band : 15.411 < r < 15.411
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1397041702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0706 +/- 0.00681117 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.0706 @ 95%CL (1 toyMC)
median expected limit: r < 17.0706 @ 95%CL (1 toyMC)
   68% expected band : 17.0706 < r < 17.0706
   95% expected band : 17.0706 < r < 17.0706
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1991662009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4503 +/- 0.0135392 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4503 @ 95%CL (1 toyMC)
median expected limit: r < 15.4503 @ 95%CL (1 toyMC)
   68% expected band : 15.4503 < r < 15.4503
   95% expected band : 15.4503 < r < 15.4503
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 137825842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4578 +/- 0.0141734 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4578 @ 95%CL (1 toyMC)
median expected limit: r < 15.4578 @ 95%CL (1 toyMC)
   68% expected band : 15.4578 < r < 15.4578
   95% expected band : 15.4578 < r < 15.4578
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 207870633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4285 +/- 0.0138359 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4285 @ 95%CL (1 toyMC)
median expected limit: r < 15.4285 @ 95%CL (1 toyMC)
   68% expected band : 15.4285 < r < 15.4285
   95% expected band : 15.4285 < r < 15.4285
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 797697076
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4195 +/- 0.0156047 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4195 @ 95%CL (1 toyMC)
median expected limit: r < 15.4195 @ 95%CL (1 toyMC)
   68% expected band : 15.4195 < r < 15.4195
   95% expected band : 15.4195 < r < 15.4195
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -843538234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4279 +/- 0.0148496 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4279 @ 95%CL (1 toyMC)
median expected limit: r < 15.4279 @ 95%CL (1 toyMC)
   68% expected band : 15.4279 < r < 15.4279
   95% expected band : 15.4279 < r < 15.4279
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2104400519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4642 +/- 0.0155857 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4642 @ 95%CL (1 toyMC)
median expected limit: r < 15.4642 @ 95%CL (1 toyMC)
   68% expected band : 15.4642 < r < 15.4642
   95% expected band : 15.4642 < r < 15.4642
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -619472148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4218 +/- 0.00713415 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.4218 @ 95%CL (1 toyMC)
median expected limit: r < 17.4218 @ 95%CL (1 toyMC)
   68% expected band : 17.4218 < r < 17.4218
   95% expected band : 17.4218 < r < 17.4218
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -777801120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4765 +/- 0.00667624 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.4765 @ 95%CL (1 toyMC)
median expected limit: r < 17.4765 @ 95%CL (1 toyMC)
   68% expected band : 17.4765 < r < 17.4765
   95% expected band : 17.4765 < r < 17.4765
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2001381436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3851 +/- 0.0125958 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.3851 @ 95%CL (1 toyMC)
median expected limit: r < 15.3851 @ 95%CL (1 toyMC)
   68% expected band : 15.3851 < r < 15.3851
   95% expected band : 15.3851 < r < 15.3851
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 903066496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4133 +/- 0.0125175 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4133 @ 95%CL (1 toyMC)
median expected limit: r < 15.4133 @ 95%CL (1 toyMC)
   68% expected band : 15.4133 < r < 15.4133
   95% expected band : 15.4133 < r < 15.4133
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1369987783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4003 +/- 0.0129882 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4003 @ 95%CL (1 toyMC)
median expected limit: r < 15.4003 @ 95%CL (1 toyMC)
   68% expected band : 15.4003 < r < 15.4003
   95% expected band : 15.4003 < r < 15.4003
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1918394984
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.438 +/- 0.0124643 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.438 @ 95%CL (1 toyMC)
median expected limit: r < 15.438 @ 95%CL (1 toyMC)
   68% expected band : 15.438 < r < 15.438
   95% expected band : 15.438 < r < 15.438
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1241738170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1166 +/- 0.00958674 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.1166 @ 95%CL (1 toyMC)
median expected limit: r < 17.1166 @ 95%CL (1 toyMC)
   68% expected band : 17.1166 < r < 17.1166
   95% expected band : 17.1166 < r < 17.1166
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 49946048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3808 +/- 0.0120431 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3808 @ 95%CL (1 toyMC)
median expected limit: r < 15.3808 @ 95%CL (1 toyMC)
   68% expected band : 15.3808 < r < 15.3808
   95% expected band : 15.3808 < r < 15.3808
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -289825831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7831 +/- 0.00673637 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.7831 @ 95%CL (1 toyMC)
median expected limit: r < 17.7831 @ 95%CL (1 toyMC)
   68% expected band : 17.7831 < r < 17.7831
   95% expected band : 17.7831 < r < 17.7831
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1429890972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3761 +/- 0.00534003 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3761 @ 95%CL (1 toyMC)
median expected limit: r < 18.3761 @ 95%CL (1 toyMC)
   68% expected band : 18.3761 < r < 18.3761
   95% expected band : 18.3761 < r < 18.3761
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 405148178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4436 +/- 0.0111817 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4436 @ 95%CL (1 toyMC)
median expected limit: r < 15.4436 @ 95%CL (1 toyMC)
   68% expected band : 15.4436 < r < 15.4436
   95% expected band : 15.4436 < r < 15.4436
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1793223226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8024 +/- 0.00705625 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.8024 @ 95%CL (1 toyMC)
median expected limit: r < 17.8024 @ 95%CL (1 toyMC)
   68% expected band : 17.8024 < r < 17.8024
   95% expected band : 17.8024 < r < 17.8024
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -246128175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4418 +/- 0.0172277 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.4418 @ 95%CL (1 toyMC)
median expected limit: r < 15.4418 @ 95%CL (1 toyMC)
   68% expected band : 15.4418 < r < 15.4418
   95% expected band : 15.4418 < r < 15.4418
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682268551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4472 +/- 0.012587 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4472 @ 95%CL (1 toyMC)
median expected limit: r < 15.4472 @ 95%CL (1 toyMC)
   68% expected band : 15.4472 < r < 15.4472
   95% expected band : 15.4472 < r < 15.4472
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1951560500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5576 +/- 0.00459229 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.5576 @ 95%CL (1 toyMC)
median expected limit: r < 18.5576 @ 95%CL (1 toyMC)
   68% expected band : 18.5576 < r < 18.5576
   95% expected band : 18.5576 < r < 18.5576
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 889002930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7976 +/- 0.00475212 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.7976 @ 95%CL (1 toyMC)
median expected limit: r < 17.7976 @ 95%CL (1 toyMC)
   68% expected band : 17.7976 < r < 17.7976
   95% expected band : 17.7976 < r < 17.7976
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -417293205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3973 +/- 0.0151404 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3973 @ 95%CL (1 toyMC)
median expected limit: r < 15.3973 @ 95%CL (1 toyMC)
   68% expected band : 15.3973 < r < 15.3973
   95% expected band : 15.3973 < r < 15.3973
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -245519199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7369 +/- 0.00601386 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7369 @ 95%CL (1 toyMC)
median expected limit: r < 17.7369 @ 95%CL (1 toyMC)
   68% expected band : 17.7369 < r < 17.7369
   95% expected band : 17.7369 < r < 17.7369
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1445723822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.42 +/- 0.013192 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.42 @ 95%CL (1 toyMC)
median expected limit: r < 15.42 @ 95%CL (1 toyMC)
   68% expected band : 15.42 < r < 15.42
   95% expected band : 15.42 < r < 15.42
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1506847320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4149 +/- 0.0104719 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4149 @ 95%CL (1 toyMC)
median expected limit: r < 15.4149 @ 95%CL (1 toyMC)
   68% expected band : 15.4149 < r < 15.4149
   95% expected band : 15.4149 < r < 15.4149
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1339361625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3936 +/- 0.0113814 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3936 @ 95%CL (1 toyMC)
median expected limit: r < 15.3936 @ 95%CL (1 toyMC)
   68% expected band : 15.3936 < r < 15.3936
   95% expected band : 15.3936 < r < 15.3936
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2055348641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1177 +/- 0.00925452 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.1177 @ 95%CL (1 toyMC)
median expected limit: r < 17.1177 @ 95%CL (1 toyMC)
   68% expected band : 17.1177 < r < 17.1177
   95% expected band : 17.1177 < r < 17.1177
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 668598039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8012 +/- 0.00698205 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.8012 @ 95%CL (1 toyMC)
median expected limit: r < 17.8012 @ 95%CL (1 toyMC)
   68% expected band : 17.8012 < r < 17.8012
   95% expected band : 17.8012 < r < 17.8012
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -508551963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3987 +/- 0.0145158 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3987 @ 95%CL (1 toyMC)
median expected limit: r < 15.3987 @ 95%CL (1 toyMC)
   68% expected band : 15.3987 < r < 15.3987
   95% expected band : 15.3987 < r < 15.3987
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 758688166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4162 +/- 0.0124535 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4162 @ 95%CL (1 toyMC)
median expected limit: r < 15.4162 @ 95%CL (1 toyMC)
   68% expected band : 15.4162 < r < 15.4162
   95% expected band : 15.4162 < r < 15.4162
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2115761862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8075 +/- 0.00582293 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.8075 @ 95%CL (1 toyMC)
median expected limit: r < 17.8075 @ 95%CL (1 toyMC)
   68% expected band : 17.8075 < r < 17.8075
   95% expected band : 17.8075 < r < 17.8075
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1762064259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4524 +/- 0.0145718 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4524 @ 95%CL (1 toyMC)
median expected limit: r < 15.4524 @ 95%CL (1 toyMC)
   68% expected band : 15.4524 < r < 15.4524
   95% expected band : 15.4524 < r < 15.4524
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2029294048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5274 +/- 0.00603922 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.5274 @ 95%CL (1 toyMC)
median expected limit: r < 17.5274 @ 95%CL (1 toyMC)
   68% expected band : 17.5274 < r < 17.5274
   95% expected band : 17.5274 < r < 17.5274
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1491550816
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4361 +/- 0.0132531 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4361 @ 95%CL (1 toyMC)
median expected limit: r < 15.4361 @ 95%CL (1 toyMC)
   68% expected band : 15.4361 < r < 15.4361
   95% expected band : 15.4361 < r < 15.4361
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1789669891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4213 +/- 0.0108427 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.4213 @ 95%CL (1 toyMC)
median expected limit: r < 15.4213 @ 95%CL (1 toyMC)
   68% expected band : 15.4213 < r < 15.4213
   95% expected band : 15.4213 < r < 15.4213
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -331820112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.444 +/- 0.0150986 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.444 @ 95%CL (1 toyMC)
median expected limit: r < 15.444 @ 95%CL (1 toyMC)
   68% expected band : 15.444 < r < 15.444
   95% expected band : 15.444 < r < 15.444
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 509504426
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8663 +/- 0.00418221 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.8663 @ 95%CL (1 toyMC)
median expected limit: r < 18.8663 @ 95%CL (1 toyMC)
   68% expected band : 18.8663 < r < 18.8663
   95% expected band : 18.8663 < r < 18.8663
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1328889164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1175 +/- 0.007284 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.1175 @ 95%CL (1 toyMC)
median expected limit: r < 17.1175 @ 95%CL (1 toyMC)
   68% expected band : 17.1175 < r < 17.1175
   95% expected band : 17.1175 < r < 17.1175
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 217384032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4327 +/- 0.0146543 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4327 @ 95%CL (1 toyMC)
median expected limit: r < 15.4327 @ 95%CL (1 toyMC)
   68% expected band : 15.4327 < r < 15.4327
   95% expected band : 15.4327 < r < 15.4327
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -666091982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4581 +/- 0.0121839 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4581 @ 95%CL (1 toyMC)
median expected limit: r < 15.4581 @ 95%CL (1 toyMC)
   68% expected band : 15.4581 < r < 15.4581
   95% expected band : 15.4581 < r < 15.4581
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2132144847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4361 +/- 0.00627815 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.4361 @ 95%CL (1 toyMC)
median expected limit: r < 17.4361 @ 95%CL (1 toyMC)
   68% expected band : 17.4361 < r < 17.4361
   95% expected band : 17.4361 < r < 17.4361
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 589110642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3974 +/- 0.0106972 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3974 @ 95%CL (1 toyMC)
median expected limit: r < 15.3974 @ 95%CL (1 toyMC)
   68% expected band : 15.3974 < r < 15.3974
   95% expected band : 15.3974 < r < 15.3974
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1751561185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.38 +/- 0.01101 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.38 @ 95%CL (1 toyMC)
median expected limit: r < 15.38 @ 95%CL (1 toyMC)
   68% expected band : 15.38 < r < 15.38
   95% expected band : 15.38 < r < 15.38
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -89427238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.443 +/- 0.0141752 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.443 @ 95%CL (1 toyMC)
median expected limit: r < 15.443 @ 95%CL (1 toyMC)
   68% expected band : 15.443 < r < 15.443
   95% expected band : 15.443 < r < 15.443
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1958136560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6714 +/- 0.00464921 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.6714 @ 95%CL (1 toyMC)
median expected limit: r < 18.6714 @ 95%CL (1 toyMC)
   68% expected band : 18.6714 < r < 18.6714
   95% expected band : 18.6714 < r < 18.6714
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1810697266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4621 +/- 0.00862025 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.4621 @ 95%CL (1 toyMC)
median expected limit: r < 17.4621 @ 95%CL (1 toyMC)
   68% expected band : 17.4621 < r < 17.4621
   95% expected band : 17.4621 < r < 17.4621
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2070033130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4398 +/- 0.0106756 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4398 @ 95%CL (1 toyMC)
median expected limit: r < 15.4398 @ 95%CL (1 toyMC)
   68% expected band : 15.4398 < r < 15.4398
   95% expected band : 15.4398 < r < 15.4398
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1922350228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3996 +/- 0.0133717 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3996 @ 95%CL (1 toyMC)
median expected limit: r < 15.3996 @ 95%CL (1 toyMC)
   68% expected band : 15.3996 < r < 15.3996
   95% expected band : 15.3996 < r < 15.3996
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1889348636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4272 +/- 0.0111668 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4272 @ 95%CL (1 toyMC)
median expected limit: r < 15.4272 @ 95%CL (1 toyMC)
   68% expected band : 15.4272 < r < 15.4272
   95% expected band : 15.4272 < r < 15.4272
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 376874729
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8914 +/- 0.00511147 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.8914 @ 95%CL (1 toyMC)
median expected limit: r < 17.8914 @ 95%CL (1 toyMC)
   68% expected band : 17.8914 < r < 17.8914
   95% expected band : 17.8914 < r < 17.8914
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 827245633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5124 +/- 0.00576885 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.5124 @ 95%CL (1 toyMC)
median expected limit: r < 17.5124 @ 95%CL (1 toyMC)
   68% expected band : 17.5124 < r < 17.5124
   95% expected band : 17.5124 < r < 17.5124
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1301437058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8675 +/- 0.00641279 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.8675 @ 95%CL (1 toyMC)
median expected limit: r < 17.8675 @ 95%CL (1 toyMC)
   68% expected band : 17.8675 < r < 17.8675
   95% expected band : 17.8675 < r < 17.8675
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -995112591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3648 +/- 0.0146429 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3648 @ 95%CL (1 toyMC)
median expected limit: r < 15.3648 @ 95%CL (1 toyMC)
   68% expected band : 15.3648 < r < 15.3648
   95% expected band : 15.3648 < r < 15.3648
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1035008789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4541 +/- 0.0159809 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4541 @ 95%CL (1 toyMC)
median expected limit: r < 15.4541 @ 95%CL (1 toyMC)
   68% expected band : 15.4541 < r < 15.4541
   95% expected band : 15.4541 < r < 15.4541
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1168095919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7807 +/- 0.00659346 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.7807 @ 95%CL (1 toyMC)
median expected limit: r < 17.7807 @ 95%CL (1 toyMC)
   68% expected band : 17.7807 < r < 17.7807
   95% expected band : 17.7807 < r < 17.7807
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1614514256
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1347 +/- 0.00644547 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1347 @ 95%CL (1 toyMC)
median expected limit: r < 18.1347 @ 95%CL (1 toyMC)
   68% expected band : 18.1347 < r < 18.1347
   95% expected band : 18.1347 < r < 18.1347
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2023504366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5101 +/- 0.00626298 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.5101 @ 95%CL (1 toyMC)
median expected limit: r < 17.5101 @ 95%CL (1 toyMC)
   68% expected band : 17.5101 < r < 17.5101
   95% expected band : 17.5101 < r < 17.5101
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1016774709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9799 +/- 0.00643943 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9799 @ 95%CL (1 toyMC)
median expected limit: r < 17.9799 @ 95%CL (1 toyMC)
   68% expected band : 17.9799 < r < 17.9799
   95% expected band : 17.9799 < r < 17.9799
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 21161135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4388 +/- 0.0162666 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4388 @ 95%CL (1 toyMC)
median expected limit: r < 15.4388 @ 95%CL (1 toyMC)
   68% expected band : 15.4388 < r < 15.4388
   95% expected band : 15.4388 < r < 15.4388
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -263544242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4816 +/- 0.00805778 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.4816 @ 95%CL (1 toyMC)
median expected limit: r < 17.4816 @ 95%CL (1 toyMC)
   68% expected band : 17.4816 < r < 17.4816
   95% expected band : 17.4816 < r < 17.4816
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 85559545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4047 +/- 0.00999556 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4047 @ 95%CL (1 toyMC)
median expected limit: r < 15.4047 @ 95%CL (1 toyMC)
   68% expected band : 15.4047 < r < 15.4047
   95% expected band : 15.4047 < r < 15.4047
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1772054406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7195 +/- 0.00665793 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7195 @ 95%CL (1 toyMC)
median expected limit: r < 17.7195 @ 95%CL (1 toyMC)
   68% expected band : 17.7195 < r < 17.7195
   95% expected band : 17.7195 < r < 17.7195
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1834331716
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3685 +/- 0.00424678 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.3685 @ 95%CL (1 toyMC)
median expected limit: r < 18.3685 @ 95%CL (1 toyMC)
   68% expected band : 18.3685 < r < 18.3685
   95% expected band : 18.3685 < r < 18.3685
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1356385654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4224 +/- 0.0147763 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.4224 @ 95%CL (1 toyMC)
median expected limit: r < 15.4224 @ 95%CL (1 toyMC)
   68% expected band : 15.4224 < r < 15.4224
   95% expected band : 15.4224 < r < 15.4224
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 92460730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3902 +/- 0.0127169 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3902 @ 95%CL (1 toyMC)
median expected limit: r < 15.3902 @ 95%CL (1 toyMC)
   68% expected band : 15.3902 < r < 15.3902
   95% expected band : 15.3902 < r < 15.3902
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 866426182
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4464 +/- 0.00835202 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.4464 @ 95%CL (1 toyMC)
median expected limit: r < 17.4464 @ 95%CL (1 toyMC)
   68% expected band : 17.4464 < r < 17.4464
   95% expected band : 17.4464 < r < 17.4464
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -68017669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6481 +/- 0.00688877 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6481 @ 95%CL (1 toyMC)
median expected limit: r < 17.6481 @ 95%CL (1 toyMC)
   68% expected band : 17.6481 < r < 17.6481
   95% expected band : 17.6481 < r < 17.6481
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2035217366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6519 +/- 0.00553445 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6519 @ 95%CL (1 toyMC)
median expected limit: r < 17.6519 @ 95%CL (1 toyMC)
   68% expected band : 17.6519 < r < 17.6519
   95% expected band : 17.6519 < r < 17.6519
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1421136315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3888 +/- 0.0115677 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3888 @ 95%CL (1 toyMC)
median expected limit: r < 15.3888 @ 95%CL (1 toyMC)
   68% expected band : 15.3888 < r < 15.3888
   95% expected band : 15.3888 < r < 15.3888
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1780058448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4338 +/- 0.0149891 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4338 @ 95%CL (1 toyMC)
median expected limit: r < 15.4338 @ 95%CL (1 toyMC)
   68% expected band : 15.4338 < r < 15.4338
   95% expected band : 15.4338 < r < 15.4338
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -950323502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4018 +/- 0.0110982 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4018 @ 95%CL (1 toyMC)
median expected limit: r < 15.4018 @ 95%CL (1 toyMC)
   68% expected band : 15.4018 < r < 15.4018
   95% expected band : 15.4018 < r < 15.4018
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1858289532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8926 +/- 0.00437184 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.8926 @ 95%CL (1 toyMC)
median expected limit: r < 18.8926 @ 95%CL (1 toyMC)
   68% expected band : 18.8926 < r < 18.8926
   95% expected band : 18.8926 < r < 18.8926
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 951289504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4348 +/- 0.0118232 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4348 @ 95%CL (1 toyMC)
median expected limit: r < 15.4348 @ 95%CL (1 toyMC)
   68% expected band : 15.4348 < r < 15.4348
   95% expected band : 15.4348 < r < 15.4348
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -247589232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4128 +/- 0.0126277 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4128 @ 95%CL (1 toyMC)
median expected limit: r < 15.4128 @ 95%CL (1 toyMC)
   68% expected band : 15.4128 < r < 15.4128
   95% expected band : 15.4128 < r < 15.4128
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1121714512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.861 +/- 0.00658051 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.861 @ 95%CL (1 toyMC)
median expected limit: r < 17.861 @ 95%CL (1 toyMC)
   68% expected band : 17.861 < r < 17.861
   95% expected band : 17.861 < r < 17.861
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1330114496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1189 +/- 0.00731054 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.1189 @ 95%CL (1 toyMC)
median expected limit: r < 17.1189 @ 95%CL (1 toyMC)
   68% expected band : 17.1189 < r < 17.1189
   95% expected band : 17.1189 < r < 17.1189
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 637910208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4321 +/- 0.0132716 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4321 @ 95%CL (1 toyMC)
median expected limit: r < 15.4321 @ 95%CL (1 toyMC)
   68% expected band : 15.4321 < r < 15.4321
   95% expected band : 15.4321 < r < 15.4321
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 223406468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4504 +/- 0.0129041 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4504 @ 95%CL (1 toyMC)
median expected limit: r < 15.4504 @ 95%CL (1 toyMC)
   68% expected band : 15.4504 < r < 15.4504
   95% expected band : 15.4504 < r < 15.4504
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -422610125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3878 +/- 0.0124608 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.3878 @ 95%CL (1 toyMC)
median expected limit: r < 15.3878 @ 95%CL (1 toyMC)
   68% expected band : 15.3878 < r < 15.3878
   95% expected band : 15.3878 < r < 15.3878
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1450822210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4418 +/- 0.0127582 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.4418 @ 95%CL (1 toyMC)
median expected limit: r < 15.4418 @ 95%CL (1 toyMC)
   68% expected band : 15.4418 < r < 15.4418
   95% expected band : 15.4418 < r < 15.4418
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 307711649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4353 +/- 0.0116655 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.4353 @ 95%CL (1 toyMC)
median expected limit: r < 15.4353 @ 95%CL (1 toyMC)
   68% expected band : 15.4353 < r < 15.4353
   95% expected band : 15.4353 < r < 15.4353
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1035008789.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1168095919.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1241738170.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1301437058.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1339361625.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1356385654.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1369987783.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1417515818.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1429890972.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1450822210.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1506847320.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1601552661.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1614514256.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1647674990.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1780058448.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1793223226.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1810697266.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1922350228.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1942694898.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-2023504366.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-2029294048.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-2054207750.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-2115761862.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-245519199.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-246128175.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-247589232.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-263544242.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-289825831.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-331820112.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-417293205.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-422610125.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-470871876.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-479010007.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-508551963.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-543465908.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-619472148.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-635556314.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-666091982.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-68017669.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-770125555.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-777801120.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-843538234.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-89427238.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-922081955.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-950323502.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-995112591.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1006805522.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1016774709.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1121714512.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1266792863.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1328889164.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1330114496.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.137825842.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1397041702.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1421136315.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1445723822.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1491550816.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1619001034.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1682268551.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1689667617.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1751561185.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1762064259.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1772054406.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1789669891.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1834331716.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1858289532.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1889348636.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1918394984.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1951560500.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1958136560.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1991662009.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.2001381436.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.2035217366.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.2055348641.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.2070033130.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.207870633.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2104400519.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.21161135.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2132144847.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.217384032.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.223406468.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.307711649.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.308374429.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.376874729.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.405148178.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.49946048.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.509504426.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.589110642.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.637910208.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.668598039.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.758688166.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.797697076.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.827245633.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.85559545.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.866426182.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.889002930.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.890737253.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.903066496.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.92460730.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.951289504.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1524340388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9206 +/- 0.0119948 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9206 @ 95%CL (1 toyMC)
median expected limit: r < 15.9206 @ 95%CL (1 toyMC)
   68% expected band : 15.9206 < r < 15.9206
   95% expected band : 15.9206 < r < 15.9206
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 385397337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8084 +/- 0.00698095 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.8084 @ 95%CL (1 toyMC)
median expected limit: r < 17.8084 @ 95%CL (1 toyMC)
   68% expected band : 17.8084 < r < 17.8084
   95% expected band : 17.8084 < r < 17.8084
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1073702641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0507 +/- 0.00559431 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.0507 @ 95%CL (1 toyMC)
median expected limit: r < 18.0507 @ 95%CL (1 toyMC)
   68% expected band : 18.0507 < r < 18.0507
   95% expected band : 18.0507 < r < 18.0507
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1286905162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8833 +/- 0.0139582 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8833 @ 95%CL (1 toyMC)
median expected limit: r < 15.8833 @ 95%CL (1 toyMC)
   68% expected band : 15.8833 < r < 15.8833
   95% expected band : 15.8833 < r < 15.8833
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 256834026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9 +/- 0.0115896 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9 @ 95%CL (1 toyMC)
median expected limit: r < 15.9 @ 95%CL (1 toyMC)
   68% expected band : 15.9 < r < 15.9
   95% expected band : 15.9 < r < 15.9
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2125872476
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9054 +/- 0.0105905 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9054 @ 95%CL (1 toyMC)
median expected limit: r < 15.9054 @ 95%CL (1 toyMC)
   68% expected band : 15.9054 < r < 15.9054
   95% expected band : 15.9054 < r < 15.9054
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2073808473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.862 +/- 0.0127301 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.862 @ 95%CL (1 toyMC)
median expected limit: r < 15.862 @ 95%CL (1 toyMC)
   68% expected band : 15.862 < r < 15.862
   95% expected band : 15.862 < r < 15.862
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1406410248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9229 +/- 0.0113512 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9229 @ 95%CL (1 toyMC)
median expected limit: r < 15.9229 @ 95%CL (1 toyMC)
   68% expected band : 15.9229 < r < 15.9229
   95% expected band : 15.9229 < r < 15.9229
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 122290654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8722 +/- 0.0144206 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8722 @ 95%CL (1 toyMC)
median expected limit: r < 15.8722 @ 95%CL (1 toyMC)
   68% expected band : 15.8722 < r < 15.8722
   95% expected band : 15.8722 < r < 15.8722
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 714616052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8689 +/- 0.0121859 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8689 @ 95%CL (1 toyMC)
median expected limit: r < 15.8689 @ 95%CL (1 toyMC)
   68% expected band : 15.8689 < r < 15.8689
   95% expected band : 15.8689 < r < 15.8689
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1426491789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9363 +/- 0.0154875 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.9363 @ 95%CL (1 toyMC)
median expected limit: r < 15.9363 @ 95%CL (1 toyMC)
   68% expected band : 15.9363 < r < 15.9363
   95% expected band : 15.9363 < r < 15.9363
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -101457683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0267 +/- 0.00659508 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.0267 @ 95%CL (1 toyMC)
median expected limit: r < 18.0267 @ 95%CL (1 toyMC)
   68% expected band : 18.0267 < r < 18.0267
   95% expected band : 18.0267 < r < 18.0267
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1338081436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8598 +/- 0.0114173 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8598 @ 95%CL (1 toyMC)
median expected limit: r < 15.8598 @ 95%CL (1 toyMC)
   68% expected band : 15.8598 < r < 15.8598
   95% expected band : 15.8598 < r < 15.8598
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1724429013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8802 +/- 0.0160566 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8802 @ 95%CL (1 toyMC)
median expected limit: r < 15.8802 @ 95%CL (1 toyMC)
   68% expected band : 15.8802 < r < 15.8802
   95% expected band : 15.8802 < r < 15.8802
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1971708057
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9034 +/- 0.0120415 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.9034 @ 95%CL (1 toyMC)
median expected limit: r < 15.9034 @ 95%CL (1 toyMC)
   68% expected band : 15.9034 < r < 15.9034
   95% expected band : 15.9034 < r < 15.9034
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 997735301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8878 +/- 0.0102259 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8878 @ 95%CL (1 toyMC)
median expected limit: r < 15.8878 @ 95%CL (1 toyMC)
   68% expected band : 15.8878 < r < 15.8878
   95% expected band : 15.8878 < r < 15.8878
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 370063114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8828 +/- 0.0109345 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8828 @ 95%CL (1 toyMC)
median expected limit: r < 15.8828 @ 95%CL (1 toyMC)
   68% expected band : 15.8828 < r < 15.8828
   95% expected band : 15.8828 < r < 15.8828
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1015426543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8494 +/- 0.00902249 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8494 @ 95%CL (1 toyMC)
median expected limit: r < 15.8494 @ 95%CL (1 toyMC)
   68% expected band : 15.8494 < r < 15.8494
   95% expected band : 15.8494 < r < 15.8494
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1070943248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9119 +/- 0.0126054 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.9119 @ 95%CL (1 toyMC)
median expected limit: r < 15.9119 @ 95%CL (1 toyMC)
   68% expected band : 15.9119 < r < 15.9119
   95% expected band : 15.9119 < r < 15.9119
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1599712988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4268 +/- 0.007224 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.4268 @ 95%CL (1 toyMC)
median expected limit: r < 17.4268 @ 95%CL (1 toyMC)
   68% expected band : 17.4268 < r < 17.4268
   95% expected band : 17.4268 < r < 17.4268
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1308550171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9009 +/- 0.0119391 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9009 @ 95%CL (1 toyMC)
median expected limit: r < 15.9009 @ 95%CL (1 toyMC)
   68% expected band : 15.9009 < r < 15.9009
   95% expected band : 15.9009 < r < 15.9009
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1797139399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9012 +/- 0.00942353 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.9012 @ 95%CL (1 toyMC)
median expected limit: r < 15.9012 @ 95%CL (1 toyMC)
   68% expected band : 15.9012 < r < 15.9012
   95% expected band : 15.9012 < r < 15.9012
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1584549600
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8952 +/- 0.0110812 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8952 @ 95%CL (1 toyMC)
median expected limit: r < 15.8952 @ 95%CL (1 toyMC)
   68% expected band : 15.8952 < r < 15.8952
   95% expected band : 15.8952 < r < 15.8952
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1021950771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8967 +/- 0.0112596 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8967 @ 95%CL (1 toyMC)
median expected limit: r < 15.8967 @ 95%CL (1 toyMC)
   68% expected band : 15.8967 < r < 15.8967
   95% expected band : 15.8967 < r < 15.8967
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1683095762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8714 +/- 0.0121309 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8714 @ 95%CL (1 toyMC)
median expected limit: r < 15.8714 @ 95%CL (1 toyMC)
   68% expected band : 15.8714 < r < 15.8714
   95% expected band : 15.8714 < r < 15.8714
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2061754706
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.909 +/- 0.013685 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.909 @ 95%CL (1 toyMC)
median expected limit: r < 15.909 @ 95%CL (1 toyMC)
   68% expected band : 15.909 < r < 15.909
   95% expected band : 15.909 < r < 15.909
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1067264958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8977 +/- 0.0107769 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8977 @ 95%CL (1 toyMC)
median expected limit: r < 15.8977 @ 95%CL (1 toyMC)
   68% expected band : 15.8977 < r < 15.8977
   95% expected band : 15.8977 < r < 15.8977
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 462518897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9052 +/- 0.0124782 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.9052 @ 95%CL (1 toyMC)
median expected limit: r < 15.9052 @ 95%CL (1 toyMC)
   68% expected band : 15.9052 < r < 15.9052
   95% expected band : 15.9052 < r < 15.9052
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1377928336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7986 +/- 0.00730402 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7986 @ 95%CL (1 toyMC)
median expected limit: r < 17.7986 @ 95%CL (1 toyMC)
   68% expected band : 17.7986 < r < 17.7986
   95% expected band : 17.7986 < r < 17.7986
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1466768973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.879 +/- 0.0105667 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.879 @ 95%CL (1 toyMC)
median expected limit: r < 15.879 @ 95%CL (1 toyMC)
   68% expected band : 15.879 < r < 15.879
   95% expected band : 15.879 < r < 15.879
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1614707460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8983 +/- 0.010258 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8983 @ 95%CL (1 toyMC)
median expected limit: r < 15.8983 @ 95%CL (1 toyMC)
   68% expected band : 15.8983 < r < 15.8983
   95% expected band : 15.8983 < r < 15.8983
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 629497873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8583 +/- 0.012275 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8583 @ 95%CL (1 toyMC)
median expected limit: r < 15.8583 @ 95%CL (1 toyMC)
   68% expected band : 15.8583 < r < 15.8583
   95% expected band : 15.8583 < r < 15.8583
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1982287998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.878 +/- 0.0129904 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.878 @ 95%CL (1 toyMC)
median expected limit: r < 15.878 @ 95%CL (1 toyMC)
   68% expected band : 15.878 < r < 15.878
   95% expected band : 15.878 < r < 15.878
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -290943344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9276 +/- 0.00923314 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.9276 @ 95%CL (1 toyMC)
median expected limit: r < 15.9276 @ 95%CL (1 toyMC)
   68% expected band : 15.9276 < r < 15.9276
   95% expected band : 15.9276 < r < 15.9276
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2000681116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8836 +/- 0.0132282 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8836 @ 95%CL (1 toyMC)
median expected limit: r < 15.8836 @ 95%CL (1 toyMC)
   68% expected band : 15.8836 < r < 15.8836
   95% expected band : 15.8836 < r < 15.8836
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2010424736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8579 +/- 0.011604 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8579 @ 95%CL (1 toyMC)
median expected limit: r < 15.8579 @ 95%CL (1 toyMC)
   68% expected band : 15.8579 < r < 15.8579
   95% expected band : 15.8579 < r < 15.8579
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1177078261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8803 +/- 0.0141844 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8803 @ 95%CL (1 toyMC)
median expected limit: r < 15.8803 @ 95%CL (1 toyMC)
   68% expected band : 15.8803 < r < 15.8803
   95% expected band : 15.8803 < r < 15.8803
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1420334723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8812 +/- 0.0128903 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8812 @ 95%CL (1 toyMC)
median expected limit: r < 15.8812 @ 95%CL (1 toyMC)
   68% expected band : 15.8812 < r < 15.8812
   95% expected band : 15.8812 < r < 15.8812
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -286463785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9204 +/- 0.0130254 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 15.9204 @ 95%CL (1 toyMC)
median expected limit: r < 15.9204 @ 95%CL (1 toyMC)
   68% expected band : 15.9204 < r < 15.9204
   95% expected band : 15.9204 < r < 15.9204
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1531393972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8864 +/- 0.0102675 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8864 @ 95%CL (1 toyMC)
median expected limit: r < 15.8864 @ 95%CL (1 toyMC)
   68% expected band : 15.8864 < r < 15.8864
   95% expected band : 15.8864 < r < 15.8864
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1097176298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8997 +/- 0.013539 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8997 @ 95%CL (1 toyMC)
median expected limit: r < 15.8997 @ 95%CL (1 toyMC)
   68% expected band : 15.8997 < r < 15.8997
   95% expected band : 15.8997 < r < 15.8997
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1272394498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8901 +/- 0.0110496 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8901 @ 95%CL (1 toyMC)
median expected limit: r < 15.8901 @ 95%CL (1 toyMC)
   68% expected band : 15.8901 < r < 15.8901
   95% expected band : 15.8901 < r < 15.8901
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1610783839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9101 +/- 0.00581756 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9101 @ 95%CL (1 toyMC)
median expected limit: r < 17.9101 @ 95%CL (1 toyMC)
   68% expected band : 17.9101 < r < 17.9101
   95% expected band : 17.9101 < r < 17.9101
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -101633019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8951 +/- 0.0129572 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8951 @ 95%CL (1 toyMC)
median expected limit: r < 15.8951 @ 95%CL (1 toyMC)
   68% expected band : 15.8951 < r < 15.8951
   95% expected band : 15.8951 < r < 15.8951
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 899218860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.877 +/- 0.0124233 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.877 @ 95%CL (1 toyMC)
median expected limit: r < 15.877 @ 95%CL (1 toyMC)
   68% expected band : 15.877 < r < 15.877
   95% expected band : 15.877 < r < 15.877
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1614221965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8725 +/- 0.011669 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8725 @ 95%CL (1 toyMC)
median expected limit: r < 15.8725 @ 95%CL (1 toyMC)
   68% expected band : 15.8725 < r < 15.8725
   95% expected band : 15.8725 < r < 15.8725
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1011013682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9871 +/- 0.00618047 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9871 @ 95%CL (1 toyMC)
median expected limit: r < 17.9871 @ 95%CL (1 toyMC)
   68% expected band : 17.9871 < r < 17.9871
   95% expected band : 17.9871 < r < 17.9871
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1177576201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8792 +/- 0.0128515 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8792 @ 95%CL (1 toyMC)
median expected limit: r < 15.8792 @ 95%CL (1 toyMC)
   68% expected band : 15.8792 < r < 15.8792
   95% expected band : 15.8792 < r < 15.8792
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1818298276
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9127 +/- 0.0125833 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.9127 @ 95%CL (1 toyMC)
median expected limit: r < 15.9127 @ 95%CL (1 toyMC)
   68% expected band : 15.9127 < r < 15.9127
   95% expected band : 15.9127 < r < 15.9127
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 720078351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.996 +/- 0.00626807 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.996 @ 95%CL (1 toyMC)
median expected limit: r < 17.996 @ 95%CL (1 toyMC)
   68% expected band : 17.996 < r < 17.996
   95% expected band : 17.996 < r < 17.996
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 16515977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8544 +/- 0.0118096 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8544 @ 95%CL (1 toyMC)
median expected limit: r < 15.8544 @ 95%CL (1 toyMC)
   68% expected band : 15.8544 < r < 15.8544
   95% expected band : 15.8544 < r < 15.8544
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 921868988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8782 +/- 0.0116617 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8782 @ 95%CL (1 toyMC)
median expected limit: r < 15.8782 @ 95%CL (1 toyMC)
   68% expected band : 15.8782 < r < 15.8782
   95% expected band : 15.8782 < r < 15.8782
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -675288608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8839 +/- 0.0125204 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8839 @ 95%CL (1 toyMC)
median expected limit: r < 15.8839 @ 95%CL (1 toyMC)
   68% expected band : 15.8839 < r < 15.8839
   95% expected band : 15.8839 < r < 15.8839
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 435389802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8653 +/- 0.0126488 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8653 @ 95%CL (1 toyMC)
median expected limit: r < 15.8653 @ 95%CL (1 toyMC)
   68% expected band : 15.8653 < r < 15.8653
   95% expected band : 15.8653 < r < 15.8653
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1357053226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.885 +/- 0.0115133 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.885 @ 95%CL (1 toyMC)
median expected limit: r < 15.885 @ 95%CL (1 toyMC)
   68% expected band : 15.885 < r < 15.885
   95% expected band : 15.885 < r < 15.885
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -756832346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8877 +/- 0.0143702 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8877 @ 95%CL (1 toyMC)
median expected limit: r < 15.8877 @ 95%CL (1 toyMC)
   68% expected band : 15.8877 < r < 15.8877
   95% expected band : 15.8877 < r < 15.8877
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 707261963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4356 +/- 0.00759231 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.4356 @ 95%CL (1 toyMC)
median expected limit: r < 17.4356 @ 95%CL (1 toyMC)
   68% expected band : 17.4356 < r < 17.4356
   95% expected band : 17.4356 < r < 17.4356
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 175643581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1631 +/- 0.00515492 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1631 @ 95%CL (1 toyMC)
median expected limit: r < 18.1631 @ 95%CL (1 toyMC)
   68% expected band : 18.1631 < r < 18.1631
   95% expected band : 18.1631 < r < 18.1631
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1422637539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9032 +/- 0.0123994 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9032 @ 95%CL (1 toyMC)
median expected limit: r < 15.9032 @ 95%CL (1 toyMC)
   68% expected band : 15.9032 < r < 15.9032
   95% expected band : 15.9032 < r < 15.9032
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1926817555
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8739 +/- 0.0129055 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8739 @ 95%CL (1 toyMC)
median expected limit: r < 15.8739 @ 95%CL (1 toyMC)
   68% expected band : 15.8739 < r < 15.8739
   95% expected band : 15.8739 < r < 15.8739
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 766319207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8559 +/- 0.0114429 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8559 @ 95%CL (1 toyMC)
median expected limit: r < 15.8559 @ 95%CL (1 toyMC)
   68% expected band : 15.8559 < r < 15.8559
   95% expected band : 15.8559 < r < 15.8559
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2004611197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8842 +/- 0.0143451 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8842 @ 95%CL (1 toyMC)
median expected limit: r < 15.8842 @ 95%CL (1 toyMC)
   68% expected band : 15.8842 < r < 15.8842
   95% expected band : 15.8842 < r < 15.8842
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -989586686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8784 +/- 0.0123385 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8784 @ 95%CL (1 toyMC)
median expected limit: r < 15.8784 @ 95%CL (1 toyMC)
   68% expected band : 15.8784 < r < 15.8784
   95% expected band : 15.8784 < r < 15.8784
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1092542094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8854 +/- 0.0128433 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8854 @ 95%CL (1 toyMC)
median expected limit: r < 15.8854 @ 95%CL (1 toyMC)
   68% expected band : 15.8854 < r < 15.8854
   95% expected band : 15.8854 < r < 15.8854
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 930145804
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8969 +/- 0.00984932 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8969 @ 95%CL (1 toyMC)
median expected limit: r < 15.8969 @ 95%CL (1 toyMC)
   68% expected band : 15.8969 < r < 15.8969
   95% expected band : 15.8969 < r < 15.8969
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1354943384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8532 +/- 0.0112918 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8532 @ 95%CL (1 toyMC)
median expected limit: r < 15.8532 @ 95%CL (1 toyMC)
   68% expected band : 15.8532 < r < 15.8532
   95% expected band : 15.8532 < r < 15.8532
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1876196976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9059 +/- 0.0098588 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9059 @ 95%CL (1 toyMC)
median expected limit: r < 15.9059 @ 95%CL (1 toyMC)
   68% expected band : 15.9059 < r < 15.9059
   95% expected band : 15.9059 < r < 15.9059
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2060920362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.909 +/- 0.0113845 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.909 @ 95%CL (1 toyMC)
median expected limit: r < 15.909 @ 95%CL (1 toyMC)
   68% expected band : 15.909 < r < 15.909
   95% expected band : 15.909 < r < 15.909
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1637325693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.84 +/- 0.0133022 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.84 @ 95%CL (1 toyMC)
median expected limit: r < 15.84 @ 95%CL (1 toyMC)
   68% expected band : 15.84 < r < 15.84
   95% expected band : 15.84 < r < 15.84
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1446323213
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9046 +/- 0.0106797 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9046 @ 95%CL (1 toyMC)
median expected limit: r < 15.9046 @ 95%CL (1 toyMC)
   68% expected band : 15.9046 < r < 15.9046
   95% expected band : 15.9046 < r < 15.9046
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 806972783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3285 +/- 0.00526463 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3285 @ 95%CL (1 toyMC)
median expected limit: r < 18.3285 @ 95%CL (1 toyMC)
   68% expected band : 18.3285 < r < 18.3285
   95% expected band : 18.3285 < r < 18.3285
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -285624805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0863 +/- 0.00532891 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.0863 @ 95%CL (1 toyMC)
median expected limit: r < 18.0863 @ 95%CL (1 toyMC)
   68% expected band : 18.0863 < r < 18.0863
   95% expected band : 18.0863 < r < 18.0863
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 817217711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9016 +/- 0.00880935 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9016 @ 95%CL (1 toyMC)
median expected limit: r < 15.9016 @ 95%CL (1 toyMC)
   68% expected band : 15.9016 < r < 15.9016
   95% expected band : 15.9016 < r < 15.9016
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -676794767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7442 +/- 0.00655694 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7442 @ 95%CL (1 toyMC)
median expected limit: r < 17.7442 @ 95%CL (1 toyMC)
   68% expected band : 17.7442 < r < 17.7442
   95% expected band : 17.7442 < r < 17.7442
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -531061071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.82 +/- 0.00720554 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.82 @ 95%CL (1 toyMC)
median expected limit: r < 17.82 @ 95%CL (1 toyMC)
   68% expected band : 17.82 < r < 17.82
   95% expected band : 17.82 < r < 17.82
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 477419102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8792 +/- 0.0119934 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8792 @ 95%CL (1 toyMC)
median expected limit: r < 15.8792 @ 95%CL (1 toyMC)
   68% expected band : 15.8792 < r < 15.8792
   95% expected band : 15.8792 < r < 15.8792
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -755686583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0895 +/- 0.00491614 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.0895 @ 95%CL (1 toyMC)
median expected limit: r < 18.0895 @ 95%CL (1 toyMC)
   68% expected band : 18.0895 < r < 18.0895
   95% expected band : 18.0895 < r < 18.0895
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -623118783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9247 +/- 0.00646982 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9247 @ 95%CL (1 toyMC)
median expected limit: r < 17.9247 @ 95%CL (1 toyMC)
   68% expected band : 17.9247 < r < 17.9247
   95% expected band : 17.9247 < r < 17.9247
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2088075630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9143 +/- 0.0112045 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9143 @ 95%CL (1 toyMC)
median expected limit: r < 15.9143 @ 95%CL (1 toyMC)
   68% expected band : 15.9143 < r < 15.9143
   95% expected band : 15.9143 < r < 15.9143
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1231249987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.949 +/- 0.00358165 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.949 @ 95%CL (1 toyMC)
median expected limit: r < 18.949 @ 95%CL (1 toyMC)
   68% expected band : 18.949 < r < 18.949
   95% expected band : 18.949 < r < 18.949
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1053013655
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8696 +/- 0.0136499 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8696 @ 95%CL (1 toyMC)
median expected limit: r < 15.8696 @ 95%CL (1 toyMC)
   68% expected band : 15.8696 < r < 15.8696
   95% expected band : 15.8696 < r < 15.8696
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1720983592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8717 +/- 0.0125838 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8717 @ 95%CL (1 toyMC)
median expected limit: r < 15.8717 @ 95%CL (1 toyMC)
   68% expected band : 15.8717 < r < 15.8717
   95% expected band : 15.8717 < r < 15.8717
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1801136540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.033 +/- 0.0056266 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.033 @ 95%CL (1 toyMC)
median expected limit: r < 18.033 @ 95%CL (1 toyMC)
   68% expected band : 18.033 < r < 18.033
   95% expected band : 18.033 < r < 18.033
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -871693700
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0259 +/- 0.00575025 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.0259 @ 95%CL (1 toyMC)
median expected limit: r < 18.0259 @ 95%CL (1 toyMC)
   68% expected band : 18.0259 < r < 18.0259
   95% expected band : 18.0259 < r < 18.0259
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1445463114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9017 +/- 0.010874 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9017 @ 95%CL (1 toyMC)
median expected limit: r < 15.9017 @ 95%CL (1 toyMC)
   68% expected band : 15.9017 < r < 15.9017
   95% expected band : 15.9017 < r < 15.9017
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1434276506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8635 +/- 0.0131322 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8635 @ 95%CL (1 toyMC)
median expected limit: r < 15.8635 @ 95%CL (1 toyMC)
   68% expected band : 15.8635 < r < 15.8635
   95% expected band : 15.8635 < r < 15.8635
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 119389949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.341 +/- 0.00298454 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 19.341 @ 95%CL (1 toyMC)
median expected limit: r < 19.341 @ 95%CL (1 toyMC)
   68% expected band : 19.341 < r < 19.341
   95% expected band : 19.341 < r < 19.341
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1681417616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8667 +/- 0.0112867 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8667 @ 95%CL (1 toyMC)
median expected limit: r < 15.8667 @ 95%CL (1 toyMC)
   68% expected band : 15.8667 < r < 15.8667
   95% expected band : 15.8667 < r < 15.8667
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 169776839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8555 +/- 0.0119821 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8555 @ 95%CL (1 toyMC)
median expected limit: r < 15.8555 @ 95%CL (1 toyMC)
   68% expected band : 15.8555 < r < 15.8555
   95% expected band : 15.8555 < r < 15.8555
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 671890405
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8959 +/- 0.0112778 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8959 @ 95%CL (1 toyMC)
median expected limit: r < 15.8959 @ 95%CL (1 toyMC)
   68% expected band : 15.8959 < r < 15.8959
   95% expected band : 15.8959 < r < 15.8959
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1017725595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8665 +/- 0.0124622 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8665 @ 95%CL (1 toyMC)
median expected limit: r < 15.8665 @ 95%CL (1 toyMC)
   68% expected band : 15.8665 < r < 15.8665
   95% expected band : 15.8665 < r < 15.8665
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1979357344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8845 +/- 0.0120309 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8845 @ 95%CL (1 toyMC)
median expected limit: r < 15.8845 @ 95%CL (1 toyMC)
   68% expected band : 15.8845 < r < 15.8845
   95% expected band : 15.8845 < r < 15.8845
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -903364962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8624 +/- 0.0119768 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8624 @ 95%CL (1 toyMC)
median expected limit: r < 15.8624 @ 95%CL (1 toyMC)
   68% expected band : 15.8624 < r < 15.8624
   95% expected band : 15.8624 < r < 15.8624
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 814353594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9872 +/- 0.00558928 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9872 @ 95%CL (1 toyMC)
median expected limit: r < 17.9872 @ 95%CL (1 toyMC)
   68% expected band : 17.9872 < r < 17.9872
   95% expected band : 17.9872 < r < 17.9872
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -894795315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2533 +/- 0.00318358 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 19.2533 @ 95%CL (1 toyMC)
median expected limit: r < 19.2533 @ 95%CL (1 toyMC)
   68% expected band : 19.2533 < r < 19.2533
   95% expected band : 19.2533 < r < 19.2533
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1915118247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8916 +/- 0.0138293 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8916 @ 95%CL (1 toyMC)
median expected limit: r < 15.8916 @ 95%CL (1 toyMC)
   68% expected band : 15.8916 < r < 15.8916
   95% expected band : 15.8916 < r < 15.8916
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1577828348
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8841 +/- 0.0105713 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8841 @ 95%CL (1 toyMC)
median expected limit: r < 15.8841 @ 95%CL (1 toyMC)
   68% expected band : 15.8841 < r < 15.8841
   95% expected band : 15.8841 < r < 15.8841
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -26006926
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0202 +/- 0.0051743 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.0202 @ 95%CL (1 toyMC)
median expected limit: r < 18.0202 @ 95%CL (1 toyMC)
   68% expected band : 18.0202 < r < 18.0202
   95% expected band : 18.0202 < r < 18.0202
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 956844143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7854 +/- 0.00695963 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7854 @ 95%CL (1 toyMC)
median expected limit: r < 17.7854 @ 95%CL (1 toyMC)
   68% expected band : 17.7854 < r < 17.7854
   95% expected band : 17.7854 < r < 17.7854
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1042155872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9181 +/- 0.0128129 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9181 @ 95%CL (1 toyMC)
median expected limit: r < 15.9181 @ 95%CL (1 toyMC)
   68% expected band : 15.9181 < r < 15.9181
   95% expected band : 15.9181 < r < 15.9181
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1011013682.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-101457683.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1015426543.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-101633019.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1017725595.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1021950771.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1073702641.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1092542094.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1177078261.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1177576201.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1231249987.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1308550171.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1338081436.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1357053226.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1406410248.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1422637539.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1434276506.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1446323213.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1524340388.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1577828348.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1584549600.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1599712988.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1610783839.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1614221965.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1801136540.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1818298276.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1971708057.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-2010424736.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2060920362.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-2125872476.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-26006926.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-285624805.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-286463785.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-290943344.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-531061071.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-623118783.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-675288608.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-676794767.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-755686583.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-756832346.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-871693700.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-894795315.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-903364962.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-989586686.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.1042155872.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.1053013655.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.1067264958.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.1070943248.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1097176298.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.119389949.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.122290654.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1272394498.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1286905162.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1354943384.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1377928336.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1420334723.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1426491789.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1445463114.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1466768973.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1531393972.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1614707460.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1637325693.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.16515977.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1681417616.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1683095762.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.169776839.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1720983592.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1724429013.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.175643581.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1797139399.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1876196976.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1915118247.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1926817555.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1979357344.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1982287998.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.2000681116.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.2004611197.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.2061754706.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.2073808473.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2088075630.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.256834026.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.370063114.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.385397337.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.435389802.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.462518897.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.477419102.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.629497873.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.671890405.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.707261963.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.714616052.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.720078351.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.766319207.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.806972783.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.814353594.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.817217711.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.899218860.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.921868988.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.930145804.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.956844143.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.997735301.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1702243767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3912 +/- 0.00993627 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3912 @ 95%CL (1 toyMC)
median expected limit: r < 16.3912 @ 95%CL (1 toyMC)
   68% expected band : 16.3912 < r < 16.3912
   95% expected band : 16.3912 < r < 16.3912
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1472756545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3092 +/- 0.00578766 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.3092 @ 95%CL (1 toyMC)
median expected limit: r < 18.3092 @ 95%CL (1 toyMC)
   68% expected band : 18.3092 < r < 18.3092
   95% expected band : 18.3092 < r < 18.3092
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1830540393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2418 +/- 0.00581904 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.2418 @ 95%CL (1 toyMC)
median expected limit: r < 18.2418 @ 95%CL (1 toyMC)
   68% expected band : 18.2418 < r < 18.2418
   95% expected band : 18.2418 < r < 18.2418
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -680160050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3887 +/- 0.0126771 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3887 @ 95%CL (1 toyMC)
median expected limit: r < 16.3887 @ 95%CL (1 toyMC)
   68% expected band : 16.3887 < r < 16.3887
   95% expected band : 16.3887 < r < 16.3887
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1577891606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3925 +/- 0.0123108 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3925 @ 95%CL (1 toyMC)
median expected limit: r < 16.3925 @ 95%CL (1 toyMC)
   68% expected band : 16.3925 < r < 16.3925
   95% expected band : 16.3925 < r < 16.3925
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1269596181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4172 +/- 0.00892404 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4172 @ 95%CL (1 toyMC)
median expected limit: r < 16.4172 @ 95%CL (1 toyMC)
   68% expected band : 16.4172 < r < 16.4172
   95% expected band : 16.4172 < r < 16.4172
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1696718387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4181 +/- 0.0102602 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4181 @ 95%CL (1 toyMC)
median expected limit: r < 16.4181 @ 95%CL (1 toyMC)
   68% expected band : 16.4181 < r < 16.4181
   95% expected band : 16.4181 < r < 16.4181
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1062014667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0903 +/- 0.00491074 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.0903 @ 95%CL (1 toyMC)
median expected limit: r < 18.0903 @ 95%CL (1 toyMC)
   68% expected band : 18.0903 < r < 18.0903
   95% expected band : 18.0903 < r < 18.0903
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 334990704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4157 +/- 0.00531657 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4157 @ 95%CL (1 toyMC)
median expected limit: r < 18.4157 @ 95%CL (1 toyMC)
   68% expected band : 18.4157 < r < 18.4157
   95% expected band : 18.4157 < r < 18.4157
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1818217736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3951 +/- 0.010215 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3951 @ 95%CL (1 toyMC)
median expected limit: r < 16.3951 @ 95%CL (1 toyMC)
   68% expected band : 16.3951 < r < 16.3951
   95% expected band : 16.3951 < r < 16.3951
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 437925755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4176 +/- 0.0121065 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4176 @ 95%CL (1 toyMC)
median expected limit: r < 16.4176 @ 95%CL (1 toyMC)
   68% expected band : 16.4176 < r < 16.4176
   95% expected band : 16.4176 < r < 16.4176
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -221578089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4028 +/- 0.00958769 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4028 @ 95%CL (1 toyMC)
median expected limit: r < 16.4028 @ 95%CL (1 toyMC)
   68% expected band : 16.4028 < r < 16.4028
   95% expected band : 16.4028 < r < 16.4028
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -174580487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0731 +/- 0.00617604 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.0731 @ 95%CL (1 toyMC)
median expected limit: r < 18.0731 @ 95%CL (1 toyMC)
   68% expected band : 18.0731 < r < 18.0731
   95% expected band : 18.0731 < r < 18.0731
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1606778448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4013 +/- 0.0115962 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4013 @ 95%CL (1 toyMC)
median expected limit: r < 16.4013 @ 95%CL (1 toyMC)
   68% expected band : 16.4013 < r < 16.4013
   95% expected band : 16.4013 < r < 16.4013
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1570177351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4264 +/- 0.0122214 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4264 @ 95%CL (1 toyMC)
median expected limit: r < 16.4264 @ 95%CL (1 toyMC)
   68% expected band : 16.4264 < r < 16.4264
   95% expected band : 16.4264 < r < 16.4264
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2095230053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4112 +/- 0.0100123 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4112 @ 95%CL (1 toyMC)
median expected limit: r < 16.4112 @ 95%CL (1 toyMC)
   68% expected band : 16.4112 < r < 16.4112
   95% expected band : 16.4112 < r < 16.4112
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2123634252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4097 +/- 0.0120037 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4097 @ 95%CL (1 toyMC)
median expected limit: r < 16.4097 @ 95%CL (1 toyMC)
   68% expected band : 16.4097 < r < 16.4097
   95% expected band : 16.4097 < r < 16.4097
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 400917370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4111 +/- 0.009762 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4111 @ 95%CL (1 toyMC)
median expected limit: r < 16.4111 @ 95%CL (1 toyMC)
   68% expected band : 16.4111 < r < 16.4111
   95% expected band : 16.4111 < r < 16.4111
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 179795918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4222 +/- 0.0110452 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4222 @ 95%CL (1 toyMC)
median expected limit: r < 16.4222 @ 95%CL (1 toyMC)
   68% expected band : 16.4222 < r < 16.4222
   95% expected band : 16.4222 < r < 16.4222
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -398025553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.391 +/- 0.0110694 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.391 @ 95%CL (1 toyMC)
median expected limit: r < 16.391 @ 95%CL (1 toyMC)
   68% expected band : 16.391 < r < 16.391
   95% expected band : 16.391 < r < 16.391
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1978288701
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2413 +/- 0.00602645 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.2413 @ 95%CL (1 toyMC)
median expected limit: r < 18.2413 @ 95%CL (1 toyMC)
   68% expected band : 18.2413 < r < 18.2413
   95% expected band : 18.2413 < r < 18.2413
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2108191347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3846 +/- 0.00923083 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3846 @ 95%CL (1 toyMC)
median expected limit: r < 16.3846 @ 95%CL (1 toyMC)
   68% expected band : 16.3846 < r < 16.3846
   95% expected band : 16.3846 < r < 16.3846
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -900620292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2737 +/- 0.0047812 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.2737 @ 95%CL (1 toyMC)
median expected limit: r < 18.2737 @ 95%CL (1 toyMC)
   68% expected band : 18.2737 < r < 18.2737
   95% expected band : 18.2737 < r < 18.2737
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1350539054
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4337 +/- 0.0118963 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4337 @ 95%CL (1 toyMC)
median expected limit: r < 16.4337 @ 95%CL (1 toyMC)
   68% expected band : 16.4337 < r < 16.4337
   95% expected band : 16.4337 < r < 16.4337
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1366423786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3883 +/- 0.00967186 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3883 @ 95%CL (1 toyMC)
median expected limit: r < 16.3883 @ 95%CL (1 toyMC)
   68% expected band : 16.3883 < r < 16.3883
   95% expected band : 16.3883 < r < 16.3883
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -457340091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3818 +/- 0.00525276 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3818 @ 95%CL (1 toyMC)
median expected limit: r < 18.3818 @ 95%CL (1 toyMC)
   68% expected band : 18.3818 < r < 18.3818
   95% expected band : 18.3818 < r < 18.3818
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1695797686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4139 +/- 0.0123274 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4139 @ 95%CL (1 toyMC)
median expected limit: r < 16.4139 @ 95%CL (1 toyMC)
   68% expected band : 16.4139 < r < 16.4139
   95% expected band : 16.4139 < r < 16.4139
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -957887346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4061 +/- 0.011872 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4061 @ 95%CL (1 toyMC)
median expected limit: r < 16.4061 @ 95%CL (1 toyMC)
   68% expected band : 16.4061 < r < 16.4061
   95% expected band : 16.4061 < r < 16.4061
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 596231611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3692 +/- 0.00904805 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3692 @ 95%CL (1 toyMC)
median expected limit: r < 16.3692 @ 95%CL (1 toyMC)
   68% expected band : 16.3692 < r < 16.3692
   95% expected band : 16.3692 < r < 16.3692
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1905893664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4253 +/- 0.00884597 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4253 @ 95%CL (1 toyMC)
median expected limit: r < 16.4253 @ 95%CL (1 toyMC)
   68% expected band : 16.4253 < r < 16.4253
   95% expected band : 16.4253 < r < 16.4253
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1716328190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4422 +/- 0.0105262 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4422 @ 95%CL (1 toyMC)
median expected limit: r < 16.4422 @ 95%CL (1 toyMC)
   68% expected band : 16.4422 < r < 16.4422
   95% expected band : 16.4422 < r < 16.4422
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1229373588
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4136 +/- 0.0105471 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 16.4136 @ 95%CL (1 toyMC)
median expected limit: r < 16.4136 @ 95%CL (1 toyMC)
   68% expected band : 16.4136 < r < 16.4136
   95% expected band : 16.4136 < r < 16.4136
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1712323686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3922 +/- 0.00868601 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3922 @ 95%CL (1 toyMC)
median expected limit: r < 16.3922 @ 95%CL (1 toyMC)
   68% expected band : 16.3922 < r < 16.3922
   95% expected band : 16.3922 < r < 16.3922
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -43230518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3691 +/- 0.0100475 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3691 @ 95%CL (1 toyMC)
median expected limit: r < 16.3691 @ 95%CL (1 toyMC)
   68% expected band : 16.3691 < r < 16.3691
   95% expected band : 16.3691 < r < 16.3691
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1337472730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4087 +/- 0.00990242 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.4087 @ 95%CL (1 toyMC)
median expected limit: r < 16.4087 @ 95%CL (1 toyMC)
   68% expected band : 16.4087 < r < 16.4087
   95% expected band : 16.4087 < r < 16.4087
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -817976162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4072 +/- 0.0125206 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4072 @ 95%CL (1 toyMC)
median expected limit: r < 16.4072 @ 95%CL (1 toyMC)
   68% expected band : 16.4072 < r < 16.4072
   95% expected band : 16.4072 < r < 16.4072
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -106480507
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3881 +/- 0.0125006 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3881 @ 95%CL (1 toyMC)
median expected limit: r < 16.3881 @ 95%CL (1 toyMC)
   68% expected band : 16.3881 < r < 16.3881
   95% expected band : 16.3881 < r < 16.3881
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1994960321
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0855 +/- 0.00495148 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.0855 @ 95%CL (1 toyMC)
median expected limit: r < 18.0855 @ 95%CL (1 toyMC)
   68% expected band : 18.0855 < r < 18.0855
   95% expected band : 18.0855 < r < 18.0855
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1499553196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4195 +/- 0.0124 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4195 @ 95%CL (1 toyMC)
median expected limit: r < 16.4195 @ 95%CL (1 toyMC)
   68% expected band : 16.4195 < r < 16.4195
   95% expected band : 16.4195 < r < 16.4195
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1146055918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3884 +/- 0.0128339 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3884 @ 95%CL (1 toyMC)
median expected limit: r < 16.3884 @ 95%CL (1 toyMC)
   68% expected band : 16.3884 < r < 16.3884
   95% expected band : 16.3884 < r < 16.3884
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1323016850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4028 +/- 0.0113058 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.4028 @ 95%CL (1 toyMC)
median expected limit: r < 16.4028 @ 95%CL (1 toyMC)
   68% expected band : 16.4028 < r < 16.4028
   95% expected band : 16.4028 < r < 16.4028
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1747711062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3812 +/- 0.0102289 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3812 @ 95%CL (1 toyMC)
median expected limit: r < 16.3812 @ 95%CL (1 toyMC)
   68% expected band : 16.3812 < r < 16.3812
   95% expected band : 16.3812 < r < 16.3812
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -547881573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4112 +/- 0.00911673 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4112 @ 95%CL (1 toyMC)
median expected limit: r < 16.4112 @ 95%CL (1 toyMC)
   68% expected band : 16.4112 < r < 16.4112
   95% expected band : 16.4112 < r < 16.4112
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1886103604
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4027 +/- 0.0105296 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4027 @ 95%CL (1 toyMC)
median expected limit: r < 16.4027 @ 95%CL (1 toyMC)
   68% expected band : 16.4027 < r < 16.4027
   95% expected band : 16.4027 < r < 16.4027
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 935660008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3934 +/- 0.0113118 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3934 @ 95%CL (1 toyMC)
median expected limit: r < 16.3934 @ 95%CL (1 toyMC)
   68% expected band : 16.3934 < r < 16.3934
   95% expected band : 16.3934 < r < 16.3934
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1199457361
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4196 +/- 0.00976727 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 16.4196 @ 95%CL (1 toyMC)
median expected limit: r < 16.4196 @ 95%CL (1 toyMC)
   68% expected band : 16.4196 < r < 16.4196
   95% expected band : 16.4196 < r < 16.4196
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1720612158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4434 +/- 0.010145 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4434 @ 95%CL (1 toyMC)
median expected limit: r < 16.4434 @ 95%CL (1 toyMC)
   68% expected band : 16.4434 < r < 16.4434
   95% expected band : 16.4434 < r < 16.4434
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1516470881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4039 +/- 0.0107189 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4039 @ 95%CL (1 toyMC)
median expected limit: r < 16.4039 @ 95%CL (1 toyMC)
   68% expected band : 16.4039 < r < 16.4039
   95% expected band : 16.4039 < r < 16.4039
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1814432230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3547 +/- 0.00476163 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.3547 @ 95%CL (1 toyMC)
median expected limit: r < 18.3547 @ 95%CL (1 toyMC)
   68% expected band : 18.3547 < r < 18.3547
   95% expected band : 18.3547 < r < 18.3547
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1201014026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3956 +/- 0.0119982 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3956 @ 95%CL (1 toyMC)
median expected limit: r < 16.3956 @ 95%CL (1 toyMC)
   68% expected band : 16.3956 < r < 16.3956
   95% expected band : 16.3956 < r < 16.3956
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 440835089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4125 +/- 0.00998861 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4125 @ 95%CL (1 toyMC)
median expected limit: r < 16.4125 @ 95%CL (1 toyMC)
   68% expected band : 16.4125 < r < 16.4125
   95% expected band : 16.4125 < r < 16.4125
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1800218257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4162 +/- 0.0115141 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4162 @ 95%CL (1 toyMC)
median expected limit: r < 16.4162 @ 95%CL (1 toyMC)
   68% expected band : 16.4162 < r < 16.4162
   95% expected band : 16.4162 < r < 16.4162
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2000371373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4348 +/- 0.00964383 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4348 @ 95%CL (1 toyMC)
median expected limit: r < 16.4348 @ 95%CL (1 toyMC)
   68% expected band : 16.4348 < r < 16.4348
   95% expected band : 16.4348 < r < 16.4348
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -73891594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5241 +/- 0.00521516 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5241 @ 95%CL (1 toyMC)
median expected limit: r < 18.5241 @ 95%CL (1 toyMC)
   68% expected band : 18.5241 < r < 18.5241
   95% expected band : 18.5241 < r < 18.5241
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1352715791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3838 +/- 0.00953871 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3838 @ 95%CL (1 toyMC)
median expected limit: r < 16.3838 @ 95%CL (1 toyMC)
   68% expected band : 16.3838 < r < 16.3838
   95% expected band : 16.3838 < r < 16.3838
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 746517803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3895 +/- 0.0105774 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.3895 @ 95%CL (1 toyMC)
median expected limit: r < 16.3895 @ 95%CL (1 toyMC)
   68% expected band : 16.3895 < r < 16.3895
   95% expected band : 16.3895 < r < 16.3895
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1678304244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4198 +/- 0.00859582 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4198 @ 95%CL (1 toyMC)
median expected limit: r < 16.4198 @ 95%CL (1 toyMC)
   68% expected band : 16.4198 < r < 16.4198
   95% expected band : 16.4198 < r < 16.4198
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 371100603
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.396 +/- 0.0118916 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 16.396 @ 95%CL (1 toyMC)
median expected limit: r < 16.396 @ 95%CL (1 toyMC)
   68% expected band : 16.396 < r < 16.396
   95% expected band : 16.396 < r < 16.396
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1754979499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3793 +/- 0.0113936 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3793 @ 95%CL (1 toyMC)
median expected limit: r < 16.3793 @ 95%CL (1 toyMC)
   68% expected band : 16.3793 < r < 16.3793
   95% expected band : 16.3793 < r < 16.3793
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -621721241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4082 +/- 0.0113525 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4082 @ 95%CL (1 toyMC)
median expected limit: r < 16.4082 @ 95%CL (1 toyMC)
   68% expected band : 16.4082 < r < 16.4082
   95% expected band : 16.4082 < r < 16.4082
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -165362018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4168 +/- 0.00867037 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4168 @ 95%CL (1 toyMC)
median expected limit: r < 16.4168 @ 95%CL (1 toyMC)
   68% expected band : 16.4168 < r < 16.4168
   95% expected band : 16.4168 < r < 16.4168
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -78467317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3955 +/- 0.0102893 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3955 @ 95%CL (1 toyMC)
median expected limit: r < 16.3955 @ 95%CL (1 toyMC)
   68% expected band : 16.3955 < r < 16.3955
   95% expected band : 16.3955 < r < 16.3955
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 744998568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4299 +/- 0.00696215 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4299 @ 95%CL (1 toyMC)
median expected limit: r < 16.4299 @ 95%CL (1 toyMC)
   68% expected band : 16.4299 < r < 16.4299
   95% expected band : 16.4299 < r < 16.4299
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1371898149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3904 +/- 0.0120391 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3904 @ 95%CL (1 toyMC)
median expected limit: r < 16.3904 @ 95%CL (1 toyMC)
   68% expected band : 16.3904 < r < 16.3904
   95% expected band : 16.3904 < r < 16.3904
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1954096626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4314 +/- 0.0115927 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4314 @ 95%CL (1 toyMC)
median expected limit: r < 16.4314 @ 95%CL (1 toyMC)
   68% expected band : 16.4314 < r < 16.4314
   95% expected band : 16.4314 < r < 16.4314
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2052224519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3776 +/- 0.0104171 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3776 @ 95%CL (1 toyMC)
median expected limit: r < 16.3776 @ 95%CL (1 toyMC)
   68% expected band : 16.3776 < r < 16.3776
   95% expected band : 16.3776 < r < 16.3776
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 479836550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4004 +/- 0.00937266 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4004 @ 95%CL (1 toyMC)
median expected limit: r < 16.4004 @ 95%CL (1 toyMC)
   68% expected band : 16.4004 < r < 16.4004
   95% expected band : 16.4004 < r < 16.4004
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1739052692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3981 +/- 0.0125283 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3981 @ 95%CL (1 toyMC)
median expected limit: r < 16.3981 @ 95%CL (1 toyMC)
   68% expected band : 16.3981 < r < 16.3981
   95% expected band : 16.3981 < r < 16.3981
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1068573756
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3904 +/- 0.0114566 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 16.3904 @ 95%CL (1 toyMC)
median expected limit: r < 16.3904 @ 95%CL (1 toyMC)
   68% expected band : 16.3904 < r < 16.3904
   95% expected band : 16.3904 < r < 16.3904
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1243930725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3966 +/- 0.00843177 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3966 @ 95%CL (1 toyMC)
median expected limit: r < 16.3966 @ 95%CL (1 toyMC)
   68% expected band : 16.3966 < r < 16.3966
   95% expected band : 16.3966 < r < 16.3966
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 299956028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4149 +/- 0.00865883 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4149 @ 95%CL (1 toyMC)
median expected limit: r < 16.4149 @ 95%CL (1 toyMC)
   68% expected band : 16.4149 < r < 16.4149
   95% expected band : 16.4149 < r < 16.4149
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1967422079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3728 +/- 0.00860028 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3728 @ 95%CL (1 toyMC)
median expected limit: r < 16.3728 @ 95%CL (1 toyMC)
   68% expected band : 16.3728 < r < 16.3728
   95% expected band : 16.3728 < r < 16.3728
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1969016963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.397 +/- 0.0102988 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.397 @ 95%CL (1 toyMC)
median expected limit: r < 16.397 @ 95%CL (1 toyMC)
   68% expected band : 16.397 < r < 16.397
   95% expected band : 16.397 < r < 16.397
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 494042977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3919 +/- 0.0121057 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3919 @ 95%CL (1 toyMC)
median expected limit: r < 16.3919 @ 95%CL (1 toyMC)
   68% expected band : 16.3919 < r < 16.3919
   95% expected band : 16.3919 < r < 16.3919
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -599325572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3909 +/- 0.0106462 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3909 @ 95%CL (1 toyMC)
median expected limit: r < 16.3909 @ 95%CL (1 toyMC)
   68% expected band : 16.3909 < r < 16.3909
   95% expected band : 16.3909 < r < 16.3909
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -723756407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4126 +/- 0.0105719 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.4126 @ 95%CL (1 toyMC)
median expected limit: r < 16.4126 @ 95%CL (1 toyMC)
   68% expected band : 16.4126 < r < 16.4126
   95% expected band : 16.4126 < r < 16.4126
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1361349215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3975 +/- 0.0113548 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3975 @ 95%CL (1 toyMC)
median expected limit: r < 16.3975 @ 95%CL (1 toyMC)
   68% expected band : 16.3975 < r < 16.3975
   95% expected band : 16.3975 < r < 16.3975
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -690564161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2628 +/- 0.00505562 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.2628 @ 95%CL (1 toyMC)
median expected limit: r < 18.2628 @ 95%CL (1 toyMC)
   68% expected band : 18.2628 < r < 18.2628
   95% expected band : 18.2628 < r < 18.2628
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1897889305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4209 +/- 0.0105253 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4209 @ 95%CL (1 toyMC)
median expected limit: r < 16.4209 @ 95%CL (1 toyMC)
   68% expected band : 16.4209 < r < 16.4209
   95% expected band : 16.4209 < r < 16.4209
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -665868690
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3905 +/- 0.0131879 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3905 @ 95%CL (1 toyMC)
median expected limit: r < 16.3905 @ 95%CL (1 toyMC)
   68% expected band : 16.3905 < r < 16.3905
   95% expected band : 16.3905 < r < 16.3905
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1601898552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3887 +/- 0.0098011 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3887 @ 95%CL (1 toyMC)
median expected limit: r < 16.3887 @ 95%CL (1 toyMC)
   68% expected band : 16.3887 < r < 16.3887
   95% expected band : 16.3887 < r < 16.3887
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -53159775
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4186 +/- 0.00474589 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4186 @ 95%CL (1 toyMC)
median expected limit: r < 18.4186 @ 95%CL (1 toyMC)
   68% expected band : 18.4186 < r < 18.4186
   95% expected band : 18.4186 < r < 18.4186
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 388691638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3933 +/- 0.00904752 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3933 @ 95%CL (1 toyMC)
median expected limit: r < 16.3933 @ 95%CL (1 toyMC)
   68% expected band : 16.3933 < r < 16.3933
   95% expected band : 16.3933 < r < 16.3933
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -311411889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4176 +/- 0.0139531 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4176 @ 95%CL (1 toyMC)
median expected limit: r < 16.4176 @ 95%CL (1 toyMC)
   68% expected band : 16.4176 < r < 16.4176
   95% expected band : 16.4176 < r < 16.4176
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1456820080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4091 +/- 0.0102555 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4091 @ 95%CL (1 toyMC)
median expected limit: r < 16.4091 @ 95%CL (1 toyMC)
   68% expected band : 16.4091 < r < 16.4091
   95% expected band : 16.4091 < r < 16.4091
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1850880294
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.388 +/- 0.0116349 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.388 @ 95%CL (1 toyMC)
median expected limit: r < 16.388 @ 95%CL (1 toyMC)
   68% expected band : 16.388 < r < 16.388
   95% expected band : 16.388 < r < 16.388
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1016467965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3564 +/- 0.00435128 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3564 @ 95%CL (1 toyMC)
median expected limit: r < 18.3564 @ 95%CL (1 toyMC)
   68% expected band : 18.3564 < r < 18.3564
   95% expected band : 18.3564 < r < 18.3564
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 868650636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4368 +/- 0.0113186 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.4368 @ 95%CL (1 toyMC)
median expected limit: r < 16.4368 @ 95%CL (1 toyMC)
   68% expected band : 16.4368 < r < 16.4368
   95% expected band : 16.4368 < r < 16.4368
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1846945833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4133 +/- 0.0104219 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4133 @ 95%CL (1 toyMC)
median expected limit: r < 16.4133 @ 95%CL (1 toyMC)
   68% expected band : 16.4133 < r < 16.4133
   95% expected band : 16.4133 < r < 16.4133
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1932048368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3955 +/- 0.011568 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3955 @ 95%CL (1 toyMC)
median expected limit: r < 16.3955 @ 95%CL (1 toyMC)
   68% expected band : 16.3955 < r < 16.3955
   95% expected band : 16.3955 < r < 16.3955
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 176727860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4112 +/- 0.0110049 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4112 @ 95%CL (1 toyMC)
median expected limit: r < 16.4112 @ 95%CL (1 toyMC)
   68% expected band : 16.4112 < r < 16.4112
   95% expected band : 16.4112 < r < 16.4112
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2044853162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4339 +/- 0.0127368 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.4339 @ 95%CL (1 toyMC)
median expected limit: r < 16.4339 @ 95%CL (1 toyMC)
   68% expected band : 16.4339 < r < 16.4339
   95% expected band : 16.4339 < r < 16.4339
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1166666747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3895 +/- 0.0099347 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.3895 @ 95%CL (1 toyMC)
median expected limit: r < 16.3895 @ 95%CL (1 toyMC)
   68% expected band : 16.3895 < r < 16.3895
   95% expected band : 16.3895 < r < 16.3895
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -255032544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4266 +/- 0.0119595 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4266 @ 95%CL (1 toyMC)
median expected limit: r < 16.4266 @ 95%CL (1 toyMC)
   68% expected band : 16.4266 < r < 16.4266
   95% expected band : 16.4266 < r < 16.4266
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1257403961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0906 +/- 0.00490507 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.0906 @ 95%CL (1 toyMC)
median expected limit: r < 18.0906 @ 95%CL (1 toyMC)
   68% expected band : 18.0906 < r < 18.0906
   95% expected band : 18.0906 < r < 18.0906
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -506257961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5395 +/- 0.0045736 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.5395 @ 95%CL (1 toyMC)
median expected limit: r < 18.5395 @ 95%CL (1 toyMC)
   68% expected band : 18.5395 < r < 18.5395
   95% expected band : 18.5395 < r < 18.5395
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 439329157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2343 +/- 0.00456454 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.2343 @ 95%CL (1 toyMC)
median expected limit: r < 18.2343 @ 95%CL (1 toyMC)
   68% expected band : 18.2343 < r < 18.2343
   95% expected band : 18.2343 < r < 18.2343
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -226541355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4235 +/- 0.0121153 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4235 @ 95%CL (1 toyMC)
median expected limit: r < 16.4235 @ 95%CL (1 toyMC)
   68% expected band : 16.4235 < r < 16.4235
   95% expected band : 16.4235 < r < 16.4235
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1221667656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4047 +/- 0.00968488 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.4047 @ 95%CL (1 toyMC)
median expected limit: r < 16.4047 @ 95%CL (1 toyMC)
   68% expected band : 16.4047 < r < 16.4047
   95% expected band : 16.4047 < r < 16.4047
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1892632229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3962 +/- 0.00935752 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.3962 @ 95%CL (1 toyMC)
median expected limit: r < 16.3962 @ 95%CL (1 toyMC)
   68% expected band : 16.3962 < r < 16.3962
   95% expected band : 16.3962 < r < 16.3962
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-106480507.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1146055918.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1166666747.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1201014026.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1229373588.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1243930725.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1269596181.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1337472730.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1361349215.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1472756545.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1570177351.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1577891606.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1601898552.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1606778448.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-165362018.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1696718387.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1702243767.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1712323686.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1716328190.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1720612158.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1739052692.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-174580487.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1747711062.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1814432230.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1830540393.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1886103604.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1905893664.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1954096626.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-1967422079.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-2000371373.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-2095230053.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-2108191347.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-2123634252.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-221578089.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-226541355.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-255032544.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-311411889.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-398025553.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-43230518.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-457340091.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-506257961.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-53159775.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-547881573.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-599325572.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-621721241.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-665868690.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-680160050.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-690564161.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-723756407.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.-73891594.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.-78467317.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.-817976162.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.-900620292.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.-957887346.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1016467965.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1062014667.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1068573756.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1199457361.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1221667656.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1257403961.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1323016850.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1350539054.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1352715791.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1366423786.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1371898149.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1456820080.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1499553196.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1516470881.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1678304244.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1695797686.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1754979499.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.176727860.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.179795918.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1800218257.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1818217736.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1846945833.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1850880294.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1892632229.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1897889305.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.1932048368.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.1969016963.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.1978288701.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.1994960321.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.2044853162.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.2052224519.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.299956028.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.334990704.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.371100603.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.388691638.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.400917370.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.437925755.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.439329157.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.440835089.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.479836550.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.494042977.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.596231611.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.744998568.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.746517803.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.868650636.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.935660008.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 449285290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6948 +/- 0.0106939 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6948 @ 95%CL (1 toyMC)
median expected limit: r < 16.6948 @ 95%CL (1 toyMC)
   68% expected band : 16.6948 < r < 16.6948
   95% expected band : 16.6948 < r < 16.6948
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -669024737
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6714 +/- 0.0102951 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6714 @ 95%CL (1 toyMC)
median expected limit: r < 16.6714 @ 95%CL (1 toyMC)
   68% expected band : 16.6714 < r < 16.6714
   95% expected band : 16.6714 < r < 16.6714
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1742094643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6854 +/- 0.0084291 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6854 @ 95%CL (1 toyMC)
median expected limit: r < 16.6854 @ 95%CL (1 toyMC)
   68% expected band : 16.6854 < r < 16.6854
   95% expected band : 16.6854 < r < 16.6854
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2010881572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6848 +/- 0.0104688 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6848 @ 95%CL (1 toyMC)
median expected limit: r < 16.6848 @ 95%CL (1 toyMC)
   68% expected band : 16.6848 < r < 16.6848
   95% expected band : 16.6848 < r < 16.6848
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 782208326
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6944 +/- 0.0104346 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6944 @ 95%CL (1 toyMC)
median expected limit: r < 16.6944 @ 95%CL (1 toyMC)
   68% expected band : 16.6944 < r < 16.6944
   95% expected band : 16.6944 < r < 16.6944
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1191499392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6656 +/- 0.0112766 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6656 @ 95%CL (1 toyMC)
median expected limit: r < 16.6656 @ 95%CL (1 toyMC)
   68% expected band : 16.6656 < r < 16.6656
   95% expected band : 16.6656 < r < 16.6656
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -945409220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6413 +/- 0.00467399 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6413 @ 95%CL (1 toyMC)
median expected limit: r < 18.6413 @ 95%CL (1 toyMC)
   68% expected band : 18.6413 < r < 18.6413
   95% expected band : 18.6413 < r < 18.6413
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1162796855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5302 +/- 0.00480605 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5302 @ 95%CL (1 toyMC)
median expected limit: r < 18.5302 @ 95%CL (1 toyMC)
   68% expected band : 18.5302 < r < 18.5302
   95% expected band : 18.5302 < r < 18.5302
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -205263972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6795 +/- 0.00987346 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6795 @ 95%CL (1 toyMC)
median expected limit: r < 16.6795 @ 95%CL (1 toyMC)
   68% expected band : 16.6795 < r < 16.6795
   95% expected band : 16.6795 < r < 16.6795
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1938437738
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.714 +/- 0.00987059 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.714 @ 95%CL (1 toyMC)
median expected limit: r < 16.714 @ 95%CL (1 toyMC)
   68% expected band : 16.714 < r < 16.714
   95% expected band : 16.714 < r < 16.714
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1426262698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6731 +/- 0.00859066 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6731 @ 95%CL (1 toyMC)
median expected limit: r < 16.6731 @ 95%CL (1 toyMC)
   68% expected band : 16.6731 < r < 16.6731
   95% expected band : 16.6731 < r < 16.6731
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1500928203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6848 +/- 0.00944398 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6848 @ 95%CL (1 toyMC)
median expected limit: r < 16.6848 @ 95%CL (1 toyMC)
   68% expected band : 16.6848 < r < 16.6848
   95% expected band : 16.6848 < r < 16.6848
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1452939168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4085 +/- 0.00463929 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4085 @ 95%CL (1 toyMC)
median expected limit: r < 18.4085 @ 95%CL (1 toyMC)
   68% expected band : 18.4085 < r < 18.4085
   95% expected band : 18.4085 < r < 18.4085
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1717437255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4392 +/- 0.00343874 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4392 @ 95%CL (1 toyMC)
median expected limit: r < 18.4392 @ 95%CL (1 toyMC)
   68% expected band : 18.4392 < r < 18.4392
   95% expected band : 18.4392 < r < 18.4392
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1292982677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6938 +/- 0.0106206 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6938 @ 95%CL (1 toyMC)
median expected limit: r < 16.6938 @ 95%CL (1 toyMC)
   68% expected band : 16.6938 < r < 16.6938
   95% expected band : 16.6938 < r < 16.6938
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 67616173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6722 +/- 0.00822785 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6722 @ 95%CL (1 toyMC)
median expected limit: r < 16.6722 @ 95%CL (1 toyMC)
   68% expected band : 16.6722 < r < 16.6722
   95% expected band : 16.6722 < r < 16.6722
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 637945073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3813 +/- 0.00531506 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3813 @ 95%CL (1 toyMC)
median expected limit: r < 18.3813 @ 95%CL (1 toyMC)
   68% expected band : 18.3813 < r < 18.3813
   95% expected band : 18.3813 < r < 18.3813
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 229402129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6787 +/- 0.00820623 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6787 @ 95%CL (1 toyMC)
median expected limit: r < 16.6787 @ 95%CL (1 toyMC)
   68% expected band : 16.6787 < r < 16.6787
   95% expected band : 16.6787 < r < 16.6787
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -77281407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6745 +/- 0.0102771 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6745 @ 95%CL (1 toyMC)
median expected limit: r < 16.6745 @ 95%CL (1 toyMC)
   68% expected band : 16.6745 < r < 16.6745
   95% expected band : 16.6745 < r < 16.6745
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 323717310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.702 +/- 0.00956639 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.702 @ 95%CL (1 toyMC)
median expected limit: r < 16.702 @ 95%CL (1 toyMC)
   68% expected band : 16.702 < r < 16.702
   95% expected band : 16.702 < r < 16.702
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -822075741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6763 +/- 0.0104338 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6763 @ 95%CL (1 toyMC)
median expected limit: r < 16.6763 @ 95%CL (1 toyMC)
   68% expected band : 16.6763 < r < 16.6763
   95% expected band : 16.6763 < r < 16.6763
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 892540358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6544 +/- 0.00925929 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6544 @ 95%CL (1 toyMC)
median expected limit: r < 16.6544 @ 95%CL (1 toyMC)
   68% expected band : 16.6544 < r < 16.6544
   95% expected band : 16.6544 < r < 16.6544
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1578318235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7025 +/- 0.0105909 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7025 @ 95%CL (1 toyMC)
median expected limit: r < 16.7025 @ 95%CL (1 toyMC)
   68% expected band : 16.7025 < r < 16.7025
   95% expected band : 16.7025 < r < 16.7025
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -283744666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6826 +/- 0.00923015 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6826 @ 95%CL (1 toyMC)
median expected limit: r < 16.6826 @ 95%CL (1 toyMC)
   68% expected band : 16.6826 < r < 16.6826
   95% expected band : 16.6826 < r < 16.6826
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1516905927
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6724 +/- 0.00976417 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6724 @ 95%CL (1 toyMC)
median expected limit: r < 16.6724 @ 95%CL (1 toyMC)
   68% expected band : 16.6724 < r < 16.6724
   95% expected band : 16.6724 < r < 16.6724
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 585694443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7074 +/- 0.0112284 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7074 @ 95%CL (1 toyMC)
median expected limit: r < 16.7074 @ 95%CL (1 toyMC)
   68% expected band : 16.7074 < r < 16.7074
   95% expected band : 16.7074 < r < 16.7074
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1399957880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6792 +/- 0.00986995 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6792 @ 95%CL (1 toyMC)
median expected limit: r < 16.6792 @ 95%CL (1 toyMC)
   68% expected band : 16.6792 < r < 16.6792
   95% expected band : 16.6792 < r < 16.6792
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1456389275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.696 +/- 0.0112391 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.696 @ 95%CL (1 toyMC)
median expected limit: r < 16.696 @ 95%CL (1 toyMC)
   68% expected band : 16.696 < r < 16.696
   95% expected band : 16.696 < r < 16.696
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 424452927
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6906 +/- 0.00846951 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6906 @ 95%CL (1 toyMC)
median expected limit: r < 16.6906 @ 95%CL (1 toyMC)
   68% expected band : 16.6906 < r < 16.6906
   95% expected band : 16.6906 < r < 16.6906
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1683255390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.699 +/- 0.00839228 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.699 @ 95%CL (1 toyMC)
median expected limit: r < 16.699 @ 95%CL (1 toyMC)
   68% expected band : 16.699 < r < 16.699
   95% expected band : 16.699 < r < 16.699
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 233945620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7323 +/- 0.00914025 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7323 @ 95%CL (1 toyMC)
median expected limit: r < 16.7323 @ 95%CL (1 toyMC)
   68% expected band : 16.7323 < r < 16.7323
   95% expected band : 16.7323 < r < 16.7323
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -244049015
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6592 +/- 0.00790416 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6592 @ 95%CL (1 toyMC)
median expected limit: r < 16.6592 @ 95%CL (1 toyMC)
   68% expected band : 16.6592 < r < 16.6592
   95% expected band : 16.6592 < r < 16.6592
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -852214977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7183 +/- 0.0100946 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7183 @ 95%CL (1 toyMC)
median expected limit: r < 16.7183 @ 95%CL (1 toyMC)
   68% expected band : 16.7183 < r < 16.7183
   95% expected band : 16.7183 < r < 16.7183
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2130193580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7012 +/- 0.00961996 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7012 @ 95%CL (1 toyMC)
median expected limit: r < 16.7012 @ 95%CL (1 toyMC)
   68% expected band : 16.7012 < r < 16.7012
   95% expected band : 16.7012 < r < 16.7012
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -641441817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7144 +/- 0.00915398 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7144 @ 95%CL (1 toyMC)
median expected limit: r < 16.7144 @ 95%CL (1 toyMC)
   68% expected band : 16.7144 < r < 16.7144
   95% expected band : 16.7144 < r < 16.7144
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 398147189
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.437 +/- 0.00367359 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.437 @ 95%CL (1 toyMC)
median expected limit: r < 18.437 @ 95%CL (1 toyMC)
   68% expected band : 18.437 < r < 18.437
   95% expected band : 18.437 < r < 18.437
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -210366946
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6885 +/- 0.00953956 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6885 @ 95%CL (1 toyMC)
median expected limit: r < 16.6885 @ 95%CL (1 toyMC)
   68% expected band : 16.6885 < r < 16.6885
   95% expected band : 16.6885 < r < 16.6885
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1377220261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4676 +/- 0.00392108 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4676 @ 95%CL (1 toyMC)
median expected limit: r < 18.4676 @ 95%CL (1 toyMC)
   68% expected band : 18.4676 < r < 18.4676
   95% expected band : 18.4676 < r < 18.4676
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1958626959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6943 +/- 0.00873173 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6943 @ 95%CL (1 toyMC)
median expected limit: r < 16.6943 @ 95%CL (1 toyMC)
   68% expected band : 16.6943 < r < 16.6943
   95% expected band : 16.6943 < r < 16.6943
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 739888941
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6713 +/- 0.0106487 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6713 @ 95%CL (1 toyMC)
median expected limit: r < 16.6713 @ 95%CL (1 toyMC)
   68% expected band : 16.6713 < r < 16.6713
   95% expected band : 16.6713 < r < 16.6713
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 766281861
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6603 +/- 0.0100113 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6603 @ 95%CL (1 toyMC)
median expected limit: r < 16.6603 @ 95%CL (1 toyMC)
   68% expected band : 16.6603 < r < 16.6603
   95% expected band : 16.6603 < r < 16.6603
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 524815996
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6903 +/- 0.0100158 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6903 @ 95%CL (1 toyMC)
median expected limit: r < 16.6903 @ 95%CL (1 toyMC)
   68% expected band : 16.6903 < r < 16.6903
   95% expected band : 16.6903 < r < 16.6903
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1820137093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4238 +/- 0.00419507 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4238 @ 95%CL (1 toyMC)
median expected limit: r < 18.4238 @ 95%CL (1 toyMC)
   68% expected band : 18.4238 < r < 18.4238
   95% expected band : 18.4238 < r < 18.4238
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1163212871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4034 +/- 0.00515221 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4034 @ 95%CL (1 toyMC)
median expected limit: r < 18.4034 @ 95%CL (1 toyMC)
   68% expected band : 18.4034 < r < 18.4034
   95% expected band : 18.4034 < r < 18.4034
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2130554946
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3924 +/- 0.00482843 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.3924 @ 95%CL (1 toyMC)
median expected limit: r < 18.3924 @ 95%CL (1 toyMC)
   68% expected band : 18.3924 < r < 18.3924
   95% expected band : 18.3924 < r < 18.3924
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 483065046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7214 +/- 0.0108313 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7214 @ 95%CL (1 toyMC)
median expected limit: r < 16.7214 @ 95%CL (1 toyMC)
   68% expected band : 16.7214 < r < 16.7214
   95% expected band : 16.7214 < r < 16.7214
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -614015301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6761 +/- 0.00990591 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6761 @ 95%CL (1 toyMC)
median expected limit: r < 16.6761 @ 95%CL (1 toyMC)
   68% expected band : 16.6761 < r < 16.6761
   95% expected band : 16.6761 < r < 16.6761
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -670246641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7084 +/- 0.00975835 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7084 @ 95%CL (1 toyMC)
median expected limit: r < 16.7084 @ 95%CL (1 toyMC)
   68% expected band : 16.7084 < r < 16.7084
   95% expected band : 16.7084 < r < 16.7084
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 248288040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6894 +/- 0.010107 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6894 @ 95%CL (1 toyMC)
median expected limit: r < 16.6894 @ 95%CL (1 toyMC)
   68% expected band : 16.6894 < r < 16.6894
   95% expected band : 16.6894 < r < 16.6894
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1322281997
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.663 +/- 0.0101715 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.663 @ 95%CL (1 toyMC)
median expected limit: r < 16.663 @ 95%CL (1 toyMC)
   68% expected band : 16.663 < r < 16.663
   95% expected band : 16.663 < r < 16.663
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1204754529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.693 +/- 0.010592 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.693 @ 95%CL (1 toyMC)
median expected limit: r < 16.693 @ 95%CL (1 toyMC)
   68% expected band : 16.693 < r < 16.693
   95% expected band : 16.693 < r < 16.693
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 562551211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6997 +/- 0.00949712 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6997 @ 95%CL (1 toyMC)
median expected limit: r < 16.6997 @ 95%CL (1 toyMC)
   68% expected band : 16.6997 < r < 16.6997
   95% expected band : 16.6997 < r < 16.6997
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 482442914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6945 +/- 0.00923827 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6945 @ 95%CL (1 toyMC)
median expected limit: r < 16.6945 @ 95%CL (1 toyMC)
   68% expected band : 16.6945 < r < 16.6945
   95% expected band : 16.6945 < r < 16.6945
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 699176064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.685 +/- 0.00991195 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.685 @ 95%CL (1 toyMC)
median expected limit: r < 16.685 @ 95%CL (1 toyMC)
   68% expected band : 16.685 < r < 16.685
   95% expected band : 16.685 < r < 16.685
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -58881381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6888 +/- 0.010935 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6888 @ 95%CL (1 toyMC)
median expected limit: r < 16.6888 @ 95%CL (1 toyMC)
   68% expected band : 16.6888 < r < 16.6888
   95% expected band : 16.6888 < r < 16.6888
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1417436798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7146 +/- 0.00974241 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7146 @ 95%CL (1 toyMC)
median expected limit: r < 16.7146 @ 95%CL (1 toyMC)
   68% expected band : 16.7146 < r < 16.7146
   95% expected band : 16.7146 < r < 16.7146
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1268800076
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6854 +/- 0.0101977 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6854 @ 95%CL (1 toyMC)
median expected limit: r < 16.6854 @ 95%CL (1 toyMC)
   68% expected band : 16.6854 < r < 16.6854
   95% expected band : 16.6854 < r < 16.6854
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -795921343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4253 +/- 0.00445782 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4253 @ 95%CL (1 toyMC)
median expected limit: r < 18.4253 @ 95%CL (1 toyMC)
   68% expected band : 18.4253 < r < 18.4253
   95% expected band : 18.4253 < r < 18.4253
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1459452109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6935 +/- 0.00687869 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6935 @ 95%CL (1 toyMC)
median expected limit: r < 16.6935 @ 95%CL (1 toyMC)
   68% expected band : 16.6935 < r < 16.6935
   95% expected band : 16.6935 < r < 16.6935
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 666410130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6796 +/- 0.0106327 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6796 @ 95%CL (1 toyMC)
median expected limit: r < 16.6796 @ 95%CL (1 toyMC)
   68% expected band : 16.6796 < r < 16.6796
   95% expected band : 16.6796 < r < 16.6796
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 673761429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4244 +/- 0.0044927 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4244 @ 95%CL (1 toyMC)
median expected limit: r < 18.4244 @ 95%CL (1 toyMC)
   68% expected band : 18.4244 < r < 18.4244
   95% expected band : 18.4244 < r < 18.4244
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1028973829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7008 +/- 0.0077084 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7008 @ 95%CL (1 toyMC)
median expected limit: r < 16.7008 @ 95%CL (1 toyMC)
   68% expected band : 16.7008 < r < 16.7008
   95% expected band : 16.7008 < r < 16.7008
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 986497214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7061 +/- 0.00865338 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7061 @ 95%CL (1 toyMC)
median expected limit: r < 16.7061 @ 95%CL (1 toyMC)
   68% expected band : 16.7061 < r < 16.7061
   95% expected band : 16.7061 < r < 16.7061
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -223493520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4008 +/- 0.00462686 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4008 @ 95%CL (1 toyMC)
median expected limit: r < 18.4008 @ 95%CL (1 toyMC)
   68% expected band : 18.4008 < r < 18.4008
   95% expected band : 18.4008 < r < 18.4008
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 412873258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7006 +/- 0.00819413 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7006 @ 95%CL (1 toyMC)
median expected limit: r < 16.7006 @ 95%CL (1 toyMC)
   68% expected band : 16.7006 < r < 16.7006
   95% expected band : 16.7006 < r < 16.7006
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1734056675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6714 +/- 0.00900697 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6714 @ 95%CL (1 toyMC)
median expected limit: r < 16.6714 @ 95%CL (1 toyMC)
   68% expected band : 16.6714 < r < 16.6714
   95% expected band : 16.6714 < r < 16.6714
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -54133057
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7063 +/- 0.00922489 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7063 @ 95%CL (1 toyMC)
median expected limit: r < 16.7063 @ 95%CL (1 toyMC)
   68% expected band : 16.7063 < r < 16.7063
   95% expected band : 16.7063 < r < 16.7063
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 530604543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7097 +/- 0.0105889 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7097 @ 95%CL (1 toyMC)
median expected limit: r < 16.7097 @ 95%CL (1 toyMC)
   68% expected band : 16.7097 < r < 16.7097
   95% expected band : 16.7097 < r < 16.7097
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1687747662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4663 +/- 0.0043337 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4663 @ 95%CL (1 toyMC)
median expected limit: r < 18.4663 @ 95%CL (1 toyMC)
   68% expected band : 18.4663 < r < 18.4663
   95% expected band : 18.4663 < r < 18.4663
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -622150981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7196 +/- 0.0109086 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.7196 @ 95%CL (1 toyMC)
median expected limit: r < 16.7196 @ 95%CL (1 toyMC)
   68% expected band : 16.7196 < r < 16.7196
   95% expected band : 16.7196 < r < 16.7196
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1288168418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7065 +/- 0.0114515 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7065 @ 95%CL (1 toyMC)
median expected limit: r < 16.7065 @ 95%CL (1 toyMC)
   68% expected band : 16.7065 < r < 16.7065
   95% expected band : 16.7065 < r < 16.7065
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 788263430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6848 +/- 0.00988205 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6848 @ 95%CL (1 toyMC)
median expected limit: r < 16.6848 @ 95%CL (1 toyMC)
   68% expected band : 16.6848 < r < 16.6848
   95% expected band : 16.6848 < r < 16.6848
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 807889717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.673 +/- 0.0105259 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.673 @ 95%CL (1 toyMC)
median expected limit: r < 16.673 @ 95%CL (1 toyMC)
   68% expected band : 16.673 < r < 16.673
   95% expected band : 16.673 < r < 16.673
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1173206480
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.702 +/- 0.0103962 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.702 @ 95%CL (1 toyMC)
median expected limit: r < 16.702 @ 95%CL (1 toyMC)
   68% expected band : 16.702 < r < 16.702
   95% expected band : 16.702 < r < 16.702
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -475303178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4192 +/- 0.00565941 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4192 @ 95%CL (1 toyMC)
median expected limit: r < 18.4192 @ 95%CL (1 toyMC)
   68% expected band : 18.4192 < r < 18.4192
   95% expected band : 18.4192 < r < 18.4192
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 210791911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6939 +/- 0.00911077 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6939 @ 95%CL (1 toyMC)
median expected limit: r < 16.6939 @ 95%CL (1 toyMC)
   68% expected band : 16.6939 < r < 16.6939
   95% expected band : 16.6939 < r < 16.6939
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1743105581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6503 +/- 0.00917196 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6503 @ 95%CL (1 toyMC)
median expected limit: r < 16.6503 @ 95%CL (1 toyMC)
   68% expected band : 16.6503 < r < 16.6503
   95% expected band : 16.6503 < r < 16.6503
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 838561027
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6687 +/- 0.00937241 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6687 @ 95%CL (1 toyMC)
median expected limit: r < 16.6687 @ 95%CL (1 toyMC)
   68% expected band : 16.6687 < r < 16.6687
   95% expected band : 16.6687 < r < 16.6687
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -52751188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6636 +/- 0.00877569 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6636 @ 95%CL (1 toyMC)
median expected limit: r < 16.6636 @ 95%CL (1 toyMC)
   68% expected band : 16.6636 < r < 16.6636
   95% expected band : 16.6636 < r < 16.6636
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -445688965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.633 +/- 0.00901676 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.633 @ 95%CL (1 toyMC)
median expected limit: r < 16.633 @ 95%CL (1 toyMC)
   68% expected band : 16.633 < r < 16.633
   95% expected band : 16.633 < r < 16.633
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2083265625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6982 +/- 0.0123906 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6982 @ 95%CL (1 toyMC)
median expected limit: r < 16.6982 @ 95%CL (1 toyMC)
   68% expected band : 16.6982 < r < 16.6982
   95% expected band : 16.6982 < r < 16.6982
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -918845287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6637 +/- 0.0126163 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6637 @ 95%CL (1 toyMC)
median expected limit: r < 16.6637 @ 95%CL (1 toyMC)
   68% expected band : 16.6637 < r < 16.6637
   95% expected band : 16.6637 < r < 16.6637
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2030379827
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.416 +/- 0.00455799 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.416 @ 95%CL (1 toyMC)
median expected limit: r < 18.416 @ 95%CL (1 toyMC)
   68% expected band : 18.416 < r < 18.416
   95% expected band : 18.416 < r < 18.416
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1427743810
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7006 +/- 0.00950972 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7006 @ 95%CL (1 toyMC)
median expected limit: r < 16.7006 @ 95%CL (1 toyMC)
   68% expected band : 16.7006 < r < 16.7006
   95% expected band : 16.7006 < r < 16.7006
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1148527590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4378 +/- 0.00422252 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4378 @ 95%CL (1 toyMC)
median expected limit: r < 18.4378 @ 95%CL (1 toyMC)
   68% expected band : 18.4378 < r < 18.4378
   95% expected band : 18.4378 < r < 18.4378
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1860042778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3789 +/- 0.0047371 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3789 @ 95%CL (1 toyMC)
median expected limit: r < 18.3789 @ 95%CL (1 toyMC)
   68% expected band : 18.3789 < r < 18.3789
   95% expected band : 18.3789 < r < 18.3789
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1122401043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6814 +/- 0.0114534 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6814 @ 95%CL (1 toyMC)
median expected limit: r < 16.6814 @ 95%CL (1 toyMC)
   68% expected band : 16.6814 < r < 16.6814
   95% expected band : 16.6814 < r < 16.6814
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1061429846
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3956 +/- 0.00464345 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3956 @ 95%CL (1 toyMC)
median expected limit: r < 18.3956 @ 95%CL (1 toyMC)
   68% expected band : 18.3956 < r < 18.3956
   95% expected band : 18.3956 < r < 18.3956
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -230084400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7044 +/- 0.00949567 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7044 @ 95%CL (1 toyMC)
median expected limit: r < 16.7044 @ 95%CL (1 toyMC)
   68% expected band : 16.7044 < r < 16.7044
   95% expected band : 16.7044 < r < 16.7044
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -434387566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6637 +/- 0.0107488 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6637 @ 95%CL (1 toyMC)
median expected limit: r < 16.6637 @ 95%CL (1 toyMC)
   68% expected band : 16.6637 < r < 16.6637
   95% expected band : 16.6637 < r < 16.6637
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -58393769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6876 +/- 0.0099301 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6876 @ 95%CL (1 toyMC)
median expected limit: r < 16.6876 @ 95%CL (1 toyMC)
   68% expected band : 16.6876 < r < 16.6876
   95% expected band : 16.6876 < r < 16.6876
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1641866091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6997 +/- 0.0111057 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6997 @ 95%CL (1 toyMC)
median expected limit: r < 16.6997 @ 95%CL (1 toyMC)
   68% expected band : 16.6997 < r < 16.6997
   95% expected band : 16.6997 < r < 16.6997
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -61676875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6746 +/- 0.00929343 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6746 @ 95%CL (1 toyMC)
median expected limit: r < 16.6746 @ 95%CL (1 toyMC)
   68% expected band : 16.6746 < r < 16.6746
   95% expected band : 16.6746 < r < 16.6746
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -979008477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7073 +/- 0.0108937 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7073 @ 95%CL (1 toyMC)
median expected limit: r < 16.7073 @ 95%CL (1 toyMC)
   68% expected band : 16.7073 < r < 16.7073
   95% expected band : 16.7073 < r < 16.7073
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -904711905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7279 +/- 0.00908401 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.7279 @ 95%CL (1 toyMC)
median expected limit: r < 16.7279 @ 95%CL (1 toyMC)
   68% expected band : 16.7279 < r < 16.7279
   95% expected band : 16.7279 < r < 16.7279
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1999971801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4166 +/- 0.00617695 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4166 @ 95%CL (1 toyMC)
median expected limit: r < 18.4166 @ 95%CL (1 toyMC)
   68% expected band : 18.4166 < r < 18.4166
   95% expected band : 18.4166 < r < 18.4166
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1312803286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6889 +/- 0.0105912 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6889 @ 95%CL (1 toyMC)
median expected limit: r < 16.6889 @ 95%CL (1 toyMC)
   68% expected band : 16.6889 < r < 16.6889
   95% expected band : 16.6889 < r < 16.6889
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 351227875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7229 +/- 0.00389642 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.7229 @ 95%CL (1 toyMC)
median expected limit: r < 18.7229 @ 95%CL (1 toyMC)
   68% expected band : 18.7229 < r < 18.7229
   95% expected band : 18.7229 < r < 18.7229
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1059401761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5552 +/- 0.00525887 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.5552 @ 95%CL (1 toyMC)
median expected limit: r < 18.5552 @ 95%CL (1 toyMC)
   68% expected band : 18.5552 < r < 18.5552
   95% expected band : 18.5552 < r < 18.5552
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1895373178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.685 +/- 0.00851632 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.685 @ 95%CL (1 toyMC)
median expected limit: r < 16.685 @ 95%CL (1 toyMC)
   68% expected band : 16.685 < r < 16.685
   95% expected band : 16.685 < r < 16.685
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1122401043.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1148527590.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1163212871.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1204754529.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1288168418.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-1322281997.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1417436798.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1426262698.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1427743810.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1452939168.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1456389275.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1683255390.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1687747662.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1717437255.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1742094643.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1743105581.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1820137093.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1860042778.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-1895373178.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1938437738.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-2010881572.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-205263972.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-2083265625.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-210366946.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-223493520.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-230084400.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-244049015.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-283744666.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-434387566.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-445688965.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-475303178.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-52751188.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-54133057.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-58393769.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-58881381.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-614015301.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-61676875.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-622150981.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-641441817.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-669024737.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-670246641.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-77281407.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-795921343.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-822075741.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-852214977.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-904711905.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-918845287.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-945409220.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.-979008477.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1028973829.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1059401761.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1061429846.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1162796855.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1173206480.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1191499392.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1268800076.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1292982677.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.1312803286.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1377220261.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1399957880.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1459452109.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1500928203.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1516905927.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1578318235.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1641866091.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.1734056675.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.1958626959.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1999971801.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.2030379827.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.210791911.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.2130193580.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.2130554946.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.229402129.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.233945620.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.248288040.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.323717310.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.351227875.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.398147189.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.412873258.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.424452927.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.449285290.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.482442914.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.483065046.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.524815996.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.530604543.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.562551211.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.585694443.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.637945073.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.666410130.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.673761429.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.67616173.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.699176064.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.739888941.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.766281861.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.782208326.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.788263430.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.807889717.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.838561027.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.892540358.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.986497214.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 75168239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1061 +/- 0.00942945 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1061 @ 95%CL (1 toyMC)
median expected limit: r < 17.1061 @ 95%CL (1 toyMC)
   68% expected band : 17.1061 < r < 17.1061
   95% expected band : 17.1061 < r < 17.1061
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1119708126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.087 +/- 0.00753909 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.087 @ 95%CL (1 toyMC)
median expected limit: r < 17.087 @ 95%CL (1 toyMC)
   68% expected band : 17.087 < r < 17.087
   95% expected band : 17.087 < r < 17.087
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2022995565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0925 +/- 0.00847665 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.0925 @ 95%CL (1 toyMC)
median expected limit: r < 17.0925 @ 95%CL (1 toyMC)
   68% expected band : 17.0925 < r < 17.0925
   95% expected band : 17.0925 < r < 17.0925
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1468492455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1041 +/- 0.0087824 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1041 @ 95%CL (1 toyMC)
median expected limit: r < 17.1041 @ 95%CL (1 toyMC)
   68% expected band : 17.1041 < r < 17.1041
   95% expected band : 17.1041 < r < 17.1041
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -578489798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.115 +/- 0.0083287 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.115 @ 95%CL (1 toyMC)
median expected limit: r < 17.115 @ 95%CL (1 toyMC)
   68% expected band : 17.115 < r < 17.115
   95% expected band : 17.115 < r < 17.115
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1017283682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0884 +/- 0.00734061 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0884 @ 95%CL (1 toyMC)
median expected limit: r < 17.0884 @ 95%CL (1 toyMC)
   68% expected band : 17.0884 < r < 17.0884
   95% expected band : 17.0884 < r < 17.0884
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1065635665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1202 +/- 0.00916142 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1202 @ 95%CL (1 toyMC)
median expected limit: r < 17.1202 @ 95%CL (1 toyMC)
   68% expected band : 17.1202 < r < 17.1202
   95% expected band : 17.1202 < r < 17.1202
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1350940507
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5987 +/- 0.0049739 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5987 @ 95%CL (1 toyMC)
median expected limit: r < 18.5987 @ 95%CL (1 toyMC)
   68% expected band : 18.5987 < r < 18.5987
   95% expected band : 18.5987 < r < 18.5987
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 781415889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6111 +/- 0.00467292 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.6111 @ 95%CL (1 toyMC)
median expected limit: r < 18.6111 @ 95%CL (1 toyMC)
   68% expected band : 18.6111 < r < 18.6111
   95% expected band : 18.6111 < r < 18.6111
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2080150814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0932 +/- 0.00608021 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0932 @ 95%CL (1 toyMC)
median expected limit: r < 17.0932 @ 95%CL (1 toyMC)
   68% expected band : 17.0932 < r < 17.0932
   95% expected band : 17.0932 < r < 17.0932
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1715505980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0954 +/- 0.0102495 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0954 @ 95%CL (1 toyMC)
median expected limit: r < 17.0954 @ 95%CL (1 toyMC)
   68% expected band : 17.0954 < r < 17.0954
   95% expected band : 17.0954 < r < 17.0954
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1336342759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1326 +/- 0.00799796 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1326 @ 95%CL (1 toyMC)
median expected limit: r < 17.1326 @ 95%CL (1 toyMC)
   68% expected band : 17.1326 < r < 17.1326
   95% expected band : 17.1326 < r < 17.1326
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1050714045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0852 +/- 0.00849604 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0852 @ 95%CL (1 toyMC)
median expected limit: r < 17.0852 @ 95%CL (1 toyMC)
   68% expected band : 17.0852 < r < 17.0852
   95% expected band : 17.0852 < r < 17.0852
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2128126210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0783 +/- 0.0081413 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0783 @ 95%CL (1 toyMC)
median expected limit: r < 17.0783 @ 95%CL (1 toyMC)
   68% expected band : 17.0783 < r < 17.0783
   95% expected band : 17.0783 < r < 17.0783
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1718864275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0708 +/- 0.00867802 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0708 @ 95%CL (1 toyMC)
median expected limit: r < 17.0708 @ 95%CL (1 toyMC)
   68% expected band : 17.0708 < r < 17.0708
   95% expected band : 17.0708 < r < 17.0708
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2048467631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1171 +/- 0.00860704 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1171 @ 95%CL (1 toyMC)
median expected limit: r < 17.1171 @ 95%CL (1 toyMC)
   68% expected band : 17.1171 < r < 17.1171
   95% expected band : 17.1171 < r < 17.1171
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1716330606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0942 +/- 0.00965613 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.0942 @ 95%CL (1 toyMC)
median expected limit: r < 17.0942 @ 95%CL (1 toyMC)
   68% expected band : 17.0942 < r < 17.0942
   95% expected band : 17.0942 < r < 17.0942
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1992298939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6356 +/- 0.00495216 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6356 @ 95%CL (1 toyMC)
median expected limit: r < 18.6356 @ 95%CL (1 toyMC)
   68% expected band : 18.6356 < r < 18.6356
   95% expected band : 18.6356 < r < 18.6356
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1386534823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0734 +/- 0.0099463 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.0734 @ 95%CL (1 toyMC)
median expected limit: r < 17.0734 @ 95%CL (1 toyMC)
   68% expected band : 17.0734 < r < 17.0734
   95% expected band : 17.0734 < r < 17.0734
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1640175872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2929 +/- 0.00242948 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.2929 @ 95%CL (1 toyMC)
median expected limit: r < 19.2929 @ 95%CL (1 toyMC)
   68% expected band : 19.2929 < r < 19.2929
   95% expected band : 19.2929 < r < 19.2929
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1306024806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1073 +/- 0.00815636 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1073 @ 95%CL (1 toyMC)
median expected limit: r < 17.1073 @ 95%CL (1 toyMC)
   68% expected band : 17.1073 < r < 17.1073
   95% expected band : 17.1073 < r < 17.1073
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 519057155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1052 +/- 0.00782762 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1052 @ 95%CL (1 toyMC)
median expected limit: r < 17.1052 @ 95%CL (1 toyMC)
   68% expected band : 17.1052 < r < 17.1052
   95% expected band : 17.1052 < r < 17.1052
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2058781010
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.104 +/- 0.0100892 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.104 @ 95%CL (1 toyMC)
median expected limit: r < 17.104 @ 95%CL (1 toyMC)
   68% expected band : 17.104 < r < 17.104
   95% expected band : 17.104 < r < 17.104
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1152716739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1172 +/- 0.0077714 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1172 @ 95%CL (1 toyMC)
median expected limit: r < 17.1172 @ 95%CL (1 toyMC)
   68% expected band : 17.1172 < r < 17.1172
   95% expected band : 17.1172 < r < 17.1172
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 596141841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0775 +/- 0.00919505 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0775 @ 95%CL (1 toyMC)
median expected limit: r < 17.0775 @ 95%CL (1 toyMC)
   68% expected band : 17.0775 < r < 17.0775
   95% expected band : 17.0775 < r < 17.0775
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1260678366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0975 +/- 0.0095489 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0975 @ 95%CL (1 toyMC)
median expected limit: r < 17.0975 @ 95%CL (1 toyMC)
   68% expected band : 17.0975 < r < 17.0975
   95% expected band : 17.0975 < r < 17.0975
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1770330751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1168 +/- 0.00738188 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1168 @ 95%CL (1 toyMC)
median expected limit: r < 17.1168 @ 95%CL (1 toyMC)
   68% expected band : 17.1168 < r < 17.1168
   95% expected band : 17.1168 < r < 17.1168
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1409219894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0903 +/- 0.00734555 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0903 @ 95%CL (1 toyMC)
median expected limit: r < 17.0903 @ 95%CL (1 toyMC)
   68% expected band : 17.0903 < r < 17.0903
   95% expected band : 17.0903 < r < 17.0903
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1277403165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.088 +/- 0.00756395 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.088 @ 95%CL (1 toyMC)
median expected limit: r < 17.088 @ 95%CL (1 toyMC)
   68% expected band : 17.088 < r < 17.088
   95% expected band : 17.088 < r < 17.088
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1992710936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0919 +/- 0.00775338 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0919 @ 95%CL (1 toyMC)
median expected limit: r < 17.0919 @ 95%CL (1 toyMC)
   68% expected band : 17.0919 < r < 17.0919
   95% expected band : 17.0919 < r < 17.0919
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -425827703
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6171 +/- 0.00424413 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6171 @ 95%CL (1 toyMC)
median expected limit: r < 18.6171 @ 95%CL (1 toyMC)
   68% expected band : 18.6171 < r < 18.6171
   95% expected band : 18.6171 < r < 18.6171
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1703594482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0794 +/- 0.0112466 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0794 @ 95%CL (1 toyMC)
median expected limit: r < 17.0794 @ 95%CL (1 toyMC)
   68% expected band : 17.0794 < r < 17.0794
   95% expected band : 17.0794 < r < 17.0794
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -510457592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.109 +/- 0.0059574 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.109 @ 95%CL (1 toyMC)
median expected limit: r < 17.109 @ 95%CL (1 toyMC)
   68% expected band : 17.109 < r < 17.109
   95% expected band : 17.109 < r < 17.109
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1736131454
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5572 +/- 0.00364783 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5572 @ 95%CL (1 toyMC)
median expected limit: r < 18.5572 @ 95%CL (1 toyMC)
   68% expected band : 18.5572 < r < 18.5572
   95% expected band : 18.5572 < r < 18.5572
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1934526075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1105 +/- 0.00872066 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1105 @ 95%CL (1 toyMC)
median expected limit: r < 17.1105 @ 95%CL (1 toyMC)
   68% expected band : 17.1105 < r < 17.1105
   95% expected band : 17.1105 < r < 17.1105
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1954552498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1068 +/- 0.00874071 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1068 @ 95%CL (1 toyMC)
median expected limit: r < 17.1068 @ 95%CL (1 toyMC)
   68% expected band : 17.1068 < r < 17.1068
   95% expected band : 17.1068 < r < 17.1068
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -72930951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1014 +/- 0.0100493 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1014 @ 95%CL (1 toyMC)
median expected limit: r < 17.1014 @ 95%CL (1 toyMC)
   68% expected band : 17.1014 < r < 17.1014
   95% expected band : 17.1014 < r < 17.1014
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 850304815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.59 +/- 0.00444311 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.59 @ 95%CL (1 toyMC)
median expected limit: r < 18.59 @ 95%CL (1 toyMC)
   68% expected band : 18.59 < r < 18.59
   95% expected band : 18.59 < r < 18.59
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 211793134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0936 +/- 0.0102331 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0936 @ 95%CL (1 toyMC)
median expected limit: r < 17.0936 @ 95%CL (1 toyMC)
   68% expected band : 17.0936 < r < 17.0936
   95% expected band : 17.0936 < r < 17.0936
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1084424023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0635 +/- 0.00961918 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0635 @ 95%CL (1 toyMC)
median expected limit: r < 17.0635 @ 95%CL (1 toyMC)
   68% expected band : 17.0635 < r < 17.0635
   95% expected band : 17.0635 < r < 17.0635
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1801234353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.093 +/- 0.00784025 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.093 @ 95%CL (1 toyMC)
median expected limit: r < 17.093 @ 95%CL (1 toyMC)
   68% expected band : 17.093 < r < 17.093
   95% expected band : 17.093 < r < 17.093
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -895685260
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1036 +/- 0.00930221 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1036 @ 95%CL (1 toyMC)
median expected limit: r < 17.1036 @ 95%CL (1 toyMC)
   68% expected band : 17.1036 < r < 17.1036
   95% expected band : 17.1036 < r < 17.1036
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1938980889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0912 +/- 0.00889584 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0912 @ 95%CL (1 toyMC)
median expected limit: r < 17.0912 @ 95%CL (1 toyMC)
   68% expected band : 17.0912 < r < 17.0912
   95% expected band : 17.0912 < r < 17.0912
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1608255423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0984 +/- 0.0080538 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0984 @ 95%CL (1 toyMC)
median expected limit: r < 17.0984 @ 95%CL (1 toyMC)
   68% expected band : 17.0984 < r < 17.0984
   95% expected band : 17.0984 < r < 17.0984
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1973791617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.084 +/- 0.00854499 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.084 @ 95%CL (1 toyMC)
median expected limit: r < 17.084 @ 95%CL (1 toyMC)
   68% expected band : 17.084 < r < 17.084
   95% expected band : 17.084 < r < 17.084
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 272831388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0927 +/- 0.00787447 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0927 @ 95%CL (1 toyMC)
median expected limit: r < 17.0927 @ 95%CL (1 toyMC)
   68% expected band : 17.0927 < r < 17.0927
   95% expected band : 17.0927 < r < 17.0927
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -906244438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1245 +/- 0.00858812 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1245 @ 95%CL (1 toyMC)
median expected limit: r < 17.1245 @ 95%CL (1 toyMC)
   68% expected band : 17.1245 < r < 17.1245
   95% expected band : 17.1245 < r < 17.1245
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 354657815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0984 +/- 0.00842009 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0984 @ 95%CL (1 toyMC)
median expected limit: r < 17.0984 @ 95%CL (1 toyMC)
   68% expected band : 17.0984 < r < 17.0984
   95% expected band : 17.0984 < r < 17.0984
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 161924949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0991 +/- 0.00913113 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0991 @ 95%CL (1 toyMC)
median expected limit: r < 17.0991 @ 95%CL (1 toyMC)
   68% expected band : 17.0991 < r < 17.0991
   95% expected band : 17.0991 < r < 17.0991
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2138405901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0967 +/- 0.00937971 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0967 @ 95%CL (1 toyMC)
median expected limit: r < 17.0967 @ 95%CL (1 toyMC)
   68% expected band : 17.0967 < r < 17.0967
   95% expected band : 17.0967 < r < 17.0967
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2126673256
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0759 +/- 0.00838034 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0759 @ 95%CL (1 toyMC)
median expected limit: r < 17.0759 @ 95%CL (1 toyMC)
   68% expected band : 17.0759 < r < 17.0759
   95% expected band : 17.0759 < r < 17.0759
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1497212990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1099 +/- 0.00912371 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1099 @ 95%CL (1 toyMC)
median expected limit: r < 17.1099 @ 95%CL (1 toyMC)
   68% expected band : 17.1099 < r < 17.1099
   95% expected band : 17.1099 < r < 17.1099
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1163022151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5581 +/- 0.00499078 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.5581 @ 95%CL (1 toyMC)
median expected limit: r < 18.5581 @ 95%CL (1 toyMC)
   68% expected band : 18.5581 < r < 18.5581
   95% expected band : 18.5581 < r < 18.5581
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1315153785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1102 +/- 0.00888333 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1102 @ 95%CL (1 toyMC)
median expected limit: r < 17.1102 @ 95%CL (1 toyMC)
   68% expected band : 17.1102 < r < 17.1102
   95% expected band : 17.1102 < r < 17.1102
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -713912237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0993 +/- 0.00935852 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0993 @ 95%CL (1 toyMC)
median expected limit: r < 17.0993 @ 95%CL (1 toyMC)
   68% expected band : 17.0993 < r < 17.0993
   95% expected band : 17.0993 < r < 17.0993
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1967566323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1096 +/- 0.00873409 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1096 @ 95%CL (1 toyMC)
median expected limit: r < 17.1096 @ 95%CL (1 toyMC)
   68% expected band : 17.1096 < r < 17.1096
   95% expected band : 17.1096 < r < 17.1096
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1034969222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0618 +/- 0.0078391 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0618 @ 95%CL (1 toyMC)
median expected limit: r < 17.0618 @ 95%CL (1 toyMC)
   68% expected band : 17.0618 < r < 17.0618
   95% expected band : 17.0618 < r < 17.0618
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -385106211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1031 +/- 0.008839 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1031 @ 95%CL (1 toyMC)
median expected limit: r < 17.1031 @ 95%CL (1 toyMC)
   68% expected band : 17.1031 < r < 17.1031
   95% expected band : 17.1031 < r < 17.1031
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 773524356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0852 +/- 0.0103101 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0852 @ 95%CL (1 toyMC)
median expected limit: r < 17.0852 @ 95%CL (1 toyMC)
   68% expected band : 17.0852 < r < 17.0852
   95% expected band : 17.0852 < r < 17.0852
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 13574310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1119 +/- 0.00771471 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1119 @ 95%CL (1 toyMC)
median expected limit: r < 17.1119 @ 95%CL (1 toyMC)
   68% expected band : 17.1119 < r < 17.1119
   95% expected band : 17.1119 < r < 17.1119
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1935702791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0809 +/- 0.00851247 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.0809 @ 95%CL (1 toyMC)
median expected limit: r < 17.0809 @ 95%CL (1 toyMC)
   68% expected band : 17.0809 < r < 17.0809
   95% expected band : 17.0809 < r < 17.0809
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 160343512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1208 +/- 0.00774484 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1208 @ 95%CL (1 toyMC)
median expected limit: r < 17.1208 @ 95%CL (1 toyMC)
   68% expected band : 17.1208 < r < 17.1208
   95% expected band : 17.1208 < r < 17.1208
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1360368878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.087 +/- 0.00918734 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.087 @ 95%CL (1 toyMC)
median expected limit: r < 17.087 @ 95%CL (1 toyMC)
   68% expected band : 17.087 < r < 17.087
   95% expected band : 17.087 < r < 17.087
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 864459890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0874 +/- 0.0089044 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0874 @ 95%CL (1 toyMC)
median expected limit: r < 17.0874 @ 95%CL (1 toyMC)
   68% expected band : 17.0874 < r < 17.0874
   95% expected band : 17.0874 < r < 17.0874
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -5905107
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5895 +/- 0.00444875 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.5895 @ 95%CL (1 toyMC)
median expected limit: r < 18.5895 @ 95%CL (1 toyMC)
   68% expected band : 18.5895 < r < 18.5895
   95% expected band : 18.5895 < r < 18.5895
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -366891549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1039 +/- 0.00800072 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1039 @ 95%CL (1 toyMC)
median expected limit: r < 17.1039 @ 95%CL (1 toyMC)
   68% expected band : 17.1039 < r < 17.1039
   95% expected band : 17.1039 < r < 17.1039
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1567422456
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1275 +/- 0.00982878 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1275 @ 95%CL (1 toyMC)
median expected limit: r < 17.1275 @ 95%CL (1 toyMC)
   68% expected band : 17.1275 < r < 17.1275
   95% expected band : 17.1275 < r < 17.1275
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1361872668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0943 +/- 0.00734657 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0943 @ 95%CL (1 toyMC)
median expected limit: r < 17.0943 @ 95%CL (1 toyMC)
   68% expected band : 17.0943 < r < 17.0943
   95% expected band : 17.0943 < r < 17.0943
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 408627945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1215 +/- 0.00867753 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1215 @ 95%CL (1 toyMC)
median expected limit: r < 17.1215 @ 95%CL (1 toyMC)
   68% expected band : 17.1215 < r < 17.1215
   95% expected band : 17.1215 < r < 17.1215
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 287483823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1114 +/- 0.00871222 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1114 @ 95%CL (1 toyMC)
median expected limit: r < 17.1114 @ 95%CL (1 toyMC)
   68% expected band : 17.1114 < r < 17.1114
   95% expected band : 17.1114 < r < 17.1114
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 653974504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0969 +/- 0.00779206 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0969 @ 95%CL (1 toyMC)
median expected limit: r < 17.0969 @ 95%CL (1 toyMC)
   68% expected band : 17.0969 < r < 17.0969
   95% expected band : 17.0969 < r < 17.0969
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -863626285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1083 +/- 0.00852479 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1083 @ 95%CL (1 toyMC)
median expected limit: r < 17.1083 @ 95%CL (1 toyMC)
   68% expected band : 17.1083 < r < 17.1083
   95% expected band : 17.1083 < r < 17.1083
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -118550760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1042 +/- 0.00863884 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1042 @ 95%CL (1 toyMC)
median expected limit: r < 17.1042 @ 95%CL (1 toyMC)
   68% expected band : 17.1042 < r < 17.1042
   95% expected band : 17.1042 < r < 17.1042
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 308010893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1032 +/- 0.00715617 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1032 @ 95%CL (1 toyMC)
median expected limit: r < 17.1032 @ 95%CL (1 toyMC)
   68% expected band : 17.1032 < r < 17.1032
   95% expected band : 17.1032 < r < 17.1032
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -545582841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7275 +/- 0.00466921 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.7275 @ 95%CL (1 toyMC)
median expected limit: r < 18.7275 @ 95%CL (1 toyMC)
   68% expected band : 18.7275 < r < 18.7275
   95% expected band : 18.7275 < r < 18.7275
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1334453970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0744 +/- 0.00738301 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0744 @ 95%CL (1 toyMC)
median expected limit: r < 17.0744 @ 95%CL (1 toyMC)
   68% expected band : 17.0744 < r < 17.0744
   95% expected band : 17.0744 < r < 17.0744
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -473430518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0989 +/- 0.007954 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0989 @ 95%CL (1 toyMC)
median expected limit: r < 17.0989 @ 95%CL (1 toyMC)
   68% expected band : 17.0989 < r < 17.0989
   95% expected band : 17.0989 < r < 17.0989
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1171946973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7688 +/- 0.00381794 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.7688 @ 95%CL (1 toyMC)
median expected limit: r < 18.7688 @ 95%CL (1 toyMC)
   68% expected band : 18.7688 < r < 18.7688
   95% expected band : 18.7688 < r < 18.7688
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1574727828
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1117 +/- 0.0087708 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1117 @ 95%CL (1 toyMC)
median expected limit: r < 17.1117 @ 95%CL (1 toyMC)
   68% expected band : 17.1117 < r < 17.1117
   95% expected band : 17.1117 < r < 17.1117
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1538318151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5889 +/- 0.00470136 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5889 @ 95%CL (1 toyMC)
median expected limit: r < 18.5889 @ 95%CL (1 toyMC)
   68% expected band : 18.5889 < r < 18.5889
   95% expected band : 18.5889 < r < 18.5889
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1733505510
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1218 +/- 0.0075726 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1218 @ 95%CL (1 toyMC)
median expected limit: r < 17.1218 @ 95%CL (1 toyMC)
   68% expected band : 17.1218 < r < 17.1218
   95% expected band : 17.1218 < r < 17.1218
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1904204168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1214 +/- 0.00832217 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1214 @ 95%CL (1 toyMC)
median expected limit: r < 17.1214 @ 95%CL (1 toyMC)
   68% expected band : 17.1214 < r < 17.1214
   95% expected band : 17.1214 < r < 17.1214
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1219359051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0933 +/- 0.00790981 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0933 @ 95%CL (1 toyMC)
median expected limit: r < 17.0933 @ 95%CL (1 toyMC)
   68% expected band : 17.0933 < r < 17.0933
   95% expected band : 17.0933 < r < 17.0933
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1815683716
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0944 +/- 0.00860694 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0944 @ 95%CL (1 toyMC)
median expected limit: r < 17.0944 @ 95%CL (1 toyMC)
   68% expected band : 17.0944 < r < 17.0944
   95% expected band : 17.0944 < r < 17.0944
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1824890636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0605 +/- 0.00911458 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0605 @ 95%CL (1 toyMC)
median expected limit: r < 17.0605 @ 95%CL (1 toyMC)
   68% expected band : 17.0605 < r < 17.0605
   95% expected band : 17.0605 < r < 17.0605
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1621553580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0734 +/- 0.00947762 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.0734 @ 95%CL (1 toyMC)
median expected limit: r < 17.0734 @ 95%CL (1 toyMC)
   68% expected band : 17.0734 < r < 17.0734
   95% expected band : 17.0734 < r < 17.0734
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1255936151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0993 +/- 0.00885832 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0993 @ 95%CL (1 toyMC)
median expected limit: r < 17.0993 @ 95%CL (1 toyMC)
   68% expected band : 17.0993 < r < 17.0993
   95% expected band : 17.0993 < r < 17.0993
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2106562115
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1134 +/- 0.0076129 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1134 @ 95%CL (1 toyMC)
median expected limit: r < 17.1134 @ 95%CL (1 toyMC)
   68% expected band : 17.1134 < r < 17.1134
   95% expected band : 17.1134 < r < 17.1134
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -162692813
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0874 +/- 0.00816502 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0874 @ 95%CL (1 toyMC)
median expected limit: r < 17.0874 @ 95%CL (1 toyMC)
   68% expected band : 17.0874 < r < 17.0874
   95% expected band : 17.0874 < r < 17.0874
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1432589558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1097 +/- 0.00873674 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1097 @ 95%CL (1 toyMC)
median expected limit: r < 17.1097 @ 95%CL (1 toyMC)
   68% expected band : 17.1097 < r < 17.1097
   95% expected band : 17.1097 < r < 17.1097
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2017472010
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1021 +/- 0.00687429 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1021 @ 95%CL (1 toyMC)
median expected limit: r < 17.1021 @ 95%CL (1 toyMC)
   68% expected band : 17.1021 < r < 17.1021
   95% expected band : 17.1021 < r < 17.1021
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1517414431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1094 +/- 0.00918142 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1094 @ 95%CL (1 toyMC)
median expected limit: r < 17.1094 @ 95%CL (1 toyMC)
   68% expected band : 17.1094 < r < 17.1094
   95% expected band : 17.1094 < r < 17.1094
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -309128416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.091 +/- 0.0082981 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.091 @ 95%CL (1 toyMC)
median expected limit: r < 17.091 @ 95%CL (1 toyMC)
   68% expected band : 17.091 < r < 17.091
   95% expected band : 17.091 < r < 17.091
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1075770539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5847 +/- 0.00424037 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.5847 @ 95%CL (1 toyMC)
median expected limit: r < 18.5847 @ 95%CL (1 toyMC)
   68% expected band : 18.5847 < r < 18.5847
   95% expected band : 18.5847 < r < 18.5847
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1705866901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0781 +/- 0.0100054 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.0781 @ 95%CL (1 toyMC)
median expected limit: r < 17.0781 @ 95%CL (1 toyMC)
   68% expected band : 17.0781 < r < 17.0781
   95% expected band : 17.0781 < r < 17.0781
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1533467879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0738 +/- 0.00916207 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.0738 @ 95%CL (1 toyMC)
median expected limit: r < 17.0738 @ 95%CL (1 toyMC)
   68% expected band : 17.0738 < r < 17.0738
   95% expected band : 17.0738 < r < 17.0738
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 352219489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1007 +/- 0.0074216 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 17.1007 @ 95%CL (1 toyMC)
median expected limit: r < 17.1007 @ 95%CL (1 toyMC)
   68% expected band : 17.1007 < r < 17.1007
   95% expected band : 17.1007 < r < 17.1007
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -612966809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5634 +/- 0.0045662 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5634 @ 95%CL (1 toyMC)
median expected limit: r < 18.5634 @ 95%CL (1 toyMC)
   68% expected band : 18.5634 < r < 18.5634
   95% expected band : 18.5634 < r < 18.5634
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -764709029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1274 +/- 0.00749611 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1274 @ 95%CL (1 toyMC)
median expected limit: r < 17.1274 @ 95%CL (1 toyMC)
   68% expected band : 17.1274 < r < 17.1274
   95% expected band : 17.1274 < r < 17.1274
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 84655045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1099 +/- 0.00824765 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.1099 @ 95%CL (1 toyMC)
median expected limit: r < 17.1099 @ 95%CL (1 toyMC)
   68% expected band : 17.1099 < r < 17.1099
   95% expected band : 17.1099 < r < 17.1099
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine9000.MarkovChainMC.mH9000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH9000.-1034969222.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH9000.-1065635665.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH9000.-1152716739.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH9000.-1163022151.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH9000.-1171946973.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH9000.-118550760.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH9000.-1277403165.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH9000.-1306024806.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH9000.-1315153785.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH9000.-1334453970.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH9000.-1336342759.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH9000.-1409219894.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH9000.-1432589558.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH9000.-1468492455.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH9000.-1533467879.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH9000.-1538318151.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH9000.-1608255423.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH9000.-1621553580.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH9000.-162692813.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH9000.-1640175872.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH9000.-1715505980.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH9000.-1716330606.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH9000.-1733505510.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH9000.-1801234353.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH9000.-1934526075.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH9000.-1954552498.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH9000.-1973791617.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH9000.-1992298939.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH9000.-2106562115.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH9000.-2126673256.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH9000.-2128126210.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH9000.-2138405901.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH9000.-309128416.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH9000.-366891549.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH9000.-385106211.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH9000.-425827703.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH9000.-473430518.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH9000.-510457592.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH9000.-545582841.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH9000.-578489798.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH9000.-5905107.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH9000.-612966809.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH9000.-713912237.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH9000.-72930951.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH9000.-764709029.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH9000.-863626285.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH9000.-895685260.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH9000.-906244438.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH9000.1017283682.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH9000.1050714045.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH9000.1075770539.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH9000.1084424023.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH9000.1119708126.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH9000.1219359051.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH9000.1255936151.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH9000.1260678366.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH9000.1350940507.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH9000.13574310.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH9000.1360368878.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH9000.1361872668.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH9000.1386534823.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH9000.1497212990.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH9000.1517414431.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH9000.1567422456.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH9000.1574727828.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH9000.160343512.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH9000.161924949.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH9000.1703594482.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH9000.1705866901.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH9000.1718864275.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH9000.1736131454.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH9000.1770330751.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH9000.1815683716.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH9000.1824890636.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH9000.1904204168.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH9000.1935702791.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH9000.1938980889.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH9000.1967566323.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH9000.1992710936.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH9000.2017472010.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH9000.2022995565.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH9000.2048467631.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH9000.2058781010.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH9000.2080150814.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH9000.211793134.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH9000.272831388.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH9000.287483823.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH9000.308010893.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH9000.352219489.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH9000.354657815.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH9000.408627945.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH9000.519057155.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH9000.596141841.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH9000.653974504.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH9000.75168239.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH9000.773524356.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH9000.781415889.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH9000.84655045.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH9000.850304815.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH9000.864459890.root
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/
hadd Target path: higgsCombine9000.MarkovChainMC.mH9000.root:/toys
