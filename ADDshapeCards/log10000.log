 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1983995627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45154 +/- 0.00540396 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.45154 @ 95%CL (1 toyMC)
median expected limit: r < 1.45154 @ 95%CL (1 toyMC)
   68% expected band : 1.45154 < r < 1.45154
   95% expected band : 1.45154 < r < 1.45154
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 427589963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26165 +/- 0.00382421 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.26165 @ 95%CL (1 toyMC)
median expected limit: r < 1.26165 @ 95%CL (1 toyMC)
   68% expected band : 1.26165 < r < 1.26165
   95% expected band : 1.26165 < r < 1.26165
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -769540634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.876 +/- 0.00491938 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.876 @ 95%CL (1 toyMC)
median expected limit: r < 1.876 @ 95%CL (1 toyMC)
   68% expected band : 1.876 < r < 1.876
   95% expected band : 1.876 < r < 1.876
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1915367282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.756102 +/- 0.00363503 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.756102 @ 95%CL (1 toyMC)
median expected limit: r < 0.756102 @ 95%CL (1 toyMC)
   68% expected band : 0.756102 < r < 0.756102
   95% expected band : 0.756102 < r < 0.756102
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1953419945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12313 +/- 0.00425133 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12313 @ 95%CL (1 toyMC)
median expected limit: r < 1.12313 @ 95%CL (1 toyMC)
   68% expected band : 1.12313 < r < 1.12313
   95% expected band : 1.12313 < r < 1.12313
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2128241077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.697814 +/- 0.00421533 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.697814 @ 95%CL (1 toyMC)
median expected limit: r < 0.697814 @ 95%CL (1 toyMC)
   68% expected band : 0.697814 < r < 0.697814
   95% expected band : 0.697814 < r < 0.697814
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1045045320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98126 +/- 0.00400286 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.98126 @ 95%CL (1 toyMC)
median expected limit: r < 1.98126 @ 95%CL (1 toyMC)
   68% expected band : 1.98126 < r < 1.98126
   95% expected band : 1.98126 < r < 1.98126
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1551031064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16236 +/- 0.00433869 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.16236 @ 95%CL (1 toyMC)
median expected limit: r < 1.16236 @ 95%CL (1 toyMC)
   68% expected band : 1.16236 < r < 1.16236
   95% expected band : 1.16236 < r < 1.16236
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682945023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.966069 +/- 0.00439255 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.966069 @ 95%CL (1 toyMC)
median expected limit: r < 0.966069 @ 95%CL (1 toyMC)
   68% expected band : 0.966069 < r < 0.966069
   95% expected band : 0.966069 < r < 0.966069
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2121682040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.706106 +/- 0.00386935 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.706106 @ 95%CL (1 toyMC)
median expected limit: r < 0.706106 @ 95%CL (1 toyMC)
   68% expected band : 0.706106 < r < 0.706106
   95% expected band : 0.706106 < r < 0.706106
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1984086017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.683914 +/- 0.00394514 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.683914 @ 95%CL (1 toyMC)
median expected limit: r < 0.683914 @ 95%CL (1 toyMC)
   68% expected band : 0.683914 < r < 0.683914
   95% expected band : 0.683914 < r < 0.683914
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1896065554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23194 +/- 0.00419725 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.23194 @ 95%CL (1 toyMC)
median expected limit: r < 1.23194 @ 95%CL (1 toyMC)
   68% expected band : 1.23194 < r < 1.23194
   95% expected band : 1.23194 < r < 1.23194
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 246311962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.799385 +/- 0.00389012 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.799385 @ 95%CL (1 toyMC)
median expected limit: r < 0.799385 @ 95%CL (1 toyMC)
   68% expected band : 0.799385 < r < 0.799385
   95% expected band : 0.799385 < r < 0.799385
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -588222841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.962285 +/- 0.0041533 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.962285 @ 95%CL (1 toyMC)
median expected limit: r < 0.962285 @ 95%CL (1 toyMC)
   68% expected band : 0.962285 < r < 0.962285
   95% expected band : 0.962285 < r < 0.962285
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 797823187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.871726 +/- 0.0042323 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.871726 @ 95%CL (1 toyMC)
median expected limit: r < 0.871726 @ 95%CL (1 toyMC)
   68% expected band : 0.871726 < r < 0.871726
   95% expected band : 0.871726 < r < 0.871726
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2093514253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92203 +/- 0.00502176 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.92203 @ 95%CL (1 toyMC)
median expected limit: r < 1.92203 @ 95%CL (1 toyMC)
   68% expected band : 1.92203 < r < 1.92203
   95% expected band : 1.92203 < r < 1.92203
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1563310055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.685084 +/- 0.00417262 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.685084 @ 95%CL (1 toyMC)
median expected limit: r < 0.685084 @ 95%CL (1 toyMC)
   68% expected band : 0.685084 < r < 0.685084
   95% expected band : 0.685084 < r < 0.685084
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1832249592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15924 +/- 0.00485907 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.15924 @ 95%CL (1 toyMC)
median expected limit: r < 1.15924 @ 95%CL (1 toyMC)
   68% expected band : 1.15924 < r < 1.15924
   95% expected band : 1.15924 < r < 1.15924
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1226797457
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.701674 +/- 0.00384925 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.701674 @ 95%CL (1 toyMC)
median expected limit: r < 0.701674 @ 95%CL (1 toyMC)
   68% expected band : 0.701674 < r < 0.701674
   95% expected band : 0.701674 < r < 0.701674
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1584189323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.928797 +/- 0.00368521 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.928797 @ 95%CL (1 toyMC)
median expected limit: r < 0.928797 @ 95%CL (1 toyMC)
   68% expected band : 0.928797 < r < 0.928797
   95% expected band : 0.928797 < r < 0.928797
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1404729953
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.936201 +/- 0.00475277 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.936201 @ 95%CL (1 toyMC)
median expected limit: r < 0.936201 @ 95%CL (1 toyMC)
   68% expected band : 0.936201 < r < 0.936201
   95% expected band : 0.936201 < r < 0.936201
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 580279082
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33304 +/- 0.0046287 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.33304 @ 95%CL (1 toyMC)
median expected limit: r < 1.33304 @ 95%CL (1 toyMC)
   68% expected band : 1.33304 < r < 1.33304
   95% expected band : 1.33304 < r < 1.33304
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1316331395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0032 +/- 0.00406147 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.0032 @ 95%CL (1 toyMC)
median expected limit: r < 1.0032 @ 95%CL (1 toyMC)
   68% expected band : 1.0032 < r < 1.0032
   95% expected band : 1.0032 < r < 1.0032
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1855817162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94907 +/- 0.00438029 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.94907 @ 95%CL (1 toyMC)
median expected limit: r < 1.94907 @ 95%CL (1 toyMC)
   68% expected band : 1.94907 < r < 1.94907
   95% expected band : 1.94907 < r < 1.94907
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -373337557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.996559 +/- 0.00422456 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.996559 @ 95%CL (1 toyMC)
median expected limit: r < 0.996559 @ 95%CL (1 toyMC)
   68% expected band : 0.996559 < r < 0.996559
   95% expected band : 0.996559 < r < 0.996559
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -881702328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12344 +/- 0.00395499 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.12344 @ 95%CL (1 toyMC)
median expected limit: r < 1.12344 @ 95%CL (1 toyMC)
   68% expected band : 1.12344 < r < 1.12344
   95% expected band : 1.12344 < r < 1.12344
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -491643802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.882349 +/- 0.00378373 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.882349 @ 95%CL (1 toyMC)
median expected limit: r < 0.882349 @ 95%CL (1 toyMC)
   68% expected band : 0.882349 < r < 0.882349
   95% expected band : 0.882349 < r < 0.882349
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 109734686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.988003 +/- 0.0044903 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.988003 @ 95%CL (1 toyMC)
median expected limit: r < 0.988003 @ 95%CL (1 toyMC)
   68% expected band : 0.988003 < r < 0.988003
   95% expected band : 0.988003 < r < 0.988003
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -584053270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31673 +/- 0.00328201 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.31673 @ 95%CL (1 toyMC)
median expected limit: r < 1.31673 @ 95%CL (1 toyMC)
   68% expected band : 1.31673 < r < 1.31673
   95% expected band : 1.31673 < r < 1.31673
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 688621188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16351 +/- 0.00315767 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.16351 @ 95%CL (1 toyMC)
median expected limit: r < 1.16351 @ 95%CL (1 toyMC)
   68% expected band : 1.16351 < r < 1.16351
   95% expected band : 1.16351 < r < 1.16351
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2052018425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.809719 +/- 0.00380462 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.809719 @ 95%CL (1 toyMC)
median expected limit: r < 0.809719 @ 95%CL (1 toyMC)
   68% expected band : 0.809719 < r < 0.809719
   95% expected band : 0.809719 < r < 0.809719
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -508389248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43006 +/- 0.00522537 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.43006 @ 95%CL (1 toyMC)
median expected limit: r < 1.43006 @ 95%CL (1 toyMC)
   68% expected band : 1.43006 < r < 1.43006
   95% expected band : 1.43006 < r < 1.43006
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -696152179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.941701 +/- 0.00434963 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.941701 @ 95%CL (1 toyMC)
median expected limit: r < 0.941701 @ 95%CL (1 toyMC)
   68% expected band : 0.941701 < r < 0.941701
   95% expected band : 0.941701 < r < 0.941701
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1704311585
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.827516 +/- 0.00381538 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.827516 @ 95%CL (1 toyMC)
median expected limit: r < 0.827516 @ 95%CL (1 toyMC)
   68% expected band : 0.827516 < r < 0.827516
   95% expected band : 0.827516 < r < 0.827516
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 308781628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.992698 +/- 0.00341526 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 0.992698 @ 95%CL (1 toyMC)
median expected limit: r < 0.992698 @ 95%CL (1 toyMC)
   68% expected band : 0.992698 < r < 0.992698
   95% expected band : 0.992698 < r < 0.992698
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1628856344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.906042 +/- 0.00387322 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.906042 @ 95%CL (1 toyMC)
median expected limit: r < 0.906042 @ 95%CL (1 toyMC)
   68% expected band : 0.906042 < r < 0.906042
   95% expected band : 0.906042 < r < 0.906042
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1181328673
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.761364 +/- 0.00430813 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.761364 @ 95%CL (1 toyMC)
median expected limit: r < 0.761364 @ 95%CL (1 toyMC)
   68% expected band : 0.761364 < r < 0.761364
   95% expected band : 0.761364 < r < 0.761364
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2046110245
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0077 +/- 0.00551438 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.0077 @ 95%CL (1 toyMC)
median expected limit: r < 1.0077 @ 95%CL (1 toyMC)
   68% expected band : 1.0077 < r < 1.0077
   95% expected band : 1.0077 < r < 1.0077
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682604890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38301 +/- 0.00397288 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.38301 @ 95%CL (1 toyMC)
median expected limit: r < 1.38301 @ 95%CL (1 toyMC)
   68% expected band : 1.38301 < r < 1.38301
   95% expected band : 1.38301 < r < 1.38301
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 690932771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66942 +/- 0.00456486 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.66942 @ 95%CL (1 toyMC)
median expected limit: r < 1.66942 @ 95%CL (1 toyMC)
   68% expected band : 1.66942 < r < 1.66942
   95% expected band : 1.66942 < r < 1.66942
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1602918074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42952 +/- 0.0042476 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.42952 @ 95%CL (1 toyMC)
median expected limit: r < 1.42952 @ 95%CL (1 toyMC)
   68% expected band : 1.42952 < r < 1.42952
   95% expected band : 1.42952 < r < 1.42952
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1144596340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.27757 +/- 0.00524877 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.27757 @ 95%CL (1 toyMC)
median expected limit: r < 2.27757 @ 95%CL (1 toyMC)
   68% expected band : 2.27757 < r < 2.27757
   95% expected band : 2.27757 < r < 2.27757
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1751473167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1711 +/- 0.00364657 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.1711 @ 95%CL (1 toyMC)
median expected limit: r < 1.1711 @ 95%CL (1 toyMC)
   68% expected band : 1.1711 < r < 1.1711
   95% expected band : 1.1711 < r < 1.1711
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -92913026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.548941 +/- 0.00333061 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.548941 @ 95%CL (1 toyMC)
median expected limit: r < 0.548941 @ 95%CL (1 toyMC)
   68% expected band : 0.548941 < r < 0.548941
   95% expected band : 0.548941 < r < 0.548941
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 632423040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.798622 +/- 0.00385513 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.798622 @ 95%CL (1 toyMC)
median expected limit: r < 0.798622 @ 95%CL (1 toyMC)
   68% expected band : 0.798622 < r < 0.798622
   95% expected band : 0.798622 < r < 0.798622
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 342736917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61687 +/- 0.00500489 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.61687 @ 95%CL (1 toyMC)
median expected limit: r < 1.61687 @ 95%CL (1 toyMC)
   68% expected band : 1.61687 < r < 1.61687
   95% expected band : 1.61687 < r < 1.61687
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1531093798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41262 +/- 0.00460282 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.41262 @ 95%CL (1 toyMC)
median expected limit: r < 1.41262 @ 95%CL (1 toyMC)
   68% expected band : 1.41262 < r < 1.41262
   95% expected band : 1.41262 < r < 1.41262
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -33873989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11125 +/- 0.00413372 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.11125 @ 95%CL (1 toyMC)
median expected limit: r < 1.11125 @ 95%CL (1 toyMC)
   68% expected band : 1.11125 < r < 1.11125
   95% expected band : 1.11125 < r < 1.11125
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1983640064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.748929 +/- 0.00381936 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.748929 @ 95%CL (1 toyMC)
median expected limit: r < 0.748929 @ 95%CL (1 toyMC)
   68% expected band : 0.748929 < r < 0.748929
   95% expected band : 0.748929 < r < 0.748929
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 382084756
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73015 +/- 0.00473054 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.73015 @ 95%CL (1 toyMC)
median expected limit: r < 1.73015 @ 95%CL (1 toyMC)
   68% expected band : 1.73015 < r < 1.73015
   95% expected band : 1.73015 < r < 1.73015
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1938942296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.810455 +/- 0.00395938 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.810455 @ 95%CL (1 toyMC)
median expected limit: r < 0.810455 @ 95%CL (1 toyMC)
   68% expected band : 0.810455 < r < 0.810455
   95% expected band : 0.810455 < r < 0.810455
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2108951388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09654 +/- 0.00438897 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09654 @ 95%CL (1 toyMC)
median expected limit: r < 1.09654 @ 95%CL (1 toyMC)
   68% expected band : 1.09654 < r < 1.09654
   95% expected band : 1.09654 < r < 1.09654
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1241386851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.358 +/- 0.00482165 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.358 @ 95%CL (1 toyMC)
median expected limit: r < 1.358 @ 95%CL (1 toyMC)
   68% expected band : 1.358 < r < 1.358
   95% expected band : 1.358 < r < 1.358
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 567519155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.953545 +/- 0.00443095 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.953545 @ 95%CL (1 toyMC)
median expected limit: r < 0.953545 @ 95%CL (1 toyMC)
   68% expected band : 0.953545 < r < 0.953545
   95% expected band : 0.953545 < r < 0.953545
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 246617959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44276 +/- 0.00467234 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.44276 @ 95%CL (1 toyMC)
median expected limit: r < 1.44276 @ 95%CL (1 toyMC)
   68% expected band : 1.44276 < r < 1.44276
   95% expected band : 1.44276 < r < 1.44276
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2081947778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05506 +/- 0.00377337 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.05506 @ 95%CL (1 toyMC)
median expected limit: r < 1.05506 @ 95%CL (1 toyMC)
   68% expected band : 1.05506 < r < 1.05506
   95% expected band : 1.05506 < r < 1.05506
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2083592699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09682 +/- 0.00452916 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09682 @ 95%CL (1 toyMC)
median expected limit: r < 1.09682 @ 95%CL (1 toyMC)
   68% expected band : 1.09682 < r < 1.09682
   95% expected band : 1.09682 < r < 1.09682
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1496045513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.787079 +/- 0.0043164 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.787079 @ 95%CL (1 toyMC)
median expected limit: r < 0.787079 @ 95%CL (1 toyMC)
   68% expected band : 0.787079 < r < 0.787079
   95% expected band : 0.787079 < r < 0.787079
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -702184408
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27456 +/- 0.00356855 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.27456 @ 95%CL (1 toyMC)
median expected limit: r < 1.27456 @ 95%CL (1 toyMC)
   68% expected band : 1.27456 < r < 1.27456
   95% expected band : 1.27456 < r < 1.27456
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -412302029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22698 +/- 0.00443746 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.22698 @ 95%CL (1 toyMC)
median expected limit: r < 1.22698 @ 95%CL (1 toyMC)
   68% expected band : 1.22698 < r < 1.22698
   95% expected band : 1.22698 < r < 1.22698
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -60164007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.752705 +/- 0.00333859 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.752705 @ 95%CL (1 toyMC)
median expected limit: r < 0.752705 @ 95%CL (1 toyMC)
   68% expected band : 0.752705 < r < 0.752705
   95% expected band : 0.752705 < r < 0.752705
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2028095481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.742039 +/- 0.00414161 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.742039 @ 95%CL (1 toyMC)
median expected limit: r < 0.742039 @ 95%CL (1 toyMC)
   68% expected band : 0.742039 < r < 0.742039
   95% expected band : 0.742039 < r < 0.742039
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1485113112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85771 +/- 0.00436167 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.85771 @ 95%CL (1 toyMC)
median expected limit: r < 1.85771 @ 95%CL (1 toyMC)
   68% expected band : 1.85771 < r < 1.85771
   95% expected band : 1.85771 < r < 1.85771
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1919976900
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36259 +/- 0.00438027 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.36259 @ 95%CL (1 toyMC)
median expected limit: r < 1.36259 @ 95%CL (1 toyMC)
   68% expected band : 1.36259 < r < 1.36259
   95% expected band : 1.36259 < r < 1.36259
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 932876254
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29424 +/- 0.00535386 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.29424 @ 95%CL (1 toyMC)
median expected limit: r < 1.29424 @ 95%CL (1 toyMC)
   68% expected band : 1.29424 < r < 1.29424
   95% expected band : 1.29424 < r < 1.29424
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1960610336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36894 +/- 0.00512424 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.36894 @ 95%CL (1 toyMC)
median expected limit: r < 1.36894 @ 95%CL (1 toyMC)
   68% expected band : 1.36894 < r < 1.36894
   95% expected band : 1.36894 < r < 1.36894
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2118007572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.633246 +/- 0.00347476 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.633246 @ 95%CL (1 toyMC)
median expected limit: r < 0.633246 @ 95%CL (1 toyMC)
   68% expected band : 0.633246 < r < 0.633246
   95% expected band : 0.633246 < r < 0.633246
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1402175658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32929 +/- 0.00463481 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.32929 @ 95%CL (1 toyMC)
median expected limit: r < 1.32929 @ 95%CL (1 toyMC)
   68% expected band : 1.32929 < r < 1.32929
   95% expected band : 1.32929 < r < 1.32929
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -406527638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.74873 +/- 0.00349021 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.74873 @ 95%CL (1 toyMC)
median expected limit: r < 0.74873 @ 95%CL (1 toyMC)
   68% expected band : 0.74873 < r < 0.74873
   95% expected band : 0.74873 < r < 0.74873
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 888991671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.659532 +/- 0.00360284 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.659532 @ 95%CL (1 toyMC)
median expected limit: r < 0.659532 @ 95%CL (1 toyMC)
   68% expected band : 0.659532 < r < 0.659532
   95% expected band : 0.659532 < r < 0.659532
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1257818020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.802262 +/- 0.00440798 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.802262 @ 95%CL (1 toyMC)
median expected limit: r < 0.802262 @ 95%CL (1 toyMC)
   68% expected band : 0.802262 < r < 0.802262
   95% expected band : 0.802262 < r < 0.802262
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -759545296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.501719 +/- 0.00387479 @ 95% CL (100 tries)
Done in 0.12 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.501719 @ 95%CL (1 toyMC)
median expected limit: r < 0.501719 @ 95%CL (1 toyMC)
   68% expected band : 0.501719 < r < 0.501719
   95% expected band : 0.501719 < r < 0.501719
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 326750102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06335 +/- 0.0038222 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.06335 @ 95%CL (1 toyMC)
median expected limit: r < 1.06335 @ 95%CL (1 toyMC)
   68% expected band : 1.06335 < r < 1.06335
   95% expected band : 1.06335 < r < 1.06335
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 434808872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81374 +/- 0.00378362 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.81374 @ 95%CL (1 toyMC)
median expected limit: r < 1.81374 @ 95%CL (1 toyMC)
   68% expected band : 1.81374 < r < 1.81374
   95% expected band : 1.81374 < r < 1.81374
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -282921001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50583 +/- 0.00439785 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.50583 @ 95%CL (1 toyMC)
median expected limit: r < 1.50583 @ 95%CL (1 toyMC)
   68% expected band : 1.50583 < r < 1.50583
   95% expected band : 1.50583 < r < 1.50583
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 903103394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8629 +/- 0.00495819 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.8629 @ 95%CL (1 toyMC)
median expected limit: r < 1.8629 @ 95%CL (1 toyMC)
   68% expected band : 1.8629 < r < 1.8629
   95% expected band : 1.8629 < r < 1.8629
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1987041061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.928905 +/- 0.00367452 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.928905 @ 95%CL (1 toyMC)
median expected limit: r < 0.928905 @ 95%CL (1 toyMC)
   68% expected band : 0.928905 < r < 0.928905
   95% expected band : 0.928905 < r < 0.928905
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2064340564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.90077 +/- 0.00430975 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.90077 @ 95%CL (1 toyMC)
median expected limit: r < 0.90077 @ 95%CL (1 toyMC)
   68% expected band : 0.90077 < r < 0.90077
   95% expected band : 0.90077 < r < 0.90077
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -500813944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56046 +/- 0.00519847 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.56046 @ 95%CL (1 toyMC)
median expected limit: r < 1.56046 @ 95%CL (1 toyMC)
   68% expected band : 1.56046 < r < 1.56046
   95% expected band : 1.56046 < r < 1.56046
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1085656139
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.999741 +/- 0.00464859 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.999741 @ 95%CL (1 toyMC)
median expected limit: r < 0.999741 @ 95%CL (1 toyMC)
   68% expected band : 0.999741 < r < 0.999741
   95% expected band : 0.999741 < r < 0.999741
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1567957912
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.976572 +/- 0.0047569 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.976572 @ 95%CL (1 toyMC)
median expected limit: r < 0.976572 @ 95%CL (1 toyMC)
   68% expected band : 0.976572 < r < 0.976572
   95% expected band : 0.976572 < r < 0.976572
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1884740768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24768 +/- 0.00546836 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.24768 @ 95%CL (1 toyMC)
median expected limit: r < 1.24768 @ 95%CL (1 toyMC)
   68% expected band : 1.24768 < r < 1.24768
   95% expected band : 1.24768 < r < 1.24768
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1199083548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.978258 +/- 0.00363945 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.978258 @ 95%CL (1 toyMC)
median expected limit: r < 0.978258 @ 95%CL (1 toyMC)
   68% expected band : 0.978258 < r < 0.978258
   95% expected band : 0.978258 < r < 0.978258
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -281828178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.825412 +/- 0.00435336 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.825412 @ 95%CL (1 toyMC)
median expected limit: r < 0.825412 @ 95%CL (1 toyMC)
   68% expected band : 0.825412 < r < 0.825412
   95% expected band : 0.825412 < r < 0.825412
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1480854033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.717572 +/- 0.00411479 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.717572 @ 95%CL (1 toyMC)
median expected limit: r < 0.717572 @ 95%CL (1 toyMC)
   68% expected band : 0.717572 < r < 0.717572
   95% expected band : 0.717572 < r < 0.717572
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 162791061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.945771 +/- 0.0043199 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.945771 @ 95%CL (1 toyMC)
median expected limit: r < 0.945771 @ 95%CL (1 toyMC)
   68% expected band : 0.945771 < r < 0.945771
   95% expected band : 0.945771 < r < 0.945771
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1196493709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.848921 +/- 0.00528811 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.848921 @ 95%CL (1 toyMC)
median expected limit: r < 0.848921 @ 95%CL (1 toyMC)
   68% expected band : 0.848921 < r < 0.848921
   95% expected band : 0.848921 < r < 0.848921
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1574896567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.913287 +/- 0.00481605 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 0.913287 @ 95%CL (1 toyMC)
median expected limit: r < 0.913287 @ 95%CL (1 toyMC)
   68% expected band : 0.913287 < r < 0.913287
   95% expected band : 0.913287 < r < 0.913287
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 796580503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8282 +/- 0.00428285 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.8282 @ 95%CL (1 toyMC)
median expected limit: r < 1.8282 @ 95%CL (1 toyMC)
   68% expected band : 1.8282 < r < 1.8282
   95% expected band : 1.8282 < r < 1.8282
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 93363809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.751821 +/- 0.00375152 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.751821 @ 95%CL (1 toyMC)
median expected limit: r < 0.751821 @ 95%CL (1 toyMC)
   68% expected band : 0.751821 < r < 0.751821
   95% expected band : 0.751821 < r < 0.751821
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 189299215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.873814 +/- 0.00385896 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.873814 @ 95%CL (1 toyMC)
median expected limit: r < 0.873814 @ 95%CL (1 toyMC)
   68% expected band : 0.873814 < r < 0.873814
   95% expected band : 0.873814 < r < 0.873814
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1963457683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.906302 +/- 0.00445704 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.906302 @ 95%CL (1 toyMC)
median expected limit: r < 0.906302 @ 95%CL (1 toyMC)
   68% expected band : 0.906302 < r < 0.906302
   95% expected band : 0.906302 < r < 0.906302
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -830057742
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43543 +/- 0.00353105 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.43543 @ 95%CL (1 toyMC)
median expected limit: r < 1.43543 @ 95%CL (1 toyMC)
   68% expected band : 1.43543 < r < 1.43543
   95% expected band : 1.43543 < r < 1.43543
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -143815270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.934063 +/- 0.0045039 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.934063 @ 95%CL (1 toyMC)
median expected limit: r < 0.934063 @ 95%CL (1 toyMC)
   68% expected band : 0.934063 < r < 0.934063
   95% expected band : 0.934063 < r < 0.934063
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 226608441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.902267 +/- 0.00507773 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.902267 @ 95%CL (1 toyMC)
median expected limit: r < 0.902267 @ 95%CL (1 toyMC)
   68% expected band : 0.902267 < r < 0.902267
   95% expected band : 0.902267 < r < 0.902267
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1475513929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28513 +/- 0.00384804 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.28513 @ 95%CL (1 toyMC)
median expected limit: r < 1.28513 @ 95%CL (1 toyMC)
   68% expected band : 1.28513 < r < 1.28513
   95% expected band : 1.28513 < r < 1.28513
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 909262818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.952333 +/- 0.00453196 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.952333 @ 95%CL (1 toyMC)
median expected limit: r < 0.952333 @ 95%CL (1 toyMC)
   68% expected band : 0.952333 < r < 0.952333
   95% expected band : 0.952333 < r < 0.952333
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1093252903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30702 +/- 0.00445406 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.30702 @ 95%CL (1 toyMC)
median expected limit: r < 1.30702 @ 95%CL (1 toyMC)
   68% expected band : 1.30702 < r < 1.30702
   95% expected band : 1.30702 < r < 1.30702
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1534317840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.922137 +/- 0.00453698 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.922137 @ 95%CL (1 toyMC)
median expected limit: r < 0.922137 @ 95%CL (1 toyMC)
   68% expected band : 0.922137 < r < 0.922137
   95% expected band : 0.922137 < r < 0.922137
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 796343840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.539763 +/- 0.00261691 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.539763 @ 95%CL (1 toyMC)
median expected limit: r < 0.539763 @ 95%CL (1 toyMC)
   68% expected band : 0.539763 < r < 0.539763
   95% expected band : 0.539763 < r < 0.539763
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1085656139.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1093252903.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1144596340.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1181328673.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1199083548.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1257818020.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1316331395.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1402175658.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1404729953.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-143815270.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1475513929.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1480854033.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1485113112.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1531093798.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1534317840.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1628856344.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1704311585.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1751473167.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1832249592.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1884740768.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1896065554.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1938942296.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1963457683.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1983640064.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1983995627.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2028095481.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-2052018425.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-2083592699.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-2093514253.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-2108951388.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-2118007572.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-2121682040.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-2128241077.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-281828178.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-282921001.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-33873989.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-373337557.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-406527638.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-412302029.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-491643802.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-500813944.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-508389248.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-584053270.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-588222841.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-60164007.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-696152179.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-702184408.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-759545296.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-769540634.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-830057742.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-881702328.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-92913026.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1045045320.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.109734686.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1196493709.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1226797457.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1241386851.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1496045513.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1551031064.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1563310055.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1567957912.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1574896567.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1584189323.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1602918074.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.162791061.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1682604890.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1682945023.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1855817162.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.189299215.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1915367282.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1919976900.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1953419945.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1960610336.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1984086017.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1987041061.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2046110245.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2064340564.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.2081947778.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.226608441.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.246311962.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.246617959.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.308781628.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.326750102.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.342736917.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.382084756.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.427589963.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.434808872.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.567519155.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.580279082.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.632423040.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.688621188.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.690932771.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.796343840.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.796580503.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.797823187.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.888991671.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.903103394.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.909262818.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.932876254.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.93363809.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1346213819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09414 +/- 0.00438871 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09414 @ 95%CL (1 toyMC)
median expected limit: r < 1.09414 @ 95%CL (1 toyMC)
   68% expected band : 1.09414 < r < 1.09414
   95% expected band : 1.09414 < r < 1.09414
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1454412088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23629 +/- 0.00563716 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.23629 @ 95%CL (1 toyMC)
median expected limit: r < 1.23629 @ 95%CL (1 toyMC)
   68% expected band : 1.23629 < r < 1.23629
   95% expected band : 1.23629 < r < 1.23629
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1077326760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.925148 +/- 0.00393898 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.925148 @ 95%CL (1 toyMC)
median expected limit: r < 0.925148 @ 95%CL (1 toyMC)
   68% expected band : 0.925148 < r < 0.925148
   95% expected band : 0.925148 < r < 0.925148
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1472957573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06823 +/- 0.0042196 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.06823 @ 95%CL (1 toyMC)
median expected limit: r < 1.06823 @ 95%CL (1 toyMC)
   68% expected band : 1.06823 < r < 1.06823
   95% expected band : 1.06823 < r < 1.06823
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 101871771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.62641 +/- 0.00444575 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.62641 @ 95%CL (1 toyMC)
median expected limit: r < 1.62641 @ 95%CL (1 toyMC)
   68% expected band : 1.62641 < r < 1.62641
   95% expected band : 1.62641 < r < 1.62641
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1636873957
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38832 +/- 0.0047102 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.38832 @ 95%CL (1 toyMC)
median expected limit: r < 1.38832 @ 95%CL (1 toyMC)
   68% expected band : 1.38832 < r < 1.38832
   95% expected band : 1.38832 < r < 1.38832
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1850777202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47526 +/- 0.005931 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.47526 @ 95%CL (1 toyMC)
median expected limit: r < 2.47526 @ 95%CL (1 toyMC)
   68% expected band : 2.47526 < r < 2.47526
   95% expected band : 2.47526 < r < 2.47526
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -654428547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84372 +/- 0.00496556 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.84372 @ 95%CL (1 toyMC)
median expected limit: r < 1.84372 @ 95%CL (1 toyMC)
   68% expected band : 1.84372 < r < 1.84372
   95% expected band : 1.84372 < r < 1.84372
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1781588095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50945 +/- 0.00436815 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.50945 @ 95%CL (1 toyMC)
median expected limit: r < 1.50945 @ 95%CL (1 toyMC)
   68% expected band : 1.50945 < r < 1.50945
   95% expected band : 1.50945 < r < 1.50945
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -471361593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08634 +/- 0.00453522 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.08634 @ 95%CL (1 toyMC)
median expected limit: r < 1.08634 @ 95%CL (1 toyMC)
   68% expected band : 1.08634 < r < 1.08634
   95% expected band : 1.08634 < r < 1.08634
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2057783671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03534 +/- 0.00423471 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.03534 @ 95%CL (1 toyMC)
median expected limit: r < 1.03534 @ 95%CL (1 toyMC)
   68% expected band : 1.03534 < r < 1.03534
   95% expected band : 1.03534 < r < 1.03534
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -540535575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.43438 +/- 0.00505917 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.43438 @ 95%CL (1 toyMC)
median expected limit: r < 2.43438 @ 95%CL (1 toyMC)
   68% expected band : 2.43438 < r < 2.43438
   95% expected band : 2.43438 < r < 2.43438
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1757404988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.785291 +/- 0.00383127 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.785291 @ 95%CL (1 toyMC)
median expected limit: r < 0.785291 @ 95%CL (1 toyMC)
   68% expected band : 0.785291 < r < 0.785291
   95% expected band : 0.785291 < r < 0.785291
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1060109296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12108 +/- 0.00484343 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12108 @ 95%CL (1 toyMC)
median expected limit: r < 1.12108 @ 95%CL (1 toyMC)
   68% expected band : 1.12108 < r < 1.12108
   95% expected band : 1.12108 < r < 1.12108
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 935149913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85772 +/- 0.00516735 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.85772 @ 95%CL (1 toyMC)
median expected limit: r < 1.85772 @ 95%CL (1 toyMC)
   68% expected band : 1.85772 < r < 1.85772
   95% expected band : 1.85772 < r < 1.85772
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 487364073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.860974 +/- 0.00405131 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.860974 @ 95%CL (1 toyMC)
median expected limit: r < 0.860974 @ 95%CL (1 toyMC)
   68% expected band : 0.860974 < r < 0.860974
   95% expected band : 0.860974 < r < 0.860974
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1291168028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27149 +/- 0.00567826 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.27149 @ 95%CL (1 toyMC)
median expected limit: r < 1.27149 @ 95%CL (1 toyMC)
   68% expected band : 1.27149 < r < 1.27149
   95% expected band : 1.27149 < r < 1.27149
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1345673857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.920852 +/- 0.00359915 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.920852 @ 95%CL (1 toyMC)
median expected limit: r < 0.920852 @ 95%CL (1 toyMC)
   68% expected band : 0.920852 < r < 0.920852
   95% expected band : 0.920852 < r < 0.920852
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 616206688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26564 +/- 0.00469517 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.26564 @ 95%CL (1 toyMC)
median expected limit: r < 1.26564 @ 95%CL (1 toyMC)
   68% expected band : 1.26564 < r < 1.26564
   95% expected band : 1.26564 < r < 1.26564
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2101317623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.585315 +/- 0.00346139 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.585315 @ 95%CL (1 toyMC)
median expected limit: r < 0.585315 @ 95%CL (1 toyMC)
   68% expected band : 0.585315 < r < 0.585315
   95% expected band : 0.585315 < r < 0.585315
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1688678120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90528 +/- 0.00505682 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.90528 @ 95%CL (1 toyMC)
median expected limit: r < 1.90528 @ 95%CL (1 toyMC)
   68% expected band : 1.90528 < r < 1.90528
   95% expected band : 1.90528 < r < 1.90528
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -537814501
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.709051 +/- 0.00344912 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.709051 @ 95%CL (1 toyMC)
median expected limit: r < 0.709051 @ 95%CL (1 toyMC)
   68% expected band : 0.709051 < r < 0.709051
   95% expected band : 0.709051 < r < 0.709051
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -285257567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70466 +/- 0.00445223 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.70466 @ 95%CL (1 toyMC)
median expected limit: r < 1.70466 @ 95%CL (1 toyMC)
   68% expected band : 1.70466 < r < 1.70466
   95% expected band : 1.70466 < r < 1.70466
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1512096242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.847649 +/- 0.00352748 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.847649 @ 95%CL (1 toyMC)
median expected limit: r < 0.847649 @ 95%CL (1 toyMC)
   68% expected band : 0.847649 < r < 0.847649
   95% expected band : 0.847649 < r < 0.847649
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1518288906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.63561 +/- 0.00411021 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.63561 @ 95%CL (1 toyMC)
median expected limit: r < 0.63561 @ 95%CL (1 toyMC)
   68% expected band : 0.63561 < r < 0.63561
   95% expected band : 0.63561 < r < 0.63561
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1579357307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.766882 +/- 0.00365587 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.766882 @ 95%CL (1 toyMC)
median expected limit: r < 0.766882 @ 95%CL (1 toyMC)
   68% expected band : 0.766882 < r < 0.766882
   95% expected band : 0.766882 < r < 0.766882
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 481133966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60173 +/- 0.00578984 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.60173 @ 95%CL (1 toyMC)
median expected limit: r < 1.60173 @ 95%CL (1 toyMC)
   68% expected band : 1.60173 < r < 1.60173
   95% expected band : 1.60173 < r < 1.60173
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1080800070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93682 +/- 0.00453527 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.93682 @ 95%CL (1 toyMC)
median expected limit: r < 1.93682 @ 95%CL (1 toyMC)
   68% expected band : 1.93682 < r < 1.93682
   95% expected band : 1.93682 < r < 1.93682
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1793933149
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.852731 +/- 0.00462681 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.852731 @ 95%CL (1 toyMC)
median expected limit: r < 0.852731 @ 95%CL (1 toyMC)
   68% expected band : 0.852731 < r < 0.852731
   95% expected band : 0.852731 < r < 0.852731
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 636487638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.878887 +/- 0.00394126 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.878887 @ 95%CL (1 toyMC)
median expected limit: r < 0.878887 @ 95%CL (1 toyMC)
   68% expected band : 0.878887 < r < 0.878887
   95% expected band : 0.878887 < r < 0.878887
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2026331380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00854 +/- 0.00573062 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00854 @ 95%CL (1 toyMC)
median expected limit: r < 2.00854 @ 95%CL (1 toyMC)
   68% expected band : 2.00854 < r < 2.00854
   95% expected band : 2.00854 < r < 2.00854
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 963196577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.81259 +/- 0.00370452 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.81259 @ 95%CL (1 toyMC)
median expected limit: r < 0.81259 @ 95%CL (1 toyMC)
   68% expected band : 0.81259 < r < 0.81259
   95% expected band : 0.81259 < r < 0.81259
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 919107661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.740233 +/- 0.00369004 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.740233 @ 95%CL (1 toyMC)
median expected limit: r < 0.740233 @ 95%CL (1 toyMC)
   68% expected band : 0.740233 < r < 0.740233
   95% expected band : 0.740233 < r < 0.740233
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1272223043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09129 +/- 0.00513382 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09129 @ 95%CL (1 toyMC)
median expected limit: r < 1.09129 @ 95%CL (1 toyMC)
   68% expected band : 1.09129 < r < 1.09129
   95% expected band : 1.09129 < r < 1.09129
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1866715475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.869389 +/- 0.00284845 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.869389 @ 95%CL (1 toyMC)
median expected limit: r < 0.869389 @ 95%CL (1 toyMC)
   68% expected band : 0.869389 < r < 0.869389
   95% expected band : 0.869389 < r < 0.869389
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 797565730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.705534 +/- 0.00357644 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.705534 @ 95%CL (1 toyMC)
median expected limit: r < 0.705534 @ 95%CL (1 toyMC)
   68% expected band : 0.705534 < r < 0.705534
   95% expected band : 0.705534 < r < 0.705534
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1823539980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29428 +/- 0.00386173 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.29428 @ 95%CL (1 toyMC)
median expected limit: r < 1.29428 @ 95%CL (1 toyMC)
   68% expected band : 1.29428 < r < 1.29428
   95% expected band : 1.29428 < r < 1.29428
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1362646423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24531 +/- 0.00447145 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.24531 @ 95%CL (1 toyMC)
median expected limit: r < 1.24531 @ 95%CL (1 toyMC)
   68% expected band : 1.24531 < r < 1.24531
   95% expected band : 1.24531 < r < 1.24531
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -379005874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77079 +/- 0.00545174 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.77079 @ 95%CL (1 toyMC)
median expected limit: r < 2.77079 @ 95%CL (1 toyMC)
   68% expected band : 2.77079 < r < 2.77079
   95% expected band : 2.77079 < r < 2.77079
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1477418686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81424 +/- 0.00477512 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.81424 @ 95%CL (1 toyMC)
median expected limit: r < 1.81424 @ 95%CL (1 toyMC)
   68% expected band : 1.81424 < r < 1.81424
   95% expected band : 1.81424 < r < 1.81424
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -107895485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.94485 +/- 0.00476034 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.94485 @ 95%CL (1 toyMC)
median expected limit: r < 0.94485 @ 95%CL (1 toyMC)
   68% expected band : 0.94485 < r < 0.94485
   95% expected band : 0.94485 < r < 0.94485
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1554355025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00919 +/- 0.00443035 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.00919 @ 95%CL (1 toyMC)
median expected limit: r < 1.00919 @ 95%CL (1 toyMC)
   68% expected band : 1.00919 < r < 1.00919
   95% expected band : 1.00919 < r < 1.00919
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 55824427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34973 +/- 0.00417224 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.34973 @ 95%CL (1 toyMC)
median expected limit: r < 1.34973 @ 95%CL (1 toyMC)
   68% expected band : 1.34973 < r < 1.34973
   95% expected band : 1.34973 < r < 1.34973
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1708331356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29001 +/- 0.00383778 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.29001 @ 95%CL (1 toyMC)
median expected limit: r < 1.29001 @ 95%CL (1 toyMC)
   68% expected band : 1.29001 < r < 1.29001
   95% expected band : 1.29001 < r < 1.29001
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 830812684
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24357 +/- 0.00412588 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.24357 @ 95%CL (1 toyMC)
median expected limit: r < 1.24357 @ 95%CL (1 toyMC)
   68% expected band : 1.24357 < r < 1.24357
   95% expected band : 1.24357 < r < 1.24357
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -549374657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46437 +/- 0.005726 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.46437 @ 95%CL (1 toyMC)
median expected limit: r < 2.46437 @ 95%CL (1 toyMC)
   68% expected band : 2.46437 < r < 2.46437
   95% expected band : 2.46437 < r < 2.46437
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -989269199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36294 +/- 0.00401272 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.36294 @ 95%CL (1 toyMC)
median expected limit: r < 1.36294 @ 95%CL (1 toyMC)
   68% expected band : 1.36294 < r < 1.36294
   95% expected band : 1.36294 < r < 1.36294
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1306695874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91745 +/- 0.00409882 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91745 @ 95%CL (1 toyMC)
median expected limit: r < 1.91745 @ 95%CL (1 toyMC)
   68% expected band : 1.91745 < r < 1.91745
   95% expected band : 1.91745 < r < 1.91745
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1896759056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85524 +/- 0.00631116 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.85524 @ 95%CL (1 toyMC)
median expected limit: r < 1.85524 @ 95%CL (1 toyMC)
   68% expected band : 1.85524 < r < 1.85524
   95% expected band : 1.85524 < r < 1.85524
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1474378760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04622 +/- 0.00498477 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.04622 @ 95%CL (1 toyMC)
median expected limit: r < 1.04622 @ 95%CL (1 toyMC)
   68% expected band : 1.04622 < r < 1.04622
   95% expected band : 1.04622 < r < 1.04622
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -974480441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2126 +/- 0.00538802 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.2126 @ 95%CL (1 toyMC)
median expected limit: r < 1.2126 @ 95%CL (1 toyMC)
   68% expected band : 1.2126 < r < 1.2126
   95% expected band : 1.2126 < r < 1.2126
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1124573871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.96471 +/- 0.00444123 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.96471 @ 95%CL (1 toyMC)
median expected limit: r < 0.96471 @ 95%CL (1 toyMC)
   68% expected band : 0.96471 < r < 0.96471
   95% expected band : 0.96471 < r < 0.96471
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1833042104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.912961 +/- 0.00324887 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.912961 @ 95%CL (1 toyMC)
median expected limit: r < 0.912961 @ 95%CL (1 toyMC)
   68% expected band : 0.912961 < r < 0.912961
   95% expected band : 0.912961 < r < 0.912961
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 754106327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03034 +/- 0.00498715 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.03034 @ 95%CL (1 toyMC)
median expected limit: r < 2.03034 @ 95%CL (1 toyMC)
   68% expected band : 2.03034 < r < 2.03034
   95% expected band : 2.03034 < r < 2.03034
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 339596729
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44501 +/- 0.0050426 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.44501 @ 95%CL (1 toyMC)
median expected limit: r < 1.44501 @ 95%CL (1 toyMC)
   68% expected band : 1.44501 < r < 1.44501
   95% expected band : 1.44501 < r < 1.44501
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 161684169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2009 +/- 0.00501936 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.2009 @ 95%CL (1 toyMC)
median expected limit: r < 1.2009 @ 95%CL (1 toyMC)
   68% expected band : 1.2009 < r < 1.2009
   95% expected band : 1.2009 < r < 1.2009
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 419987898
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59789 +/- 0.0048668 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.59789 @ 95%CL (1 toyMC)
median expected limit: r < 1.59789 @ 95%CL (1 toyMC)
   68% expected band : 1.59789 < r < 1.59789
   95% expected band : 1.59789 < r < 1.59789
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1659099236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.987915 +/- 0.00434871 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 0.987915 @ 95%CL (1 toyMC)
median expected limit: r < 0.987915 @ 95%CL (1 toyMC)
   68% expected band : 0.987915 < r < 0.987915
   95% expected band : 0.987915 < r < 0.987915
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1746854356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.792155 +/- 0.00324327 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.792155 @ 95%CL (1 toyMC)
median expected limit: r < 0.792155 @ 95%CL (1 toyMC)
   68% expected band : 0.792155 < r < 0.792155
   95% expected band : 0.792155 < r < 0.792155
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -416508461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46295 +/- 0.0040342 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.46295 @ 95%CL (1 toyMC)
median expected limit: r < 1.46295 @ 95%CL (1 toyMC)
   68% expected band : 1.46295 < r < 1.46295
   95% expected band : 1.46295 < r < 1.46295
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 114856721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.840485 +/- 0.00489497 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.840485 @ 95%CL (1 toyMC)
median expected limit: r < 0.840485 @ 95%CL (1 toyMC)
   68% expected band : 0.840485 < r < 0.840485
   95% expected band : 0.840485 < r < 0.840485
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -829333896
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21162 +/- 0.00482106 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.21162 @ 95%CL (1 toyMC)
median expected limit: r < 1.21162 @ 95%CL (1 toyMC)
   68% expected band : 1.21162 < r < 1.21162
   95% expected band : 1.21162 < r < 1.21162
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 463055521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28114 +/- 0.00410755 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.28114 @ 95%CL (1 toyMC)
median expected limit: r < 1.28114 @ 95%CL (1 toyMC)
   68% expected band : 1.28114 < r < 1.28114
   95% expected band : 1.28114 < r < 1.28114
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1159318673
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57953 +/- 0.00575633 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.57953 @ 95%CL (1 toyMC)
median expected limit: r < 1.57953 @ 95%CL (1 toyMC)
   68% expected band : 1.57953 < r < 1.57953
   95% expected band : 1.57953 < r < 1.57953
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -292378855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.588069 +/- 0.00376368 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.588069 @ 95%CL (1 toyMC)
median expected limit: r < 0.588069 @ 95%CL (1 toyMC)
   68% expected band : 0.588069 < r < 0.588069
   95% expected band : 0.588069 < r < 0.588069
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -161678155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.90823 +/- 0.00431162 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.90823 @ 95%CL (1 toyMC)
median expected limit: r < 0.90823 @ 95%CL (1 toyMC)
   68% expected band : 0.90823 < r < 0.90823
   95% expected band : 0.90823 < r < 0.90823
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1392932823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.931828 +/- 0.00399037 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.931828 @ 95%CL (1 toyMC)
median expected limit: r < 0.931828 @ 95%CL (1 toyMC)
   68% expected band : 0.931828 < r < 0.931828
   95% expected band : 0.931828 < r < 0.931828
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1057758533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89349 +/- 0.00440537 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.89349 @ 95%CL (1 toyMC)
median expected limit: r < 1.89349 @ 95%CL (1 toyMC)
   68% expected band : 1.89349 < r < 1.89349
   95% expected band : 1.89349 < r < 1.89349
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1312553121
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2061 +/- 0.00446202 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.2061 @ 95%CL (1 toyMC)
median expected limit: r < 1.2061 @ 95%CL (1 toyMC)
   68% expected band : 1.2061 < r < 1.2061
   95% expected band : 1.2061 < r < 1.2061
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1585652515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13996 +/- 0.0047251 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.13996 @ 95%CL (1 toyMC)
median expected limit: r < 1.13996 @ 95%CL (1 toyMC)
   68% expected band : 1.13996 < r < 1.13996
   95% expected band : 1.13996 < r < 1.13996
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1153147442
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.64544 +/- 0.00429332 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.64544 @ 95%CL (1 toyMC)
median expected limit: r < 1.64544 @ 95%CL (1 toyMC)
   68% expected band : 1.64544 < r < 1.64544
   95% expected band : 1.64544 < r < 1.64544
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1384080422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31325 +/- 0.00537632 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.31325 @ 95%CL (1 toyMC)
median expected limit: r < 1.31325 @ 95%CL (1 toyMC)
   68% expected band : 1.31325 < r < 1.31325
   95% expected band : 1.31325 < r < 1.31325
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1598235981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05707 +/- 0.00431378 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.05707 @ 95%CL (1 toyMC)
median expected limit: r < 1.05707 @ 95%CL (1 toyMC)
   68% expected band : 1.05707 < r < 1.05707
   95% expected band : 1.05707 < r < 1.05707
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -547174791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51126 +/- 0.00538279 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.51126 @ 95%CL (1 toyMC)
median expected limit: r < 1.51126 @ 95%CL (1 toyMC)
   68% expected band : 1.51126 < r < 1.51126
   95% expected band : 1.51126 < r < 1.51126
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 140867685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82971 +/- 0.00424268 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.82971 @ 95%CL (1 toyMC)
median expected limit: r < 1.82971 @ 95%CL (1 toyMC)
   68% expected band : 1.82971 < r < 1.82971
   95% expected band : 1.82971 < r < 1.82971
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -389284341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76547 +/- 0.00507578 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76547 @ 95%CL (1 toyMC)
median expected limit: r < 1.76547 @ 95%CL (1 toyMC)
   68% expected band : 1.76547 < r < 1.76547
   95% expected band : 1.76547 < r < 1.76547
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 286338257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08783 +/- 0.00559366 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.08783 @ 95%CL (1 toyMC)
median expected limit: r < 1.08783 @ 95%CL (1 toyMC)
   68% expected band : 1.08783 < r < 1.08783
   95% expected band : 1.08783 < r < 1.08783
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 114240464
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24124 +/- 0.00481389 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.24124 @ 95%CL (1 toyMC)
median expected limit: r < 1.24124 @ 95%CL (1 toyMC)
   68% expected band : 1.24124 < r < 1.24124
   95% expected band : 1.24124 < r < 1.24124
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 229999278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.675223 +/- 0.0045005 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.675223 @ 95%CL (1 toyMC)
median expected limit: r < 0.675223 @ 95%CL (1 toyMC)
   68% expected band : 0.675223 < r < 0.675223
   95% expected band : 0.675223 < r < 0.675223
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -823835310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.5961 +/- 0.00495455 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.5961 @ 95%CL (1 toyMC)
median expected limit: r < 1.5961 @ 95%CL (1 toyMC)
   68% expected band : 1.5961 < r < 1.5961
   95% expected band : 1.5961 < r < 1.5961
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1457623328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35701 +/- 0.00406875 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35701 @ 95%CL (1 toyMC)
median expected limit: r < 1.35701 @ 95%CL (1 toyMC)
   68% expected band : 1.35701 < r < 1.35701
   95% expected band : 1.35701 < r < 1.35701
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 940736306
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.858673 +/- 0.00385274 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.858673 @ 95%CL (1 toyMC)
median expected limit: r < 0.858673 @ 95%CL (1 toyMC)
   68% expected band : 0.858673 < r < 0.858673
   95% expected band : 0.858673 < r < 0.858673
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 933640677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23441 +/- 0.00442356 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.23441 @ 95%CL (1 toyMC)
median expected limit: r < 1.23441 @ 95%CL (1 toyMC)
   68% expected band : 1.23441 < r < 1.23441
   95% expected band : 1.23441 < r < 1.23441
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2088020148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.728174 +/- 0.0035026 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.728174 @ 95%CL (1 toyMC)
median expected limit: r < 0.728174 @ 95%CL (1 toyMC)
   68% expected band : 0.728174 < r < 0.728174
   95% expected band : 0.728174 < r < 0.728174
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -19680221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29576 +/- 0.00467708 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.29576 @ 95%CL (1 toyMC)
median expected limit: r < 2.29576 @ 95%CL (1 toyMC)
   68% expected band : 2.29576 < r < 2.29576
   95% expected band : 2.29576 < r < 2.29576
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -957021750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35053 +/- 0.00572638 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35053 @ 95%CL (1 toyMC)
median expected limit: r < 1.35053 @ 95%CL (1 toyMC)
   68% expected band : 1.35053 < r < 1.35053
   95% expected band : 1.35053 < r < 1.35053
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1975607096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36716 +/- 0.00495996 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.36716 @ 95%CL (1 toyMC)
median expected limit: r < 1.36716 @ 95%CL (1 toyMC)
   68% expected band : 1.36716 < r < 1.36716
   95% expected band : 1.36716 < r < 1.36716
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 611237245
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11164 +/- 0.00429405 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.11164 @ 95%CL (1 toyMC)
median expected limit: r < 1.11164 @ 95%CL (1 toyMC)
   68% expected band : 1.11164 < r < 1.11164
   95% expected band : 1.11164 < r < 1.11164
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2058835116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0353 +/- 0.00375432 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.0353 @ 95%CL (1 toyMC)
median expected limit: r < 1.0353 @ 95%CL (1 toyMC)
   68% expected band : 1.0353 < r < 1.0353
   95% expected band : 1.0353 < r < 1.0353
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -72090025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.952105 +/- 0.00496066 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.952105 @ 95%CL (1 toyMC)
median expected limit: r < 0.952105 @ 95%CL (1 toyMC)
   68% expected band : 0.952105 < r < 0.952105
   95% expected band : 0.952105 < r < 0.952105
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1343483178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17726 +/- 0.00443382 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.17726 @ 95%CL (1 toyMC)
median expected limit: r < 1.17726 @ 95%CL (1 toyMC)
   68% expected band : 1.17726 < r < 1.17726
   95% expected band : 1.17726 < r < 1.17726
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1702069534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.936373 +/- 0.00496425 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.936373 @ 95%CL (1 toyMC)
median expected limit: r < 0.936373 @ 95%CL (1 toyMC)
   68% expected band : 0.936373 < r < 0.936373
   95% expected band : 0.936373 < r < 0.936373
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -961371236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.954023 +/- 0.00401554 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.954023 @ 95%CL (1 toyMC)
median expected limit: r < 0.954023 @ 95%CL (1 toyMC)
   68% expected band : 0.954023 < r < 0.954023
   95% expected band : 0.954023 < r < 0.954023
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -43001248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.778253 +/- 0.0045307 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.778253 @ 95%CL (1 toyMC)
median expected limit: r < 0.778253 @ 95%CL (1 toyMC)
   68% expected band : 0.778253 < r < 0.778253
   95% expected band : 0.778253 < r < 0.778253
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 695958407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.632743 +/- 0.00414277 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.632743 @ 95%CL (1 toyMC)
median expected limit: r < 0.632743 @ 95%CL (1 toyMC)
   68% expected band : 0.632743 < r < 0.632743
   95% expected band : 0.632743 < r < 0.632743
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -368905101
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.833089 +/- 0.00402608 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.833089 @ 95%CL (1 toyMC)
median expected limit: r < 0.833089 @ 95%CL (1 toyMC)
   68% expected band : 0.833089 < r < 0.833089
   95% expected band : 0.833089 < r < 0.833089
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2102210770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74864 +/- 0.00562676 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.74864 @ 95%CL (1 toyMC)
median expected limit: r < 2.74864 @ 95%CL (1 toyMC)
   68% expected band : 2.74864 < r < 2.74864
   95% expected band : 2.74864 < r < 2.74864
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1381897590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40993 +/- 0.00560099 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.40993 @ 95%CL (1 toyMC)
median expected limit: r < 2.40993 @ 95%CL (1 toyMC)
   68% expected band : 2.40993 < r < 2.40993
   95% expected band : 2.40993 < r < 2.40993
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 933618113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.93251 +/- 0.00587386 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.93251 @ 95%CL (1 toyMC)
median expected limit: r < 2.93251 @ 95%CL (1 toyMC)
   68% expected band : 2.93251 < r < 2.93251
   95% expected band : 2.93251 < r < 2.93251
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 712033786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01996 +/- 0.0044824 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.01996 @ 95%CL (1 toyMC)
median expected limit: r < 1.01996 @ 95%CL (1 toyMC)
   68% expected band : 1.01996 < r < 1.01996
   95% expected band : 1.01996 < r < 1.01996
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1057758533.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1060109296.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-107895485.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1080800070.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1124573871.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1153147442.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1159318673.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1291168028.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1362646423.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1384080422.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1454412088.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1472957573.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1477418686.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1579357307.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1598235981.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-161678155.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1636873957.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1659099236.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1702069534.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1781588095.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1850777202.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1866715475.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1896759056.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-19680221.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1975607096.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2057783671.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-2101317623.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-285257567.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-292378855.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-368905101.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-379005874.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-389284341.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-416508461.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-43001248.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-471361593.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-537814501.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-540535575.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-547174791.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-549374657.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-654428547.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-72090025.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-823835310.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-829333896.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-957021750.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-961371236.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-974480441.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-989269199.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.101871771.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1077326760.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.114240464.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.114856721.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1272223043.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1306695874.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1312553121.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1343483178.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1345673857.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1346213819.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1381897590.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1392932823.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.140867685.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1457623328.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1474378760.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1512096242.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1518288906.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1554355025.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1585652515.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.161684169.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1688678120.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1708331356.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1746854356.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1757404988.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1793933149.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1823539980.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1833042104.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2026331380.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2058835116.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2088020148.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.2102210770.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.229999278.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.286338257.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.339596729.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.419987898.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.463055521.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.481133966.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.487364073.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.55824427.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.611237245.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.616206688.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.636487638.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.695958407.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.712033786.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.754106327.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.797565730.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.830812684.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.919107661.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.933618113.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.933640677.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.935149913.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.940736306.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.963196577.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1488542741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50463 +/- 0.0071356 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.50463 @ 95%CL (1 toyMC)
median expected limit: r < 1.50463 @ 95%CL (1 toyMC)
   68% expected band : 1.50463 < r < 1.50463
   95% expected band : 1.50463 < r < 1.50463
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1769479123
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38838 +/- 0.00624573 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.38838 @ 95%CL (1 toyMC)
median expected limit: r < 1.38838 @ 95%CL (1 toyMC)
   68% expected band : 1.38838 < r < 1.38838
   95% expected band : 1.38838 < r < 1.38838
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1760837835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20315 +/- 0.00504058 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.20315 @ 95%CL (1 toyMC)
median expected limit: r < 1.20315 @ 95%CL (1 toyMC)
   68% expected band : 1.20315 < r < 1.20315
   95% expected band : 1.20315 < r < 1.20315
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 591716761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36307 +/- 0.00504644 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.36307 @ 95%CL (1 toyMC)
median expected limit: r < 1.36307 @ 95%CL (1 toyMC)
   68% expected band : 1.36307 < r < 1.36307
   95% expected band : 1.36307 < r < 1.36307
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2021595258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35189 +/- 0.00516652 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35189 @ 95%CL (1 toyMC)
median expected limit: r < 1.35189 @ 95%CL (1 toyMC)
   68% expected band : 1.35189 < r < 1.35189
   95% expected band : 1.35189 < r < 1.35189
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -615612236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28755 +/- 0.00511101 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.28755 @ 95%CL (1 toyMC)
median expected limit: r < 1.28755 @ 95%CL (1 toyMC)
   68% expected band : 1.28755 < r < 1.28755
   95% expected band : 1.28755 < r < 1.28755
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -26613651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.943759 +/- 0.00432112 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.943759 @ 95%CL (1 toyMC)
median expected limit: r < 0.943759 @ 95%CL (1 toyMC)
   68% expected band : 0.943759 < r < 0.943759
   95% expected band : 0.943759 < r < 0.943759
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 919908788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06204 +/- 0.0082516 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.06204 @ 95%CL (1 toyMC)
median expected limit: r < 2.06204 @ 95%CL (1 toyMC)
   68% expected band : 2.06204 < r < 2.06204
   95% expected band : 2.06204 < r < 2.06204
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 542828488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.781036 +/- 0.00403801 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.781036 @ 95%CL (1 toyMC)
median expected limit: r < 0.781036 @ 95%CL (1 toyMC)
   68% expected band : 0.781036 < r < 0.781036
   95% expected band : 0.781036 < r < 0.781036
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1255839037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71183 +/- 0.00645789 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71183 @ 95%CL (1 toyMC)
median expected limit: r < 1.71183 @ 95%CL (1 toyMC)
   68% expected band : 1.71183 < r < 1.71183
   95% expected band : 1.71183 < r < 1.71183
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1681462847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.84417 +/- 0.00708798 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.84417 @ 95%CL (1 toyMC)
median expected limit: r < 2.84417 @ 95%CL (1 toyMC)
   68% expected band : 2.84417 < r < 2.84417
   95% expected band : 2.84417 < r < 2.84417
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -831223245
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13245 +/- 0.00554976 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.13245 @ 95%CL (1 toyMC)
median expected limit: r < 1.13245 @ 95%CL (1 toyMC)
   68% expected band : 1.13245 < r < 1.13245
   95% expected band : 1.13245 < r < 1.13245
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1270812799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02191 +/- 0.00526422 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.02191 @ 95%CL (1 toyMC)
median expected limit: r < 1.02191 @ 95%CL (1 toyMC)
   68% expected band : 1.02191 < r < 1.02191
   95% expected band : 1.02191 < r < 1.02191
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1376530326
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3876 +/- 0.00444126 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.3876 @ 95%CL (1 toyMC)
median expected limit: r < 1.3876 @ 95%CL (1 toyMC)
   68% expected band : 1.3876 < r < 1.3876
   95% expected band : 1.3876 < r < 1.3876
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1622271549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27321 +/- 0.00658246 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.27321 @ 95%CL (1 toyMC)
median expected limit: r < 1.27321 @ 95%CL (1 toyMC)
   68% expected band : 1.27321 < r < 1.27321
   95% expected band : 1.27321 < r < 1.27321
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -254500491
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04975 +/- 0.00559924 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.04975 @ 95%CL (1 toyMC)
median expected limit: r < 1.04975 @ 95%CL (1 toyMC)
   68% expected band : 1.04975 < r < 1.04975
   95% expected band : 1.04975 < r < 1.04975
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 637428925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2904 +/- 0.00615429 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.2904 @ 95%CL (1 toyMC)
median expected limit: r < 1.2904 @ 95%CL (1 toyMC)
   68% expected band : 1.2904 < r < 1.2904
   95% expected band : 1.2904 < r < 1.2904
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1480784613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2908 +/- 0.00571891 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.2908 @ 95%CL (1 toyMC)
median expected limit: r < 1.2908 @ 95%CL (1 toyMC)
   68% expected band : 1.2908 < r < 1.2908
   95% expected band : 1.2908 < r < 1.2908
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 838964928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09416 +/- 0.00547115 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09416 @ 95%CL (1 toyMC)
median expected limit: r < 1.09416 @ 95%CL (1 toyMC)
   68% expected band : 1.09416 < r < 1.09416
   95% expected band : 1.09416 < r < 1.09416
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2147227608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25533 +/- 0.00552739 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.25533 @ 95%CL (1 toyMC)
median expected limit: r < 1.25533 @ 95%CL (1 toyMC)
   68% expected band : 1.25533 < r < 1.25533
   95% expected band : 1.25533 < r < 1.25533
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 422010570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.31962 +/- 0.00521679 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.31962 @ 95%CL (1 toyMC)
median expected limit: r < 2.31962 @ 95%CL (1 toyMC)
   68% expected band : 2.31962 < r < 2.31962
   95% expected band : 2.31962 < r < 2.31962
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1996875035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.872075 +/- 0.00406202 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.872075 @ 95%CL (1 toyMC)
median expected limit: r < 0.872075 @ 95%CL (1 toyMC)
   68% expected band : 0.872075 < r < 0.872075
   95% expected band : 0.872075 < r < 0.872075
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 203499852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.690563 +/- 0.00354974 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.690563 @ 95%CL (1 toyMC)
median expected limit: r < 0.690563 @ 95%CL (1 toyMC)
   68% expected band : 0.690563 < r < 0.690563
   95% expected band : 0.690563 < r < 0.690563
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1483043714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.918603 +/- 0.00497203 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.918603 @ 95%CL (1 toyMC)
median expected limit: r < 0.918603 @ 95%CL (1 toyMC)
   68% expected band : 0.918603 < r < 0.918603
   95% expected band : 0.918603 < r < 0.918603
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 673377239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25834 +/- 0.00569697 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.25834 @ 95%CL (1 toyMC)
median expected limit: r < 1.25834 @ 95%CL (1 toyMC)
   68% expected band : 1.25834 < r < 1.25834
   95% expected band : 1.25834 < r < 1.25834
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -965771683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06011 +/- 0.0065945 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.06011 @ 95%CL (1 toyMC)
median expected limit: r < 2.06011 @ 95%CL (1 toyMC)
   68% expected band : 2.06011 < r < 2.06011
   95% expected band : 2.06011 < r < 2.06011
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1379189880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52208 +/- 0.0068621 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.52208 @ 95%CL (1 toyMC)
median expected limit: r < 1.52208 @ 95%CL (1 toyMC)
   68% expected band : 1.52208 < r < 1.52208
   95% expected band : 1.52208 < r < 1.52208
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1805237225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.31586 +/- 0.00548765 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.31586 @ 95%CL (1 toyMC)
median expected limit: r < 2.31586 @ 95%CL (1 toyMC)
   68% expected band : 2.31586 < r < 2.31586
   95% expected band : 2.31586 < r < 2.31586
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1024919389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00516 +/- 0.00704825 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00516 @ 95%CL (1 toyMC)
median expected limit: r < 2.00516 @ 95%CL (1 toyMC)
   68% expected band : 2.00516 < r < 2.00516
   95% expected band : 2.00516 < r < 2.00516
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2022046867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.62661 +/- 0.00622788 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.62661 @ 95%CL (1 toyMC)
median expected limit: r < 1.62661 @ 95%CL (1 toyMC)
   68% expected band : 1.62661 < r < 1.62661
   95% expected band : 1.62661 < r < 1.62661
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -356746710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22358 +/- 0.00425356 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.22358 @ 95%CL (1 toyMC)
median expected limit: r < 1.22358 @ 95%CL (1 toyMC)
   68% expected band : 1.22358 < r < 1.22358
   95% expected band : 1.22358 < r < 1.22358
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -173229218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.840695 +/- 0.00499279 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.840695 @ 95%CL (1 toyMC)
median expected limit: r < 0.840695 @ 95%CL (1 toyMC)
   68% expected band : 0.840695 < r < 0.840695
   95% expected band : 0.840695 < r < 0.840695
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1585711966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10595 +/- 0.00391946 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.10595 @ 95%CL (1 toyMC)
median expected limit: r < 2.10595 @ 95%CL (1 toyMC)
   68% expected band : 2.10595 < r < 2.10595
   95% expected band : 2.10595 < r < 2.10595
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1545822862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13168 +/- 0.00521723 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.13168 @ 95%CL (1 toyMC)
median expected limit: r < 1.13168 @ 95%CL (1 toyMC)
   68% expected band : 1.13168 < r < 1.13168
   95% expected band : 1.13168 < r < 1.13168
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -666037318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.938133 +/- 0.00405027 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.938133 @ 95%CL (1 toyMC)
median expected limit: r < 0.938133 @ 95%CL (1 toyMC)
   68% expected band : 0.938133 < r < 0.938133
   95% expected band : 0.938133 < r < 0.938133
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1767982158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.979368 +/- 0.00448506 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 0.979368 @ 95%CL (1 toyMC)
median expected limit: r < 0.979368 @ 95%CL (1 toyMC)
   68% expected band : 0.979368 < r < 0.979368
   95% expected band : 0.979368 < r < 0.979368
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 643770028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.5721 +/- 0.00575328 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.5721 @ 95%CL (1 toyMC)
median expected limit: r < 1.5721 @ 95%CL (1 toyMC)
   68% expected band : 1.5721 < r < 1.5721
   95% expected band : 1.5721 < r < 1.5721
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -530403502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02512 +/- 0.00604254 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02512 @ 95%CL (1 toyMC)
median expected limit: r < 2.02512 @ 95%CL (1 toyMC)
   68% expected band : 2.02512 < r < 2.02512
   95% expected band : 2.02512 < r < 2.02512
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1276831380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29027 +/- 0.00754095 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.29027 @ 95%CL (1 toyMC)
median expected limit: r < 2.29027 @ 95%CL (1 toyMC)
   68% expected band : 2.29027 < r < 2.29027
   95% expected band : 2.29027 < r < 2.29027
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1100272275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.931285 +/- 0.00454259 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.931285 @ 95%CL (1 toyMC)
median expected limit: r < 0.931285 @ 95%CL (1 toyMC)
   68% expected band : 0.931285 < r < 0.931285
   95% expected band : 0.931285 < r < 0.931285
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 174067138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51775 +/- 0.00576129 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.51775 @ 95%CL (1 toyMC)
median expected limit: r < 1.51775 @ 95%CL (1 toyMC)
   68% expected band : 1.51775 < r < 1.51775
   95% expected band : 1.51775 < r < 1.51775
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -266618567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17562 +/- 0.00579573 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.17562 @ 95%CL (1 toyMC)
median expected limit: r < 1.17562 @ 95%CL (1 toyMC)
   68% expected band : 1.17562 < r < 1.17562
   95% expected band : 1.17562 < r < 1.17562
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1596497687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07464 +/- 0.0042822 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.07464 @ 95%CL (1 toyMC)
median expected limit: r < 1.07464 @ 95%CL (1 toyMC)
   68% expected band : 1.07464 < r < 1.07464
   95% expected band : 1.07464 < r < 1.07464
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 7467050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63923 +/- 0.00617447 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.63923 @ 95%CL (1 toyMC)
median expected limit: r < 1.63923 @ 95%CL (1 toyMC)
   68% expected band : 1.63923 < r < 1.63923
   95% expected band : 1.63923 < r < 1.63923
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1657204668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46486 +/- 0.00628495 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.46486 @ 95%CL (1 toyMC)
median expected limit: r < 1.46486 @ 95%CL (1 toyMC)
   68% expected band : 1.46486 < r < 1.46486
   95% expected band : 1.46486 < r < 1.46486
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 256205651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96568 +/- 0.0060054 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.96568 @ 95%CL (1 toyMC)
median expected limit: r < 1.96568 @ 95%CL (1 toyMC)
   68% expected band : 1.96568 < r < 1.96568
   95% expected band : 1.96568 < r < 1.96568
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1470018173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10935 +/- 0.0056344 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.10935 @ 95%CL (1 toyMC)
median expected limit: r < 1.10935 @ 95%CL (1 toyMC)
   68% expected band : 1.10935 < r < 1.10935
   95% expected band : 1.10935 < r < 1.10935
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 450312039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.72912 +/- 0.00505375 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.72912 @ 95%CL (1 toyMC)
median expected limit: r < 1.72912 @ 95%CL (1 toyMC)
   68% expected band : 1.72912 < r < 1.72912
   95% expected band : 1.72912 < r < 1.72912
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1368642129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42474 +/- 0.00564 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.42474 @ 95%CL (1 toyMC)
median expected limit: r < 1.42474 @ 95%CL (1 toyMC)
   68% expected band : 1.42474 < r < 1.42474
   95% expected band : 1.42474 < r < 1.42474
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 199260761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42805 +/- 0.00528807 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.42805 @ 95%CL (1 toyMC)
median expected limit: r < 1.42805 @ 95%CL (1 toyMC)
   68% expected band : 1.42805 < r < 1.42805
   95% expected band : 1.42805 < r < 1.42805
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 873246618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26287 +/- 0.00581518 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.26287 @ 95%CL (1 toyMC)
median expected limit: r < 1.26287 @ 95%CL (1 toyMC)
   68% expected band : 1.26287 < r < 1.26287
   95% expected band : 1.26287 < r < 1.26287
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1296946423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18103 +/- 0.00537023 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.18103 @ 95%CL (1 toyMC)
median expected limit: r < 1.18103 @ 95%CL (1 toyMC)
   68% expected band : 1.18103 < r < 1.18103
   95% expected band : 1.18103 < r < 1.18103
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 92636071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.764732 +/- 0.00468672 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.764732 @ 95%CL (1 toyMC)
median expected limit: r < 0.764732 @ 95%CL (1 toyMC)
   68% expected band : 0.764732 < r < 0.764732
   95% expected band : 0.764732 < r < 0.764732
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1947580975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35151 +/- 0.0061668 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35151 @ 95%CL (1 toyMC)
median expected limit: r < 1.35151 @ 95%CL (1 toyMC)
   68% expected band : 1.35151 < r < 1.35151
   95% expected band : 1.35151 < r < 1.35151
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 924963501
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.10643 +/- 0.00732074 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.10643 @ 95%CL (1 toyMC)
median expected limit: r < 3.10643 @ 95%CL (1 toyMC)
   68% expected band : 3.10643 < r < 3.10643
   95% expected band : 3.10643 < r < 3.10643
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -23372444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05121 +/- 0.00482543 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.05121 @ 95%CL (1 toyMC)
median expected limit: r < 1.05121 @ 95%CL (1 toyMC)
   68% expected band : 1.05121 < r < 1.05121
   95% expected band : 1.05121 < r < 1.05121
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 527485742
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17841 +/- 0.00457899 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.17841 @ 95%CL (1 toyMC)
median expected limit: r < 1.17841 @ 95%CL (1 toyMC)
   68% expected band : 1.17841 < r < 1.17841
   95% expected band : 1.17841 < r < 1.17841
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 340823627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1906 +/- 0.00485268 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.1906 @ 95%CL (1 toyMC)
median expected limit: r < 1.1906 @ 95%CL (1 toyMC)
   68% expected band : 1.1906 < r < 1.1906
   95% expected band : 1.1906 < r < 1.1906
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1084904625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02956 +/- 0.00597315 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02956 @ 95%CL (1 toyMC)
median expected limit: r < 2.02956 @ 95%CL (1 toyMC)
   68% expected band : 2.02956 < r < 2.02956
   95% expected band : 2.02956 < r < 2.02956
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1281610666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.30065 +/- 0.00643077 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.30065 @ 95%CL (1 toyMC)
median expected limit: r < 3.30065 @ 95%CL (1 toyMC)
   68% expected band : 3.30065 < r < 3.30065
   95% expected band : 3.30065 < r < 3.30065
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 443589046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84442 +/- 0.00712984 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.84442 @ 95%CL (1 toyMC)
median expected limit: r < 1.84442 @ 95%CL (1 toyMC)
   68% expected band : 1.84442 < r < 1.84442
   95% expected band : 1.84442 < r < 1.84442
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1780335005
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04408 +/- 0.00578631 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.04408 @ 95%CL (1 toyMC)
median expected limit: r < 1.04408 @ 95%CL (1 toyMC)
   68% expected band : 1.04408 < r < 1.04408
   95% expected band : 1.04408 < r < 1.04408
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2041656401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0264 +/- 0.00455891 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.0264 @ 95%CL (1 toyMC)
median expected limit: r < 1.0264 @ 95%CL (1 toyMC)
   68% expected band : 1.0264 < r < 1.0264
   95% expected band : 1.0264 < r < 1.0264
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1322060003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48615 +/- 0.00367919 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.48615 @ 95%CL (1 toyMC)
median expected limit: r < 1.48615 @ 95%CL (1 toyMC)
   68% expected band : 1.48615 < r < 1.48615
   95% expected band : 1.48615 < r < 1.48615
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1233487239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14578 +/- 0.00515355 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.14578 @ 95%CL (1 toyMC)
median expected limit: r < 1.14578 @ 95%CL (1 toyMC)
   68% expected band : 1.14578 < r < 1.14578
   95% expected band : 1.14578 < r < 1.14578
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 308517136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70871 +/- 0.00778394 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.70871 @ 95%CL (1 toyMC)
median expected limit: r < 2.70871 @ 95%CL (1 toyMC)
   68% expected band : 2.70871 < r < 2.70871
   95% expected band : 2.70871 < r < 2.70871
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1987862109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87072 +/- 0.00542116 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.87072 @ 95%CL (1 toyMC)
median expected limit: r < 2.87072 @ 95%CL (1 toyMC)
   68% expected band : 2.87072 < r < 2.87072
   95% expected band : 2.87072 < r < 2.87072
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 614106559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76349 +/- 0.0074422 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.76349 @ 95%CL (1 toyMC)
median expected limit: r < 2.76349 @ 95%CL (1 toyMC)
   68% expected band : 2.76349 < r < 2.76349
   95% expected band : 2.76349 < r < 2.76349
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -508897575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.64179 +/- 0.00703679 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.64179 @ 95%CL (1 toyMC)
median expected limit: r < 1.64179 @ 95%CL (1 toyMC)
   68% expected band : 1.64179 < r < 1.64179
   95% expected band : 1.64179 < r < 1.64179
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -709441411
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03026 +/- 0.00491177 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.03026 @ 95%CL (1 toyMC)
median expected limit: r < 1.03026 @ 95%CL (1 toyMC)
   68% expected band : 1.03026 < r < 1.03026
   95% expected band : 1.03026 < r < 1.03026
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 279765195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92751 +/- 0.00678664 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.92751 @ 95%CL (1 toyMC)
median expected limit: r < 1.92751 @ 95%CL (1 toyMC)
   68% expected band : 1.92751 < r < 1.92751
   95% expected band : 1.92751 < r < 1.92751
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -58858377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62377 +/- 0.00629159 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.62377 @ 95%CL (1 toyMC)
median expected limit: r < 2.62377 @ 95%CL (1 toyMC)
   68% expected band : 2.62377 < r < 2.62377
   95% expected band : 2.62377 < r < 2.62377
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 863969885
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29796 +/- 0.00696674 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.29796 @ 95%CL (1 toyMC)
median expected limit: r < 2.29796 @ 95%CL (1 toyMC)
   68% expected band : 2.29796 < r < 2.29796
   95% expected band : 2.29796 < r < 2.29796
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 587858030
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58068 +/- 0.00609924 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.58068 @ 95%CL (1 toyMC)
median expected limit: r < 1.58068 @ 95%CL (1 toyMC)
   68% expected band : 1.58068 < r < 1.58068
   95% expected band : 1.58068 < r < 1.58068
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 544427164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.91486 +/- 0.00353233 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.91486 @ 95%CL (1 toyMC)
median expected limit: r < 0.91486 @ 95%CL (1 toyMC)
   68% expected band : 0.91486 < r < 0.91486
   95% expected band : 0.91486 < r < 0.91486
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -895067630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98489 +/- 0.00645497 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.98489 @ 95%CL (1 toyMC)
median expected limit: r < 1.98489 @ 95%CL (1 toyMC)
   68% expected band : 1.98489 < r < 1.98489
   95% expected band : 1.98489 < r < 1.98489
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2069558974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.707954 +/- 0.004052 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.707954 @ 95%CL (1 toyMC)
median expected limit: r < 0.707954 @ 95%CL (1 toyMC)
   68% expected band : 0.707954 < r < 0.707954
   95% expected band : 0.707954 < r < 0.707954
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1413764490
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2039 +/- 0.00685633 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.2039 @ 95%CL (1 toyMC)
median expected limit: r < 2.2039 @ 95%CL (1 toyMC)
   68% expected band : 2.2039 < r < 2.2039
   95% expected band : 2.2039 < r < 2.2039
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -948819102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47897 +/- 0.00533026 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.47897 @ 95%CL (1 toyMC)
median expected limit: r < 1.47897 @ 95%CL (1 toyMC)
   68% expected band : 1.47897 < r < 1.47897
   95% expected band : 1.47897 < r < 1.47897
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -68562921
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.975654 +/- 0.00458546 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.975654 @ 95%CL (1 toyMC)
median expected limit: r < 0.975654 @ 95%CL (1 toyMC)
   68% expected band : 0.975654 < r < 0.975654
   95% expected band : 0.975654 < r < 0.975654
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -26251398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14152 +/- 0.00547835 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.14152 @ 95%CL (1 toyMC)
median expected limit: r < 1.14152 @ 95%CL (1 toyMC)
   68% expected band : 1.14152 < r < 1.14152
   95% expected band : 1.14152 < r < 1.14152
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -834540329
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16507 +/- 0.00547123 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.16507 @ 95%CL (1 toyMC)
median expected limit: r < 1.16507 @ 95%CL (1 toyMC)
   68% expected band : 1.16507 < r < 1.16507
   95% expected band : 1.16507 < r < 1.16507
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -200048564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.980785 +/- 0.00549662 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.980785 @ 95%CL (1 toyMC)
median expected limit: r < 0.980785 @ 95%CL (1 toyMC)
   68% expected band : 0.980785 < r < 0.980785
   95% expected band : 0.980785 < r < 0.980785
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1294700052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.846713 +/- 0.00422353 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.846713 @ 95%CL (1 toyMC)
median expected limit: r < 0.846713 @ 95%CL (1 toyMC)
   68% expected band : 0.846713 < r < 0.846713
   95% expected band : 0.846713 < r < 0.846713
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -418050114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07 +/- 0.00519914 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.07 @ 95%CL (1 toyMC)
median expected limit: r < 1.07 @ 95%CL (1 toyMC)
   68% expected band : 1.07 < r < 1.07
   95% expected band : 1.07 < r < 1.07
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -165429169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44156 +/- 0.00530569 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.44156 @ 95%CL (1 toyMC)
median expected limit: r < 1.44156 @ 95%CL (1 toyMC)
   68% expected band : 1.44156 < r < 1.44156
   95% expected band : 1.44156 < r < 1.44156
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2035726597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44824 +/- 0.00773849 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.44824 @ 95%CL (1 toyMC)
median expected limit: r < 1.44824 @ 95%CL (1 toyMC)
   68% expected band : 1.44824 < r < 1.44824
   95% expected band : 1.44824 < r < 1.44824
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -211769090
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.942088 +/- 0.00483763 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.942088 @ 95%CL (1 toyMC)
median expected limit: r < 0.942088 @ 95%CL (1 toyMC)
   68% expected band : 0.942088 < r < 0.942088
   95% expected band : 0.942088 < r < 0.942088
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1210683153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06193 +/- 0.00453445 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.06193 @ 95%CL (1 toyMC)
median expected limit: r < 1.06193 @ 95%CL (1 toyMC)
   68% expected band : 1.06193 < r < 1.06193
   95% expected band : 1.06193 < r < 1.06193
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1902219805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33373 +/- 0.00608646 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.33373 @ 95%CL (1 toyMC)
median expected limit: r < 1.33373 @ 95%CL (1 toyMC)
   68% expected band : 1.33373 < r < 1.33373
   95% expected band : 1.33373 < r < 1.33373
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1834026593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88409 +/- 0.00654329 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.88409 @ 95%CL (1 toyMC)
median expected limit: r < 1.88409 @ 95%CL (1 toyMC)
   68% expected band : 1.88409 < r < 1.88409
   95% expected band : 1.88409 < r < 1.88409
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -300305718
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10024 +/- 0.00499662 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.10024 @ 95%CL (1 toyMC)
median expected limit: r < 1.10024 @ 95%CL (1 toyMC)
   68% expected band : 1.10024 < r < 1.10024
   95% expected band : 1.10024 < r < 1.10024
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1026066580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8746 +/- 0.00689958 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.8746 @ 95%CL (1 toyMC)
median expected limit: r < 1.8746 @ 95%CL (1 toyMC)
   68% expected band : 1.8746 < r < 1.8746
   95% expected band : 1.8746 < r < 1.8746
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 871070551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13841 +/- 0.00476409 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.13841 @ 95%CL (1 toyMC)
median expected limit: r < 1.13841 @ 95%CL (1 toyMC)
   68% expected band : 1.13841 < r < 1.13841
   95% expected band : 1.13841 < r < 1.13841
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -106546156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.15419 +/- 0.00574638 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.15419 @ 95%CL (1 toyMC)
median expected limit: r < 2.15419 @ 95%CL (1 toyMC)
   68% expected band : 2.15419 < r < 2.15419
   95% expected band : 2.15419 < r < 2.15419
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -242488847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38204 +/- 0.00548034 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.38204 @ 95%CL (1 toyMC)
median expected limit: r < 1.38204 @ 95%CL (1 toyMC)
   68% expected band : 1.38204 < r < 1.38204
   95% expected band : 1.38204 < r < 1.38204
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1482384498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56488 +/- 0.00712989 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.56488 @ 95%CL (1 toyMC)
median expected limit: r < 1.56488 @ 95%CL (1 toyMC)
   68% expected band : 1.56488 < r < 1.56488
   95% expected band : 1.56488 < r < 1.56488
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1040755576
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.57042 +/- 0.00719398 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.57042 @ 95%CL (1 toyMC)
median expected limit: r < 3.57042 @ 95%CL (1 toyMC)
   68% expected band : 3.57042 < r < 3.57042
   95% expected band : 3.57042 < r < 3.57042
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1168015413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77376 +/- 0.00531662 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.77376 @ 95%CL (1 toyMC)
median expected limit: r < 1.77376 @ 95%CL (1 toyMC)
   68% expected band : 1.77376 < r < 1.77376
   95% expected band : 1.77376 < r < 1.77376
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 136267188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77251 +/- 0.00648916 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.77251 @ 95%CL (1 toyMC)
median expected limit: r < 1.77251 @ 95%CL (1 toyMC)
   68% expected band : 1.77251 < r < 1.77251
   95% expected band : 1.77251 < r < 1.77251
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1024919389.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1026066580.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-106546156.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1084904625.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1100272275.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1168015413.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1210683153.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1270812799.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1276831380.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1294700052.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1296946423.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1368642129.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1376530326.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1413764490.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1483043714.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1488542741.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1585711966.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1596497687.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-165429169.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1657204668.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1681462847.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-173229218.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1760837835.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1780335005.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1805237225.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1902219805.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1947580975.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1996875035.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-200048564.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-2022046867.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-2035726597.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-2069558974.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-211769090.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-23372444.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-242488847.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-254500491.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-26251398.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-26613651.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-266618567.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-300305718.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-356746710.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-418050114.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-508897575.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-530403502.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-58858377.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-615612236.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-666037318.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-68562921.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-709441411.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-831223245.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-834540329.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-895067630.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-948819102.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.-965771683.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1040755576.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1233487239.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1255839037.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1281610666.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1322060003.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.136267188.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1379189880.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1470018173.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1480784613.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1482384498.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1545822862.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1622271549.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.174067138.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1767982158.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1769479123.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1834026593.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1987862109.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.199260761.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.2021595258.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.203499852.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2041656401.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2147227608.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.256205651.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.279765195.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.308517136.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.340823627.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.422010570.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.443589046.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.450312039.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.527485742.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.542828488.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.544427164.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.587858030.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.591716761.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.614106559.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.637428925.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.643770028.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.673377239.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.7467050.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.838964928.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.863969885.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.871070551.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.873246618.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.919908788.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.924963501.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.92636071.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 769523461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70225 +/- 0.00526236 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.70225 @ 95%CL (1 toyMC)
median expected limit: r < 1.70225 @ 95%CL (1 toyMC)
   68% expected band : 1.70225 < r < 1.70225
   95% expected band : 1.70225 < r < 1.70225
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1514211198
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.75905 +/- 0.00479313 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.75905 @ 95%CL (1 toyMC)
median expected limit: r < 1.75905 @ 95%CL (1 toyMC)
   68% expected band : 1.75905 < r < 1.75905
   95% expected band : 1.75905 < r < 1.75905
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1014119780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47579 +/- 0.00451829 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.47579 @ 95%CL (1 toyMC)
median expected limit: r < 1.47579 @ 95%CL (1 toyMC)
   68% expected band : 1.47579 < r < 1.47579
   95% expected band : 1.47579 < r < 1.47579
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1272719085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16239 +/- 0.00479664 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.16239 @ 95%CL (1 toyMC)
median expected limit: r < 1.16239 @ 95%CL (1 toyMC)
   68% expected band : 1.16239 < r < 1.16239
   95% expected band : 1.16239 < r < 1.16239
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1801102004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3138 +/- 0.00526494 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.3138 @ 95%CL (1 toyMC)
median expected limit: r < 2.3138 @ 95%CL (1 toyMC)
   68% expected band : 2.3138 < r < 2.3138
   95% expected band : 2.3138 < r < 2.3138
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1072448604
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.12907 +/- 0.00646045 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 5.12907 @ 95%CL (1 toyMC)
median expected limit: r < 5.12907 @ 95%CL (1 toyMC)
   68% expected band : 5.12907 < r < 5.12907
   95% expected band : 5.12907 < r < 5.12907
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1799139083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.96001 +/- 0.00585698 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.96001 @ 95%CL (1 toyMC)
median expected limit: r < 2.96001 @ 95%CL (1 toyMC)
   68% expected band : 2.96001 < r < 2.96001
   95% expected band : 2.96001 < r < 2.96001
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 103688990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15609 +/- 0.00534919 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.15609 @ 95%CL (1 toyMC)
median expected limit: r < 1.15609 @ 95%CL (1 toyMC)
   68% expected band : 1.15609 < r < 1.15609
   95% expected band : 1.15609 < r < 1.15609
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1610850563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57166 +/- 0.00434712 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.57166 @ 95%CL (1 toyMC)
median expected limit: r < 1.57166 @ 95%CL (1 toyMC)
   68% expected band : 1.57166 < r < 1.57166
   95% expected band : 1.57166 < r < 1.57166
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1405855784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.84414 +/- 0.00681301 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.84414 @ 95%CL (1 toyMC)
median expected limit: r < 2.84414 @ 95%CL (1 toyMC)
   68% expected band : 2.84414 < r < 2.84414
   95% expected band : 2.84414 < r < 2.84414
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 40035614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.05226 +/- 0.0061231 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.05226 @ 95%CL (1 toyMC)
median expected limit: r < 2.05226 @ 95%CL (1 toyMC)
   68% expected band : 2.05226 < r < 2.05226
   95% expected band : 2.05226 < r < 2.05226
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1831374642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57363 +/- 0.00528535 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.57363 @ 95%CL (1 toyMC)
median expected limit: r < 1.57363 @ 95%CL (1 toyMC)
   68% expected band : 1.57363 < r < 1.57363
   95% expected band : 1.57363 < r < 1.57363
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -537728292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.40788 +/- 0.00581717 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.40788 @ 95%CL (1 toyMC)
median expected limit: r < 3.40788 @ 95%CL (1 toyMC)
   68% expected band : 3.40788 < r < 3.40788
   95% expected band : 3.40788 < r < 3.40788
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1805105369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42364 +/- 0.00402946 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.42364 @ 95%CL (1 toyMC)
median expected limit: r < 1.42364 @ 95%CL (1 toyMC)
   68% expected band : 1.42364 < r < 1.42364
   95% expected band : 1.42364 < r < 1.42364
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 424899040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35599 +/- 0.0055098 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.35599 @ 95%CL (1 toyMC)
median expected limit: r < 1.35599 @ 95%CL (1 toyMC)
   68% expected band : 1.35599 < r < 1.35599
   95% expected band : 1.35599 < r < 1.35599
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 275758055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96878 +/- 0.0068738 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.96878 @ 95%CL (1 toyMC)
median expected limit: r < 1.96878 @ 95%CL (1 toyMC)
   68% expected band : 1.96878 < r < 1.96878
   95% expected band : 1.96878 < r < 1.96878
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 511313922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1396 +/- 0.00514782 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.1396 @ 95%CL (1 toyMC)
median expected limit: r < 1.1396 @ 95%CL (1 toyMC)
   68% expected band : 1.1396 < r < 1.1396
   95% expected band : 1.1396 < r < 1.1396
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -983915660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18802 +/- 0.0056463 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.18802 @ 95%CL (1 toyMC)
median expected limit: r < 2.18802 @ 95%CL (1 toyMC)
   68% expected band : 2.18802 < r < 2.18802
   95% expected band : 2.18802 < r < 2.18802
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1930580417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37373 +/- 0.0057931 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.37373 @ 95%CL (1 toyMC)
median expected limit: r < 2.37373 @ 95%CL (1 toyMC)
   68% expected band : 2.37373 < r < 2.37373
   95% expected band : 2.37373 < r < 2.37373
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -594043627
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18546 +/- 0.0049642 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.18546 @ 95%CL (1 toyMC)
median expected limit: r < 1.18546 @ 95%CL (1 toyMC)
   68% expected band : 1.18546 < r < 1.18546
   95% expected band : 1.18546 < r < 1.18546
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1871289988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.975534 +/- 0.00335569 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.975534 @ 95%CL (1 toyMC)
median expected limit: r < 0.975534 @ 95%CL (1 toyMC)
   68% expected band : 0.975534 < r < 0.975534
   95% expected band : 0.975534 < r < 0.975534
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 208001313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23929 +/- 0.00490396 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.23929 @ 95%CL (1 toyMC)
median expected limit: r < 1.23929 @ 95%CL (1 toyMC)
   68% expected band : 1.23929 < r < 1.23929
   95% expected band : 1.23929 < r < 1.23929
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1968982555
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13236 +/- 0.00380651 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.13236 @ 95%CL (1 toyMC)
median expected limit: r < 1.13236 @ 95%CL (1 toyMC)
   68% expected band : 1.13236 < r < 1.13236
   95% expected band : 1.13236 < r < 1.13236
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1938394724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.96936 +/- 0.00394059 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 0.96936 @ 95%CL (1 toyMC)
median expected limit: r < 0.96936 @ 95%CL (1 toyMC)
   68% expected band : 0.96936 < r < 0.96936
   95% expected band : 0.96936 < r < 0.96936
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1712345413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98633 +/- 0.00522168 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.98633 @ 95%CL (1 toyMC)
median expected limit: r < 1.98633 @ 95%CL (1 toyMC)
   68% expected band : 1.98633 < r < 1.98633
   95% expected band : 1.98633 < r < 1.98633
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 966820370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13091 +/- 0.00568155 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.13091 @ 95%CL (1 toyMC)
median expected limit: r < 3.13091 @ 95%CL (1 toyMC)
   68% expected band : 3.13091 < r < 3.13091
   95% expected band : 3.13091 < r < 3.13091
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 134949045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.42293 +/- 0.00525146 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.42293 @ 95%CL (1 toyMC)
median expected limit: r < 3.42293 @ 95%CL (1 toyMC)
   68% expected band : 3.42293 < r < 3.42293
   95% expected band : 3.42293 < r < 3.42293
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -836310771
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28131 +/- 0.00525847 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.28131 @ 95%CL (1 toyMC)
median expected limit: r < 1.28131 @ 95%CL (1 toyMC)
   68% expected band : 1.28131 < r < 1.28131
   95% expected band : 1.28131 < r < 1.28131
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 954169743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44199 +/- 0.00694332 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.44199 @ 95%CL (1 toyMC)
median expected limit: r < 2.44199 @ 95%CL (1 toyMC)
   68% expected band : 2.44199 < r < 2.44199
   95% expected band : 2.44199 < r < 2.44199
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1838159275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28366 +/- 0.00513401 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.28366 @ 95%CL (1 toyMC)
median expected limit: r < 1.28366 @ 95%CL (1 toyMC)
   68% expected band : 1.28366 < r < 1.28366
   95% expected band : 1.28366 < r < 1.28366
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1361592042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54714 +/- 0.00618758 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.54714 @ 95%CL (1 toyMC)
median expected limit: r < 2.54714 @ 95%CL (1 toyMC)
   68% expected band : 2.54714 < r < 2.54714
   95% expected band : 2.54714 < r < 2.54714
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -440396359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3239 +/- 0.00703224 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.3239 @ 95%CL (1 toyMC)
median expected limit: r < 2.3239 @ 95%CL (1 toyMC)
   68% expected band : 2.3239 < r < 2.3239
   95% expected band : 2.3239 < r < 2.3239
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1866071533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42901 +/- 0.00672535 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.42901 @ 95%CL (1 toyMC)
median expected limit: r < 2.42901 @ 95%CL (1 toyMC)
   68% expected band : 2.42901 < r < 2.42901
   95% expected band : 2.42901 < r < 2.42901
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1351718415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.49115 +/- 0.00581879 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.49115 @ 95%CL (1 toyMC)
median expected limit: r < 1.49115 @ 95%CL (1 toyMC)
   68% expected band : 1.49115 < r < 1.49115
   95% expected band : 1.49115 < r < 1.49115
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1678027566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69459 +/- 0.00653434 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.69459 @ 95%CL (1 toyMC)
median expected limit: r < 2.69459 @ 95%CL (1 toyMC)
   68% expected band : 2.69459 < r < 2.69459
   95% expected band : 2.69459 < r < 2.69459
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -197148610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.988556 +/- 0.0047808 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.988556 @ 95%CL (1 toyMC)
median expected limit: r < 0.988556 @ 95%CL (1 toyMC)
   68% expected band : 0.988556 < r < 0.988556
   95% expected band : 0.988556 < r < 0.988556
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -770700098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78781 +/- 0.00575648 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.78781 @ 95%CL (1 toyMC)
median expected limit: r < 1.78781 @ 95%CL (1 toyMC)
   68% expected band : 1.78781 < r < 1.78781
   95% expected band : 1.78781 < r < 1.78781
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1708346062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.43295 +/- 0.00504508 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.43295 @ 95%CL (1 toyMC)
median expected limit: r < 2.43295 @ 95%CL (1 toyMC)
   68% expected band : 2.43295 < r < 2.43295
   95% expected band : 2.43295 < r < 2.43295
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 751333312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83249 +/- 0.00610801 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.83249 @ 95%CL (1 toyMC)
median expected limit: r < 1.83249 @ 95%CL (1 toyMC)
   68% expected band : 1.83249 < r < 1.83249
   95% expected band : 1.83249 < r < 1.83249
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 874104686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35405 +/- 0.00627105 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35405 @ 95%CL (1 toyMC)
median expected limit: r < 1.35405 @ 95%CL (1 toyMC)
   68% expected band : 1.35405 < r < 1.35405
   95% expected band : 1.35405 < r < 1.35405
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 478985566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41253 +/- 0.00578006 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.41253 @ 95%CL (1 toyMC)
median expected limit: r < 2.41253 @ 95%CL (1 toyMC)
   68% expected band : 2.41253 < r < 2.41253
   95% expected band : 2.41253 < r < 2.41253
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1886651675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.13936 +/- 0.00660469 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.13936 @ 95%CL (1 toyMC)
median expected limit: r < 2.13936 @ 95%CL (1 toyMC)
   68% expected band : 2.13936 < r < 2.13936
   95% expected band : 2.13936 < r < 2.13936
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1431770562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.75479 +/- 0.00419284 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.75479 @ 95%CL (1 toyMC)
median expected limit: r < 1.75479 @ 95%CL (1 toyMC)
   68% expected band : 1.75479 < r < 1.75479
   95% expected band : 1.75479 < r < 1.75479
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1148603746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40538 +/- 0.00433923 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.40538 @ 95%CL (1 toyMC)
median expected limit: r < 1.40538 @ 95%CL (1 toyMC)
   68% expected band : 1.40538 < r < 1.40538
   95% expected band : 1.40538 < r < 1.40538
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 193995470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29031 +/- 0.00498335 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.29031 @ 95%CL (1 toyMC)
median expected limit: r < 1.29031 @ 95%CL (1 toyMC)
   68% expected band : 1.29031 < r < 1.29031
   95% expected band : 1.29031 < r < 1.29031
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1189408074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61488 +/- 0.00609212 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.61488 @ 95%CL (1 toyMC)
median expected limit: r < 1.61488 @ 95%CL (1 toyMC)
   68% expected band : 1.61488 < r < 1.61488
   95% expected band : 1.61488 < r < 1.61488
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1834633521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30689 +/- 0.00494345 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.30689 @ 95%CL (1 toyMC)
median expected limit: r < 1.30689 @ 95%CL (1 toyMC)
   68% expected band : 1.30689 < r < 1.30689
   95% expected band : 1.30689 < r < 1.30689
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1684443014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58648 +/- 0.00623765 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.58648 @ 95%CL (1 toyMC)
median expected limit: r < 1.58648 @ 95%CL (1 toyMC)
   68% expected band : 1.58648 < r < 1.58648
   95% expected band : 1.58648 < r < 1.58648
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -45741384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71234 +/- 0.00503802 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.71234 @ 95%CL (1 toyMC)
median expected limit: r < 1.71234 @ 95%CL (1 toyMC)
   68% expected band : 1.71234 < r < 1.71234
   95% expected band : 1.71234 < r < 1.71234
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2022688460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35337 +/- 0.00463283 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35337 @ 95%CL (1 toyMC)
median expected limit: r < 1.35337 @ 95%CL (1 toyMC)
   68% expected band : 1.35337 < r < 1.35337
   95% expected band : 1.35337 < r < 1.35337
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -352909647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10248 +/- 0.00353389 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.10248 @ 95%CL (1 toyMC)
median expected limit: r < 1.10248 @ 95%CL (1 toyMC)
   68% expected band : 1.10248 < r < 1.10248
   95% expected band : 1.10248 < r < 1.10248
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -10769471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63869 +/- 0.00567036 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.63869 @ 95%CL (1 toyMC)
median expected limit: r < 1.63869 @ 95%CL (1 toyMC)
   68% expected band : 1.63869 < r < 1.63869
   95% expected band : 1.63869 < r < 1.63869
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -473421350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.39832 +/- 0.00599818 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.39832 @ 95%CL (1 toyMC)
median expected limit: r < 2.39832 @ 95%CL (1 toyMC)
   68% expected band : 2.39832 < r < 2.39832
   95% expected band : 2.39832 < r < 2.39832
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -602089193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19547 +/- 0.00449566 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.19547 @ 95%CL (1 toyMC)
median expected limit: r < 1.19547 @ 95%CL (1 toyMC)
   68% expected band : 1.19547 < r < 1.19547
   95% expected band : 1.19547 < r < 1.19547
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1203614533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59087 +/- 0.00502738 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.59087 @ 95%CL (1 toyMC)
median expected limit: r < 1.59087 @ 95%CL (1 toyMC)
   68% expected band : 1.59087 < r < 1.59087
   95% expected band : 1.59087 < r < 1.59087
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 283068426
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27852 +/- 0.0040393 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.27852 @ 95%CL (1 toyMC)
median expected limit: r < 1.27852 @ 95%CL (1 toyMC)
   68% expected band : 1.27852 < r < 1.27852
   95% expected band : 1.27852 < r < 1.27852
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1015666874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.54448 +/- 0.00500305 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.54448 @ 95%CL (1 toyMC)
median expected limit: r < 1.54448 @ 95%CL (1 toyMC)
   68% expected band : 1.54448 < r < 1.54448
   95% expected band : 1.54448 < r < 1.54448
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1262321342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71109 +/- 0.00482461 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71109 @ 95%CL (1 toyMC)
median expected limit: r < 1.71109 @ 95%CL (1 toyMC)
   68% expected band : 1.71109 < r < 1.71109
   95% expected band : 1.71109 < r < 1.71109
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1889918330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56115 +/- 0.00583737 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.56115 @ 95%CL (1 toyMC)
median expected limit: r < 1.56115 @ 95%CL (1 toyMC)
   68% expected band : 1.56115 < r < 1.56115
   95% expected band : 1.56115 < r < 1.56115
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2050596218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12498 +/- 0.00403009 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.12498 @ 95%CL (1 toyMC)
median expected limit: r < 1.12498 @ 95%CL (1 toyMC)
   68% expected band : 1.12498 < r < 1.12498
   95% expected band : 1.12498 < r < 1.12498
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 124257702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36331 +/- 0.00698455 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.36331 @ 95%CL (1 toyMC)
median expected limit: r < 2.36331 @ 95%CL (1 toyMC)
   68% expected band : 2.36331 < r < 2.36331
   95% expected band : 2.36331 < r < 2.36331
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 262317526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03689 +/- 0.00450236 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.03689 @ 95%CL (1 toyMC)
median expected limit: r < 2.03689 @ 95%CL (1 toyMC)
   68% expected band : 2.03689 < r < 2.03689
   95% expected band : 2.03689 < r < 2.03689
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1101697399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.09208 +/- 0.00572256 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.09208 @ 95%CL (1 toyMC)
median expected limit: r < 2.09208 @ 95%CL (1 toyMC)
   68% expected band : 2.09208 < r < 2.09208
   95% expected band : 2.09208 < r < 2.09208
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1997462331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.4104 +/- 0.00677627 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.4104 @ 95%CL (1 toyMC)
median expected limit: r < 2.4104 @ 95%CL (1 toyMC)
   68% expected band : 2.4104 < r < 2.4104
   95% expected band : 2.4104 < r < 2.4104
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1247202328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15272 +/- 0.00391656 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.15272 @ 95%CL (1 toyMC)
median expected limit: r < 1.15272 @ 95%CL (1 toyMC)
   68% expected band : 1.15272 < r < 1.15272
   95% expected band : 1.15272 < r < 1.15272
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 151518433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31203 +/- 0.00467444 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.31203 @ 95%CL (1 toyMC)
median expected limit: r < 1.31203 @ 95%CL (1 toyMC)
   68% expected band : 1.31203 < r < 1.31203
   95% expected band : 1.31203 < r < 1.31203
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 794208234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95244 +/- 0.00498379 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.95244 @ 95%CL (1 toyMC)
median expected limit: r < 1.95244 @ 95%CL (1 toyMC)
   68% expected band : 1.95244 < r < 1.95244
   95% expected band : 1.95244 < r < 1.95244
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 342569004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.93651 +/- 0.00589527 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.93651 @ 95%CL (1 toyMC)
median expected limit: r < 1.93651 @ 95%CL (1 toyMC)
   68% expected band : 1.93651 < r < 1.93651
   95% expected band : 1.93651 < r < 1.93651
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -979711037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.9392 +/- 0.00412418 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.9392 @ 95%CL (1 toyMC)
median expected limit: r < 0.9392 @ 95%CL (1 toyMC)
   68% expected band : 0.9392 < r < 0.9392
   95% expected band : 0.9392 < r < 0.9392
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1405040642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.55287 +/- 0.00453845 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.55287 @ 95%CL (1 toyMC)
median expected limit: r < 1.55287 @ 95%CL (1 toyMC)
   68% expected band : 1.55287 < r < 1.55287
   95% expected band : 1.55287 < r < 1.55287
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -455311323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.87638 +/- 0.00450187 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.87638 @ 95%CL (1 toyMC)
median expected limit: r < 1.87638 @ 95%CL (1 toyMC)
   68% expected band : 1.87638 < r < 1.87638
   95% expected band : 1.87638 < r < 1.87638
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1936914833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.64642 +/- 0.00642941 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.64642 @ 95%CL (1 toyMC)
median expected limit: r < 3.64642 @ 95%CL (1 toyMC)
   68% expected band : 3.64642 < r < 3.64642
   95% expected band : 3.64642 < r < 3.64642
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1224707391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20203 +/- 0.00555013 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.20203 @ 95%CL (1 toyMC)
median expected limit: r < 2.20203 @ 95%CL (1 toyMC)
   68% expected band : 2.20203 < r < 2.20203
   95% expected band : 2.20203 < r < 2.20203
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1488709681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.09004 +/- 0.00649497 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.09004 @ 95%CL (1 toyMC)
median expected limit: r < 2.09004 @ 95%CL (1 toyMC)
   68% expected band : 2.09004 < r < 2.09004
   95% expected band : 2.09004 < r < 2.09004
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -477449328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22578 +/- 0.00435183 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.22578 @ 95%CL (1 toyMC)
median expected limit: r < 1.22578 @ 95%CL (1 toyMC)
   68% expected band : 1.22578 < r < 1.22578
   95% expected band : 1.22578 < r < 1.22578
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -527568868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60928 +/- 0.00500132 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.60928 @ 95%CL (1 toyMC)
median expected limit: r < 1.60928 @ 95%CL (1 toyMC)
   68% expected band : 1.60928 < r < 1.60928
   95% expected band : 1.60928 < r < 1.60928
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 134618944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8598 +/- 0.00633182 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.8598 @ 95%CL (1 toyMC)
median expected limit: r < 2.8598 @ 95%CL (1 toyMC)
   68% expected band : 2.8598 < r < 2.8598
   95% expected band : 2.8598 < r < 2.8598
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1822471863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71321 +/- 0.00570862 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71321 @ 95%CL (1 toyMC)
median expected limit: r < 1.71321 @ 95%CL (1 toyMC)
   68% expected band : 1.71321 < r < 1.71321
   95% expected band : 1.71321 < r < 1.71321
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1871850477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1242 +/- 0.00463491 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.1242 @ 95%CL (1 toyMC)
median expected limit: r < 2.1242 @ 95%CL (1 toyMC)
   68% expected band : 2.1242 < r < 2.1242
   95% expected band : 2.1242 < r < 2.1242
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1698831863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1126 +/- 0.00392166 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.1126 @ 95%CL (1 toyMC)
median expected limit: r < 1.1126 @ 95%CL (1 toyMC)
   68% expected band : 1.1126 < r < 1.1126
   95% expected band : 1.1126 < r < 1.1126
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1654503434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.74105 +/- 0.005105 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.74105 @ 95%CL (1 toyMC)
median expected limit: r < 1.74105 @ 95%CL (1 toyMC)
   68% expected band : 1.74105 < r < 1.74105
   95% expected band : 1.74105 < r < 1.74105
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 96411717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3272 +/- 0.00392813 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3272 @ 95%CL (1 toyMC)
median expected limit: r < 1.3272 @ 95%CL (1 toyMC)
   68% expected band : 1.3272 < r < 1.3272
   95% expected band : 1.3272 < r < 1.3272
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1119053093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36268 +/- 0.00428497 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.36268 @ 95%CL (1 toyMC)
median expected limit: r < 1.36268 @ 95%CL (1 toyMC)
   68% expected band : 1.36268 < r < 1.36268
   95% expected band : 1.36268 < r < 1.36268
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2008354541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13441 +/- 0.00464332 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.13441 @ 95%CL (1 toyMC)
median expected limit: r < 1.13441 @ 95%CL (1 toyMC)
   68% expected band : 1.13441 < r < 1.13441
   95% expected band : 1.13441 < r < 1.13441
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1168020110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67822 +/- 0.00481649 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.67822 @ 95%CL (1 toyMC)
median expected limit: r < 1.67822 @ 95%CL (1 toyMC)
   68% expected band : 1.67822 < r < 1.67822
   95% expected band : 1.67822 < r < 1.67822
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1098179126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01636 +/- 0.00367179 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.01636 @ 95%CL (1 toyMC)
median expected limit: r < 1.01636 @ 95%CL (1 toyMC)
   68% expected band : 1.01636 < r < 1.01636
   95% expected band : 1.01636 < r < 1.01636
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 519966672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.53179 +/- 0.00435683 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.53179 @ 95%CL (1 toyMC)
median expected limit: r < 1.53179 @ 95%CL (1 toyMC)
   68% expected band : 1.53179 < r < 1.53179
   95% expected band : 1.53179 < r < 1.53179
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1320578997
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1552 +/- 0.0063177 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.1552 @ 95%CL (1 toyMC)
median expected limit: r < 2.1552 @ 95%CL (1 toyMC)
   68% expected band : 2.1552 < r < 2.1552
   95% expected band : 2.1552 < r < 2.1552
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2017703871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78757 +/- 0.00544189 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.78757 @ 95%CL (1 toyMC)
median expected limit: r < 1.78757 @ 95%CL (1 toyMC)
   68% expected band : 1.78757 < r < 1.78757
   95% expected band : 1.78757 < r < 1.78757
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2105527618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12385 +/- 0.00580609 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.12385 @ 95%CL (1 toyMC)
median expected limit: r < 2.12385 @ 95%CL (1 toyMC)
   68% expected band : 2.12385 < r < 2.12385
   95% expected band : 2.12385 < r < 2.12385
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 806380508
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23805 +/- 0.00582878 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.23805 @ 95%CL (1 toyMC)
median expected limit: r < 1.23805 @ 95%CL (1 toyMC)
   68% expected band : 1.23805 < r < 1.23805
   95% expected band : 1.23805 < r < 1.23805
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1399748114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.50227 +/- 0.00624864 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.50227 @ 95%CL (1 toyMC)
median expected limit: r < 2.50227 @ 95%CL (1 toyMC)
   68% expected band : 2.50227 < r < 2.50227
   95% expected band : 2.50227 < r < 2.50227
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -157400958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.23511 +/- 0.00521115 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.23511 @ 95%CL (1 toyMC)
median expected limit: r < 2.23511 @ 95%CL (1 toyMC)
   68% expected band : 2.23511 < r < 2.23511
   95% expected band : 2.23511 < r < 2.23511
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -136250445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.689242 +/- 0.00310734 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.689242 @ 95%CL (1 toyMC)
median expected limit: r < 0.689242 @ 95%CL (1 toyMC)
   68% expected band : 0.689242 < r < 0.689242
   95% expected band : 0.689242 < r < 0.689242
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1864106571
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05733 +/- 0.00473911 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.05733 @ 95%CL (1 toyMC)
median expected limit: r < 1.05733 @ 95%CL (1 toyMC)
   68% expected band : 1.05733 < r < 1.05733
   95% expected band : 1.05733 < r < 1.05733
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -144181992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.782446 +/- 0.00267316 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 0.782446 @ 95%CL (1 toyMC)
median expected limit: r < 0.782446 @ 95%CL (1 toyMC)
   68% expected band : 0.782446 < r < 0.782446
   95% expected band : 0.782446 < r < 0.782446
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1219313337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.801787 +/- 0.00387212 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.801787 @ 95%CL (1 toyMC)
median expected limit: r < 0.801787 @ 95%CL (1 toyMC)
   68% expected band : 0.801787 < r < 0.801787
   95% expected band : 0.801787 < r < 0.801787
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1874008263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73378 +/- 0.00425344 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.73378 @ 95%CL (1 toyMC)
median expected limit: r < 1.73378 @ 95%CL (1 toyMC)
   68% expected band : 1.73378 < r < 1.73378
   95% expected band : 1.73378 < r < 1.73378
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1023892557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14414 +/- 0.00465617 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.14414 @ 95%CL (1 toyMC)
median expected limit: r < 1.14414 @ 95%CL (1 toyMC)
   68% expected band : 1.14414 < r < 1.14414
   95% expected band : 1.14414 < r < 1.14414
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -341355029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40261 +/- 0.00562762 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.40261 @ 95%CL (1 toyMC)
median expected limit: r < 1.40261 @ 95%CL (1 toyMC)
   68% expected band : 1.40261 < r < 1.40261
   95% expected band : 1.40261 < r < 1.40261
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1014119780.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-10769471.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1101697399.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1168020110.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1189408074.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1203614533.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1219313337.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1247202328.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1262321342.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1361592042.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-136250445.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-144181992.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-157400958.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1654503434.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1678027566.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1698831863.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1708346062.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1712345413.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1866071533.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1874008263.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1886651675.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1968982555.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-197148610.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1997462331.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2017703871.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2050596218.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-2105527618.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-341355029.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-352909647.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-440396359.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-455311323.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-45741384.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-473421350.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-477449328.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-527568868.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-537728292.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-594043627.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-602089193.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-770700098.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-836310771.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-979711037.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-983915660.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.1015666874.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.1023892557.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.103688990.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.1072448604.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.1098179126.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1119053093.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1148603746.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1224707391.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.124257702.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1272719085.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1320578997.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.134618944.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.134949045.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1351718415.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1399748114.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1405040642.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1405855784.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1431770562.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1488709681.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1514211198.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.151518433.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1610850563.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1684443014.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1799139083.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1801102004.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1805105369.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1822471863.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1831374642.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1834633521.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1838159275.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1864106571.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1871289988.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1871850477.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1889918330.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1930580417.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1936914833.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.1938394724.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.193995470.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.2008354541.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.2022688460.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.208001313.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.262317526.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.275758055.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.283068426.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.342569004.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.40035614.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.424899040.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.478985566.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.511313922.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.519966672.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.751333312.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.769523461.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.794208234.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.806380508.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.874104686.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.954169743.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.96411717.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.966820370.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946467103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60273 +/- 0.00486926 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.60273 @ 95%CL (1 toyMC)
median expected limit: r < 1.60273 @ 95%CL (1 toyMC)
   68% expected band : 1.60273 < r < 1.60273
   95% expected band : 1.60273 < r < 1.60273
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -509395939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03251 +/- 0.0052872 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.03251 @ 95%CL (1 toyMC)
median expected limit: r < 4.03251 @ 95%CL (1 toyMC)
   68% expected band : 4.03251 < r < 4.03251
   95% expected band : 4.03251 < r < 4.03251
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1430441120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06559 +/- 0.0049503 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.06559 @ 95%CL (1 toyMC)
median expected limit: r < 2.06559 @ 95%CL (1 toyMC)
   68% expected band : 2.06559 < r < 2.06559
   95% expected band : 2.06559 < r < 2.06559
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -574984060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32246 +/- 0.006132 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.32246 @ 95%CL (1 toyMC)
median expected limit: r < 2.32246 @ 95%CL (1 toyMC)
   68% expected band : 2.32246 < r < 2.32246
   95% expected band : 2.32246 < r < 2.32246
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1014279697
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.28044 +/- 0.00551914 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.28044 @ 95%CL (1 toyMC)
median expected limit: r < 2.28044 @ 95%CL (1 toyMC)
   68% expected band : 2.28044 < r < 2.28044
   95% expected band : 2.28044 < r < 2.28044
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1194065928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00255 +/- 0.00596716 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.00255 @ 95%CL (1 toyMC)
median expected limit: r < 2.00255 @ 95%CL (1 toyMC)
   68% expected band : 2.00255 < r < 2.00255
   95% expected band : 2.00255 < r < 2.00255
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -267434079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.66394 +/- 0.00640402 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.66394 @ 95%CL (1 toyMC)
median expected limit: r < 2.66394 @ 95%CL (1 toyMC)
   68% expected band : 2.66394 < r < 2.66394
   95% expected band : 2.66394 < r < 2.66394
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1457863982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09629 +/- 0.00418503 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09629 @ 95%CL (1 toyMC)
median expected limit: r < 1.09629 @ 95%CL (1 toyMC)
   68% expected band : 1.09629 < r < 1.09629
   95% expected band : 1.09629 < r < 1.09629
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1087997570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94472 +/- 0.00507524 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.94472 @ 95%CL (1 toyMC)
median expected limit: r < 1.94472 @ 95%CL (1 toyMC)
   68% expected band : 1.94472 < r < 1.94472
   95% expected band : 1.94472 < r < 1.94472
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1253369593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00135 +/- 0.00615662 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00135 @ 95%CL (1 toyMC)
median expected limit: r < 2.00135 @ 95%CL (1 toyMC)
   68% expected band : 2.00135 < r < 2.00135
   95% expected band : 2.00135 < r < 2.00135
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1035912003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43407 +/- 0.00406767 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.43407 @ 95%CL (1 toyMC)
median expected limit: r < 1.43407 @ 95%CL (1 toyMC)
   68% expected band : 1.43407 < r < 1.43407
   95% expected band : 1.43407 < r < 1.43407
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -751940153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0974 +/- 0.00459741 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.0974 @ 95%CL (1 toyMC)
median expected limit: r < 2.0974 @ 95%CL (1 toyMC)
   68% expected band : 2.0974 < r < 2.0974
   95% expected band : 2.0974 < r < 2.0974
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -717263859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89204 +/- 0.00449756 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.89204 @ 95%CL (1 toyMC)
median expected limit: r < 1.89204 @ 95%CL (1 toyMC)
   68% expected band : 1.89204 < r < 1.89204
   95% expected band : 1.89204 < r < 1.89204
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1353221447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02695 +/- 0.00568426 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.02695 @ 95%CL (1 toyMC)
median expected limit: r < 2.02695 @ 95%CL (1 toyMC)
   68% expected band : 2.02695 < r < 2.02695
   95% expected band : 2.02695 < r < 2.02695
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 487804023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43643 +/- 0.00420962 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.43643 @ 95%CL (1 toyMC)
median expected limit: r < 1.43643 @ 95%CL (1 toyMC)
   68% expected band : 1.43643 < r < 1.43643
   95% expected band : 1.43643 < r < 1.43643
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1255231786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91246 +/- 0.00517561 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91246 @ 95%CL (1 toyMC)
median expected limit: r < 1.91246 @ 95%CL (1 toyMC)
   68% expected band : 1.91246 < r < 1.91246
   95% expected band : 1.91246 < r < 1.91246
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1613682800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37741 +/- 0.00488897 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.37741 @ 95%CL (1 toyMC)
median expected limit: r < 1.37741 @ 95%CL (1 toyMC)
   68% expected band : 1.37741 < r < 1.37741
   95% expected band : 1.37741 < r < 1.37741
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -157410487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.24398 +/- 0.00533541 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.24398 @ 95%CL (1 toyMC)
median expected limit: r < 2.24398 @ 95%CL (1 toyMC)
   68% expected band : 2.24398 < r < 2.24398
   95% expected band : 2.24398 < r < 2.24398
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -173679467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76445 +/- 0.00533869 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.76445 @ 95%CL (1 toyMC)
median expected limit: r < 1.76445 @ 95%CL (1 toyMC)
   68% expected band : 1.76445 < r < 1.76445
   95% expected band : 1.76445 < r < 1.76445
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 104752582
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82917 +/- 0.0053542 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.82917 @ 95%CL (1 toyMC)
median expected limit: r < 1.82917 @ 95%CL (1 toyMC)
   68% expected band : 1.82917 < r < 1.82917
   95% expected band : 1.82917 < r < 1.82917
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1950008910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.08313 +/- 0.00653648 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.08313 @ 95%CL (1 toyMC)
median expected limit: r < 2.08313 @ 95%CL (1 toyMC)
   68% expected band : 2.08313 < r < 2.08313
   95% expected band : 2.08313 < r < 2.08313
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2079006140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.59202 +/- 0.00648804 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.59202 @ 95%CL (1 toyMC)
median expected limit: r < 2.59202 @ 95%CL (1 toyMC)
   68% expected band : 2.59202 < r < 2.59202
   95% expected band : 2.59202 < r < 2.59202
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1406331423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.81949 +/- 0.00724167 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.81949 @ 95%CL (1 toyMC)
median expected limit: r < 3.81949 @ 95%CL (1 toyMC)
   68% expected band : 3.81949 < r < 3.81949
   95% expected band : 3.81949 < r < 3.81949
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1639638532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88481 +/- 0.00540754 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.88481 @ 95%CL (1 toyMC)
median expected limit: r < 1.88481 @ 95%CL (1 toyMC)
   68% expected band : 1.88481 < r < 1.88481
   95% expected band : 1.88481 < r < 1.88481
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1963528698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.24737 +/- 0.00601533 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.24737 @ 95%CL (1 toyMC)
median expected limit: r < 3.24737 @ 95%CL (1 toyMC)
   68% expected band : 3.24737 < r < 3.24737
   95% expected band : 3.24737 < r < 3.24737
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -337373766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36044 +/- 0.00467883 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.36044 @ 95%CL (1 toyMC)
median expected limit: r < 1.36044 @ 95%CL (1 toyMC)
   68% expected band : 1.36044 < r < 1.36044
   95% expected band : 1.36044 < r < 1.36044
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1876120101
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16632 +/- 0.00395809 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.16632 @ 95%CL (1 toyMC)
median expected limit: r < 1.16632 @ 95%CL (1 toyMC)
   68% expected band : 1.16632 < r < 1.16632
   95% expected band : 1.16632 < r < 1.16632
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1452957561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48879 +/- 0.00411183 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.48879 @ 95%CL (1 toyMC)
median expected limit: r < 1.48879 @ 95%CL (1 toyMC)
   68% expected band : 1.48879 < r < 1.48879
   95% expected band : 1.48879 < r < 1.48879
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2132920565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9868 +/- 0.0062723 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.9868 @ 95%CL (1 toyMC)
median expected limit: r < 1.9868 @ 95%CL (1 toyMC)
   68% expected band : 1.9868 < r < 1.9868
   95% expected band : 1.9868 < r < 1.9868
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -991370416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.25991 +/- 0.00813938 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.25991 @ 95%CL (1 toyMC)
median expected limit: r < 4.25991 @ 95%CL (1 toyMC)
   68% expected band : 4.25991 < r < 4.25991
   95% expected band : 4.25991 < r < 4.25991
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1291170081
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51171 +/- 0.00458553 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.51171 @ 95%CL (1 toyMC)
median expected limit: r < 1.51171 @ 95%CL (1 toyMC)
   68% expected band : 1.51171 < r < 1.51171
   95% expected band : 1.51171 < r < 1.51171
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -30337325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46656 +/- 0.00634962 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.46656 @ 95%CL (1 toyMC)
median expected limit: r < 2.46656 @ 95%CL (1 toyMC)
   68% expected band : 2.46656 < r < 2.46656
   95% expected band : 2.46656 < r < 2.46656
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2142988237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.80116 +/- 0.00591521 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.80116 @ 95%CL (1 toyMC)
median expected limit: r < 2.80116 @ 95%CL (1 toyMC)
   68% expected band : 2.80116 < r < 2.80116
   95% expected band : 2.80116 < r < 2.80116
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -507637878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85825 +/- 0.00593523 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.85825 @ 95%CL (1 toyMC)
median expected limit: r < 2.85825 @ 95%CL (1 toyMC)
   68% expected band : 2.85825 < r < 2.85825
   95% expected band : 2.85825 < r < 2.85825
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -509215080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.43165 +/- 0.00563762 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.43165 @ 95%CL (1 toyMC)
median expected limit: r < 2.43165 @ 95%CL (1 toyMC)
   68% expected band : 2.43165 < r < 2.43165
   95% expected band : 2.43165 < r < 2.43165
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1020514465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.01316 +/- 0.00455317 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.01316 @ 95%CL (1 toyMC)
median expected limit: r < 2.01316 @ 95%CL (1 toyMC)
   68% expected band : 2.01316 < r < 2.01316
   95% expected band : 2.01316 < r < 2.01316
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1853736275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85093 +/- 0.00636584 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.85093 @ 95%CL (1 toyMC)
median expected limit: r < 1.85093 @ 95%CL (1 toyMC)
   68% expected band : 1.85093 < r < 1.85093
   95% expected band : 1.85093 < r < 1.85093
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1723871358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49846 +/- 0.00617576 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.49846 @ 95%CL (1 toyMC)
median expected limit: r < 2.49846 @ 95%CL (1 toyMC)
   68% expected band : 2.49846 < r < 2.49846
   95% expected band : 2.49846 < r < 2.49846
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -699744921
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37073 +/- 0.00559093 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.37073 @ 95%CL (1 toyMC)
median expected limit: r < 2.37073 @ 95%CL (1 toyMC)
   68% expected band : 2.37073 < r < 2.37073
   95% expected band : 2.37073 < r < 2.37073
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -970066903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.96074 +/- 0.00681307 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.96074 @ 95%CL (1 toyMC)
median expected limit: r < 3.96074 @ 95%CL (1 toyMC)
   68% expected band : 3.96074 < r < 3.96074
   95% expected band : 3.96074 < r < 3.96074
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2013446573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48844 +/- 0.00522182 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.48844 @ 95%CL (1 toyMC)
median expected limit: r < 2.48844 @ 95%CL (1 toyMC)
   68% expected band : 2.48844 < r < 2.48844
   95% expected band : 2.48844 < r < 2.48844
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 632192454
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39319 +/- 0.00418543 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.39319 @ 95%CL (1 toyMC)
median expected limit: r < 1.39319 @ 95%CL (1 toyMC)
   68% expected band : 1.39319 < r < 1.39319
   95% expected band : 1.39319 < r < 1.39319
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -708759238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.87586 +/- 0.00543861 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.87586 @ 95%CL (1 toyMC)
median expected limit: r < 1.87586 @ 95%CL (1 toyMC)
   68% expected band : 1.87586 < r < 1.87586
   95% expected band : 1.87586 < r < 1.87586
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -744720902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12005 +/- 0.00550663 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.12005 @ 95%CL (1 toyMC)
median expected limit: r < 2.12005 @ 95%CL (1 toyMC)
   68% expected band : 2.12005 < r < 2.12005
   95% expected band : 2.12005 < r < 2.12005
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -725100595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.66279 +/- 0.0052286 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.66279 @ 95%CL (1 toyMC)
median expected limit: r < 2.66279 @ 95%CL (1 toyMC)
   68% expected band : 2.66279 < r < 2.66279
   95% expected band : 2.66279 < r < 2.66279
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1939683951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.26202 +/- 0.00718199 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.26202 @ 95%CL (1 toyMC)
median expected limit: r < 3.26202 @ 95%CL (1 toyMC)
   68% expected band : 3.26202 < r < 3.26202
   95% expected band : 3.26202 < r < 3.26202
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1105318872
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46238 +/- 0.00527843 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.46238 @ 95%CL (1 toyMC)
median expected limit: r < 2.46238 @ 95%CL (1 toyMC)
   68% expected band : 2.46238 < r < 2.46238
   95% expected band : 2.46238 < r < 2.46238
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1734371285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.90487 +/- 0.00524906 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.90487 @ 95%CL (1 toyMC)
median expected limit: r < 2.90487 @ 95%CL (1 toyMC)
   68% expected band : 2.90487 < r < 2.90487
   95% expected band : 2.90487 < r < 2.90487
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 634745280
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60207 +/- 0.00557239 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.60207 @ 95%CL (1 toyMC)
median expected limit: r < 1.60207 @ 95%CL (1 toyMC)
   68% expected band : 1.60207 < r < 1.60207
   95% expected band : 1.60207 < r < 1.60207
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -98988679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42008 +/- 0.00540572 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.42008 @ 95%CL (1 toyMC)
median expected limit: r < 2.42008 @ 95%CL (1 toyMC)
   68% expected band : 2.42008 < r < 2.42008
   95% expected band : 2.42008 < r < 2.42008
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1378505027
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.00552 +/- 0.00621621 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.00552 @ 95%CL (1 toyMC)
median expected limit: r < 3.00552 @ 95%CL (1 toyMC)
   68% expected band : 3.00552 < r < 3.00552
   95% expected band : 3.00552 < r < 3.00552
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 339549536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.26358 +/- 0.0047085 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.26358 @ 95%CL (1 toyMC)
median expected limit: r < 2.26358 @ 95%CL (1 toyMC)
   68% expected band : 2.26358 < r < 2.26358
   95% expected band : 2.26358 < r < 2.26358
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 58033266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.49898 +/- 0.0041208 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.49898 @ 95%CL (1 toyMC)
median expected limit: r < 1.49898 @ 95%CL (1 toyMC)
   68% expected band : 1.49898 < r < 1.49898
   95% expected band : 1.49898 < r < 1.49898
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 498395432
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.57029 +/- 0.00522492 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.57029 @ 95%CL (1 toyMC)
median expected limit: r < 2.57029 @ 95%CL (1 toyMC)
   68% expected band : 2.57029 < r < 2.57029
   95% expected band : 2.57029 < r < 2.57029
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -826444462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.43926 +/- 0.00730283 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.43926 @ 95%CL (1 toyMC)
median expected limit: r < 4.43926 @ 95%CL (1 toyMC)
   68% expected band : 4.43926 < r < 4.43926
   95% expected band : 4.43926 < r < 4.43926
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -756784198
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.26223 +/- 0.00624202 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.26223 @ 95%CL (1 toyMC)
median expected limit: r < 3.26223 @ 95%CL (1 toyMC)
   68% expected band : 3.26223 < r < 3.26223
   95% expected band : 3.26223 < r < 3.26223
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1595697297
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3622 +/- 0.00525097 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3622 @ 95%CL (1 toyMC)
median expected limit: r < 1.3622 @ 95%CL (1 toyMC)
   68% expected band : 1.3622 < r < 1.3622
   95% expected band : 1.3622 < r < 1.3622
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 750183372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3891 +/- 0.00652992 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.3891 @ 95%CL (1 toyMC)
median expected limit: r < 2.3891 @ 95%CL (1 toyMC)
   68% expected band : 2.3891 < r < 2.3891
   95% expected band : 2.3891 < r < 2.3891
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 109357278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9317 +/- 0.00459246 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.9317 @ 95%CL (1 toyMC)
median expected limit: r < 1.9317 @ 95%CL (1 toyMC)
   68% expected band : 1.9317 < r < 1.9317
   95% expected band : 1.9317 < r < 1.9317
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2029166296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.78106 +/- 0.00573053 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.78106 @ 95%CL (1 toyMC)
median expected limit: r < 2.78106 @ 95%CL (1 toyMC)
   68% expected band : 2.78106 < r < 2.78106
   95% expected band : 2.78106 < r < 2.78106
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -183148583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43399 +/- 0.00489542 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.43399 @ 95%CL (1 toyMC)
median expected limit: r < 1.43399 @ 95%CL (1 toyMC)
   68% expected band : 1.43399 < r < 1.43399
   95% expected band : 1.43399 < r < 1.43399
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1874488025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77682 +/- 0.00621591 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.77682 @ 95%CL (1 toyMC)
median expected limit: r < 2.77682 @ 95%CL (1 toyMC)
   68% expected band : 2.77682 < r < 2.77682
   95% expected band : 2.77682 < r < 2.77682
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -871622966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.58066 +/- 0.00629163 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.58066 @ 95%CL (1 toyMC)
median expected limit: r < 2.58066 @ 95%CL (1 toyMC)
   68% expected band : 2.58066 < r < 2.58066
   95% expected band : 2.58066 < r < 2.58066
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1968584329
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78725 +/- 0.00512473 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.78725 @ 95%CL (1 toyMC)
median expected limit: r < 1.78725 @ 95%CL (1 toyMC)
   68% expected band : 1.78725 < r < 1.78725
   95% expected band : 1.78725 < r < 1.78725
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1199931428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82751 +/- 0.00487927 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.82751 @ 95%CL (1 toyMC)
median expected limit: r < 1.82751 @ 95%CL (1 toyMC)
   68% expected band : 1.82751 < r < 1.82751
   95% expected band : 1.82751 < r < 1.82751
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 880128762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.16173 +/- 0.00414951 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.16173 @ 95%CL (1 toyMC)
median expected limit: r < 2.16173 @ 95%CL (1 toyMC)
   68% expected band : 2.16173 < r < 2.16173
   95% expected band : 2.16173 < r < 2.16173
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1159222205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41354 +/- 0.00562712 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.41354 @ 95%CL (1 toyMC)
median expected limit: r < 2.41354 @ 95%CL (1 toyMC)
   68% expected band : 2.41354 < r < 2.41354
   95% expected band : 2.41354 < r < 2.41354
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -767252029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.16154 +/- 0.00554608 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.16154 @ 95%CL (1 toyMC)
median expected limit: r < 2.16154 @ 95%CL (1 toyMC)
   68% expected band : 2.16154 < r < 2.16154
   95% expected band : 2.16154 < r < 2.16154
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1776870668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48287 +/- 0.00528257 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.48287 @ 95%CL (1 toyMC)
median expected limit: r < 1.48287 @ 95%CL (1 toyMC)
   68% expected band : 1.48287 < r < 1.48287
   95% expected band : 1.48287 < r < 1.48287
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1832831537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83939 +/- 0.00456409 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.83939 @ 95%CL (1 toyMC)
median expected limit: r < 1.83939 @ 95%CL (1 toyMC)
   68% expected band : 1.83939 < r < 1.83939
   95% expected band : 1.83939 < r < 1.83939
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -822338382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.69352 +/- 0.00533616 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.69352 @ 95%CL (1 toyMC)
median expected limit: r < 2.69352 @ 95%CL (1 toyMC)
   68% expected band : 2.69352 < r < 2.69352
   95% expected band : 2.69352 < r < 2.69352
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -992701147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97364 +/- 0.00623583 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.97364 @ 95%CL (1 toyMC)
median expected limit: r < 1.97364 @ 95%CL (1 toyMC)
   68% expected band : 1.97364 < r < 1.97364
   95% expected band : 1.97364 < r < 1.97364
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1877918014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.52186 +/- 0.00633746 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.52186 @ 95%CL (1 toyMC)
median expected limit: r < 3.52186 @ 95%CL (1 toyMC)
   68% expected band : 3.52186 < r < 3.52186
   95% expected band : 3.52186 < r < 3.52186
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 421871560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71185 +/- 0.00536703 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71185 @ 95%CL (1 toyMC)
median expected limit: r < 1.71185 @ 95%CL (1 toyMC)
   68% expected band : 1.71185 < r < 1.71185
   95% expected band : 1.71185 < r < 1.71185
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 118240475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85422 +/- 0.00464769 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.85422 @ 95%CL (1 toyMC)
median expected limit: r < 1.85422 @ 95%CL (1 toyMC)
   68% expected band : 1.85422 < r < 1.85422
   95% expected band : 1.85422 < r < 1.85422
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2123543084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.62001 +/- 0.0048622 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.62001 @ 95%CL (1 toyMC)
median expected limit: r < 1.62001 @ 95%CL (1 toyMC)
   68% expected band : 1.62001 < r < 1.62001
   95% expected band : 1.62001 < r < 1.62001
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1975617327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14237 +/- 0.00391551 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.14237 @ 95%CL (1 toyMC)
median expected limit: r < 1.14237 @ 95%CL (1 toyMC)
   68% expected band : 1.14237 < r < 1.14237
   95% expected band : 1.14237 < r < 1.14237
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1598013315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99142 +/- 0.00459 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.99142 @ 95%CL (1 toyMC)
median expected limit: r < 1.99142 @ 95%CL (1 toyMC)
   68% expected band : 1.99142 < r < 1.99142
   95% expected band : 1.99142 < r < 1.99142
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1610914860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70852 +/- 0.00661007 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.70852 @ 95%CL (1 toyMC)
median expected limit: r < 2.70852 @ 95%CL (1 toyMC)
   68% expected band : 2.70852 < r < 2.70852
   95% expected band : 2.70852 < r < 2.70852
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -650119794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03665 +/- 0.00463414 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.03665 @ 95%CL (1 toyMC)
median expected limit: r < 2.03665 @ 95%CL (1 toyMC)
   68% expected band : 2.03665 < r < 2.03665
   95% expected band : 2.03665 < r < 2.03665
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2076515336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.02092 +/- 0.00602804 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 3.02092 @ 95%CL (1 toyMC)
median expected limit: r < 3.02092 @ 95%CL (1 toyMC)
   68% expected band : 3.02092 < r < 3.02092
   95% expected band : 3.02092 < r < 3.02092
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -78342202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91852 +/- 0.00395739 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91852 @ 95%CL (1 toyMC)
median expected limit: r < 1.91852 @ 95%CL (1 toyMC)
   68% expected band : 1.91852 < r < 1.91852
   95% expected band : 1.91852 < r < 1.91852
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -321575542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88993 +/- 0.00449776 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.88993 @ 95%CL (1 toyMC)
median expected limit: r < 1.88993 @ 95%CL (1 toyMC)
   68% expected band : 1.88993 < r < 1.88993
   95% expected band : 1.88993 < r < 1.88993
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1293714205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13208 +/- 0.00665888 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.13208 @ 95%CL (1 toyMC)
median expected limit: r < 3.13208 @ 95%CL (1 toyMC)
   68% expected band : 3.13208 < r < 3.13208
   95% expected band : 3.13208 < r < 3.13208
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -115617667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.05833 +/- 0.0052351 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.05833 @ 95%CL (1 toyMC)
median expected limit: r < 2.05833 @ 95%CL (1 toyMC)
   68% expected band : 2.05833 < r < 2.05833
   95% expected band : 2.05833 < r < 2.05833
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -101261766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84852 +/- 0.00463095 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.84852 @ 95%CL (1 toyMC)
median expected limit: r < 1.84852 @ 95%CL (1 toyMC)
   68% expected band : 1.84852 < r < 1.84852
   95% expected band : 1.84852 < r < 1.84852
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1312703690
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29479 +/- 0.00573447 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.29479 @ 95%CL (1 toyMC)
median expected limit: r < 2.29479 @ 95%CL (1 toyMC)
   68% expected band : 2.29479 < r < 2.29479
   95% expected band : 2.29479 < r < 2.29479
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -8526112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53085 +/- 0.00723343 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.53085 @ 95%CL (1 toyMC)
median expected limit: r < 2.53085 @ 95%CL (1 toyMC)
   68% expected band : 2.53085 < r < 2.53085
   95% expected band : 2.53085 < r < 2.53085
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680385776
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79923 +/- 0.00441756 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.79923 @ 95%CL (1 toyMC)
median expected limit: r < 1.79923 @ 95%CL (1 toyMC)
   68% expected band : 1.79923 < r < 1.79923
   95% expected band : 1.79923 < r < 1.79923
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 479544927
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.903507 +/- 0.00334366 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 0.903507 @ 95%CL (1 toyMC)
median expected limit: r < 0.903507 @ 95%CL (1 toyMC)
   68% expected band : 0.903507 < r < 0.903507
   95% expected band : 0.903507 < r < 0.903507
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1587187005
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62084 +/- 0.00648791 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.62084 @ 95%CL (1 toyMC)
median expected limit: r < 2.62084 @ 95%CL (1 toyMC)
   68% expected band : 2.62084 < r < 2.62084
   95% expected band : 2.62084 < r < 2.62084
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1426819978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47897 +/- 0.00577922 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.47897 @ 95%CL (1 toyMC)
median expected limit: r < 1.47897 @ 95%CL (1 toyMC)
   68% expected band : 1.47897 < r < 1.47897
   95% expected band : 1.47897 < r < 1.47897
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -306326274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95922 +/- 0.00550214 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.95922 @ 95%CL (1 toyMC)
median expected limit: r < 1.95922 @ 95%CL (1 toyMC)
   68% expected band : 1.95922 < r < 1.95922
   95% expected band : 1.95922 < r < 1.95922
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1098877455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.75201 +/- 0.00563242 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.75201 @ 95%CL (1 toyMC)
median expected limit: r < 1.75201 @ 95%CL (1 toyMC)
   68% expected band : 1.75201 < r < 1.75201
   95% expected band : 1.75201 < r < 1.75201
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2001154644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41112 +/- 0.00686535 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.41112 @ 95%CL (1 toyMC)
median expected limit: r < 2.41112 @ 95%CL (1 toyMC)
   68% expected band : 2.41112 < r < 2.41112
   95% expected band : 2.41112 < r < 2.41112
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1920560233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19169 +/- 0.00522753 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.19169 @ 95%CL (1 toyMC)
median expected limit: r < 2.19169 @ 95%CL (1 toyMC)
   68% expected band : 2.19169 < r < 2.19169
   95% expected band : 2.19169 < r < 2.19169
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2098277160
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02494 +/- 0.0044681 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.02494 @ 95%CL (1 toyMC)
median expected limit: r < 2.02494 @ 95%CL (1 toyMC)
   68% expected band : 2.02494 < r < 2.02494
   95% expected band : 2.02494 < r < 2.02494
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 184745850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42896 +/- 0.00437658 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.42896 @ 95%CL (1 toyMC)
median expected limit: r < 2.42896 @ 95%CL (1 toyMC)
   68% expected band : 2.42896 < r < 2.42896
   95% expected band : 2.42896 < r < 2.42896
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -342986435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09746 +/- 0.00435873 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09746 @ 95%CL (1 toyMC)
median expected limit: r < 1.09746 @ 95%CL (1 toyMC)
   68% expected band : 1.09746 < r < 1.09746
   95% expected band : 1.09746 < r < 1.09746
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1431130132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26805 +/- 0.00486951 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.26805 @ 95%CL (1 toyMC)
median expected limit: r < 1.26805 @ 95%CL (1 toyMC)
   68% expected band : 1.26805 < r < 1.26805
   95% expected band : 1.26805 < r < 1.26805
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-101261766.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1020514465.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1098877455.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1105318872.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-115617667.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1199931428.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1253369593.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1312703690.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1378505027.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1406331423.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1430441120.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1457863982.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-157410487.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1587187005.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1595697297.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1598013315.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1610914860.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1734371285.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-173679467.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-183148583.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1920560233.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1975617327.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2001154644.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-2013446573.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2076515336.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-267434079.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-30337325.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-306326274.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-321575542.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-337373766.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-342986435.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-507637878.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-509215080.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-509395939.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-574984060.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-650119794.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-699744921.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-708759238.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-717263859.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-725100595.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-744720902.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-751940153.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-756784198.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-767252029.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-78342202.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-822338382.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-826444462.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-8526112.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-871622966.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-970066903.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-98988679.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-991370416.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-992701147.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1014279697.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1035912003.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.104752582.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1087997570.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.109357278.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1159222205.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.118240475.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1194065928.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1255231786.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1291170081.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1293714205.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1353221447.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1426819978.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1431130132.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1452957561.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1613682800.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1639638532.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1680385776.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1723871358.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1776870668.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1832831537.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.184745850.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1853736275.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1874488025.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1876120101.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.1877918014.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.1939683951.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.1946467103.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.1950008910.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.1963528698.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.1968584329.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.2029166296.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.2079006140.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.2098277160.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.2123543084.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.2132920565.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.2142988237.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.339549536.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.421871560.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.479544927.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.487804023.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.498395432.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.58033266.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.632192454.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.634745280.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.750183372.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.880128762.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1990581110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.50151 +/- 0.00469797 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.50151 @ 95%CL (1 toyMC)
median expected limit: r < 2.50151 @ 95%CL (1 toyMC)
   68% expected band : 2.50151 < r < 2.50151
   95% expected band : 2.50151 < r < 2.50151
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1170433767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51072 +/- 0.00522612 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.51072 @ 95%CL (1 toyMC)
median expected limit: r < 2.51072 @ 95%CL (1 toyMC)
   68% expected band : 2.51072 < r < 2.51072
   95% expected band : 2.51072 < r < 2.51072
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 238334931
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.40917 +/- 0.00534967 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.40917 @ 95%CL (1 toyMC)
median expected limit: r < 3.40917 @ 95%CL (1 toyMC)
   68% expected band : 3.40917 < r < 3.40917
   95% expected band : 3.40917 < r < 3.40917
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1409042748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.65636 +/- 0.0072233 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.65636 @ 95%CL (1 toyMC)
median expected limit: r < 3.65636 @ 95%CL (1 toyMC)
   68% expected band : 3.65636 < r < 3.65636
   95% expected band : 3.65636 < r < 3.65636
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -659495423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.06302 +/- 0.00456912 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.06302 @ 95%CL (1 toyMC)
median expected limit: r < 2.06302 @ 95%CL (1 toyMC)
   68% expected band : 2.06302 < r < 2.06302
   95% expected band : 2.06302 < r < 2.06302
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1850980618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7697 +/- 0.00421297 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.7697 @ 95%CL (1 toyMC)
median expected limit: r < 1.7697 @ 95%CL (1 toyMC)
   68% expected band : 1.7697 < r < 1.7697
   95% expected band : 1.7697 < r < 1.7697
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1202615229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8648 +/- 0.00485724 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.8648 @ 95%CL (1 toyMC)
median expected limit: r < 2.8648 @ 95%CL (1 toyMC)
   68% expected band : 2.8648 < r < 2.8648
   95% expected band : 2.8648 < r < 2.8648
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1762602662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70109 +/- 0.00485752 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.70109 @ 95%CL (1 toyMC)
median expected limit: r < 1.70109 @ 95%CL (1 toyMC)
   68% expected band : 1.70109 < r < 1.70109
   95% expected band : 1.70109 < r < 1.70109
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 668009097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87914 +/- 0.00565208 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.87914 @ 95%CL (1 toyMC)
median expected limit: r < 2.87914 @ 95%CL (1 toyMC)
   68% expected band : 2.87914 < r < 2.87914
   95% expected band : 2.87914 < r < 2.87914
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946758892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.37162 +/- 0.00600954 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.37162 @ 95%CL (1 toyMC)
median expected limit: r < 3.37162 @ 95%CL (1 toyMC)
   68% expected band : 3.37162 < r < 3.37162
   95% expected band : 3.37162 < r < 3.37162
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1327546774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68101 +/- 0.00422103 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.68101 @ 95%CL (1 toyMC)
median expected limit: r < 1.68101 @ 95%CL (1 toyMC)
   68% expected band : 1.68101 < r < 1.68101
   95% expected band : 1.68101 < r < 1.68101
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -60602990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71532 +/- 0.00485928 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.71532 @ 95%CL (1 toyMC)
median expected limit: r < 2.71532 @ 95%CL (1 toyMC)
   68% expected band : 2.71532 < r < 2.71532
   95% expected band : 2.71532 < r < 2.71532
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -803599963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53912 +/- 0.00495834 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.53912 @ 95%CL (1 toyMC)
median expected limit: r < 2.53912 @ 95%CL (1 toyMC)
   68% expected band : 2.53912 < r < 2.53912
   95% expected band : 2.53912 < r < 2.53912
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1231886768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.09968 +/- 0.00526868 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 2.09968 @ 95%CL (1 toyMC)
median expected limit: r < 2.09968 @ 95%CL (1 toyMC)
   68% expected band : 2.09968 < r < 2.09968
   95% expected band : 2.09968 < r < 2.09968
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2004363297
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.27248 +/- 0.00460313 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.27248 @ 95%CL (1 toyMC)
median expected limit: r < 2.27248 @ 95%CL (1 toyMC)
   68% expected band : 2.27248 < r < 2.27248
   95% expected band : 2.27248 < r < 2.27248
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -234992802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.94216 +/- 0.0052164 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.94216 @ 95%CL (1 toyMC)
median expected limit: r < 2.94216 @ 95%CL (1 toyMC)
   68% expected band : 2.94216 < r < 2.94216
   95% expected band : 2.94216 < r < 2.94216
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1995043022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.748 +/- 0.00407795 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.748 @ 95%CL (1 toyMC)
median expected limit: r < 1.748 @ 95%CL (1 toyMC)
   68% expected band : 1.748 < r < 1.748
   95% expected band : 1.748 < r < 1.748
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -318096635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.77479 +/- 0.00462986 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.77479 @ 95%CL (1 toyMC)
median expected limit: r < 2.77479 @ 95%CL (1 toyMC)
   68% expected band : 2.77479 < r < 2.77479
   95% expected band : 2.77479 < r < 2.77479
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -596070078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.90705 +/- 0.00603246 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.90705 @ 95%CL (1 toyMC)
median expected limit: r < 4.90705 @ 95%CL (1 toyMC)
   68% expected band : 4.90705 < r < 4.90705
   95% expected band : 4.90705 < r < 4.90705
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 658487429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.83874 +/- 0.00508474 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.83874 @ 95%CL (1 toyMC)
median expected limit: r < 2.83874 @ 95%CL (1 toyMC)
   68% expected band : 2.83874 < r < 2.83874
   95% expected band : 2.83874 < r < 2.83874
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1690064811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02444 +/- 0.00554572 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.02444 @ 95%CL (1 toyMC)
median expected limit: r < 2.02444 @ 95%CL (1 toyMC)
   68% expected band : 2.02444 < r < 2.02444
   95% expected band : 2.02444 < r < 2.02444
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1868898788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29842 +/- 0.00542726 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.29842 @ 95%CL (1 toyMC)
median expected limit: r < 2.29842 @ 95%CL (1 toyMC)
   68% expected band : 2.29842 < r < 2.29842
   95% expected band : 2.29842 < r < 2.29842
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -195856734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68208 +/- 0.00459809 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.68208 @ 95%CL (1 toyMC)
median expected limit: r < 2.68208 @ 95%CL (1 toyMC)
   68% expected band : 2.68208 < r < 2.68208
   95% expected band : 2.68208 < r < 2.68208
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1458213572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81036 +/- 0.00546345 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.81036 @ 95%CL (1 toyMC)
median expected limit: r < 1.81036 @ 95%CL (1 toyMC)
   68% expected band : 1.81036 < r < 1.81036
   95% expected band : 1.81036 < r < 1.81036
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -799711257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.30382 +/- 0.00592413 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.30382 @ 95%CL (1 toyMC)
median expected limit: r < 4.30382 @ 95%CL (1 toyMC)
   68% expected band : 4.30382 < r < 4.30382
   95% expected band : 4.30382 < r < 4.30382
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1317919049
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06462 +/- 0.00555302 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.06462 @ 95%CL (1 toyMC)
median expected limit: r < 3.06462 @ 95%CL (1 toyMC)
   68% expected band : 3.06462 < r < 3.06462
   95% expected band : 3.06462 < r < 3.06462
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1211531942
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97248 +/- 0.00515812 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.97248 @ 95%CL (1 toyMC)
median expected limit: r < 1.97248 @ 95%CL (1 toyMC)
   68% expected band : 1.97248 < r < 1.97248
   95% expected band : 1.97248 < r < 1.97248
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -192748870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06086 +/- 0.00551897 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.06086 @ 95%CL (1 toyMC)
median expected limit: r < 3.06086 @ 95%CL (1 toyMC)
   68% expected band : 3.06086 < r < 3.06086
   95% expected band : 3.06086 < r < 3.06086
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1404798273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37628 +/- 0.00541322 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.37628 @ 95%CL (1 toyMC)
median expected limit: r < 2.37628 @ 95%CL (1 toyMC)
   68% expected band : 2.37628 < r < 2.37628
   95% expected band : 2.37628 < r < 2.37628
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -886917392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.03066 +/- 0.0055849 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.03066 @ 95%CL (1 toyMC)
median expected limit: r < 2.03066 @ 95%CL (1 toyMC)
   68% expected band : 2.03066 < r < 2.03066
   95% expected band : 2.03066 < r < 2.03066
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -953615754
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18371 +/- 0.00598872 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.18371 @ 95%CL (1 toyMC)
median expected limit: r < 3.18371 @ 95%CL (1 toyMC)
   68% expected band : 3.18371 < r < 3.18371
   95% expected band : 3.18371 < r < 3.18371
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -798936862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.94159 +/- 0.00590217 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.94159 @ 95%CL (1 toyMC)
median expected limit: r < 2.94159 @ 95%CL (1 toyMC)
   68% expected band : 2.94159 < r < 2.94159
   95% expected band : 2.94159 < r < 2.94159
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1279874036
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.36205 +/- 0.00689418 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.36205 @ 95%CL (1 toyMC)
median expected limit: r < 3.36205 @ 95%CL (1 toyMC)
   68% expected band : 3.36205 < r < 3.36205
   95% expected band : 3.36205 < r < 3.36205
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1805861854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.84938 +/- 0.0065749 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.84938 @ 95%CL (1 toyMC)
median expected limit: r < 3.84938 @ 95%CL (1 toyMC)
   68% expected band : 3.84938 < r < 3.84938
   95% expected band : 3.84938 < r < 3.84938
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1517002784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95626 +/- 0.00422391 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.95626 @ 95%CL (1 toyMC)
median expected limit: r < 1.95626 @ 95%CL (1 toyMC)
   68% expected band : 1.95626 < r < 1.95626
   95% expected band : 1.95626 < r < 1.95626
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -232082147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09646 +/- 0.00412547 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.09646 @ 95%CL (1 toyMC)
median expected limit: r < 1.09646 @ 95%CL (1 toyMC)
   68% expected band : 1.09646 < r < 1.09646
   95% expected band : 1.09646 < r < 1.09646
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -866744836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71467 +/- 0.00426437 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71467 @ 95%CL (1 toyMC)
median expected limit: r < 1.71467 @ 95%CL (1 toyMC)
   68% expected band : 1.71467 < r < 1.71467
   95% expected band : 1.71467 < r < 1.71467
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -889392217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.8089 +/- 0.00492712 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 3.8089 @ 95%CL (1 toyMC)
median expected limit: r < 3.8089 @ 95%CL (1 toyMC)
   68% expected band : 3.8089 < r < 3.8089
   95% expected band : 3.8089 < r < 3.8089
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1548114928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18079 +/- 0.00430081 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.18079 @ 95%CL (1 toyMC)
median expected limit: r < 1.18079 @ 95%CL (1 toyMC)
   68% expected band : 1.18079 < r < 1.18079
   95% expected band : 1.18079 < r < 1.18079
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1315229176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6644 +/- 0.00392987 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.6644 @ 95%CL (1 toyMC)
median expected limit: r < 1.6644 @ 95%CL (1 toyMC)
   68% expected band : 1.6644 < r < 1.6644
   95% expected band : 1.6644 < r < 1.6644
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -968089584
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.97394 +/- 0.0063069 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.97394 @ 95%CL (1 toyMC)
median expected limit: r < 2.97394 @ 95%CL (1 toyMC)
   68% expected band : 2.97394 < r < 2.97394
   95% expected band : 2.97394 < r < 2.97394
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -592396311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73941 +/- 0.00501607 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.73941 @ 95%CL (1 toyMC)
median expected limit: r < 1.73941 @ 95%CL (1 toyMC)
   68% expected band : 1.73941 < r < 1.73941
   95% expected band : 1.73941 < r < 1.73941
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1467480580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.62492 +/- 0.00670624 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.62492 @ 95%CL (1 toyMC)
median expected limit: r < 3.62492 @ 95%CL (1 toyMC)
   68% expected band : 3.62492 < r < 3.62492
   95% expected band : 3.62492 < r < 3.62492
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -324673610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.48032 +/- 0.00486312 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.48032 @ 95%CL (1 toyMC)
median expected limit: r < 1.48032 @ 95%CL (1 toyMC)
   68% expected band : 1.48032 < r < 1.48032
   95% expected band : 1.48032 < r < 1.48032
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1797655628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.16835 +/- 0.00586127 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.16835 @ 95%CL (1 toyMC)
median expected limit: r < 3.16835 @ 95%CL (1 toyMC)
   68% expected band : 3.16835 < r < 3.16835
   95% expected band : 3.16835 < r < 3.16835
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 130585807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98861 +/- 0.00478008 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.98861 @ 95%CL (1 toyMC)
median expected limit: r < 1.98861 @ 95%CL (1 toyMC)
   68% expected band : 1.98861 < r < 1.98861
   95% expected band : 1.98861 < r < 1.98861
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1823709490
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71394 +/- 0.00545906 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.71394 @ 95%CL (1 toyMC)
median expected limit: r < 1.71394 @ 95%CL (1 toyMC)
   68% expected band : 1.71394 < r < 1.71394
   95% expected band : 1.71394 < r < 1.71394
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1799294786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.08434 +/- 0.00498899 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.08434 @ 95%CL (1 toyMC)
median expected limit: r < 2.08434 @ 95%CL (1 toyMC)
   68% expected band : 2.08434 < r < 2.08434
   95% expected band : 2.08434 < r < 2.08434
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -963044572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9424 +/- 0.00653522 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.9424 @ 95%CL (1 toyMC)
median expected limit: r < 1.9424 @ 95%CL (1 toyMC)
   68% expected band : 1.9424 < r < 1.9424
   95% expected band : 1.9424 < r < 1.9424
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 349963413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1827 +/- 0.00554507 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.1827 @ 95%CL (1 toyMC)
median expected limit: r < 2.1827 @ 95%CL (1 toyMC)
   68% expected band : 2.1827 < r < 2.1827
   95% expected band : 2.1827 < r < 2.1827
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1416796517
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.9045 +/- 0.00457107 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.9045 @ 95%CL (1 toyMC)
median expected limit: r < 1.9045 @ 95%CL (1 toyMC)
   68% expected band : 1.9045 < r < 1.9045
   95% expected band : 1.9045 < r < 1.9045
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1575456847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.08189 +/- 0.00566266 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.08189 @ 95%CL (1 toyMC)
median expected limit: r < 3.08189 @ 95%CL (1 toyMC)
   68% expected band : 3.08189 < r < 3.08189
   95% expected band : 3.08189 < r < 3.08189
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -893013256
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47854 +/- 0.00515795 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.47854 @ 95%CL (1 toyMC)
median expected limit: r < 1.47854 @ 95%CL (1 toyMC)
   68% expected band : 1.47854 < r < 1.47854
   95% expected band : 1.47854 < r < 1.47854
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 250357305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70275 +/- 0.00418241 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.70275 @ 95%CL (1 toyMC)
median expected limit: r < 1.70275 @ 95%CL (1 toyMC)
   68% expected band : 1.70275 < r < 1.70275
   95% expected band : 1.70275 < r < 1.70275
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1067323321
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35524 +/- 0.00395236 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.35524 @ 95%CL (1 toyMC)
median expected limit: r < 1.35524 @ 95%CL (1 toyMC)
   68% expected band : 1.35524 < r < 1.35524
   95% expected band : 1.35524 < r < 1.35524
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 303054991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.38134 +/- 0.00612371 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.38134 @ 95%CL (1 toyMC)
median expected limit: r < 3.38134 @ 95%CL (1 toyMC)
   68% expected band : 3.38134 < r < 3.38134
   95% expected band : 3.38134 < r < 3.38134
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 253661111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.04902 +/- 0.00559265 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.04902 @ 95%CL (1 toyMC)
median expected limit: r < 2.04902 @ 95%CL (1 toyMC)
   68% expected band : 2.04902 < r < 2.04902
   95% expected band : 2.04902 < r < 2.04902
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680870663
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41592 +/- 0.00435561 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.41592 @ 95%CL (1 toyMC)
median expected limit: r < 2.41592 @ 95%CL (1 toyMC)
   68% expected band : 2.41592 < r < 2.41592
   95% expected band : 2.41592 < r < 2.41592
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1985848058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.81841 +/- 0.00475143 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.81841 @ 95%CL (1 toyMC)
median expected limit: r < 2.81841 @ 95%CL (1 toyMC)
   68% expected band : 2.81841 < r < 2.81841
   95% expected band : 2.81841 < r < 2.81841
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 733734096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.04329 +/- 0.00695915 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 6.04329 @ 95%CL (1 toyMC)
median expected limit: r < 6.04329 @ 95%CL (1 toyMC)
   68% expected band : 6.04329 < r < 6.04329
   95% expected band : 6.04329 < r < 6.04329
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -685306395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3081 +/- 0.00540275 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.3081 @ 95%CL (1 toyMC)
median expected limit: r < 2.3081 @ 95%CL (1 toyMC)
   68% expected band : 2.3081 < r < 2.3081
   95% expected band : 2.3081 < r < 2.3081
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 115516558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.33094 +/- 0.00637515 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.33094 @ 95%CL (1 toyMC)
median expected limit: r < 3.33094 @ 95%CL (1 toyMC)
   68% expected band : 3.33094 < r < 3.33094
   95% expected band : 3.33094 < r < 3.33094
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 157578555
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44759 +/- 0.00558251 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.44759 @ 95%CL (1 toyMC)
median expected limit: r < 2.44759 @ 95%CL (1 toyMC)
   68% expected band : 2.44759 < r < 2.44759
   95% expected band : 2.44759 < r < 2.44759
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 98249670
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91715 +/- 0.00404766 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.91715 @ 95%CL (1 toyMC)
median expected limit: r < 1.91715 @ 95%CL (1 toyMC)
   68% expected band : 1.91715 < r < 1.91715
   95% expected band : 1.91715 < r < 1.91715
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1853431422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34557 +/- 0.00531858 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.34557 @ 95%CL (1 toyMC)
median expected limit: r < 2.34557 @ 95%CL (1 toyMC)
   68% expected band : 2.34557 < r < 2.34557
   95% expected band : 2.34557 < r < 2.34557
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -728295938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.92958 +/- 0.00604305 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.92958 @ 95%CL (1 toyMC)
median expected limit: r < 2.92958 @ 95%CL (1 toyMC)
   68% expected band : 2.92958 < r < 2.92958
   95% expected band : 2.92958 < r < 2.92958
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1325679613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.90745 +/- 0.00615801 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.90745 @ 95%CL (1 toyMC)
median expected limit: r < 2.90745 @ 95%CL (1 toyMC)
   68% expected band : 2.90745 < r < 2.90745
   95% expected band : 2.90745 < r < 2.90745
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946970566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46191 +/- 0.00507491 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.46191 @ 95%CL (1 toyMC)
median expected limit: r < 1.46191 @ 95%CL (1 toyMC)
   68% expected band : 1.46191 < r < 1.46191
   95% expected band : 1.46191 < r < 1.46191
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 885579014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99233 +/- 0.00563281 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.99233 @ 95%CL (1 toyMC)
median expected limit: r < 1.99233 @ 95%CL (1 toyMC)
   68% expected band : 1.99233 < r < 1.99233
   95% expected band : 1.99233 < r < 1.99233
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1721391378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.40119 +/- 0.00514941 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.40119 @ 95%CL (1 toyMC)
median expected limit: r < 2.40119 @ 95%CL (1 toyMC)
   68% expected band : 2.40119 < r < 2.40119
   95% expected band : 2.40119 < r < 2.40119
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2067942581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.57746 +/- 0.00518594 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.57746 @ 95%CL (1 toyMC)
median expected limit: r < 2.57746 @ 95%CL (1 toyMC)
   68% expected band : 2.57746 < r < 2.57746
   95% expected band : 2.57746 < r < 2.57746
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1027663363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29472 +/- 0.00457145 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.29472 @ 95%CL (1 toyMC)
median expected limit: r < 2.29472 @ 95%CL (1 toyMC)
   68% expected band : 2.29472 < r < 2.29472
   95% expected band : 2.29472 < r < 2.29472
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1229879952
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8505 +/- 0.00411241 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.8505 @ 95%CL (1 toyMC)
median expected limit: r < 1.8505 @ 95%CL (1 toyMC)
   68% expected band : 1.8505 < r < 1.8505
   95% expected band : 1.8505 < r < 1.8505
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -650700677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.6892 +/- 0.00489313 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.6892 @ 95%CL (1 toyMC)
median expected limit: r < 3.6892 @ 95%CL (1 toyMC)
   68% expected band : 3.6892 < r < 3.6892
   95% expected band : 3.6892 < r < 3.6892
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1525547540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.14812 +/- 0.00373922 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.14812 @ 95%CL (1 toyMC)
median expected limit: r < 2.14812 @ 95%CL (1 toyMC)
   68% expected band : 2.14812 < r < 2.14812
   95% expected band : 2.14812 < r < 2.14812
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1971043485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95211 +/- 0.00440776 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.95211 @ 95%CL (1 toyMC)
median expected limit: r < 1.95211 @ 95%CL (1 toyMC)
   68% expected band : 1.95211 < r < 1.95211
   95% expected band : 1.95211 < r < 1.95211
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 40157957
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.66551 +/- 0.00748604 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.66551 @ 95%CL (1 toyMC)
median expected limit: r < 5.66551 @ 95%CL (1 toyMC)
   68% expected band : 5.66551 < r < 5.66551
   95% expected band : 5.66551 < r < 5.66551
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1332318812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3594 +/- 0.00304395 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.3594 @ 95%CL (1 toyMC)
median expected limit: r < 1.3594 @ 95%CL (1 toyMC)
   68% expected band : 1.3594 < r < 1.3594
   95% expected band : 1.3594 < r < 1.3594
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -982514405
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.60859 +/- 0.00583121 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.60859 @ 95%CL (1 toyMC)
median expected limit: r < 2.60859 @ 95%CL (1 toyMC)
   68% expected band : 2.60859 < r < 2.60859
   95% expected band : 2.60859 < r < 2.60859
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1456771390
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89217 +/- 0.00669033 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.89217 @ 95%CL (1 toyMC)
median expected limit: r < 2.89217 @ 95%CL (1 toyMC)
   68% expected band : 2.89217 < r < 2.89217
   95% expected band : 2.89217 < r < 2.89217
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -603891139
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.40058 +/- 0.0064932 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.40058 @ 95%CL (1 toyMC)
median expected limit: r < 4.40058 @ 95%CL (1 toyMC)
   68% expected band : 4.40058 < r < 4.40058
   95% expected band : 4.40058 < r < 4.40058
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1130242574
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.75272 +/- 0.0064641 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.75272 @ 95%CL (1 toyMC)
median expected limit: r < 5.75272 @ 95%CL (1 toyMC)
   68% expected band : 5.75272 < r < 5.75272
   95% expected band : 5.75272 < r < 5.75272
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1240575118
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61617 +/- 0.00489353 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.61617 @ 95%CL (1 toyMC)
median expected limit: r < 1.61617 @ 95%CL (1 toyMC)
   68% expected band : 1.61617 < r < 1.61617
   95% expected band : 1.61617 < r < 1.61617
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 283947786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82867 +/- 0.00393553 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.82867 @ 95%CL (1 toyMC)
median expected limit: r < 1.82867 @ 95%CL (1 toyMC)
   68% expected band : 1.82867 < r < 1.82867
   95% expected band : 1.82867 < r < 1.82867
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 413136487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.14722 +/- 0.00510939 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.14722 @ 95%CL (1 toyMC)
median expected limit: r < 2.14722 @ 95%CL (1 toyMC)
   68% expected band : 2.14722 < r < 2.14722
   95% expected band : 2.14722 < r < 2.14722
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 45487877
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.6567 +/- 0.00598597 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.6567 @ 95%CL (1 toyMC)
median expected limit: r < 3.6567 @ 95%CL (1 toyMC)
   68% expected band : 3.6567 < r < 3.6567
   95% expected band : 3.6567 < r < 3.6567
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1520380194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.22438 +/- 0.00803565 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.22438 @ 95%CL (1 toyMC)
median expected limit: r < 5.22438 @ 95%CL (1 toyMC)
   68% expected band : 5.22438 < r < 5.22438
   95% expected band : 5.22438 < r < 5.22438
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 923001537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.11621 +/- 0.00616029 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.11621 @ 95%CL (1 toyMC)
median expected limit: r < 4.11621 @ 95%CL (1 toyMC)
   68% expected band : 4.11621 < r < 4.11621
   95% expected band : 4.11621 < r < 4.11621
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -460529153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37279 +/- 0.00536528 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.37279 @ 95%CL (1 toyMC)
median expected limit: r < 2.37279 @ 95%CL (1 toyMC)
   68% expected band : 2.37279 < r < 2.37279
   95% expected band : 2.37279 < r < 2.37279
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 15908990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36703 +/- 0.00438561 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.36703 @ 95%CL (1 toyMC)
median expected limit: r < 1.36703 @ 95%CL (1 toyMC)
   68% expected band : 1.36703 < r < 1.36703
   95% expected band : 1.36703 < r < 1.36703
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1054792768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60481 +/- 0.00419573 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.60481 @ 95%CL (1 toyMC)
median expected limit: r < 1.60481 @ 95%CL (1 toyMC)
   68% expected band : 1.60481 < r < 1.60481
   95% expected band : 1.60481 < r < 1.60481
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 524101894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81389 +/- 0.00518695 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.81389 @ 95%CL (1 toyMC)
median expected limit: r < 1.81389 @ 95%CL (1 toyMC)
   68% expected band : 1.81389 < r < 1.81389
   95% expected band : 1.81389 < r < 1.81389
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1521511068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.55962 +/- 0.00538191 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.55962 @ 95%CL (1 toyMC)
median expected limit: r < 2.55962 @ 95%CL (1 toyMC)
   68% expected band : 2.55962 < r < 2.55962
   95% expected band : 2.55962 < r < 2.55962
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1859393783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90857 +/- 0.00449283 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.90857 @ 95%CL (1 toyMC)
median expected limit: r < 1.90857 @ 95%CL (1 toyMC)
   68% expected band : 1.90857 < r < 1.90857
   95% expected band : 1.90857 < r < 1.90857
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -101608055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44455 +/- 0.00546903 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.44455 @ 95%CL (1 toyMC)
median expected limit: r < 2.44455 @ 95%CL (1 toyMC)
   68% expected band : 2.44455 < r < 2.44455
   95% expected band : 2.44455 < r < 2.44455
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1716395566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32551 +/- 0.00518594 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.32551 @ 95%CL (1 toyMC)
median expected limit: r < 2.32551 @ 95%CL (1 toyMC)
   68% expected band : 2.32551 < r < 2.32551
   95% expected band : 2.32551 < r < 2.32551
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1748106662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81987 +/- 0.00505963 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.81987 @ 95%CL (1 toyMC)
median expected limit: r < 1.81987 @ 95%CL (1 toyMC)
   68% expected band : 1.81987 < r < 1.81987
   95% expected band : 1.81987 < r < 1.81987
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 212666989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26991 +/- 0.00582453 @ 95% CL (100 tries)
Done in 0.13 min (cpu), 0.13 min (real)
mean   expected limit: r < 1.26991 @ 95%CL (1 toyMC)
median expected limit: r < 1.26991 @ 95%CL (1 toyMC)
   68% expected band : 1.26991 < r < 1.26991
   95% expected band : 1.26991 < r < 1.26991
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1399973000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.83148 +/- 0.00634499 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.83148 @ 95%CL (1 toyMC)
median expected limit: r < 3.83148 @ 95%CL (1 toyMC)
   68% expected band : 3.83148 < r < 3.83148
   95% expected band : 3.83148 < r < 3.83148
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2146471673
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56664 +/- 0.00530394 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.56664 @ 95%CL (1 toyMC)
median expected limit: r < 2.56664 @ 95%CL (1 toyMC)
   68% expected band : 2.56664 < r < 2.56664
   95% expected band : 2.56664 < r < 2.56664
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-101608055.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1054792768.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1067323321.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1130242574.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1170433767.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1229879952.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1240575118.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1317919049.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1325679613.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1327546774.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1404798273.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1409042748.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1416796517.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1456771390.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1458213572.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1520380194.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1521511068.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1525547540.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1575456847.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1690064811.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1762602662.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1797655628.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1805861854.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1823709490.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1853431422.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1859393783.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1868898788.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-192748870.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-195856734.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-1990581110.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-1995043022.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-2004363297.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-2146471673.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-232082147.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-234992802.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-318096635.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-324673610.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-460529153.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-592396311.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-596070078.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-603891139.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-60602990.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-650700677.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-659495423.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-685306395.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-728295938.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-798936862.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-799711257.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-803599963.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-866744836.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-886917392.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-889392217.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-893013256.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.-953615754.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.-963044572.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.-968089584.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.-982514405.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1027663363.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.115516558.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1202615229.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1211531942.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1231886768.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1279874036.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.130585807.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1315229176.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1332318812.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1399973000.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1467480580.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1517002784.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1548114928.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.157578555.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.15908990.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1680870663.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1716395566.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1721391378.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1748106662.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1799294786.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1850980618.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.1946758892.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.1946970566.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.1971043485.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.1985848058.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.2067942581.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.212666989.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.238334931.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.250357305.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.253661111.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.283947786.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.303054991.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.349963413.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.40157957.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.413136487.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.45487877.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.524101894.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.658487429.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.668009097.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.733734096.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.885579014.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.923001537.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.98249670.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 53651693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22199 +/- 0.00597713 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.22199 @ 95%CL (1 toyMC)
median expected limit: r < 2.22199 @ 95%CL (1 toyMC)
   68% expected band : 2.22199 < r < 2.22199
   95% expected band : 2.22199 < r < 2.22199
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -467444296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.00346 +/- 0.00490988 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.00346 @ 95%CL (1 toyMC)
median expected limit: r < 3.00346 @ 95%CL (1 toyMC)
   68% expected band : 3.00346 < r < 3.00346
   95% expected band : 3.00346 < r < 3.00346
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1100627090
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50328 +/- 0.00455522 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.50328 @ 95%CL (1 toyMC)
median expected limit: r < 1.50328 @ 95%CL (1 toyMC)
   68% expected band : 1.50328 < r < 1.50328
   95% expected band : 1.50328 < r < 1.50328
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -239793818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.79027 +/- 0.00683058 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.79027 @ 95%CL (1 toyMC)
median expected limit: r < 4.79027 @ 95%CL (1 toyMC)
   68% expected band : 4.79027 < r < 4.79027
   95% expected band : 4.79027 < r < 4.79027
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -947350051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0656 +/- 0.00434444 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.0656 @ 95%CL (1 toyMC)
median expected limit: r < 2.0656 @ 95%CL (1 toyMC)
   68% expected band : 2.0656 < r < 2.0656
   95% expected band : 2.0656 < r < 2.0656
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1147164495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.29302 +/- 0.00564087 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.29302 @ 95%CL (1 toyMC)
median expected limit: r < 4.29302 @ 95%CL (1 toyMC)
   68% expected band : 4.29302 < r < 4.29302
   95% expected band : 4.29302 < r < 4.29302
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -41820203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.22137 +/- 0.00510256 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.22137 @ 95%CL (1 toyMC)
median expected limit: r < 3.22137 @ 95%CL (1 toyMC)
   68% expected band : 3.22137 < r < 3.22137
   95% expected band : 3.22137 < r < 3.22137
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1846909595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36173 +/- 0.00457033 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.36173 @ 95%CL (1 toyMC)
median expected limit: r < 2.36173 @ 95%CL (1 toyMC)
   68% expected band : 2.36173 < r < 2.36173
   95% expected band : 2.36173 < r < 2.36173
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1594736167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19655 +/- 0.00598783 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.19655 @ 95%CL (1 toyMC)
median expected limit: r < 2.19655 @ 95%CL (1 toyMC)
   68% expected band : 2.19655 < r < 2.19655
   95% expected band : 2.19655 < r < 2.19655
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -470007069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.06845 +/- 0.00677928 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.06845 @ 95%CL (1 toyMC)
median expected limit: r < 3.06845 @ 95%CL (1 toyMC)
   68% expected band : 3.06845 < r < 3.06845
   95% expected band : 3.06845 < r < 3.06845
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2063148657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.26722 +/- 0.00582192 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.26722 @ 95%CL (1 toyMC)
median expected limit: r < 3.26722 @ 95%CL (1 toyMC)
   68% expected band : 3.26722 < r < 3.26722
   95% expected band : 3.26722 < r < 3.26722
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 692202256
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.59836 +/- 0.00672291 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.59836 @ 95%CL (1 toyMC)
median expected limit: r < 3.59836 @ 95%CL (1 toyMC)
   68% expected band : 3.59836 < r < 3.59836
   95% expected band : 3.59836 < r < 3.59836
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -213456919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48077 +/- 0.00573336 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.48077 @ 95%CL (1 toyMC)
median expected limit: r < 2.48077 @ 95%CL (1 toyMC)
   68% expected band : 2.48077 < r < 2.48077
   95% expected band : 2.48077 < r < 2.48077
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 250126740
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3605 +/- 0.00533299 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.3605 @ 95%CL (1 toyMC)
median expected limit: r < 2.3605 @ 95%CL (1 toyMC)
   68% expected band : 2.3605 < r < 2.3605
   95% expected band : 2.3605 < r < 2.3605
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1414604862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.21592 +/- 0.00739217 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.21592 @ 95%CL (1 toyMC)
median expected limit: r < 5.21592 @ 95%CL (1 toyMC)
   68% expected band : 5.21592 < r < 5.21592
   95% expected band : 5.21592 < r < 5.21592
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 13498650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.06122 +/- 0.00629741 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.06122 @ 95%CL (1 toyMC)
median expected limit: r < 6.06122 @ 95%CL (1 toyMC)
   68% expected band : 6.06122 < r < 6.06122
   95% expected band : 6.06122 < r < 6.06122
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1746335969
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.44795 +/- 0.00628122 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.44795 @ 95%CL (1 toyMC)
median expected limit: r < 3.44795 @ 95%CL (1 toyMC)
   68% expected band : 3.44795 < r < 3.44795
   95% expected band : 3.44795 < r < 3.44795
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 96856504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00806 +/- 0.00445708 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00806 @ 95%CL (1 toyMC)
median expected limit: r < 2.00806 @ 95%CL (1 toyMC)
   68% expected band : 2.00806 < r < 2.00806
   95% expected band : 2.00806 < r < 2.00806
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1965551683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9685 +/- 0.00646751 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.9685 @ 95%CL (1 toyMC)
median expected limit: r < 3.9685 @ 95%CL (1 toyMC)
   68% expected band : 3.9685 < r < 3.9685
   95% expected band : 3.9685 < r < 3.9685
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 584492540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18618 +/- 0.00606138 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.18618 @ 95%CL (1 toyMC)
median expected limit: r < 2.18618 @ 95%CL (1 toyMC)
   68% expected band : 2.18618 < r < 2.18618
   95% expected band : 2.18618 < r < 2.18618
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -383856382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.23144 +/- 0.00588996 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.23144 @ 95%CL (1 toyMC)
median expected limit: r < 2.23144 @ 95%CL (1 toyMC)
   68% expected band : 2.23144 < r < 2.23144
   95% expected band : 2.23144 < r < 2.23144
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -877759316
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54384 +/- 0.00538126 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.54384 @ 95%CL (1 toyMC)
median expected limit: r < 2.54384 @ 95%CL (1 toyMC)
   68% expected band : 2.54384 < r < 2.54384
   95% expected band : 2.54384 < r < 2.54384
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2068446644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.94096 +/- 0.00667347 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.94096 @ 95%CL (1 toyMC)
median expected limit: r < 3.94096 @ 95%CL (1 toyMC)
   68% expected band : 3.94096 < r < 3.94096
   95% expected band : 3.94096 < r < 3.94096
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -498566873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.54996 +/- 0.00823749 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.54996 @ 95%CL (1 toyMC)
median expected limit: r < 4.54996 @ 95%CL (1 toyMC)
   68% expected band : 4.54996 < r < 4.54996
   95% expected band : 4.54996 < r < 4.54996
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1572010095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.75948 +/- 0.00597762 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.75948 @ 95%CL (1 toyMC)
median expected limit: r < 2.75948 @ 95%CL (1 toyMC)
   68% expected band : 2.75948 < r < 2.75948
   95% expected band : 2.75948 < r < 2.75948
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 593510037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.45173 +/- 0.00633507 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.45173 @ 95%CL (1 toyMC)
median expected limit: r < 3.45173 @ 95%CL (1 toyMC)
   68% expected band : 3.45173 < r < 3.45173
   95% expected band : 3.45173 < r < 3.45173
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 224693377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.49909 +/- 0.00621354 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.49909 @ 95%CL (1 toyMC)
median expected limit: r < 4.49909 @ 95%CL (1 toyMC)
   68% expected band : 4.49909 < r < 4.49909
   95% expected band : 4.49909 < r < 4.49909
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -72932298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.6663 +/- 0.00662561 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.6663 @ 95%CL (1 toyMC)
median expected limit: r < 4.6663 @ 95%CL (1 toyMC)
   68% expected band : 4.6663 < r < 4.6663
   95% expected band : 4.6663 < r < 4.6663
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2030498794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70901 +/- 0.00575923 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.70901 @ 95%CL (1 toyMC)
median expected limit: r < 2.70901 @ 95%CL (1 toyMC)
   68% expected band : 2.70901 < r < 2.70901
   95% expected band : 2.70901 < r < 2.70901
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1338525401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99339 +/- 0.00560004 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.99339 @ 95%CL (1 toyMC)
median expected limit: r < 1.99339 @ 95%CL (1 toyMC)
   68% expected band : 1.99339 < r < 1.99339
   95% expected band : 1.99339 < r < 1.99339
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -603692654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.14139 +/- 0.00459403 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.14139 @ 95%CL (1 toyMC)
median expected limit: r < 2.14139 @ 95%CL (1 toyMC)
   68% expected band : 2.14139 < r < 2.14139
   95% expected band : 2.14139 < r < 2.14139
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1909965239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49085 +/- 0.00551055 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.49085 @ 95%CL (1 toyMC)
median expected limit: r < 2.49085 @ 95%CL (1 toyMC)
   68% expected band : 2.49085 < r < 2.49085
   95% expected band : 2.49085 < r < 2.49085
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2076419751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56663 +/- 0.00651454 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.56663 @ 95%CL (1 toyMC)
median expected limit: r < 3.56663 @ 95%CL (1 toyMC)
   68% expected band : 3.56663 < r < 3.56663
   95% expected band : 3.56663 < r < 3.56663
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 314858251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.07632 +/- 0.00530439 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.07632 @ 95%CL (1 toyMC)
median expected limit: r < 2.07632 @ 95%CL (1 toyMC)
   68% expected band : 2.07632 < r < 2.07632
   95% expected band : 2.07632 < r < 2.07632
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 819105592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86767 +/- 0.00528854 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.86767 @ 95%CL (1 toyMC)
median expected limit: r < 2.86767 @ 95%CL (1 toyMC)
   68% expected band : 2.86767 < r < 2.86767
   95% expected band : 2.86767 < r < 2.86767
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1286025785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.14233 +/- 0.00547358 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.14233 @ 95%CL (1 toyMC)
median expected limit: r < 2.14233 @ 95%CL (1 toyMC)
   68% expected band : 2.14233 < r < 2.14233
   95% expected band : 2.14233 < r < 2.14233
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 753002406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.43229 +/- 0.00599224 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.43229 @ 95%CL (1 toyMC)
median expected limit: r < 2.43229 @ 95%CL (1 toyMC)
   68% expected band : 2.43229 < r < 2.43229
   95% expected band : 2.43229 < r < 2.43229
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1459537919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.86719 +/- 0.00677237 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.86719 @ 95%CL (1 toyMC)
median expected limit: r < 3.86719 @ 95%CL (1 toyMC)
   68% expected band : 3.86719 < r < 3.86719
   95% expected band : 3.86719 < r < 3.86719
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1558336481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1031 +/- 0.00653885 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.1031 @ 95%CL (1 toyMC)
median expected limit: r < 4.1031 @ 95%CL (1 toyMC)
   68% expected band : 4.1031 < r < 4.1031
   95% expected band : 4.1031 < r < 4.1031
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1081663602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86045 +/- 0.00511497 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.86045 @ 95%CL (1 toyMC)
median expected limit: r < 2.86045 @ 95%CL (1 toyMC)
   68% expected band : 2.86045 < r < 2.86045
   95% expected band : 2.86045 < r < 2.86045
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1713310134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.40909 +/- 0.00636437 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.40909 @ 95%CL (1 toyMC)
median expected limit: r < 3.40909 @ 95%CL (1 toyMC)
   68% expected band : 3.40909 < r < 3.40909
   95% expected band : 3.40909 < r < 3.40909
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -220133239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88924 +/- 0.00688867 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 2.88924 @ 95%CL (1 toyMC)
median expected limit: r < 2.88924 @ 95%CL (1 toyMC)
   68% expected band : 2.88924 < r < 2.88924
   95% expected band : 2.88924 < r < 2.88924
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 476647043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.87507 +/- 0.00722518 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.87507 @ 95%CL (1 toyMC)
median expected limit: r < 5.87507 @ 95%CL (1 toyMC)
   68% expected band : 5.87507 < r < 5.87507
   95% expected band : 5.87507 < r < 5.87507
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -739401902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.67674 +/- 0.00587673 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.67674 @ 95%CL (1 toyMC)
median expected limit: r < 3.67674 @ 95%CL (1 toyMC)
   68% expected band : 3.67674 < r < 3.67674
   95% expected band : 3.67674 < r < 3.67674
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1189009614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25386 +/- 0.00575549 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.25386 @ 95%CL (1 toyMC)
median expected limit: r < 3.25386 @ 95%CL (1 toyMC)
   68% expected band : 3.25386 < r < 3.25386
   95% expected band : 3.25386 < r < 3.25386
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1621852745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80798 +/- 0.00513597 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.80798 @ 95%CL (1 toyMC)
median expected limit: r < 1.80798 @ 95%CL (1 toyMC)
   68% expected band : 1.80798 < r < 1.80798
   95% expected band : 1.80798 < r < 1.80798
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1598909965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.0871 +/- 0.00626943 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.0871 @ 95%CL (1 toyMC)
median expected limit: r < 3.0871 @ 95%CL (1 toyMC)
   68% expected band : 3.0871 < r < 3.0871
   95% expected band : 3.0871 < r < 3.0871
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -451409728
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49607 +/- 0.00629841 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.49607 @ 95%CL (1 toyMC)
median expected limit: r < 2.49607 @ 95%CL (1 toyMC)
   68% expected band : 2.49607 < r < 2.49607
   95% expected band : 2.49607 < r < 2.49607
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1224537725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.33363 +/- 0.00524665 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.33363 @ 95%CL (1 toyMC)
median expected limit: r < 3.33363 @ 95%CL (1 toyMC)
   68% expected band : 3.33363 < r < 3.33363
   95% expected band : 3.33363 < r < 3.33363
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 119490767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.29829 +/- 0.00853839 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.29829 @ 95%CL (1 toyMC)
median expected limit: r < 4.29829 @ 95%CL (1 toyMC)
   68% expected band : 4.29829 < r < 4.29829
   95% expected band : 4.29829 < r < 4.29829
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -303740065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.93352 +/- 0.00605106 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.93352 @ 95%CL (1 toyMC)
median expected limit: r < 3.93352 @ 95%CL (1 toyMC)
   68% expected band : 3.93352 < r < 3.93352
   95% expected band : 3.93352 < r < 3.93352
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1634672281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.55507 +/- 0.0066704 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.55507 @ 95%CL (1 toyMC)
median expected limit: r < 3.55507 @ 95%CL (1 toyMC)
   68% expected band : 3.55507 < r < 3.55507
   95% expected band : 3.55507 < r < 3.55507
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1319417488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.6916 +/- 0.00872272 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.6916 @ 95%CL (1 toyMC)
median expected limit: r < 4.6916 @ 95%CL (1 toyMC)
   68% expected band : 4.6916 < r < 4.6916
   95% expected band : 4.6916 < r < 4.6916
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 520333282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1315 +/- 0.00540958 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.1315 @ 95%CL (1 toyMC)
median expected limit: r < 2.1315 @ 95%CL (1 toyMC)
   68% expected band : 2.1315 < r < 2.1315
   95% expected band : 2.1315 < r < 2.1315
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -68138988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49024 +/- 0.00509324 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.49024 @ 95%CL (1 toyMC)
median expected limit: r < 2.49024 @ 95%CL (1 toyMC)
   68% expected band : 2.49024 < r < 2.49024
   95% expected band : 2.49024 < r < 2.49024
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2045073545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11249 +/- 0.00510037 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.11249 @ 95%CL (1 toyMC)
median expected limit: r < 2.11249 @ 95%CL (1 toyMC)
   68% expected band : 2.11249 < r < 2.11249
   95% expected band : 2.11249 < r < 2.11249
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1461301221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.11174 +/- 0.00600286 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.11174 @ 95%CL (1 toyMC)
median expected limit: r < 3.11174 @ 95%CL (1 toyMC)
   68% expected band : 3.11174 < r < 3.11174
   95% expected band : 3.11174 < r < 3.11174
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 67642940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.5092 +/- 0.00709595 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.5092 @ 95%CL (1 toyMC)
median expected limit: r < 3.5092 @ 95%CL (1 toyMC)
   68% expected band : 3.5092 < r < 3.5092
   95% expected band : 3.5092 < r < 3.5092
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 593833859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56338 +/- 0.00708443 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.56338 @ 95%CL (1 toyMC)
median expected limit: r < 3.56338 @ 95%CL (1 toyMC)
   68% expected band : 3.56338 < r < 3.56338
   95% expected band : 3.56338 < r < 3.56338
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -766342727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86045 +/- 0.00525786 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.86045 @ 95%CL (1 toyMC)
median expected limit: r < 1.86045 @ 95%CL (1 toyMC)
   68% expected band : 1.86045 < r < 1.86045
   95% expected band : 1.86045 < r < 1.86045
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1582250870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.94418 +/- 0.00721913 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.94418 @ 95%CL (1 toyMC)
median expected limit: r < 4.94418 @ 95%CL (1 toyMC)
   68% expected band : 4.94418 < r < 4.94418
   95% expected band : 4.94418 < r < 4.94418
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1268435777
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.85264 +/- 0.0061323 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.85264 @ 95%CL (1 toyMC)
median expected limit: r < 2.85264 @ 95%CL (1 toyMC)
   68% expected band : 2.85264 < r < 2.85264
   95% expected band : 2.85264 < r < 2.85264
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 611638853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88424 +/- 0.00635397 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.88424 @ 95%CL (1 toyMC)
median expected limit: r < 2.88424 @ 95%CL (1 toyMC)
   68% expected band : 2.88424 < r < 2.88424
   95% expected band : 2.88424 < r < 2.88424
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1135818303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36041 +/- 0.00522008 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.36041 @ 95%CL (1 toyMC)
median expected limit: r < 2.36041 @ 95%CL (1 toyMC)
   68% expected band : 2.36041 < r < 2.36041
   95% expected band : 2.36041 < r < 2.36041
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1606272820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53547 +/- 0.004966 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.53547 @ 95%CL (1 toyMC)
median expected limit: r < 2.53547 @ 95%CL (1 toyMC)
   68% expected band : 2.53547 < r < 2.53547
   95% expected band : 2.53547 < r < 2.53547
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1400711799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.8393 +/- 0.00522841 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.8393 @ 95%CL (1 toyMC)
median expected limit: r < 3.8393 @ 95%CL (1 toyMC)
   68% expected band : 3.8393 < r < 3.8393
   95% expected band : 3.8393 < r < 3.8393
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1672938065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.90467 +/- 0.00604724 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.90467 @ 95%CL (1 toyMC)
median expected limit: r < 3.90467 @ 95%CL (1 toyMC)
   68% expected band : 3.90467 < r < 3.90467
   95% expected band : 3.90467 < r < 3.90467
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1710231811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.72769 +/- 0.0061322 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.72769 @ 95%CL (1 toyMC)
median expected limit: r < 2.72769 @ 95%CL (1 toyMC)
   68% expected band : 2.72769 < r < 2.72769
   95% expected band : 2.72769 < r < 2.72769
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -48002342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.23521 +/- 0.00620116 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.23521 @ 95%CL (1 toyMC)
median expected limit: r < 2.23521 @ 95%CL (1 toyMC)
   68% expected band : 2.23521 < r < 2.23521
   95% expected band : 2.23521 < r < 2.23521
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -80511311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.14209 +/- 0.00563756 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.14209 @ 95%CL (1 toyMC)
median expected limit: r < 3.14209 @ 95%CL (1 toyMC)
   68% expected band : 3.14209 < r < 3.14209
   95% expected band : 3.14209 < r < 3.14209
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -717107383
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.2114 +/- 0.00657975 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.2114 @ 95%CL (1 toyMC)
median expected limit: r < 4.2114 @ 95%CL (1 toyMC)
   68% expected band : 4.2114 < r < 4.2114
   95% expected band : 4.2114 < r < 4.2114
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1694297132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85814 +/- 0.00446799 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.85814 @ 95%CL (1 toyMC)
median expected limit: r < 1.85814 @ 95%CL (1 toyMC)
   68% expected band : 1.85814 < r < 1.85814
   95% expected band : 1.85814 < r < 1.85814
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2028417264
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.23748 +/- 0.00721572 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.23748 @ 95%CL (1 toyMC)
median expected limit: r < 4.23748 @ 95%CL (1 toyMC)
   68% expected band : 4.23748 < r < 4.23748
   95% expected band : 4.23748 < r < 4.23748
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -500654206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.04713 +/- 0.00707069 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.04713 @ 95%CL (1 toyMC)
median expected limit: r < 5.04713 @ 95%CL (1 toyMC)
   68% expected band : 5.04713 < r < 5.04713
   95% expected band : 5.04713 < r < 5.04713
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -888975805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65198 +/- 0.00537671 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.65198 @ 95%CL (1 toyMC)
median expected limit: r < 2.65198 @ 95%CL (1 toyMC)
   68% expected band : 2.65198 < r < 2.65198
   95% expected band : 2.65198 < r < 2.65198
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -202178272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.95296 +/- 0.00627491 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.95296 @ 95%CL (1 toyMC)
median expected limit: r < 3.95296 @ 95%CL (1 toyMC)
   68% expected band : 3.95296 < r < 3.95296
   95% expected band : 3.95296 < r < 3.95296
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -675527484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00081 +/- 0.00410673 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.00081 @ 95%CL (1 toyMC)
median expected limit: r < 2.00081 @ 95%CL (1 toyMC)
   68% expected band : 2.00081 < r < 2.00081
   95% expected band : 2.00081 < r < 2.00081
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1550118572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85326 +/- 0.0053045 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 1.85326 @ 95%CL (1 toyMC)
median expected limit: r < 1.85326 @ 95%CL (1 toyMC)
   68% expected band : 1.85326 < r < 1.85326
   95% expected band : 1.85326 < r < 1.85326
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1657056097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.5834 +/- 0.00754065 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.5834 @ 95%CL (1 toyMC)
median expected limit: r < 3.5834 @ 95%CL (1 toyMC)
   68% expected band : 3.5834 < r < 3.5834
   95% expected band : 3.5834 < r < 3.5834
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2143264906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.52533 +/- 0.00432617 @ 95% CL (100 tries)
Done in 0.14 min (cpu), 0.14 min (real)
mean   expected limit: r < 1.52533 @ 95%CL (1 toyMC)
median expected limit: r < 1.52533 @ 95%CL (1 toyMC)
   68% expected band : 1.52533 < r < 1.52533
   95% expected band : 1.52533 < r < 1.52533
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 988489297
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.08107 +/- 0.00545145 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.08107 @ 95%CL (1 toyMC)
median expected limit: r < 4.08107 @ 95%CL (1 toyMC)
   68% expected band : 4.08107 < r < 4.08107
   95% expected band : 4.08107 < r < 4.08107
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -887596309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.24087 +/- 0.0063998 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.24087 @ 95%CL (1 toyMC)
median expected limit: r < 3.24087 @ 95%CL (1 toyMC)
   68% expected band : 3.24087 < r < 3.24087
   95% expected band : 3.24087 < r < 3.24087
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1888338376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86528 +/- 0.00850689 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.86528 @ 95%CL (1 toyMC)
median expected limit: r < 4.86528 @ 95%CL (1 toyMC)
   68% expected band : 4.86528 < r < 4.86528
   95% expected band : 4.86528 < r < 4.86528
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1847189072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.99171 +/- 0.00630244 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.99171 @ 95%CL (1 toyMC)
median expected limit: r < 2.99171 @ 95%CL (1 toyMC)
   68% expected band : 2.99171 < r < 2.99171
   95% expected band : 2.99171 < r < 2.99171
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2051569614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47662 +/- 0.00570772 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.47662 @ 95%CL (1 toyMC)
median expected limit: r < 2.47662 @ 95%CL (1 toyMC)
   68% expected band : 2.47662 < r < 2.47662
   95% expected band : 2.47662 < r < 2.47662
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -687886166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.10353 +/- 0.00724154 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.10353 @ 95%CL (1 toyMC)
median expected limit: r < 4.10353 @ 95%CL (1 toyMC)
   68% expected band : 4.10353 < r < 4.10353
   95% expected band : 4.10353 < r < 4.10353
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -406624488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18241 +/- 0.00546107 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.18241 @ 95%CL (1 toyMC)
median expected limit: r < 3.18241 @ 95%CL (1 toyMC)
   68% expected band : 3.18241 < r < 3.18241
   95% expected band : 3.18241 < r < 3.18241
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -239866863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.18156 +/- 0.00652183 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.18156 @ 95%CL (1 toyMC)
median expected limit: r < 5.18156 @ 95%CL (1 toyMC)
   68% expected band : 5.18156 < r < 5.18156
   95% expected band : 5.18156 < r < 5.18156
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1240710213
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.18292 +/- 0.0059287 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.18292 @ 95%CL (1 toyMC)
median expected limit: r < 4.18292 @ 95%CL (1 toyMC)
   68% expected band : 4.18292 < r < 4.18292
   95% expected band : 4.18292 < r < 4.18292
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1686558447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.84101 +/- 0.00583135 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.84101 @ 95%CL (1 toyMC)
median expected limit: r < 2.84101 @ 95%CL (1 toyMC)
   68% expected band : 2.84101 < r < 2.84101
   95% expected band : 2.84101 < r < 2.84101
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 617140430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8695 +/- 0.00515839 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.8695 @ 95%CL (1 toyMC)
median expected limit: r < 2.8695 @ 95%CL (1 toyMC)
   68% expected band : 2.8695 < r < 2.8695
   95% expected band : 2.8695 < r < 2.8695
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2122688106
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.33962 +/- 0.00543815 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.33962 @ 95%CL (1 toyMC)
median expected limit: r < 2.33962 @ 95%CL (1 toyMC)
   68% expected band : 2.33962 < r < 2.33962
   95% expected band : 2.33962 < r < 2.33962
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1613313873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.31903 +/- 0.00486967 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.31903 @ 95%CL (1 toyMC)
median expected limit: r < 2.31903 @ 95%CL (1 toyMC)
   68% expected band : 2.31903 < r < 2.31903
   95% expected band : 2.31903 < r < 2.31903
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1420957965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.26031 +/- 0.00640229 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.26031 @ 95%CL (1 toyMC)
median expected limit: r < 3.26031 @ 95%CL (1 toyMC)
   68% expected band : 3.26031 < r < 3.26031
   95% expected band : 3.26031 < r < 3.26031
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -611971608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.17151 +/- 0.00462016 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.17151 @ 95%CL (1 toyMC)
median expected limit: r < 2.17151 @ 95%CL (1 toyMC)
   68% expected band : 2.17151 < r < 2.17151
   95% expected band : 2.17151 < r < 2.17151
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1173110424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.67978 +/- 0.00578142 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.67978 @ 95%CL (1 toyMC)
median expected limit: r < 4.67978 @ 95%CL (1 toyMC)
   68% expected band : 4.67978 < r < 4.67978
   95% expected band : 4.67978 < r < 4.67978
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 598929377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.87005 +/- 0.00450577 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 1.87005 @ 95%CL (1 toyMC)
median expected limit: r < 1.87005 @ 95%CL (1 toyMC)
   68% expected band : 1.87005 < r < 1.87005
   95% expected band : 1.87005 < r < 1.87005
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1499767049
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61964 +/- 0.00629926 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.61964 @ 95%CL (1 toyMC)
median expected limit: r < 3.61964 @ 95%CL (1 toyMC)
   68% expected band : 3.61964 < r < 3.61964
   95% expected band : 3.61964 < r < 3.61964
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1161675935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.83053 +/- 0.00529762 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.83053 @ 95%CL (1 toyMC)
median expected limit: r < 3.83053 @ 95%CL (1 toyMC)
   68% expected band : 3.83053 < r < 3.83053
   95% expected band : 3.83053 < r < 3.83053
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -686998164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36621 +/- 0.00597246 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.36621 @ 95%CL (1 toyMC)
median expected limit: r < 2.36621 @ 95%CL (1 toyMC)
   68% expected band : 2.36621 < r < 2.36621
   95% expected band : 2.36621 < r < 2.36621
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1135818303.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1240710213.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1268435777.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1338525401.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1400711799.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1414604862.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1420957965.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1461301221.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1499767049.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1598909965.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1621852745.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1657056097.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1672938065.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1686558447.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1710231811.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1746335969.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1847189072.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1888338376.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-202178272.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-2028417264.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-2030498794.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-2063148657.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2068446644.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-2122688106.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-213456919.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2143264906.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-220133239.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-239793818.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-239866863.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-303740065.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-383856382.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-406624488.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-41820203.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-451409728.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-467444296.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-470007069.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-48002342.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-498566873.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-500654206.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-603692654.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-611971608.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-675527484.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-68138988.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-686998164.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-687886166.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-717107383.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-72932298.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-739401902.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-766342727.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-80511311.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-877759316.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-887596309.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-888975805.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.-947350051.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1081663602.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1100627090.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1147164495.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1161675935.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1173110424.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1189009614.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.119490767.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1224537725.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1286025785.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1319417488.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.13498650.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1459537919.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1550118572.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1558336481.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1572010095.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1582250870.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1594736167.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1606272820.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1613313873.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1634672281.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1694297132.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1713310134.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1846909595.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1909965239.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.1965551683.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.2045073545.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.2051569614.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.2076419751.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.224693377.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.250126740.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.314858251.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.476647043.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.520333282.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.53651693.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.584492540.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.593510037.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.593833859.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.598929377.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.611638853.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.617140430.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.67642940.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.692202256.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.753002406.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.819105592.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.96856504.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.988489297.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1716340550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.70259 +/- 0.00692083 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.70259 @ 95%CL (1 toyMC)
median expected limit: r < 3.70259 @ 95%CL (1 toyMC)
   68% expected band : 3.70259 < r < 3.70259
   95% expected band : 3.70259 < r < 3.70259
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -900050125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.47035 +/- 0.00719189 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.47035 @ 95%CL (1 toyMC)
median expected limit: r < 3.47035 @ 95%CL (1 toyMC)
   68% expected band : 3.47035 < r < 3.47035
   95% expected band : 3.47035 < r < 3.47035
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 667843228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.77966 +/- 0.00727297 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 3.77966 @ 95%CL (1 toyMC)
median expected limit: r < 3.77966 @ 95%CL (1 toyMC)
   68% expected band : 3.77966 < r < 3.77966
   95% expected band : 3.77966 < r < 3.77966
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 639500307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.8512 +/- 0.00674695 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.8512 @ 95%CL (1 toyMC)
median expected limit: r < 3.8512 @ 95%CL (1 toyMC)
   68% expected band : 3.8512 < r < 3.8512
   95% expected band : 3.8512 < r < 3.8512
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 649035308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.76822 +/- 0.00555328 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.76822 @ 95%CL (1 toyMC)
median expected limit: r < 6.76822 @ 95%CL (1 toyMC)
   68% expected band : 6.76822 < r < 6.76822
   95% expected band : 6.76822 < r < 6.76822
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1907869411
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.56268 +/- 0.00709269 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.56268 @ 95%CL (1 toyMC)
median expected limit: r < 5.56268 @ 95%CL (1 toyMC)
   68% expected band : 5.56268 < r < 5.56268
   95% expected band : 5.56268 < r < 5.56268
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1246965395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18988 +/- 0.00614731 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.18988 @ 95%CL (1 toyMC)
median expected limit: r < 3.18988 @ 95%CL (1 toyMC)
   68% expected band : 3.18988 < r < 3.18988
   95% expected band : 3.18988 < r < 3.18988
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 848693209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.92965 +/- 0.0056432 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.92965 @ 95%CL (1 toyMC)
median expected limit: r < 2.92965 @ 95%CL (1 toyMC)
   68% expected band : 2.92965 < r < 2.92965
   95% expected band : 2.92965 < r < 2.92965
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 903717955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82562 +/- 0.00645293 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.82562 @ 95%CL (1 toyMC)
median expected limit: r < 2.82562 @ 95%CL (1 toyMC)
   68% expected band : 2.82562 < r < 2.82562
   95% expected band : 2.82562 < r < 2.82562
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 782527089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.34709 +/- 0.00492879 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.34709 @ 95%CL (1 toyMC)
median expected limit: r < 3.34709 @ 95%CL (1 toyMC)
   68% expected band : 3.34709 < r < 3.34709
   95% expected band : 3.34709 < r < 3.34709
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1170011544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.99693 +/- 0.00844382 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.99693 @ 95%CL (1 toyMC)
median expected limit: r < 3.99693 @ 95%CL (1 toyMC)
   68% expected band : 3.99693 < r < 3.99693
   95% expected band : 3.99693 < r < 3.99693
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1953612932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.50298 +/- 0.00833846 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.50298 @ 95%CL (1 toyMC)
median expected limit: r < 3.50298 @ 95%CL (1 toyMC)
   68% expected band : 3.50298 < r < 3.50298
   95% expected band : 3.50298 < r < 3.50298
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 936891156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.39745 +/- 0.010846 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.39745 @ 95%CL (1 toyMC)
median expected limit: r < 9.39745 @ 95%CL (1 toyMC)
   68% expected band : 9.39745 < r < 9.39745
   95% expected band : 9.39745 < r < 9.39745
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1783815325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.3048 +/- 0.00812762 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.3048 @ 95%CL (1 toyMC)
median expected limit: r < 4.3048 @ 95%CL (1 toyMC)
   68% expected band : 4.3048 < r < 4.3048
   95% expected band : 4.3048 < r < 4.3048
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1806798762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.16312 +/- 0.00618696 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.16312 @ 95%CL (1 toyMC)
median expected limit: r < 3.16312 @ 95%CL (1 toyMC)
   68% expected band : 3.16312 < r < 3.16312
   95% expected band : 3.16312 < r < 3.16312
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -879126952
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03887 +/- 0.0075216 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.03887 @ 95%CL (1 toyMC)
median expected limit: r < 4.03887 @ 95%CL (1 toyMC)
   68% expected band : 4.03887 < r < 4.03887
   95% expected band : 4.03887 < r < 4.03887
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1779873208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18066 +/- 0.00564546 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.18066 @ 95%CL (1 toyMC)
median expected limit: r < 2.18066 @ 95%CL (1 toyMC)
   68% expected band : 2.18066 < r < 2.18066
   95% expected band : 2.18066 < r < 2.18066
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1744903507
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.96594 +/- 0.00586385 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.96594 @ 95%CL (1 toyMC)
median expected limit: r < 2.96594 @ 95%CL (1 toyMC)
   68% expected band : 2.96594 < r < 2.96594
   95% expected band : 2.96594 < r < 2.96594
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1110065342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.98313 +/- 0.00555292 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.98313 @ 95%CL (1 toyMC)
median expected limit: r < 3.98313 @ 95%CL (1 toyMC)
   68% expected band : 3.98313 < r < 3.98313
   95% expected band : 3.98313 < r < 3.98313
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1792399598
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.9337 +/- 0.00829305 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.9337 @ 95%CL (1 toyMC)
median expected limit: r < 3.9337 @ 95%CL (1 toyMC)
   68% expected band : 3.9337 < r < 3.9337
   95% expected band : 3.9337 < r < 3.9337
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1408028280
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87729 +/- 0.00610163 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.87729 @ 95%CL (1 toyMC)
median expected limit: r < 2.87729 @ 95%CL (1 toyMC)
   68% expected band : 2.87729 < r < 2.87729
   95% expected band : 2.87729 < r < 2.87729
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -613630657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.21136 +/- 0.00556601 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.21136 @ 95%CL (1 toyMC)
median expected limit: r < 4.21136 @ 95%CL (1 toyMC)
   68% expected band : 4.21136 < r < 4.21136
   95% expected band : 4.21136 < r < 4.21136
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 918815205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.75264 +/- 0.008871 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.75264 @ 95%CL (1 toyMC)
median expected limit: r < 6.75264 @ 95%CL (1 toyMC)
   68% expected band : 6.75264 < r < 6.75264
   95% expected band : 6.75264 < r < 6.75264
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1728789887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.99713 +/- 0.00982631 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.99713 @ 95%CL (1 toyMC)
median expected limit: r < 5.99713 @ 95%CL (1 toyMC)
   68% expected band : 5.99713 < r < 5.99713
   95% expected band : 5.99713 < r < 5.99713
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 948498585
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.36523 +/- 0.0109854 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.36523 @ 95%CL (1 toyMC)
median expected limit: r < 6.36523 @ 95%CL (1 toyMC)
   68% expected band : 6.36523 < r < 6.36523
   95% expected band : 6.36523 < r < 6.36523
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 477951315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.41867 +/- 0.00567615 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.41867 @ 95%CL (1 toyMC)
median expected limit: r < 4.41867 @ 95%CL (1 toyMC)
   68% expected band : 4.41867 < r < 4.41867
   95% expected band : 4.41867 < r < 4.41867
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -833727639
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.92339 +/- 0.00856638 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.92339 @ 95%CL (1 toyMC)
median expected limit: r < 4.92339 @ 95%CL (1 toyMC)
   68% expected band : 4.92339 < r < 4.92339
   95% expected band : 4.92339 < r < 4.92339
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 962290216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.13615 +/- 0.0117397 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.13615 @ 95%CL (1 toyMC)
median expected limit: r < 6.13615 @ 95%CL (1 toyMC)
   68% expected band : 6.13615 < r < 6.13615
   95% expected band : 6.13615 < r < 6.13615
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -43621146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.73758 +/- 0.00951461 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.73758 @ 95%CL (1 toyMC)
median expected limit: r < 6.73758 @ 95%CL (1 toyMC)
   68% expected band : 6.73758 < r < 6.73758
   95% expected band : 6.73758 < r < 6.73758
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 406349025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71059 +/- 0.00614988 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.71059 @ 95%CL (1 toyMC)
median expected limit: r < 2.71059 @ 95%CL (1 toyMC)
   68% expected band : 2.71059 < r < 2.71059
   95% expected band : 2.71059 < r < 2.71059
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1776668176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.34557 +/- 0.00634288 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.34557 @ 95%CL (1 toyMC)
median expected limit: r < 3.34557 @ 95%CL (1 toyMC)
   68% expected band : 3.34557 < r < 3.34557
   95% expected band : 3.34557 < r < 3.34557
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 663252768
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.60527 +/- 0.00667677 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.60527 @ 95%CL (1 toyMC)
median expected limit: r < 3.60527 @ 95%CL (1 toyMC)
   68% expected band : 3.60527 < r < 3.60527
   95% expected band : 3.60527 < r < 3.60527
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1959733423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.60575 +/- 0.00771427 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.60575 @ 95%CL (1 toyMC)
median expected limit: r < 6.60575 @ 95%CL (1 toyMC)
   68% expected band : 6.60575 < r < 6.60575
   95% expected band : 6.60575 < r < 6.60575
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1028286400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.66262 +/- 0.00939043 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 5.66262 @ 95%CL (1 toyMC)
median expected limit: r < 5.66262 @ 95%CL (1 toyMC)
   68% expected band : 5.66262 < r < 5.66262
   95% expected band : 5.66262 < r < 5.66262
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -321103845
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.08123 +/- 0.00681407 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.08123 @ 95%CL (1 toyMC)
median expected limit: r < 5.08123 @ 95%CL (1 toyMC)
   68% expected band : 5.08123 < r < 5.08123
   95% expected band : 5.08123 < r < 5.08123
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 176275455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.47782 +/- 0.00752168 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.47782 @ 95%CL (1 toyMC)
median expected limit: r < 3.47782 @ 95%CL (1 toyMC)
   68% expected band : 3.47782 < r < 3.47782
   95% expected band : 3.47782 < r < 3.47782
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1449774776
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.92161 +/- 0.00629849 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.92161 @ 95%CL (1 toyMC)
median expected limit: r < 2.92161 @ 95%CL (1 toyMC)
   68% expected band : 2.92161 < r < 2.92161
   95% expected band : 2.92161 < r < 2.92161
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1301525184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.38246 +/- 0.00834361 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.38246 @ 95%CL (1 toyMC)
median expected limit: r < 4.38246 @ 95%CL (1 toyMC)
   68% expected band : 4.38246 < r < 4.38246
   95% expected band : 4.38246 < r < 4.38246
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 50696197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.36698 +/- 0.00704233 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.36698 @ 95%CL (1 toyMC)
median expected limit: r < 3.36698 @ 95%CL (1 toyMC)
   68% expected band : 3.36698 < r < 3.36698
   95% expected band : 3.36698 < r < 3.36698
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2002231559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51292 +/- 0.00558258 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.51292 @ 95%CL (1 toyMC)
median expected limit: r < 2.51292 @ 95%CL (1 toyMC)
   68% expected band : 2.51292 < r < 2.51292
   95% expected band : 2.51292 < r < 2.51292
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -694914825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20201 +/- 0.0081471 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.20201 @ 95%CL (1 toyMC)
median expected limit: r < 6.20201 @ 95%CL (1 toyMC)
   68% expected band : 6.20201 < r < 6.20201
   95% expected band : 6.20201 < r < 6.20201
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1937904504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.01073 +/- 0.00974332 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.01073 @ 95%CL (1 toyMC)
median expected limit: r < 5.01073 @ 95%CL (1 toyMC)
   68% expected band : 5.01073 < r < 5.01073
   95% expected band : 5.01073 < r < 5.01073
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1480071117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.19481 +/- 0.0079229 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.19481 @ 95%CL (1 toyMC)
median expected limit: r < 3.19481 @ 95%CL (1 toyMC)
   68% expected band : 3.19481 < r < 3.19481
   95% expected band : 3.19481 < r < 3.19481
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1643561252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.41232 +/- 0.00747995 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.41232 @ 95%CL (1 toyMC)
median expected limit: r < 4.41232 @ 95%CL (1 toyMC)
   68% expected band : 4.41232 < r < 4.41232
   95% expected band : 4.41232 < r < 4.41232
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1630791680
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97894 +/- 0.00658302 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.97894 @ 95%CL (1 toyMC)
median expected limit: r < 3.97894 @ 95%CL (1 toyMC)
   68% expected band : 3.97894 < r < 3.97894
   95% expected band : 3.97894 < r < 3.97894
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1471121014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.67389 +/- 0.0065787 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.67389 @ 95%CL (1 toyMC)
median expected limit: r < 4.67389 @ 95%CL (1 toyMC)
   68% expected band : 4.67389 < r < 4.67389
   95% expected band : 4.67389 < r < 4.67389
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1920660405
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.49476 +/- 0.00797505 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.49476 @ 95%CL (1 toyMC)
median expected limit: r < 4.49476 @ 95%CL (1 toyMC)
   68% expected band : 4.49476 < r < 4.49476
   95% expected band : 4.49476 < r < 4.49476
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1871683672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.73888 +/- 0.00590298 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.73888 @ 95%CL (1 toyMC)
median expected limit: r < 2.73888 @ 95%CL (1 toyMC)
   68% expected band : 2.73888 < r < 2.73888
   95% expected band : 2.73888 < r < 2.73888
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 532103623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.08616 +/- 0.00778051 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.08616 @ 95%CL (1 toyMC)
median expected limit: r < 5.08616 @ 95%CL (1 toyMC)
   68% expected band : 5.08616 < r < 5.08616
   95% expected band : 5.08616 < r < 5.08616
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1635878922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.29846 +/- 0.00712232 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.29846 @ 95%CL (1 toyMC)
median expected limit: r < 4.29846 @ 95%CL (1 toyMC)
   68% expected band : 4.29846 < r < 4.29846
   95% expected band : 4.29846 < r < 4.29846
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 978868095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3455 +/- 0.00512977 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.3455 @ 95%CL (1 toyMC)
median expected limit: r < 2.3455 @ 95%CL (1 toyMC)
   68% expected band : 2.3455 < r < 2.3455
   95% expected band : 2.3455 < r < 2.3455
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1448835701
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49638 +/- 0.00676443 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.49638 @ 95%CL (1 toyMC)
median expected limit: r < 3.49638 @ 95%CL (1 toyMC)
   68% expected band : 3.49638 < r < 3.49638
   95% expected band : 3.49638 < r < 3.49638
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1584846739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.1191 +/- 0.00704229 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.1191 @ 95%CL (1 toyMC)
median expected limit: r < 5.1191 @ 95%CL (1 toyMC)
   68% expected band : 5.1191 < r < 5.1191
   95% expected band : 5.1191 < r < 5.1191
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -288753146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.81558 +/- 0.00773875 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.81558 @ 95%CL (1 toyMC)
median expected limit: r < 3.81558 @ 95%CL (1 toyMC)
   68% expected band : 3.81558 < r < 3.81558
   95% expected band : 3.81558 < r < 3.81558
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1357113907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.08473 +/- 0.00835534 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.08473 @ 95%CL (1 toyMC)
median expected limit: r < 5.08473 @ 95%CL (1 toyMC)
   68% expected band : 5.08473 < r < 5.08473
   95% expected band : 5.08473 < r < 5.08473
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 314210323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1871 +/- 0.00765001 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.1871 @ 95%CL (1 toyMC)
median expected limit: r < 4.1871 @ 95%CL (1 toyMC)
   68% expected band : 4.1871 < r < 4.1871
   95% expected band : 4.1871 < r < 4.1871
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -601572708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.72258 +/- 0.00531676 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.72258 @ 95%CL (1 toyMC)
median expected limit: r < 2.72258 @ 95%CL (1 toyMC)
   68% expected band : 2.72258 < r < 2.72258
   95% expected band : 2.72258 < r < 2.72258
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2082958003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.53495 +/- 0.010043 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.53495 @ 95%CL (1 toyMC)
median expected limit: r < 6.53495 @ 95%CL (1 toyMC)
   68% expected band : 6.53495 < r < 6.53495
   95% expected band : 6.53495 < r < 6.53495
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1930818159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.05965 +/- 0.0058928 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.05965 @ 95%CL (1 toyMC)
median expected limit: r < 3.05965 @ 95%CL (1 toyMC)
   68% expected band : 3.05965 < r < 3.05965
   95% expected band : 3.05965 < r < 3.05965
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -499241719
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76937 +/- 0.00580368 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.76937 @ 95%CL (1 toyMC)
median expected limit: r < 2.76937 @ 95%CL (1 toyMC)
   68% expected band : 2.76937 < r < 2.76937
   95% expected band : 2.76937 < r < 2.76937
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 554658139
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.55837 +/- 0.00571805 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.55837 @ 95%CL (1 toyMC)
median expected limit: r < 4.55837 @ 95%CL (1 toyMC)
   68% expected band : 4.55837 < r < 4.55837
   95% expected band : 4.55837 < r < 4.55837
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -427256504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.95965 +/- 0.00704885 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.95965 @ 95%CL (1 toyMC)
median expected limit: r < 3.95965 @ 95%CL (1 toyMC)
   68% expected band : 3.95965 < r < 3.95965
   95% expected band : 3.95965 < r < 3.95965
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2078291530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.64721 +/- 0.00708439 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.64721 @ 95%CL (1 toyMC)
median expected limit: r < 3.64721 @ 95%CL (1 toyMC)
   68% expected band : 3.64721 < r < 3.64721
   95% expected band : 3.64721 < r < 3.64721
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1699435231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.21043 +/- 0.00501147 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.21043 @ 95%CL (1 toyMC)
median expected limit: r < 2.21043 @ 95%CL (1 toyMC)
   68% expected band : 2.21043 < r < 2.21043
   95% expected band : 2.21043 < r < 2.21043
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -67652532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01729 +/- 0.00736924 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.01729 @ 95%CL (1 toyMC)
median expected limit: r < 6.01729 @ 95%CL (1 toyMC)
   68% expected band : 6.01729 < r < 6.01729
   95% expected band : 6.01729 < r < 6.01729
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -283582272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.59208 +/- 0.00661488 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.59208 @ 95%CL (1 toyMC)
median expected limit: r < 2.59208 @ 95%CL (1 toyMC)
   68% expected band : 2.59208 < r < 2.59208
   95% expected band : 2.59208 < r < 2.59208
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1107945444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.6059 +/- 0.00522917 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.6059 @ 95%CL (1 toyMC)
median expected limit: r < 2.6059 @ 95%CL (1 toyMC)
   68% expected band : 2.6059 < r < 2.6059
   95% expected band : 2.6059 < r < 2.6059
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2074289729
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51354 +/- 0.00806723 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.51354 @ 95%CL (1 toyMC)
median expected limit: r < 5.51354 @ 95%CL (1 toyMC)
   68% expected band : 5.51354 < r < 5.51354
   95% expected band : 5.51354 < r < 5.51354
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 79869558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.83976 +/- 0.00776343 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.83976 @ 95%CL (1 toyMC)
median expected limit: r < 2.83976 @ 95%CL (1 toyMC)
   68% expected band : 2.83976 < r < 2.83976
   95% expected band : 2.83976 < r < 2.83976
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 982733996
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.97367 +/- 0.00860892 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.97367 @ 95%CL (1 toyMC)
median expected limit: r < 3.97367 @ 95%CL (1 toyMC)
   68% expected band : 3.97367 < r < 3.97367
   95% expected band : 3.97367 < r < 3.97367
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 741400294
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.2593 +/- 0.00719765 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.2593 @ 95%CL (1 toyMC)
median expected limit: r < 4.2593 @ 95%CL (1 toyMC)
   68% expected band : 4.2593 < r < 4.2593
   95% expected band : 4.2593 < r < 4.2593
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -440126534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.29837 +/- 0.00949019 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.29837 @ 95%CL (1 toyMC)
median expected limit: r < 4.29837 @ 95%CL (1 toyMC)
   68% expected band : 4.29837 < r < 4.29837
   95% expected band : 4.29837 < r < 4.29837
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1403255787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.61484 +/- 0.00614288 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.61484 @ 95%CL (1 toyMC)
median expected limit: r < 2.61484 @ 95%CL (1 toyMC)
   68% expected band : 2.61484 < r < 2.61484
   95% expected band : 2.61484 < r < 2.61484
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 102330430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.89985 +/- 0.00743931 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.89985 @ 95%CL (1 toyMC)
median expected limit: r < 3.89985 @ 95%CL (1 toyMC)
   68% expected band : 3.89985 < r < 3.89985
   95% expected band : 3.89985 < r < 3.89985
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1684325935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.45055 +/- 0.011675 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.45055 @ 95%CL (1 toyMC)
median expected limit: r < 8.45055 @ 95%CL (1 toyMC)
   68% expected band : 8.45055 < r < 8.45055
   95% expected band : 8.45055 < r < 8.45055
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -218538693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.77784 +/- 0.00701978 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.77784 @ 95%CL (1 toyMC)
median expected limit: r < 3.77784 @ 95%CL (1 toyMC)
   68% expected band : 3.77784 < r < 3.77784
   95% expected band : 3.77784 < r < 3.77784
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -944111920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.0011 +/- 0.00721727 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.0011 @ 95%CL (1 toyMC)
median expected limit: r < 4.0011 @ 95%CL (1 toyMC)
   68% expected band : 4.0011 < r < 4.0011
   95% expected band : 4.0011 < r < 4.0011
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2110515316
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.04277 +/- 0.00748141 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.04277 @ 95%CL (1 toyMC)
median expected limit: r < 4.04277 @ 95%CL (1 toyMC)
   68% expected band : 4.04277 < r < 4.04277
   95% expected band : 4.04277 < r < 4.04277
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 777970876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.00699 +/- 0.00678876 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.00699 @ 95%CL (1 toyMC)
median expected limit: r < 3.00699 @ 95%CL (1 toyMC)
   68% expected band : 3.00699 < r < 3.00699
   95% expected band : 3.00699 < r < 3.00699
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2009322272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.16762 +/- 0.00946914 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.16762 @ 95%CL (1 toyMC)
median expected limit: r < 7.16762 @ 95%CL (1 toyMC)
   68% expected band : 7.16762 < r < 7.16762
   95% expected band : 7.16762 < r < 7.16762
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 895107295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.55549 +/- 0.00564311 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.55549 @ 95%CL (1 toyMC)
median expected limit: r < 2.55549 @ 95%CL (1 toyMC)
   68% expected band : 2.55549 < r < 2.55549
   95% expected band : 2.55549 < r < 2.55549
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1209959533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.129 +/- 0.00649332 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.129 @ 95%CL (1 toyMC)
median expected limit: r < 3.129 @ 95%CL (1 toyMC)
   68% expected band : 3.129 < r < 3.129
   95% expected band : 3.129 < r < 3.129
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1370690851
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.63299 +/- 0.00649406 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 3.63299 @ 95%CL (1 toyMC)
median expected limit: r < 3.63299 @ 95%CL (1 toyMC)
   68% expected band : 3.63299 < r < 3.63299
   95% expected band : 3.63299 < r < 3.63299
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1423449987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.90205 +/- 0.00895096 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.90205 @ 95%CL (1 toyMC)
median expected limit: r < 5.90205 @ 95%CL (1 toyMC)
   68% expected band : 5.90205 < r < 5.90205
   95% expected band : 5.90205 < r < 5.90205
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1657208893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8058 +/- 0.00550735 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 2.8058 @ 95%CL (1 toyMC)
median expected limit: r < 2.8058 @ 95%CL (1 toyMC)
   68% expected band : 2.8058 < r < 2.8058
   95% expected band : 2.8058 < r < 2.8058
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1848397401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.62766 +/- 0.00743319 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.62766 @ 95%CL (1 toyMC)
median expected limit: r < 4.62766 @ 95%CL (1 toyMC)
   68% expected band : 4.62766 < r < 4.62766
   95% expected band : 4.62766 < r < 4.62766
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1157963878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.1802 +/- 0.00611833 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.1802 @ 95%CL (1 toyMC)
median expected limit: r < 3.1802 @ 95%CL (1 toyMC)
   68% expected band : 3.1802 < r < 3.1802
   95% expected band : 3.1802 < r < 3.1802
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1711583563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.13602 +/- 0.00670339 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.13602 @ 95%CL (1 toyMC)
median expected limit: r < 3.13602 @ 95%CL (1 toyMC)
   68% expected band : 3.13602 < r < 3.13602
   95% expected band : 3.13602 < r < 3.13602
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1453764236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.02235 +/- 0.00718456 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.02235 @ 95%CL (1 toyMC)
median expected limit: r < 5.02235 @ 95%CL (1 toyMC)
   68% expected band : 5.02235 < r < 5.02235
   95% expected band : 5.02235 < r < 5.02235
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1620171734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.18457 +/- 0.0081663 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.18457 @ 95%CL (1 toyMC)
median expected limit: r < 5.18457 @ 95%CL (1 toyMC)
   68% expected band : 5.18457 < r < 5.18457
   95% expected band : 5.18457 < r < 5.18457
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 190055414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.12596 +/- 0.00674659 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.17 min (real)
mean   expected limit: r < 3.12596 @ 95%CL (1 toyMC)
median expected limit: r < 3.12596 @ 95%CL (1 toyMC)
   68% expected band : 3.12596 < r < 3.12596
   95% expected band : 3.12596 < r < 3.12596
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1247560944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.59447 +/- 0.00652643 @ 95% CL (100 tries)
Done in 0.16 min (cpu), 0.16 min (real)
mean   expected limit: r < 2.59447 @ 95%CL (1 toyMC)
median expected limit: r < 2.59447 @ 95%CL (1 toyMC)
   68% expected band : 2.59447 < r < 2.59447
   95% expected band : 2.59447 < r < 2.59447
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 131585309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.24232 +/- 0.0100624 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.24232 @ 95%CL (1 toyMC)
median expected limit: r < 5.24232 @ 95%CL (1 toyMC)
   68% expected band : 5.24232 < r < 5.24232
   95% expected band : 5.24232 < r < 5.24232
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2085167504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.3523 +/- 0.00587418 @ 95% CL (100 tries)
Done in 0.15 min (cpu), 0.15 min (real)
mean   expected limit: r < 2.3523 @ 95%CL (1 toyMC)
median expected limit: r < 2.3523 @ 95%CL (1 toyMC)
   68% expected band : 2.3523 < r < 2.3523
   95% expected band : 2.3523 < r < 2.3523
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1014904302
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56686 +/- 0.00716796 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.56686 @ 95%CL (1 toyMC)
median expected limit: r < 3.56686 @ 95%CL (1 toyMC)
   68% expected band : 3.56686 < r < 3.56686
   95% expected band : 3.56686 < r < 3.56686
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1887790649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.59664 +/- 0.00690224 @ 95% CL (100 tries)
Done in 0.17 min (cpu), 0.18 min (real)
mean   expected limit: r < 3.59664 @ 95%CL (1 toyMC)
median expected limit: r < 3.59664 @ 95%CL (1 toyMC)
   68% expected band : 3.59664 < r < 3.59664
   95% expected band : 3.59664 < r < 3.59664
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 780704819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.27842 +/- 0.00797114 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.27842 @ 95%CL (1 toyMC)
median expected limit: r < 4.27842 @ 95%CL (1 toyMC)
   68% expected band : 4.27842 < r < 4.27842
   95% expected band : 4.27842 < r < 4.27842
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1847932937
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.45346 +/- 0.00627935 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.45346 @ 95%CL (1 toyMC)
median expected limit: r < 4.45346 @ 95%CL (1 toyMC)
   68% expected band : 4.45346 < r < 4.45346
   95% expected band : 4.45346 < r < 4.45346
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1246204045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.36422 +/- 0.0072086 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.36422 @ 95%CL (1 toyMC)
median expected limit: r < 4.36422 @ 95%CL (1 toyMC)
   68% expected band : 4.36422 < r < 4.36422
   95% expected band : 4.36422 < r < 4.36422
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -506368263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.91903 +/- 0.00984271 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.91903 @ 95%CL (1 toyMC)
median expected limit: r < 5.91903 @ 95%CL (1 toyMC)
   68% expected band : 5.91903 < r < 5.91903
   95% expected band : 5.91903 < r < 5.91903
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1107945444.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1110065342.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1157963878.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1246965395.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1247560944.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1301525184.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1403255787.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1408028280.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1449774776.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1453764236.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1584846739.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1635878922.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1711583563.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1716340550.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1779873208.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1783815325.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1792399598.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1848397401.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1871683672.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1907869411.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1920660405.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1937904504.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1953612932.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1959733423.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2009322272.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2074289729.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-2082958003.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-2085167504.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-218538693.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-283582272.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-288753146.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-321103845.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-427256504.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-43621146.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-440126534.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-499241719.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-506368263.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-601572708.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-613630657.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-67652532.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-694914825.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-833727639.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-879126952.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-900050125.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-944111920.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.1014904302.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.102330430.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1028286400.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1170011544.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1209959533.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1246204045.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.131585309.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1357113907.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1370690851.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1423449987.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1448835701.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1471121014.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1480071117.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1620171734.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1630791680.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1643561252.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1657208893.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1684325935.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1699435231.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1728789887.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1744903507.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.176275455.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1776668176.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1806798762.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1847932937.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1887790649.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.190055414.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1930818159.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2002231559.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2078291530.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2110515316.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.314210323.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.406349025.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.477951315.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.50696197.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.532103623.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.554658139.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.639500307.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.649035308.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.663252768.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.667843228.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.741400294.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.777970876.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.780704819.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.782527089.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.79869558.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.848693209.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.895107295.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.903717955.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.918815205.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.936891156.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.948498585.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.962290216.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.978868095.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.982733996.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1516958283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.88542 +/- 0.00904124 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.88542 @ 95%CL (1 toyMC)
median expected limit: r < 4.88542 @ 95%CL (1 toyMC)
   68% expected band : 4.88542 < r < 4.88542
   95% expected band : 4.88542 < r < 4.88542
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1968571923
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0893 +/- 0.0104621 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.0893 @ 95%CL (1 toyMC)
median expected limit: r < 16.0893 @ 95%CL (1 toyMC)
   68% expected band : 16.0893 < r < 16.0893
   95% expected band : 16.0893 < r < 16.0893
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -273914290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.39573 +/- 0.0138452 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.39573 @ 95%CL (1 toyMC)
median expected limit: r < 7.39573 @ 95%CL (1 toyMC)
   68% expected band : 7.39573 < r < 7.39573
   95% expected band : 7.39573 < r < 7.39573
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2060162448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.87114 +/- 0.0108047 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.87114 @ 95%CL (1 toyMC)
median expected limit: r < 5.87114 @ 95%CL (1 toyMC)
   68% expected band : 5.87114 < r < 5.87114
   95% expected band : 5.87114 < r < 5.87114
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -384310440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.33019 +/- 0.0117036 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.33019 @ 95%CL (1 toyMC)
median expected limit: r < 6.33019 @ 95%CL (1 toyMC)
   68% expected band : 6.33019 < r < 6.33019
   95% expected band : 6.33019 < r < 6.33019
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1747003540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.37075 +/- 0.0118297 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.37075 @ 95%CL (1 toyMC)
median expected limit: r < 6.37075 @ 95%CL (1 toyMC)
   68% expected band : 6.37075 < r < 6.37075
   95% expected band : 6.37075 < r < 6.37075
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1686414051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.16934 +/- 0.0146675 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 8.16934 @ 95%CL (1 toyMC)
median expected limit: r < 8.16934 @ 95%CL (1 toyMC)
   68% expected band : 8.16934 < r < 8.16934
   95% expected band : 8.16934 < r < 8.16934
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 117917219
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.75983 +/- 0.0112465 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.75983 @ 95%CL (1 toyMC)
median expected limit: r < 5.75983 @ 95%CL (1 toyMC)
   68% expected band : 5.75983 < r < 5.75983
   95% expected band : 5.75983 < r < 5.75983
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 330227173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.32949 +/- 0.00934685 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.32949 @ 95%CL (1 toyMC)
median expected limit: r < 6.32949 @ 95%CL (1 toyMC)
   68% expected band : 6.32949 < r < 6.32949
   95% expected band : 6.32949 < r < 6.32949
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 907252225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.48871 +/- 0.0129207 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.48871 @ 95%CL (1 toyMC)
median expected limit: r < 5.48871 @ 95%CL (1 toyMC)
   68% expected band : 5.48871 < r < 5.48871
   95% expected band : 5.48871 < r < 5.48871
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -198044562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9325 +/- 0.0142672 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 11.9325 @ 95%CL (1 toyMC)
median expected limit: r < 11.9325 @ 95%CL (1 toyMC)
   68% expected band : 11.9325 < r < 11.9325
   95% expected band : 11.9325 < r < 11.9325
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -328137519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.20431 +/- 0.0142194 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.20431 @ 95%CL (1 toyMC)
median expected limit: r < 8.20431 @ 95%CL (1 toyMC)
   68% expected band : 8.20431 < r < 8.20431
   95% expected band : 8.20431 < r < 8.20431
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 482826951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.75075 +/- 0.00853949 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 4.75075 @ 95%CL (1 toyMC)
median expected limit: r < 4.75075 @ 95%CL (1 toyMC)
   68% expected band : 4.75075 < r < 4.75075
   95% expected band : 4.75075 < r < 4.75075
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1947767634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.21831 +/- 0.00972267 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.21831 @ 95%CL (1 toyMC)
median expected limit: r < 6.21831 @ 95%CL (1 toyMC)
   68% expected band : 6.21831 < r < 6.21831
   95% expected band : 6.21831 < r < 6.21831
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1446957318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.09882 +/- 0.0123688 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.09882 @ 95%CL (1 toyMC)
median expected limit: r < 6.09882 @ 95%CL (1 toyMC)
   68% expected band : 6.09882 < r < 6.09882
   95% expected band : 6.09882 < r < 6.09882
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -918619152
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.82095 +/- 0.012525 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.82095 @ 95%CL (1 toyMC)
median expected limit: r < 9.82095 @ 95%CL (1 toyMC)
   68% expected band : 9.82095 < r < 9.82095
   95% expected band : 9.82095 < r < 9.82095
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1893960018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0587 +/- 0.0116486 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.0587 @ 95%CL (1 toyMC)
median expected limit: r < 11.0587 @ 95%CL (1 toyMC)
   68% expected band : 11.0587 < r < 11.0587
   95% expected band : 11.0587 < r < 11.0587
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -457607814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.22462 +/- 0.012277 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.22462 @ 95%CL (1 toyMC)
median expected limit: r < 8.22462 @ 95%CL (1 toyMC)
   68% expected band : 8.22462 < r < 8.22462
   95% expected band : 8.22462 < r < 8.22462
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -764129358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.85013 +/- 0.0139309 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 7.85013 @ 95%CL (1 toyMC)
median expected limit: r < 7.85013 @ 95%CL (1 toyMC)
   68% expected band : 7.85013 < r < 7.85013
   95% expected band : 7.85013 < r < 7.85013
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 448128740
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.35818 +/- 0.0132968 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.35818 @ 95%CL (1 toyMC)
median expected limit: r < 8.35818 @ 95%CL (1 toyMC)
   68% expected band : 8.35818 < r < 8.35818
   95% expected band : 8.35818 < r < 8.35818
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 188255097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.71753 +/- 0.00846509 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.71753 @ 95%CL (1 toyMC)
median expected limit: r < 4.71753 @ 95%CL (1 toyMC)
   68% expected band : 4.71753 < r < 4.71753
   95% expected band : 4.71753 < r < 4.71753
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1997326757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.70966 +/- 0.0120193 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.70966 @ 95%CL (1 toyMC)
median expected limit: r < 9.70966 @ 95%CL (1 toyMC)
   68% expected band : 9.70966 < r < 9.70966
   95% expected band : 9.70966 < r < 9.70966
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2131062229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.27966 +/- 0.0113659 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.27966 @ 95%CL (1 toyMC)
median expected limit: r < 9.27966 @ 95%CL (1 toyMC)
   68% expected band : 9.27966 < r < 9.27966
   95% expected band : 9.27966 < r < 9.27966
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -207113728
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.23788 +/- 0.013261 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.23788 @ 95%CL (1 toyMC)
median expected limit: r < 8.23788 @ 95%CL (1 toyMC)
   68% expected band : 8.23788 < r < 8.23788
   95% expected band : 8.23788 < r < 8.23788
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1792852795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.02615 +/- 0.0117509 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.02615 @ 95%CL (1 toyMC)
median expected limit: r < 8.02615 @ 95%CL (1 toyMC)
   68% expected band : 8.02615 < r < 8.02615
   95% expected band : 8.02615 < r < 8.02615
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 263407341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9016 +/- 0.0134622 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.9016 @ 95%CL (1 toyMC)
median expected limit: r < 11.9016 @ 95%CL (1 toyMC)
   68% expected band : 11.9016 < r < 11.9016
   95% expected band : 11.9016 < r < 11.9016
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 131056516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.61508 +/- 0.00983596 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.61508 @ 95%CL (1 toyMC)
median expected limit: r < 4.61508 @ 95%CL (1 toyMC)
   68% expected band : 4.61508 < r < 4.61508
   95% expected band : 4.61508 < r < 4.61508
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -766528751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10103 +/- 0.0125795 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.10103 @ 95%CL (1 toyMC)
median expected limit: r < 7.10103 @ 95%CL (1 toyMC)
   68% expected band : 7.10103 < r < 7.10103
   95% expected band : 7.10103 < r < 7.10103
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -898993421
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.89218 +/- 0.00961852 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.89218 @ 95%CL (1 toyMC)
median expected limit: r < 6.89218 @ 95%CL (1 toyMC)
   68% expected band : 6.89218 < r < 6.89218
   95% expected band : 6.89218 < r < 6.89218
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -461967962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.98471 +/- 0.0110827 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.98471 @ 95%CL (1 toyMC)
median expected limit: r < 5.98471 @ 95%CL (1 toyMC)
   68% expected band : 5.98471 < r < 5.98471
   95% expected band : 5.98471 < r < 5.98471
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2140997288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.03902 +/- 0.0103294 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.03902 @ 95%CL (1 toyMC)
median expected limit: r < 6.03902 @ 95%CL (1 toyMC)
   68% expected band : 6.03902 < r < 6.03902
   95% expected band : 6.03902 < r < 6.03902
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -103130887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7265 +/- 0.0121761 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.7265 @ 95%CL (1 toyMC)
median expected limit: r < 10.7265 @ 95%CL (1 toyMC)
   68% expected band : 10.7265 < r < 10.7265
   95% expected band : 10.7265 < r < 10.7265
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1261755558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6323 +/- 0.0132411 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.6323 @ 95%CL (1 toyMC)
median expected limit: r < 10.6323 @ 95%CL (1 toyMC)
   68% expected band : 10.6323 < r < 10.6323
   95% expected band : 10.6323 < r < 10.6323
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1635188324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9114 +/- 0.0128065 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.9114 @ 95%CL (1 toyMC)
median expected limit: r < 10.9114 @ 95%CL (1 toyMC)
   68% expected band : 10.9114 < r < 10.9114
   95% expected band : 10.9114 < r < 10.9114
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -46786963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.8649 +/- 0.0128818 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.8649 @ 95%CL (1 toyMC)
median expected limit: r < 7.8649 @ 95%CL (1 toyMC)
   68% expected band : 7.8649 < r < 7.8649
   95% expected band : 7.8649 < r < 7.8649
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1206056653
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.90684 +/- 0.00882238 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.90684 @ 95%CL (1 toyMC)
median expected limit: r < 5.90684 @ 95%CL (1 toyMC)
   68% expected band : 5.90684 < r < 5.90684
   95% expected band : 5.90684 < r < 5.90684
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -369420772
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77604 +/- 0.0127602 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.77604 @ 95%CL (1 toyMC)
median expected limit: r < 6.77604 @ 95%CL (1 toyMC)
   68% expected band : 6.77604 < r < 6.77604
   95% expected band : 6.77604 < r < 6.77604
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1753082307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.18623 +/- 0.0117007 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.18623 @ 95%CL (1 toyMC)
median expected limit: r < 8.18623 @ 95%CL (1 toyMC)
   68% expected band : 8.18623 < r < 8.18623
   95% expected band : 8.18623 < r < 8.18623
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -133202162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.45926 +/- 0.00921252 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 8.45926 @ 95%CL (1 toyMC)
median expected limit: r < 8.45926 @ 95%CL (1 toyMC)
   68% expected band : 8.45926 < r < 8.45926
   95% expected band : 8.45926 < r < 8.45926
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 557901778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.19458 +/- 0.0111695 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.19458 @ 95%CL (1 toyMC)
median expected limit: r < 6.19458 @ 95%CL (1 toyMC)
   68% expected band : 6.19458 < r < 6.19458
   95% expected band : 6.19458 < r < 6.19458
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1417824261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.94016 +/- 0.0130448 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.94016 @ 95%CL (1 toyMC)
median expected limit: r < 7.94016 @ 95%CL (1 toyMC)
   68% expected band : 7.94016 < r < 7.94016
   95% expected band : 7.94016 < r < 7.94016
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1852519520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.76295 +/- 0.0144263 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 9.76295 @ 95%CL (1 toyMC)
median expected limit: r < 9.76295 @ 95%CL (1 toyMC)
   68% expected band : 9.76295 < r < 9.76295
   95% expected band : 9.76295 < r < 9.76295
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1930351193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.98299 +/- 0.0124302 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.98299 @ 95%CL (1 toyMC)
median expected limit: r < 8.98299 @ 95%CL (1 toyMC)
   68% expected band : 8.98299 < r < 8.98299
   95% expected band : 8.98299 < r < 8.98299
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399314031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.77285 +/- 0.0106315 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.77285 @ 95%CL (1 toyMC)
median expected limit: r < 5.77285 @ 95%CL (1 toyMC)
   68% expected band : 5.77285 < r < 5.77285
   95% expected band : 5.77285 < r < 5.77285
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1122897399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8517 +/- 0.0097792 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.8517 @ 95%CL (1 toyMC)
median expected limit: r < 10.8517 @ 95%CL (1 toyMC)
   68% expected band : 10.8517 < r < 10.8517
   95% expected band : 10.8517 < r < 10.8517
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1545685304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.48453 +/- 0.0107993 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 9.48453 @ 95%CL (1 toyMC)
median expected limit: r < 9.48453 @ 95%CL (1 toyMC)
   68% expected band : 9.48453 < r < 9.48453
   95% expected band : 9.48453 < r < 9.48453
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1662568861
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.10974 +/- 0.0106352 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.10974 @ 95%CL (1 toyMC)
median expected limit: r < 6.10974 @ 95%CL (1 toyMC)
   68% expected band : 6.10974 < r < 6.10974
   95% expected band : 6.10974 < r < 6.10974
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -373141689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.39476 +/- 0.0119485 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.39476 @ 95%CL (1 toyMC)
median expected limit: r < 7.39476 @ 95%CL (1 toyMC)
   68% expected band : 7.39476 < r < 7.39476
   95% expected band : 7.39476 < r < 7.39476
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1393985701
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.50415 +/- 0.00902709 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.50415 @ 95%CL (1 toyMC)
median expected limit: r < 4.50415 @ 95%CL (1 toyMC)
   68% expected band : 4.50415 < r < 4.50415
   95% expected band : 4.50415 < r < 4.50415
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1554211580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.64522 +/- 0.0112698 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.64522 @ 95%CL (1 toyMC)
median expected limit: r < 5.64522 @ 95%CL (1 toyMC)
   68% expected band : 5.64522 < r < 5.64522
   95% expected band : 5.64522 < r < 5.64522
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1657118108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.46814 +/- 0.00872797 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.46814 @ 95%CL (1 toyMC)
median expected limit: r < 5.46814 @ 95%CL (1 toyMC)
   68% expected band : 5.46814 < r < 5.46814
   95% expected band : 5.46814 < r < 5.46814
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2101985849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3717 +/- 0.014582 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.3717 @ 95%CL (1 toyMC)
median expected limit: r < 11.3717 @ 95%CL (1 toyMC)
   68% expected band : 11.3717 < r < 11.3717
   95% expected band : 11.3717 < r < 11.3717
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 286731987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.25072 +/- 0.0120374 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.25072 @ 95%CL (1 toyMC)
median expected limit: r < 6.25072 @ 95%CL (1 toyMC)
   68% expected band : 6.25072 < r < 6.25072
   95% expected band : 6.25072 < r < 6.25072
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 669117177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87508 +/- 0.0122344 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.87508 @ 95%CL (1 toyMC)
median expected limit: r < 9.87508 @ 95%CL (1 toyMC)
   68% expected band : 9.87508 < r < 9.87508
   95% expected band : 9.87508 < r < 9.87508
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1035804522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.67414 +/- 0.0109258 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.67414 @ 95%CL (1 toyMC)
median expected limit: r < 7.67414 @ 95%CL (1 toyMC)
   68% expected band : 7.67414 < r < 7.67414
   95% expected band : 7.67414 < r < 7.67414
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 119967816
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.48722 +/- 0.00863356 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.48722 @ 95%CL (1 toyMC)
median expected limit: r < 5.48722 @ 95%CL (1 toyMC)
   68% expected band : 5.48722 < r < 5.48722
   95% expected band : 5.48722 < r < 5.48722
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 953456387
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.65786 +/- 0.00995051 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.65786 @ 95%CL (1 toyMC)
median expected limit: r < 7.65786 @ 95%CL (1 toyMC)
   68% expected band : 7.65786 < r < 7.65786
   95% expected band : 7.65786 < r < 7.65786
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1216152981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.96078 +/- 0.010732 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 9.96078 @ 95%CL (1 toyMC)
median expected limit: r < 9.96078 @ 95%CL (1 toyMC)
   68% expected band : 9.96078 < r < 9.96078
   95% expected band : 9.96078 < r < 9.96078
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1410683901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.67986 +/- 0.0133951 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.67986 @ 95%CL (1 toyMC)
median expected limit: r < 8.67986 @ 95%CL (1 toyMC)
   68% expected band : 8.67986 < r < 8.67986
   95% expected band : 8.67986 < r < 8.67986
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 489829001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.33737 +/- 0.0121162 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.33737 @ 95%CL (1 toyMC)
median expected limit: r < 9.33737 @ 95%CL (1 toyMC)
   68% expected band : 9.33737 < r < 9.33737
   95% expected band : 9.33737 < r < 9.33737
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1736098055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.01738 +/- 0.0143409 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.01738 @ 95%CL (1 toyMC)
median expected limit: r < 6.01738 @ 95%CL (1 toyMC)
   68% expected band : 6.01738 < r < 6.01738
   95% expected band : 6.01738 < r < 6.01738
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2070123247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.69237 +/- 0.0090112 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.69237 @ 95%CL (1 toyMC)
median expected limit: r < 4.69237 @ 95%CL (1 toyMC)
   68% expected band : 4.69237 < r < 4.69237
   95% expected band : 4.69237 < r < 4.69237
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 455964000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73582 +/- 0.00975044 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.73582 @ 95%CL (1 toyMC)
median expected limit: r < 4.73582 @ 95%CL (1 toyMC)
   68% expected band : 4.73582 < r < 4.73582
   95% expected band : 4.73582 < r < 4.73582
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1143731983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5285 +/- 0.0143608 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 11.5285 @ 95%CL (1 toyMC)
median expected limit: r < 11.5285 @ 95%CL (1 toyMC)
   68% expected band : 11.5285 < r < 11.5285
   95% expected band : 11.5285 < r < 11.5285
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -661110602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.65274 +/- 0.0099371 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.65274 @ 95%CL (1 toyMC)
median expected limit: r < 5.65274 @ 95%CL (1 toyMC)
   68% expected band : 5.65274 < r < 5.65274
   95% expected band : 5.65274 < r < 5.65274
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -164351531
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.87343 +/- 0.0135206 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.87343 @ 95%CL (1 toyMC)
median expected limit: r < 6.87343 @ 95%CL (1 toyMC)
   68% expected band : 6.87343 < r < 6.87343
   95% expected band : 6.87343 < r < 6.87343
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 32361889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.42376 +/- 0.0106477 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.42376 @ 95%CL (1 toyMC)
median expected limit: r < 8.42376 @ 95%CL (1 toyMC)
   68% expected band : 8.42376 < r < 8.42376
   95% expected band : 8.42376 < r < 8.42376
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -289187046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0879 +/- 0.0136876 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.0879 @ 95%CL (1 toyMC)
median expected limit: r < 12.0879 @ 95%CL (1 toyMC)
   68% expected band : 12.0879 < r < 12.0879
   95% expected band : 12.0879 < r < 12.0879
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 10786746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.16296 +/- 0.0109376 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.16296 @ 95%CL (1 toyMC)
median expected limit: r < 7.16296 @ 95%CL (1 toyMC)
   68% expected band : 7.16296 < r < 7.16296
   95% expected band : 7.16296 < r < 7.16296
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 153655849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.13262 +/- 0.0121181 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.13262 @ 95%CL (1 toyMC)
median expected limit: r < 7.13262 @ 95%CL (1 toyMC)
   68% expected band : 7.13262 < r < 7.13262
   95% expected band : 7.13262 < r < 7.13262
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1203752970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38582 +/- 0.0103481 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.38582 @ 95%CL (1 toyMC)
median expected limit: r < 7.38582 @ 95%CL (1 toyMC)
   68% expected band : 7.38582 < r < 7.38582
   95% expected band : 7.38582 < r < 7.38582
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1899925848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38167 +/- 0.0103304 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.38167 @ 95%CL (1 toyMC)
median expected limit: r < 7.38167 @ 95%CL (1 toyMC)
   68% expected band : 7.38167 < r < 7.38167
   95% expected band : 7.38167 < r < 7.38167
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -947479884
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7084 +/- 0.0139586 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.7084 @ 95%CL (1 toyMC)
median expected limit: r < 12.7084 @ 95%CL (1 toyMC)
   68% expected band : 12.7084 < r < 12.7084
   95% expected band : 12.7084 < r < 12.7084
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -835517170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5353 +/- 0.0126783 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.5353 @ 95%CL (1 toyMC)
median expected limit: r < 11.5353 @ 95%CL (1 toyMC)
   68% expected band : 11.5353 < r < 11.5353
   95% expected band : 11.5353 < r < 11.5353
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1056876226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.12439 +/- 0.0146341 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.12439 @ 95%CL (1 toyMC)
median expected limit: r < 8.12439 @ 95%CL (1 toyMC)
   68% expected band : 8.12439 < r < 8.12439
   95% expected band : 8.12439 < r < 8.12439
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1704894049
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4458 +/- 0.0136299 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.4458 @ 95%CL (1 toyMC)
median expected limit: r < 11.4458 @ 95%CL (1 toyMC)
   68% expected band : 11.4458 < r < 11.4458
   95% expected band : 11.4458 < r < 11.4458
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2061389433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.331 +/- 0.0108506 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.331 @ 95%CL (1 toyMC)
median expected limit: r < 15.331 @ 95%CL (1 toyMC)
   68% expected band : 15.331 < r < 15.331
   95% expected band : 15.331 < r < 15.331
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1220155286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.47309 +/- 0.0139799 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.47309 @ 95%CL (1 toyMC)
median expected limit: r < 8.47309 @ 95%CL (1 toyMC)
   68% expected band : 8.47309 < r < 8.47309
   95% expected band : 8.47309 < r < 8.47309
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1362003590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2466 +/- 0.0121891 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.2466 @ 95%CL (1 toyMC)
median expected limit: r < 11.2466 @ 95%CL (1 toyMC)
   68% expected band : 11.2466 < r < 11.2466
   95% expected band : 11.2466 < r < 11.2466
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1152900442
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.35672 +/- 0.013831 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 8.35672 @ 95%CL (1 toyMC)
median expected limit: r < 8.35672 @ 95%CL (1 toyMC)
   68% expected band : 8.35672 < r < 8.35672
   95% expected band : 8.35672 < r < 8.35672
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 405201170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.66853 +/- 0.00952418 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.66853 @ 95%CL (1 toyMC)
median expected limit: r < 6.66853 @ 95%CL (1 toyMC)
   68% expected band : 6.66853 < r < 6.66853
   95% expected band : 6.66853 < r < 6.66853
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1622561870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0151 +/- 0.0126867 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.0151 @ 95%CL (1 toyMC)
median expected limit: r < 12.0151 @ 95%CL (1 toyMC)
   68% expected band : 12.0151 < r < 12.0151
   95% expected band : 12.0151 < r < 12.0151
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2100827372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.07269 +/- 0.0109173 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.07269 @ 95%CL (1 toyMC)
median expected limit: r < 5.07269 @ 95%CL (1 toyMC)
   68% expected band : 5.07269 < r < 5.07269
   95% expected band : 5.07269 < r < 5.07269
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -478586422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.48905 +/- 0.00933612 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.48905 @ 95%CL (1 toyMC)
median expected limit: r < 6.48905 @ 95%CL (1 toyMC)
   68% expected band : 6.48905 < r < 6.48905
   95% expected band : 6.48905 < r < 6.48905
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -667598063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.93472 +/- 0.0121053 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.93472 @ 95%CL (1 toyMC)
median expected limit: r < 9.93472 @ 95%CL (1 toyMC)
   68% expected band : 9.93472 < r < 9.93472
   95% expected band : 9.93472 < r < 9.93472
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1338846363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1063 +/- 0.0108174 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.1063 @ 95%CL (1 toyMC)
median expected limit: r < 12.1063 @ 95%CL (1 toyMC)
   68% expected band : 12.1063 < r < 12.1063
   95% expected band : 12.1063 < r < 12.1063
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1973575318
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.63436 +/- 0.0110661 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.63436 @ 95%CL (1 toyMC)
median expected limit: r < 6.63436 @ 95%CL (1 toyMC)
   68% expected band : 6.63436 < r < 6.63436
   95% expected band : 6.63436 < r < 6.63436
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 451978472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.85749 +/- 0.0106862 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.85749 @ 95%CL (1 toyMC)
median expected limit: r < 8.85749 @ 95%CL (1 toyMC)
   68% expected band : 8.85749 < r < 8.85749
   95% expected band : 8.85749 < r < 8.85749
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1523548303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.71584 +/- 0.0132978 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.71584 @ 95%CL (1 toyMC)
median expected limit: r < 8.71584 @ 95%CL (1 toyMC)
   68% expected band : 8.71584 < r < 8.71584
   95% expected band : 8.71584 < r < 8.71584
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1784766500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.34813 +/- 0.00931241 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.34813 @ 95%CL (1 toyMC)
median expected limit: r < 6.34813 @ 95%CL (1 toyMC)
   68% expected band : 6.34813 < r < 6.34813
   95% expected band : 6.34813 < r < 6.34813
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 23206422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.62363 +/- 0.012617 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.62363 @ 95%CL (1 toyMC)
median expected limit: r < 6.62363 @ 95%CL (1 toyMC)
   68% expected band : 6.62363 < r < 6.62363
   95% expected band : 6.62363 < r < 6.62363
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1848040013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.99033 +/- 0.0107357 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.99033 @ 95%CL (1 toyMC)
median expected limit: r < 4.99033 @ 95%CL (1 toyMC)
   68% expected band : 4.99033 < r < 4.99033
   95% expected band : 4.99033 < r < 4.99033
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1392355487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.44073 +/- 0.00941598 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.44073 @ 95%CL (1 toyMC)
median expected limit: r < 4.44073 @ 95%CL (1 toyMC)
   68% expected band : 4.44073 < r < 4.44073
   95% expected band : 4.44073 < r < 4.44073
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 564385908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.67774 +/- 0.0113733 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 8.67774 @ 95%CL (1 toyMC)
median expected limit: r < 8.67774 @ 95%CL (1 toyMC)
   68% expected band : 8.67774 < r < 8.67774
   95% expected band : 8.67774 < r < 8.67774
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -847018657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.88162 +/- 0.0116223 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.88162 @ 95%CL (1 toyMC)
median expected limit: r < 7.88162 @ 95%CL (1 toyMC)
   68% expected band : 7.88162 < r < 7.88162
   95% expected band : 7.88162 < r < 7.88162
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -28493859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.68096 +/- 0.0104574 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.68096 @ 95%CL (1 toyMC)
median expected limit: r < 5.68096 @ 95%CL (1 toyMC)
   68% expected band : 5.68096 < r < 5.68096
   95% expected band : 5.68096 < r < 5.68096
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -727290055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.55063 +/- 0.0118341 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.55063 @ 95%CL (1 toyMC)
median expected limit: r < 5.55063 @ 95%CL (1 toyMC)
   68% expected band : 5.55063 < r < 5.55063
   95% expected band : 5.55063 < r < 5.55063
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1594228364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2613 +/- 0.0144515 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.2613 @ 95%CL (1 toyMC)
median expected limit: r < 10.2613 @ 95%CL (1 toyMC)
   68% expected band : 10.2613 < r < 10.2613
   95% expected band : 10.2613 < r < 10.2613
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1838652575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.21786 +/- 0.0105851 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.21786 @ 95%CL (1 toyMC)
median expected limit: r < 5.21786 @ 95%CL (1 toyMC)
   68% expected band : 5.21786 < r < 5.21786
   95% expected band : 5.21786 < r < 5.21786
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1487554392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.99222 +/- 0.0120569 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.99222 @ 95%CL (1 toyMC)
median expected limit: r < 6.99222 @ 95%CL (1 toyMC)
   68% expected band : 6.99222 < r < 6.99222
   95% expected band : 6.99222 < r < 6.99222
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-103130887.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1056876226.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1122897399.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1203752970.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1206056653.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1261755558.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-133202162.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1338846363.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1392355487.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1399314031.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1417824261.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1487554392.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1545685304.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1554211580.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1594228364.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1622561870.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-164351531.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1657118108.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1662568861.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1686414051.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1838652575.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1852519520.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1893960018.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1947767634.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1968571923.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1973575318.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-198044562.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1997326757.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-207113728.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-2100827372.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-2101985849.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-2131062229.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-2140997288.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-273914290.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-28493859.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-289187046.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-328137519.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-369420772.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-373141689.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-384310440.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-457607814.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-461967962.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-46786963.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-478586422.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-661110602.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-667598063.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-727290055.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-764129358.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-766528751.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-835517170.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-847018657.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-898993421.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-918619152.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.-947479884.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1035804522.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.10786746.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1143731983.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1152900442.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.117917219.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.119967816.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1216152981.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1220155286.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.131056516.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1362003590.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1393985701.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1410683901.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1446957318.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1516958283.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1523548303.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.153655849.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1635188324.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1704894049.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1736098055.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1747003540.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1753082307.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1784766500.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1792852795.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1848040013.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.188255097.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.1899925848.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.1930351193.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.2060162448.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.2061389433.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.2070123247.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.23206422.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.263407341.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.286731987.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.32361889.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.330227173.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.405201170.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.448128740.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.451978472.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.455964000.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.482826951.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.489829001.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.557901778.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.564385908.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.669117177.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.907252225.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.953456387.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1549504427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4083 +/- 0.0121612 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.4083 @ 95%CL (1 toyMC)
median expected limit: r < 14.4083 @ 95%CL (1 toyMC)
   68% expected band : 14.4083 < r < 14.4083
   95% expected band : 14.4083 < r < 14.4083
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1755603287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.88655 +/- 0.0110857 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.88655 @ 95%CL (1 toyMC)
median expected limit: r < 8.88655 @ 95%CL (1 toyMC)
   68% expected band : 8.88655 < r < 8.88655
   95% expected band : 8.88655 < r < 8.88655
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -744387243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10823 +/- 0.0105581 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.10823 @ 95%CL (1 toyMC)
median expected limit: r < 7.10823 @ 95%CL (1 toyMC)
   68% expected band : 7.10823 < r < 7.10823
   95% expected band : 7.10823 < r < 7.10823
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1428533822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7714 +/- 0.0141771 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.7714 @ 95%CL (1 toyMC)
median expected limit: r < 11.7714 @ 95%CL (1 toyMC)
   68% expected band : 11.7714 < r < 11.7714
   95% expected band : 11.7714 < r < 11.7714
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 351657722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.89385 +/- 0.0138815 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 9.89385 @ 95%CL (1 toyMC)
median expected limit: r < 9.89385 @ 95%CL (1 toyMC)
   68% expected band : 9.89385 < r < 9.89385
   95% expected band : 9.89385 < r < 9.89385
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 36972628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4868 +/- 0.0132665 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.4868 @ 95%CL (1 toyMC)
median expected limit: r < 11.4868 @ 95%CL (1 toyMC)
   68% expected band : 11.4868 < r < 11.4868
   95% expected band : 11.4868 < r < 11.4868
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -6410125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.48783 +/- 0.0165336 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.48783 @ 95%CL (1 toyMC)
median expected limit: r < 9.48783 @ 95%CL (1 toyMC)
   68% expected band : 9.48783 < r < 9.48783
   95% expected band : 9.48783 < r < 9.48783
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2041811272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2156 +/- 0.015521 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.2156 @ 95%CL (1 toyMC)
median expected limit: r < 10.2156 @ 95%CL (1 toyMC)
   68% expected band : 10.2156 < r < 10.2156
   95% expected band : 10.2156 < r < 10.2156
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -75062750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.628 +/- 0.0147725 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.628 @ 95%CL (1 toyMC)
median expected limit: r < 11.628 @ 95%CL (1 toyMC)
   68% expected band : 11.628 < r < 11.628
   95% expected band : 11.628 < r < 11.628
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1605135002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.72793 +/- 0.0105703 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.72793 @ 95%CL (1 toyMC)
median expected limit: r < 5.72793 @ 95%CL (1 toyMC)
   68% expected band : 5.72793 < r < 5.72793
   95% expected band : 5.72793 < r < 5.72793
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 143722085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3653 +/- 0.0115485 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.3653 @ 95%CL (1 toyMC)
median expected limit: r < 11.3653 @ 95%CL (1 toyMC)
   68% expected band : 11.3653 < r < 11.3653
   95% expected band : 11.3653 < r < 11.3653
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1281281776
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.55391 +/- 0.0152076 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.55391 @ 95%CL (1 toyMC)
median expected limit: r < 6.55391 @ 95%CL (1 toyMC)
   68% expected band : 6.55391 < r < 6.55391
   95% expected band : 6.55391 < r < 6.55391
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -610799839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2313 +/- 0.0130052 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.2313 @ 95%CL (1 toyMC)
median expected limit: r < 14.2313 @ 95%CL (1 toyMC)
   68% expected band : 14.2313 < r < 14.2313
   95% expected band : 14.2313 < r < 14.2313
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 895374613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5421 +/- 0.0146312 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.5421 @ 95%CL (1 toyMC)
median expected limit: r < 11.5421 @ 95%CL (1 toyMC)
   68% expected band : 11.5421 < r < 11.5421
   95% expected band : 11.5421 < r < 11.5421
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2369904
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.05088 +/- 0.0150242 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.05088 @ 95%CL (1 toyMC)
median expected limit: r < 9.05088 @ 95%CL (1 toyMC)
   68% expected band : 9.05088 < r < 9.05088
   95% expected band : 9.05088 < r < 9.05088
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1396732548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.26132 +/- 0.0121543 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.26132 @ 95%CL (1 toyMC)
median expected limit: r < 6.26132 @ 95%CL (1 toyMC)
   68% expected band : 6.26132 < r < 6.26132
   95% expected band : 6.26132 < r < 6.26132
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 940005196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.02178 +/- 0.0103113 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.02178 @ 95%CL (1 toyMC)
median expected limit: r < 5.02178 @ 95%CL (1 toyMC)
   68% expected band : 5.02178 < r < 5.02178
   95% expected band : 5.02178 < r < 5.02178
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -817454665
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4181 +/- 0.0150125 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.4181 @ 95%CL (1 toyMC)
median expected limit: r < 12.4181 @ 95%CL (1 toyMC)
   68% expected band : 12.4181 < r < 12.4181
   95% expected band : 12.4181 < r < 12.4181
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1245099180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.93403 +/- 0.0114236 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.93403 @ 95%CL (1 toyMC)
median expected limit: r < 6.93403 @ 95%CL (1 toyMC)
   68% expected band : 6.93403 < r < 6.93403
   95% expected band : 6.93403 < r < 6.93403
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 923904111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.82461 +/- 0.0125777 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.82461 @ 95%CL (1 toyMC)
median expected limit: r < 7.82461 @ 95%CL (1 toyMC)
   68% expected band : 7.82461 < r < 7.82461
   95% expected band : 7.82461 < r < 7.82461
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2130522612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1704 +/- 0.0137034 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.1704 @ 95%CL (1 toyMC)
median expected limit: r < 11.1704 @ 95%CL (1 toyMC)
   68% expected band : 11.1704 < r < 11.1704
   95% expected band : 11.1704 < r < 11.1704
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1039990855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.47515 +/- 0.0120425 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.47515 @ 95%CL (1 toyMC)
median expected limit: r < 9.47515 @ 95%CL (1 toyMC)
   68% expected band : 9.47515 < r < 9.47515
   95% expected band : 9.47515 < r < 9.47515
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 694800238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.5852 +/- 0.0106367 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.5852 @ 95%CL (1 toyMC)
median expected limit: r < 6.5852 @ 95%CL (1 toyMC)
   68% expected band : 6.5852 < r < 6.5852
   95% expected band : 6.5852 < r < 6.5852
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 695254985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.84661 +/- 0.0157732 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.84661 @ 95%CL (1 toyMC)
median expected limit: r < 6.84661 @ 95%CL (1 toyMC)
   68% expected band : 6.84661 < r < 6.84661
   95% expected band : 6.84661 < r < 6.84661
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 955062197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56178 +/- 0.0107536 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.56178 @ 95%CL (1 toyMC)
median expected limit: r < 4.56178 @ 95%CL (1 toyMC)
   68% expected band : 4.56178 < r < 4.56178
   95% expected band : 4.56178 < r < 4.56178
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -393563747
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.54004 +/- 0.0158258 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.54004 @ 95%CL (1 toyMC)
median expected limit: r < 9.54004 @ 95%CL (1 toyMC)
   68% expected band : 9.54004 < r < 9.54004
   95% expected band : 9.54004 < r < 9.54004
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 252040169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.60354 +/- 0.0133876 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.60354 @ 95%CL (1 toyMC)
median expected limit: r < 9.60354 @ 95%CL (1 toyMC)
   68% expected band : 9.60354 < r < 9.60354
   95% expected band : 9.60354 < r < 9.60354
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1490500657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.76137 +/- 0.0158266 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.76137 @ 95%CL (1 toyMC)
median expected limit: r < 8.76137 @ 95%CL (1 toyMC)
   68% expected band : 8.76137 < r < 8.76137
   95% expected band : 8.76137 < r < 8.76137
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1149922936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0137 +/- 0.0148985 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.0137 @ 95%CL (1 toyMC)
median expected limit: r < 13.0137 @ 95%CL (1 toyMC)
   68% expected band : 13.0137 < r < 13.0137
   95% expected band : 13.0137 < r < 13.0137
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -643997154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.88996 +/- 0.0117625 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.88996 @ 95%CL (1 toyMC)
median expected limit: r < 5.88996 @ 95%CL (1 toyMC)
   68% expected band : 5.88996 < r < 5.88996
   95% expected band : 5.88996 < r < 5.88996
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -927590056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6302 +/- 0.0125013 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.6302 @ 95%CL (1 toyMC)
median expected limit: r < 15.6302 @ 95%CL (1 toyMC)
   68% expected band : 15.6302 < r < 15.6302
   95% expected band : 15.6302 < r < 15.6302
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -392314121
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.20542 +/- 0.0132872 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.20542 @ 95%CL (1 toyMC)
median expected limit: r < 9.20542 @ 95%CL (1 toyMC)
   68% expected band : 9.20542 < r < 9.20542
   95% expected band : 9.20542 < r < 9.20542
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1525597879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.57254 +/- 0.0104073 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.57254 @ 95%CL (1 toyMC)
median expected limit: r < 7.57254 @ 95%CL (1 toyMC)
   68% expected band : 7.57254 < r < 7.57254
   95% expected band : 7.57254 < r < 7.57254
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1152148456
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.15557 +/- 0.00875691 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.15557 @ 95%CL (1 toyMC)
median expected limit: r < 6.15557 @ 95%CL (1 toyMC)
   68% expected band : 6.15557 < r < 6.15557
   95% expected band : 6.15557 < r < 6.15557
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1350561416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.77134 +/- 0.0155304 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.77134 @ 95%CL (1 toyMC)
median expected limit: r < 7.77134 @ 95%CL (1 toyMC)
   68% expected band : 7.77134 < r < 7.77134
   95% expected band : 7.77134 < r < 7.77134
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 716422723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51671 +/- 0.00956186 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.51671 @ 95%CL (1 toyMC)
median expected limit: r < 5.51671 @ 95%CL (1 toyMC)
   68% expected band : 5.51671 < r < 5.51671
   95% expected band : 5.51671 < r < 5.51671
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 779276710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.84517 +/- 0.0138927 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.84517 @ 95%CL (1 toyMC)
median expected limit: r < 8.84517 @ 95%CL (1 toyMC)
   68% expected band : 8.84517 < r < 8.84517
   95% expected band : 8.84517 < r < 8.84517
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1469133551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6053 +/- 0.00967664 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.6053 @ 95%CL (1 toyMC)
median expected limit: r < 10.6053 @ 95%CL (1 toyMC)
   68% expected band : 10.6053 < r < 10.6053
   95% expected band : 10.6053 < r < 10.6053
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1797531398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9317 +/- 0.0126791 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.9317 @ 95%CL (1 toyMC)
median expected limit: r < 11.9317 @ 95%CL (1 toyMC)
   68% expected band : 11.9317 < r < 11.9317
   95% expected band : 11.9317 < r < 11.9317
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -461136129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.29561 +/- 0.0145099 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.29561 @ 95%CL (1 toyMC)
median expected limit: r < 9.29561 @ 95%CL (1 toyMC)
   68% expected band : 9.29561 < r < 9.29561
   95% expected band : 9.29561 < r < 9.29561
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2123509543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.62079 +/- 0.0101584 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.62079 @ 95%CL (1 toyMC)
median expected limit: r < 5.62079 @ 95%CL (1 toyMC)
   68% expected band : 5.62079 < r < 5.62079
   95% expected band : 5.62079 < r < 5.62079
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -923553582
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.95685 +/- 0.0112975 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 6.95685 @ 95%CL (1 toyMC)
median expected limit: r < 6.95685 @ 95%CL (1 toyMC)
   68% expected band : 6.95685 < r < 6.95685
   95% expected band : 6.95685 < r < 6.95685
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1586600363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.93113 +/- 0.0112234 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 5.93113 @ 95%CL (1 toyMC)
median expected limit: r < 5.93113 @ 95%CL (1 toyMC)
   68% expected band : 5.93113 < r < 5.93113
   95% expected band : 5.93113 < r < 5.93113
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 112081856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.72953 +/- 0.0130014 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.72953 @ 95%CL (1 toyMC)
median expected limit: r < 5.72953 @ 95%CL (1 toyMC)
   68% expected band : 5.72953 < r < 5.72953
   95% expected band : 5.72953 < r < 5.72953
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1682373660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.0242 +/- 0.0115583 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.0242 @ 95%CL (1 toyMC)
median expected limit: r < 5.0242 @ 95%CL (1 toyMC)
   68% expected band : 5.0242 < r < 5.0242
   95% expected band : 5.0242 < r < 5.0242
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1263616481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.87341 +/- 0.00974973 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 4.87341 @ 95%CL (1 toyMC)
median expected limit: r < 4.87341 @ 95%CL (1 toyMC)
   68% expected band : 4.87341 < r < 4.87341
   95% expected band : 4.87341 < r < 4.87341
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 296006157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.56076 +/- 0.0134989 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.56076 @ 95%CL (1 toyMC)
median expected limit: r < 6.56076 @ 95%CL (1 toyMC)
   68% expected band : 6.56076 < r < 6.56076
   95% expected band : 6.56076 < r < 6.56076
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -265210290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.05068 +/- 0.0107298 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.05068 @ 95%CL (1 toyMC)
median expected limit: r < 6.05068 @ 95%CL (1 toyMC)
   68% expected band : 6.05068 < r < 6.05068
   95% expected band : 6.05068 < r < 6.05068
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -148091296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5286 +/- 0.0154537 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5286 @ 95%CL (1 toyMC)
median expected limit: r < 10.5286 @ 95%CL (1 toyMC)
   68% expected band : 10.5286 < r < 10.5286
   95% expected band : 10.5286 < r < 10.5286
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1857240083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0629 +/- 0.0143385 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.0629 @ 95%CL (1 toyMC)
median expected limit: r < 13.0629 @ 95%CL (1 toyMC)
   68% expected band : 13.0629 < r < 13.0629
   95% expected band : 13.0629 < r < 13.0629
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 835182467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.61395 +/- 0.012 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.61395 @ 95%CL (1 toyMC)
median expected limit: r < 9.61395 @ 95%CL (1 toyMC)
   68% expected band : 9.61395 < r < 9.61395
   95% expected band : 9.61395 < r < 9.61395
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 490170970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.41995 +/- 0.0128812 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.41995 @ 95%CL (1 toyMC)
median expected limit: r < 7.41995 @ 95%CL (1 toyMC)
   68% expected band : 7.41995 < r < 7.41995
   95% expected band : 7.41995 < r < 7.41995
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 171089468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4724 +/- 0.00840968 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.4724 @ 95%CL (1 toyMC)
median expected limit: r < 17.4724 @ 95%CL (1 toyMC)
   68% expected band : 17.4724 < r < 17.4724
   95% expected band : 17.4724 < r < 17.4724
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 843768619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2553 +/- 0.0136157 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.2553 @ 95%CL (1 toyMC)
median expected limit: r < 11.2553 @ 95%CL (1 toyMC)
   68% expected band : 11.2553 < r < 11.2553
   95% expected band : 11.2553 < r < 11.2553
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 397311425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.54549 +/- 0.0126668 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.54549 @ 95%CL (1 toyMC)
median expected limit: r < 8.54549 @ 95%CL (1 toyMC)
   68% expected band : 8.54549 < r < 8.54549
   95% expected band : 8.54549 < r < 8.54549
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 855674572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.16541 +/- 0.0134584 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.16541 @ 95%CL (1 toyMC)
median expected limit: r < 8.16541 @ 95%CL (1 toyMC)
   68% expected band : 8.16541 < r < 8.16541
   95% expected band : 8.16541 < r < 8.16541
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1977838661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.42828 +/- 0.00885577 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.42828 @ 95%CL (1 toyMC)
median expected limit: r < 5.42828 @ 95%CL (1 toyMC)
   68% expected band : 5.42828 < r < 5.42828
   95% expected band : 5.42828 < r < 5.42828
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 641883050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38666 +/- 0.0127975 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.38666 @ 95%CL (1 toyMC)
median expected limit: r < 7.38666 @ 95%CL (1 toyMC)
   68% expected band : 7.38666 < r < 7.38666
   95% expected band : 7.38666 < r < 7.38666
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 142697409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4956 +/- 0.0137499 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4956 @ 95%CL (1 toyMC)
median expected limit: r < 14.4956 @ 95%CL (1 toyMC)
   68% expected band : 14.4956 < r < 14.4956
   95% expected band : 14.4956 < r < 14.4956
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1637705018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2899 +/- 0.0115086 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.2899 @ 95%CL (1 toyMC)
median expected limit: r < 13.2899 @ 95%CL (1 toyMC)
   68% expected band : 13.2899 < r < 13.2899
   95% expected band : 13.2899 < r < 13.2899
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 266929060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.9473 +/- 0.014068 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.9473 @ 95%CL (1 toyMC)
median expected limit: r < 8.9473 @ 95%CL (1 toyMC)
   68% expected band : 8.9473 < r < 8.9473
   95% expected band : 8.9473 < r < 8.9473
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -944866780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.27746 +/- 0.0125198 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.27746 @ 95%CL (1 toyMC)
median expected limit: r < 8.27746 @ 95%CL (1 toyMC)
   68% expected band : 8.27746 < r < 8.27746
   95% expected band : 8.27746 < r < 8.27746
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -253342968
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.7869 +/- 0.0107401 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.7869 @ 95%CL (1 toyMC)
median expected limit: r < 7.7869 @ 95%CL (1 toyMC)
   68% expected band : 7.7869 < r < 7.7869
   95% expected band : 7.7869 < r < 7.7869
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1195348381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.49867 +/- 0.0100037 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 7.49867 @ 95%CL (1 toyMC)
median expected limit: r < 7.49867 @ 95%CL (1 toyMC)
   68% expected band : 7.49867 < r < 7.49867
   95% expected band : 7.49867 < r < 7.49867
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1515053821
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.92385 +/- 0.0103237 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.92385 @ 95%CL (1 toyMC)
median expected limit: r < 5.92385 @ 95%CL (1 toyMC)
   68% expected band : 5.92385 < r < 5.92385
   95% expected band : 5.92385 < r < 5.92385
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -495299730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4445 +/- 0.0125801 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 11.4445 @ 95%CL (1 toyMC)
median expected limit: r < 11.4445 @ 95%CL (1 toyMC)
   68% expected band : 11.4445 < r < 11.4445
   95% expected band : 11.4445 < r < 11.4445
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1341853150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.82876 +/- 0.01056 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.82876 @ 95%CL (1 toyMC)
median expected limit: r < 5.82876 @ 95%CL (1 toyMC)
   68% expected band : 5.82876 < r < 5.82876
   95% expected band : 5.82876 < r < 5.82876
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 422964988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.96696 +/- 0.0107288 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.96696 @ 95%CL (1 toyMC)
median expected limit: r < 9.96696 @ 95%CL (1 toyMC)
   68% expected band : 9.96696 < r < 9.96696
   95% expected band : 9.96696 < r < 9.96696
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1235253533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.69424 +/- 0.0153542 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.69424 @ 95%CL (1 toyMC)
median expected limit: r < 9.69424 @ 95%CL (1 toyMC)
   68% expected band : 9.69424 < r < 9.69424
   95% expected band : 9.69424 < r < 9.69424
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 579410320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.66112 +/- 0.0144047 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.66112 @ 95%CL (1 toyMC)
median expected limit: r < 7.66112 @ 95%CL (1 toyMC)
   68% expected band : 7.66112 < r < 7.66112
   95% expected band : 7.66112 < r < 7.66112
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1054710296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.09179 +/- 0.0101186 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.09179 @ 95%CL (1 toyMC)
median expected limit: r < 6.09179 @ 95%CL (1 toyMC)
   68% expected band : 6.09179 < r < 6.09179
   95% expected band : 6.09179 < r < 6.09179
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 723333401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7764 +/- 0.0117148 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.7764 @ 95%CL (1 toyMC)
median expected limit: r < 14.7764 @ 95%CL (1 toyMC)
   68% expected band : 14.7764 < r < 14.7764
   95% expected band : 14.7764 < r < 14.7764
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -675721165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.6114 +/- 0.0154359 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.6114 @ 95%CL (1 toyMC)
median expected limit: r < 7.6114 @ 95%CL (1 toyMC)
   68% expected band : 7.6114 < r < 7.6114
   95% expected band : 7.6114 < r < 7.6114
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -243882869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.192 +/- 0.0120481 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.192 @ 95%CL (1 toyMC)
median expected limit: r < 10.192 @ 95%CL (1 toyMC)
   68% expected band : 10.192 < r < 10.192
   95% expected band : 10.192 < r < 10.192
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 415172579
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.67301 +/- 0.01399 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.67301 @ 95%CL (1 toyMC)
median expected limit: r < 7.67301 @ 95%CL (1 toyMC)
   68% expected band : 7.67301 < r < 7.67301
   95% expected band : 7.67301 < r < 7.67301
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1257254085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.21607 +/- 0.0148671 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.21607 @ 95%CL (1 toyMC)
median expected limit: r < 9.21607 @ 95%CL (1 toyMC)
   68% expected band : 9.21607 < r < 9.21607
   95% expected band : 9.21607 < r < 9.21607
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 689880953
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5116 +/- 0.0149558 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.5116 @ 95%CL (1 toyMC)
median expected limit: r < 11.5116 @ 95%CL (1 toyMC)
   68% expected band : 11.5116 < r < 11.5116
   95% expected band : 11.5116 < r < 11.5116
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1866236330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.32555 +/- 0.0128483 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.32555 @ 95%CL (1 toyMC)
median expected limit: r < 6.32555 @ 95%CL (1 toyMC)
   68% expected band : 6.32555 < r < 6.32555
   95% expected band : 6.32555 < r < 6.32555
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1754780584
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.13535 +/- 0.0114875 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.13535 @ 95%CL (1 toyMC)
median expected limit: r < 7.13535 @ 95%CL (1 toyMC)
   68% expected band : 7.13535 < r < 7.13535
   95% expected band : 7.13535 < r < 7.13535
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1732934021
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4599 +/- 0.00920055 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.4599 @ 95%CL (1 toyMC)
median expected limit: r < 14.4599 @ 95%CL (1 toyMC)
   68% expected band : 14.4599 < r < 14.4599
   95% expected band : 14.4599 < r < 14.4599
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1743659863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.20464 +/- 0.0112055 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.20464 @ 95%CL (1 toyMC)
median expected limit: r < 6.20464 @ 95%CL (1 toyMC)
   68% expected band : 6.20464 < r < 6.20464
   95% expected band : 6.20464 < r < 6.20464
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 854234407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.1684 +/- 0.009066 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.1684 @ 95%CL (1 toyMC)
median expected limit: r < 6.1684 @ 95%CL (1 toyMC)
   68% expected band : 6.1684 < r < 6.1684
   95% expected band : 6.1684 < r < 6.1684
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1464754018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.85944 +/- 0.0141354 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 7.85944 @ 95%CL (1 toyMC)
median expected limit: r < 7.85944 @ 95%CL (1 toyMC)
   68% expected band : 7.85944 < r < 7.85944
   95% expected band : 7.85944 < r < 7.85944
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -789170418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8837 +/- 0.0119795 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 11.8837 @ 95%CL (1 toyMC)
median expected limit: r < 11.8837 @ 95%CL (1 toyMC)
   68% expected band : 11.8837 < r < 11.8837
   95% expected band : 11.8837 < r < 11.8837
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 741641685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.85495 +/- 0.0106784 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.85495 @ 95%CL (1 toyMC)
median expected limit: r < 5.85495 @ 95%CL (1 toyMC)
   68% expected band : 5.85495 < r < 5.85495
   95% expected band : 5.85495 < r < 5.85495
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1562979046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.45854 +/- 0.01005 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.45854 @ 95%CL (1 toyMC)
median expected limit: r < 6.45854 @ 95%CL (1 toyMC)
   68% expected band : 6.45854 < r < 6.45854
   95% expected band : 6.45854 < r < 6.45854
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1639100218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.18873 +/- 0.0104917 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.18873 @ 95%CL (1 toyMC)
median expected limit: r < 5.18873 @ 95%CL (1 toyMC)
   68% expected band : 5.18873 < r < 5.18873
   95% expected band : 5.18873 < r < 5.18873
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1492254136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0556 +/- 0.0149481 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.0556 @ 95%CL (1 toyMC)
median expected limit: r < 11.0556 @ 95%CL (1 toyMC)
   68% expected band : 11.0556 < r < 11.0556
   95% expected band : 11.0556 < r < 11.0556
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 860667855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8026 +/- 0.0146116 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.8026 @ 95%CL (1 toyMC)
median expected limit: r < 10.8026 @ 95%CL (1 toyMC)
   68% expected band : 10.8026 < r < 10.8026
   95% expected band : 10.8026 < r < 10.8026
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 121397769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.5645 +/- 0.00966817 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 4.5645 @ 95%CL (1 toyMC)
median expected limit: r < 4.5645 @ 95%CL (1 toyMC)
   68% expected band : 4.5645 < r < 4.5645
   95% expected band : 4.5645 < r < 4.5645
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -408135628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.244 +/- 0.0130918 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.244 @ 95%CL (1 toyMC)
median expected limit: r < 11.244 @ 95%CL (1 toyMC)
   68% expected band : 11.244 < r < 11.244
   95% expected band : 11.244 < r < 11.244
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -685305116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.38241 +/- 0.010711 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.38241 @ 95%CL (1 toyMC)
median expected limit: r < 7.38241 @ 95%CL (1 toyMC)
   68% expected band : 7.38241 < r < 7.38241
   95% expected band : 7.38241 < r < 7.38241
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 635805678
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0477 +/- 0.0142096 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.0477 @ 95%CL (1 toyMC)
median expected limit: r < 14.0477 @ 95%CL (1 toyMC)
   68% expected band : 14.0477 < r < 14.0477
   95% expected band : 14.0477 < r < 14.0477
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 856685362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0244 +/- 0.0106238 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0244 @ 95%CL (1 toyMC)
median expected limit: r < 15.0244 @ 95%CL (1 toyMC)
   68% expected band : 15.0244 < r < 15.0244
   95% expected band : 15.0244 < r < 15.0244
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -7210342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3756 +/- 0.012237 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.3756 @ 95%CL (1 toyMC)
median expected limit: r < 10.3756 @ 95%CL (1 toyMC)
   68% expected band : 10.3756 < r < 10.3756
   95% expected band : 10.3756 < r < 10.3756
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1311326907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1928 +/- 0.0155368 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.1928 @ 95%CL (1 toyMC)
median expected limit: r < 11.1928 @ 95%CL (1 toyMC)
   68% expected band : 11.1928 < r < 11.1928
   95% expected band : 11.1928 < r < 11.1928
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 638698355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7004 +/- 0.0169823 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.7004 @ 95%CL (1 toyMC)
median expected limit: r < 10.7004 @ 95%CL (1 toyMC)
   68% expected band : 10.7004 < r < 10.7004
   95% expected band : 10.7004 < r < 10.7004
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1125817505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.65386 +/- 0.011646 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.65386 @ 95%CL (1 toyMC)
median expected limit: r < 9.65386 @ 95%CL (1 toyMC)
   68% expected band : 9.65386 < r < 9.65386
   95% expected band : 9.65386 < r < 9.65386
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -968465162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.05062 +/- 0.0121339 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.05062 @ 95%CL (1 toyMC)
median expected limit: r < 8.05062 @ 95%CL (1 toyMC)
   68% expected band : 8.05062 < r < 8.05062
   95% expected band : 8.05062 < r < 8.05062
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1668518995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.63636 +/- 0.0122877 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.63636 @ 95%CL (1 toyMC)
median expected limit: r < 9.63636 @ 95%CL (1 toyMC)
   68% expected band : 9.63636 < r < 9.63636
   95% expected band : 9.63636 < r < 9.63636
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1039990855.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1054710296.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1125817505.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1152148456.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1235253533.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1350561416.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1469133551.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-148091296.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1490500657.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1492254136.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1586600363.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1637705018.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1639100218.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1668518995.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1743659863.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1754780584.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1755603287.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1857240083.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-2369904.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-243882869.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-253342968.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-265210290.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-392314121.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-393563747.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-408135628.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-461136129.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-495299730.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-610799839.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-6410125.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-643997154.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-675721165.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-685305116.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-7210342.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-744387243.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-75062750.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-789170418.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-817454665.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-923553582.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-927590056.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-944866780.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-968465162.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.112081856.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.1149922936.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.1195348381.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.121397769.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.1245099180.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.1257254085.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1263616481.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1281281776.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1311326907.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1341853150.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1396732548.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.142697409.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1428533822.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.143722085.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1464754018.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1515053821.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1525597879.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1549504427.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1562979046.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1605135002.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1682373660.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.171089468.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1732934021.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1797531398.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1866236330.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1977838661.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.2041811272.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.2123509543.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.2130522612.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.252040169.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.266929060.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.296006157.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.351657722.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.36972628.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.397311425.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.415172579.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.422964988.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.490170970.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.579410320.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.635805678.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.638698355.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.641883050.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.689880953.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.694800238.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.695254985.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.716422723.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.723333401.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.741641685.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.779276710.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.835182467.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.843768619.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.854234407.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.855674572.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.856685362.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.860667855.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.895374613.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.923904111.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.940005196.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.955062197.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -593729829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.37182 +/- 0.0157211 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.37182 @ 95%CL (1 toyMC)
median expected limit: r < 7.37182 @ 95%CL (1 toyMC)
   68% expected band : 7.37182 < r < 7.37182
   95% expected band : 7.37182 < r < 7.37182
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1566307084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.83264 +/- 0.00968054 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.83264 @ 95%CL (1 toyMC)
median expected limit: r < 6.83264 @ 95%CL (1 toyMC)
   68% expected band : 6.83264 < r < 6.83264
   95% expected band : 6.83264 < r < 6.83264
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1346729852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.76679 +/- 0.0131765 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.76679 @ 95%CL (1 toyMC)
median expected limit: r < 6.76679 @ 95%CL (1 toyMC)
   68% expected band : 6.76679 < r < 6.76679
   95% expected band : 6.76679 < r < 6.76679
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -323290825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5063 +/- 0.0174382 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.5063 @ 95%CL (1 toyMC)
median expected limit: r < 11.5063 @ 95%CL (1 toyMC)
   68% expected band : 11.5063 < r < 11.5063
   95% expected band : 11.5063 < r < 11.5063
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -283955602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4951 +/- 0.00961621 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.4951 @ 95%CL (1 toyMC)
median expected limit: r < 16.4951 @ 95%CL (1 toyMC)
   68% expected band : 16.4951 < r < 16.4951
   95% expected band : 16.4951 < r < 16.4951
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1724510367
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.535 +/- 0.0100048 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.535 @ 95%CL (1 toyMC)
median expected limit: r < 16.535 @ 95%CL (1 toyMC)
   68% expected band : 16.535 < r < 16.535
   95% expected band : 16.535 < r < 16.535
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1861312492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.82087 +/- 0.0142066 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.82087 @ 95%CL (1 toyMC)
median expected limit: r < 8.82087 @ 95%CL (1 toyMC)
   68% expected band : 8.82087 < r < 8.82087
   95% expected band : 8.82087 < r < 8.82087
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1485482074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9683 +/- 0.0118912 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.9683 @ 95%CL (1 toyMC)
median expected limit: r < 12.9683 @ 95%CL (1 toyMC)
   68% expected band : 12.9683 < r < 12.9683
   95% expected band : 12.9683 < r < 12.9683
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1749131083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.39014 +/- 0.01239 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.39014 @ 95%CL (1 toyMC)
median expected limit: r < 6.39014 @ 95%CL (1 toyMC)
   68% expected band : 6.39014 < r < 6.39014
   95% expected band : 6.39014 < r < 6.39014
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1004162096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4433 +/- 0.0134518 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.4433 @ 95%CL (1 toyMC)
median expected limit: r < 12.4433 @ 95%CL (1 toyMC)
   68% expected band : 12.4433 < r < 12.4433
   95% expected band : 12.4433 < r < 12.4433
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 789933226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.00768 +/- 0.0131802 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.00768 @ 95%CL (1 toyMC)
median expected limit: r < 7.00768 @ 95%CL (1 toyMC)
   68% expected band : 7.00768 < r < 7.00768
   95% expected band : 7.00768 < r < 7.00768
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -620821697
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.06965 +/- 0.00908064 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.06965 @ 95%CL (1 toyMC)
median expected limit: r < 5.06965 @ 95%CL (1 toyMC)
   68% expected band : 5.06965 < r < 5.06965
   95% expected band : 5.06965 < r < 5.06965
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 194634950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.37969 +/- 0.0130081 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.37969 @ 95%CL (1 toyMC)
median expected limit: r < 7.37969 @ 95%CL (1 toyMC)
   68% expected band : 7.37969 < r < 7.37969
   95% expected band : 7.37969 < r < 7.37969
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1180250763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3539 +/- 0.00818477 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.3539 @ 95%CL (1 toyMC)
median expected limit: r < 17.3539 @ 95%CL (1 toyMC)
   68% expected band : 17.3539 < r < 17.3539
   95% expected band : 17.3539 < r < 17.3539
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1418966187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.56562 +/- 0.0152768 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.56562 @ 95%CL (1 toyMC)
median expected limit: r < 9.56562 @ 95%CL (1 toyMC)
   68% expected band : 9.56562 < r < 9.56562
   95% expected band : 9.56562 < r < 9.56562
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2067653702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2059 +/- 0.00918166 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.2059 @ 95%CL (1 toyMC)
median expected limit: r < 17.2059 @ 95%CL (1 toyMC)
   68% expected band : 17.2059 < r < 17.2059
   95% expected band : 17.2059 < r < 17.2059
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2093333252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2211 +/- 0.0123075 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.2211 @ 95%CL (1 toyMC)
median expected limit: r < 14.2211 @ 95%CL (1 toyMC)
   68% expected band : 14.2211 < r < 14.2211
   95% expected band : 14.2211 < r < 14.2211
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1092710613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.60599 +/- 0.0130231 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.60599 @ 95%CL (1 toyMC)
median expected limit: r < 8.60599 @ 95%CL (1 toyMC)
   68% expected band : 8.60599 < r < 8.60599
   95% expected band : 8.60599 < r < 8.60599
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1584361477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4285 +/- 0.0110117 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.4285 @ 95%CL (1 toyMC)
median expected limit: r < 16.4285 @ 95%CL (1 toyMC)
   68% expected band : 16.4285 < r < 16.4285
   95% expected band : 16.4285 < r < 16.4285
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 3059393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2726 +/- 0.012723 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.2726 @ 95%CL (1 toyMC)
median expected limit: r < 13.2726 @ 95%CL (1 toyMC)
   68% expected band : 13.2726 < r < 13.2726
   95% expected band : 13.2726 < r < 13.2726
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 734976972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.41171 +/- 0.0173584 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.41171 @ 95%CL (1 toyMC)
median expected limit: r < 8.41171 @ 95%CL (1 toyMC)
   68% expected band : 8.41171 < r < 8.41171
   95% expected band : 8.41171 < r < 8.41171
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1114181961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9749 +/- 0.0136537 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.9749 @ 95%CL (1 toyMC)
median expected limit: r < 11.9749 @ 95%CL (1 toyMC)
   68% expected band : 11.9749 < r < 11.9749
   95% expected band : 11.9749 < r < 11.9749
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1483157502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.00759 +/- 0.0116841 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.00759 @ 95%CL (1 toyMC)
median expected limit: r < 9.00759 @ 95%CL (1 toyMC)
   68% expected band : 9.00759 < r < 9.00759
   95% expected band : 9.00759 < r < 9.00759
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1566383327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.46323 +/- 0.0133114 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.46323 @ 95%CL (1 toyMC)
median expected limit: r < 6.46323 @ 95%CL (1 toyMC)
   68% expected band : 6.46323 < r < 6.46323
   95% expected band : 6.46323 < r < 6.46323
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1630737228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7231 +/- 0.0145024 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.7231 @ 95%CL (1 toyMC)
median expected limit: r < 10.7231 @ 95%CL (1 toyMC)
   68% expected band : 10.7231 < r < 10.7231
   95% expected band : 10.7231 < r < 10.7231
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -322786307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.78579 +/- 0.0120526 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.78579 @ 95%CL (1 toyMC)
median expected limit: r < 8.78579 @ 95%CL (1 toyMC)
   68% expected band : 8.78579 < r < 8.78579
   95% expected band : 8.78579 < r < 8.78579
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1923843518
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9599 +/- 0.0121637 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 14.9599 @ 95%CL (1 toyMC)
median expected limit: r < 14.9599 @ 95%CL (1 toyMC)
   68% expected band : 14.9599 < r < 14.9599
   95% expected band : 14.9599 < r < 14.9599
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 689973833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0939 +/- 0.0158431 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.0939 @ 95%CL (1 toyMC)
median expected limit: r < 10.0939 @ 95%CL (1 toyMC)
   68% expected band : 10.0939 < r < 10.0939
   95% expected band : 10.0939 < r < 10.0939
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 288353019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2817 +/- 0.0177139 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.2817 @ 95%CL (1 toyMC)
median expected limit: r < 10.2817 @ 95%CL (1 toyMC)
   68% expected band : 10.2817 < r < 10.2817
   95% expected band : 10.2817 < r < 10.2817
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 606866214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6133 +/- 0.012883 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.6133 @ 95%CL (1 toyMC)
median expected limit: r < 10.6133 @ 95%CL (1 toyMC)
   68% expected band : 10.6133 < r < 10.6133
   95% expected band : 10.6133 < r < 10.6133
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -951514381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8719 +/- 0.00972889 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.8719 @ 95%CL (1 toyMC)
median expected limit: r < 15.8719 @ 95%CL (1 toyMC)
   68% expected band : 15.8719 < r < 15.8719
   95% expected band : 15.8719 < r < 15.8719
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -962376936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0289 +/- 0.01371 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.0289 @ 95%CL (1 toyMC)
median expected limit: r < 11.0289 @ 95%CL (1 toyMC)
   68% expected band : 11.0289 < r < 11.0289
   95% expected band : 11.0289 < r < 11.0289
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 6901881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5109 +/- 0.0164415 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.5109 @ 95%CL (1 toyMC)
median expected limit: r < 11.5109 @ 95%CL (1 toyMC)
   68% expected band : 11.5109 < r < 11.5109
   95% expected band : 11.5109 < r < 11.5109
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1569525037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2691 +/- 0.0129647 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.2691 @ 95%CL (1 toyMC)
median expected limit: r < 14.2691 @ 95%CL (1 toyMC)
   68% expected band : 14.2691 < r < 14.2691
   95% expected band : 14.2691 < r < 14.2691
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 106402669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.859 +/- 0.0178642 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.859 @ 95%CL (1 toyMC)
median expected limit: r < 10.859 @ 95%CL (1 toyMC)
   68% expected band : 10.859 < r < 10.859
   95% expected band : 10.859 < r < 10.859
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -401257613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.94681 +/- 0.0158624 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.94681 @ 95%CL (1 toyMC)
median expected limit: r < 7.94681 @ 95%CL (1 toyMC)
   68% expected band : 7.94681 < r < 7.94681
   95% expected band : 7.94681 < r < 7.94681
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -567374991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9576 +/- 0.00971392 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.9576 @ 95%CL (1 toyMC)
median expected limit: r < 13.9576 @ 95%CL (1 toyMC)
   68% expected band : 13.9576 < r < 13.9576
   95% expected band : 13.9576 < r < 13.9576
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1730765663
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.95145 +/- 0.0162882 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.95145 @ 95%CL (1 toyMC)
median expected limit: r < 6.95145 @ 95%CL (1 toyMC)
   68% expected band : 6.95145 < r < 6.95145
   95% expected band : 6.95145 < r < 6.95145
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1532759709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.62561 +/- 0.00839725 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.62561 @ 95%CL (1 toyMC)
median expected limit: r < 5.62561 @ 95%CL (1 toyMC)
   68% expected band : 5.62561 < r < 5.62561
   95% expected band : 5.62561 < r < 5.62561
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1079704487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7277 +/- 0.0133192 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.7277 @ 95%CL (1 toyMC)
median expected limit: r < 10.7277 @ 95%CL (1 toyMC)
   68% expected band : 10.7277 < r < 10.7277
   95% expected band : 10.7277 < r < 10.7277
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1306278550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.97315 +/- 0.0137466 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.97315 @ 95%CL (1 toyMC)
median expected limit: r < 6.97315 @ 95%CL (1 toyMC)
   68% expected band : 6.97315 < r < 6.97315
   95% expected band : 6.97315 < r < 6.97315
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -96092175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.81174 +/- 0.0104104 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.81174 @ 95%CL (1 toyMC)
median expected limit: r < 9.81174 @ 95%CL (1 toyMC)
   68% expected band : 9.81174 < r < 9.81174
   95% expected band : 9.81174 < r < 9.81174
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1919617652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1341 +/- 0.0142631 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.1341 @ 95%CL (1 toyMC)
median expected limit: r < 12.1341 @ 95%CL (1 toyMC)
   68% expected band : 12.1341 < r < 12.1341
   95% expected band : 12.1341 < r < 12.1341
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 997186203
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1749 +/- 0.0106642 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.1749 @ 95%CL (1 toyMC)
median expected limit: r < 15.1749 @ 95%CL (1 toyMC)
   68% expected band : 15.1749 < r < 15.1749
   95% expected band : 15.1749 < r < 15.1749
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1326608108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.03024 +/- 0.00961148 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.03024 @ 95%CL (1 toyMC)
median expected limit: r < 7.03024 @ 95%CL (1 toyMC)
   68% expected band : 7.03024 < r < 7.03024
   95% expected band : 7.03024 < r < 7.03024
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1696133671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5861 +/- 0.0135729 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5861 @ 95%CL (1 toyMC)
median expected limit: r < 10.5861 @ 95%CL (1 toyMC)
   68% expected band : 10.5861 < r < 10.5861
   95% expected band : 10.5861 < r < 10.5861
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1384330695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.99591 +/- 0.0163288 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.99591 @ 95%CL (1 toyMC)
median expected limit: r < 8.99591 @ 95%CL (1 toyMC)
   68% expected band : 8.99591 < r < 8.99591
   95% expected band : 8.99591 < r < 8.99591
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -677357435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.30734 +/- 0.0155231 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.30734 @ 95%CL (1 toyMC)
median expected limit: r < 7.30734 @ 95%CL (1 toyMC)
   68% expected band : 7.30734 < r < 7.30734
   95% expected band : 7.30734 < r < 7.30734
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2079108681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.63926 +/- 0.0118764 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.63926 @ 95%CL (1 toyMC)
median expected limit: r < 6.63926 @ 95%CL (1 toyMC)
   68% expected band : 6.63926 < r < 6.63926
   95% expected band : 6.63926 < r < 6.63926
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -374655513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50443 +/- 0.00991506 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.50443 @ 95%CL (1 toyMC)
median expected limit: r < 5.50443 @ 95%CL (1 toyMC)
   68% expected band : 5.50443 < r < 5.50443
   95% expected band : 5.50443 < r < 5.50443
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -663930227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2132 +/- 0.0140643 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.2132 @ 95%CL (1 toyMC)
median expected limit: r < 11.2132 @ 95%CL (1 toyMC)
   68% expected band : 11.2132 < r < 11.2132
   95% expected band : 11.2132 < r < 11.2132
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1051718319
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9156 +/- 0.015741 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.9156 @ 95%CL (1 toyMC)
median expected limit: r < 10.9156 @ 95%CL (1 toyMC)
   68% expected band : 10.9156 < r < 10.9156
   95% expected band : 10.9156 < r < 10.9156
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 408545214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.91077 +/- 0.016144 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.91077 @ 95%CL (1 toyMC)
median expected limit: r < 8.91077 @ 95%CL (1 toyMC)
   68% expected band : 8.91077 < r < 8.91077
   95% expected band : 8.91077 < r < 8.91077
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1729327041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.56882 +/- 0.0150104 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.56882 @ 95%CL (1 toyMC)
median expected limit: r < 7.56882 @ 95%CL (1 toyMC)
   68% expected band : 7.56882 < r < 7.56882
   95% expected band : 7.56882 < r < 7.56882
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1539865742
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5376 +/- 0.017572 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.5376 @ 95%CL (1 toyMC)
median expected limit: r < 11.5376 @ 95%CL (1 toyMC)
   68% expected band : 11.5376 < r < 11.5376
   95% expected band : 11.5376 < r < 11.5376
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1385826980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7366 +/- 0.0122505 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 12.7366 @ 95%CL (1 toyMC)
median expected limit: r < 12.7366 @ 95%CL (1 toyMC)
   68% expected band : 12.7366 < r < 12.7366
   95% expected band : 12.7366 < r < 12.7366
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1767003054
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.39314 +/- 0.0166735 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.39314 @ 95%CL (1 toyMC)
median expected limit: r < 7.39314 @ 95%CL (1 toyMC)
   68% expected band : 7.39314 < r < 7.39314
   95% expected band : 7.39314 < r < 7.39314
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 57308843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.0628 +/- 0.0152351 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.0628 @ 95%CL (1 toyMC)
median expected limit: r < 9.0628 @ 95%CL (1 toyMC)
   68% expected band : 9.0628 < r < 9.0628
   95% expected band : 9.0628 < r < 9.0628
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -831260025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.15075 +/- 0.0154463 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.15075 @ 95%CL (1 toyMC)
median expected limit: r < 8.15075 @ 95%CL (1 toyMC)
   68% expected band : 8.15075 < r < 8.15075
   95% expected band : 8.15075 < r < 8.15075
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1349697511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.72123 +/- 0.0115848 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.72123 @ 95%CL (1 toyMC)
median expected limit: r < 6.72123 @ 95%CL (1 toyMC)
   68% expected band : 6.72123 < r < 6.72123
   95% expected band : 6.72123 < r < 6.72123
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 361783374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4268 +/- 0.0175217 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.4268 @ 95%CL (1 toyMC)
median expected limit: r < 11.4268 @ 95%CL (1 toyMC)
   68% expected band : 11.4268 < r < 11.4268
   95% expected band : 11.4268 < r < 11.4268
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1835115140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.07215 +/- 0.00995312 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.07215 @ 95%CL (1 toyMC)
median expected limit: r < 6.07215 @ 95%CL (1 toyMC)
   68% expected band : 6.07215 < r < 6.07215
   95% expected band : 6.07215 < r < 6.07215
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2146366733
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9851 +/- 0.0174938 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.9851 @ 95%CL (1 toyMC)
median expected limit: r < 12.9851 @ 95%CL (1 toyMC)
   68% expected band : 12.9851 < r < 12.9851
   95% expected band : 12.9851 < r < 12.9851
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1209171929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.65045 +/- 0.0155144 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.65045 @ 95%CL (1 toyMC)
median expected limit: r < 9.65045 @ 95%CL (1 toyMC)
   68% expected band : 9.65045 < r < 9.65045
   95% expected band : 9.65045 < r < 9.65045
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -602185281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4538 +/- 0.0142429 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.4538 @ 95%CL (1 toyMC)
median expected limit: r < 13.4538 @ 95%CL (1 toyMC)
   68% expected band : 13.4538 < r < 13.4538
   95% expected band : 13.4538 < r < 13.4538
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1779185409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5438 +/- 0.0160414 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.5438 @ 95%CL (1 toyMC)
median expected limit: r < 10.5438 @ 95%CL (1 toyMC)
   68% expected band : 10.5438 < r < 10.5438
   95% expected band : 10.5438 < r < 10.5438
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 91685325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7868 +/- 0.0145009 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.7868 @ 95%CL (1 toyMC)
median expected limit: r < 11.7868 @ 95%CL (1 toyMC)
   68% expected band : 11.7868 < r < 11.7868
   95% expected band : 11.7868 < r < 11.7868
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 201927162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.6908 +/- 0.0122618 @ 95% CL (100 tries)
Done in 0.18 min (cpu), 0.18 min (real)
mean   expected limit: r < 4.6908 @ 95%CL (1 toyMC)
median expected limit: r < 4.6908 @ 95%CL (1 toyMC)
   68% expected band : 4.6908 < r < 4.6908
   95% expected band : 4.6908 < r < 4.6908
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -73349672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.14542 +/- 0.00951361 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.14542 @ 95%CL (1 toyMC)
median expected limit: r < 5.14542 @ 95%CL (1 toyMC)
   68% expected band : 5.14542 < r < 5.14542
   95% expected band : 5.14542 < r < 5.14542
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1841220504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.27709 +/- 0.0109193 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.27709 @ 95%CL (1 toyMC)
median expected limit: r < 7.27709 @ 95%CL (1 toyMC)
   68% expected band : 7.27709 < r < 7.27709
   95% expected band : 7.27709 < r < 7.27709
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -217068660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.33812 +/- 0.0134999 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.33812 @ 95%CL (1 toyMC)
median expected limit: r < 6.33812 @ 95%CL (1 toyMC)
   68% expected band : 6.33812 < r < 6.33812
   95% expected band : 6.33812 < r < 6.33812
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1526526278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.5008 +/- 0.0135142 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.5008 @ 95%CL (1 toyMC)
median expected limit: r < 7.5008 @ 95%CL (1 toyMC)
   68% expected band : 7.5008 < r < 7.5008
   95% expected band : 7.5008 < r < 7.5008
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1380980169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.90518 +/- 0.0118779 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 6.90518 @ 95%CL (1 toyMC)
median expected limit: r < 6.90518 @ 95%CL (1 toyMC)
   68% expected band : 6.90518 < r < 6.90518
   95% expected band : 6.90518 < r < 6.90518
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -397743023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2679 +/- 0.013386 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.2679 @ 95%CL (1 toyMC)
median expected limit: r < 10.2679 @ 95%CL (1 toyMC)
   68% expected band : 10.2679 < r < 10.2679
   95% expected band : 10.2679 < r < 10.2679
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 650800032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.85966 +/- 0.0131603 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.85966 @ 95%CL (1 toyMC)
median expected limit: r < 8.85966 @ 95%CL (1 toyMC)
   68% expected band : 8.85966 < r < 8.85966
   95% expected band : 8.85966 < r < 8.85966
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 655135358
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.25298 +/- 0.0113208 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.25298 @ 95%CL (1 toyMC)
median expected limit: r < 7.25298 @ 95%CL (1 toyMC)
   68% expected band : 7.25298 < r < 7.25298
   95% expected band : 7.25298 < r < 7.25298
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1163415282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5539 +/- 0.0163257 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5539 @ 95%CL (1 toyMC)
median expected limit: r < 10.5539 @ 95%CL (1 toyMC)
   68% expected band : 10.5539 < r < 10.5539
   95% expected band : 10.5539 < r < 10.5539
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -478067534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.97702 +/- 0.0128225 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 5.97702 @ 95%CL (1 toyMC)
median expected limit: r < 5.97702 @ 95%CL (1 toyMC)
   68% expected band : 5.97702 < r < 5.97702
   95% expected band : 5.97702 < r < 5.97702
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1892494999
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1601 +/- 0.0159579 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.1601 @ 95%CL (1 toyMC)
median expected limit: r < 10.1601 @ 95%CL (1 toyMC)
   68% expected band : 10.1601 < r < 10.1601
   95% expected band : 10.1601 < r < 10.1601
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1819312277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2023 +/- 0.0141861 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.2023 @ 95%CL (1 toyMC)
median expected limit: r < 12.2023 @ 95%CL (1 toyMC)
   68% expected band : 12.2023 < r < 12.2023
   95% expected band : 12.2023 < r < 12.2023
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1059527181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2487 +/- 0.0137218 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.2487 @ 95%CL (1 toyMC)
median expected limit: r < 10.2487 @ 95%CL (1 toyMC)
   68% expected band : 10.2487 < r < 10.2487
   95% expected band : 10.2487 < r < 10.2487
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1753053103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8081 +/- 0.0133048 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.8081 @ 95%CL (1 toyMC)
median expected limit: r < 12.8081 @ 95%CL (1 toyMC)
   68% expected band : 12.8081 < r < 12.8081
   95% expected band : 12.8081 < r < 12.8081
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 143867976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.47058 +/- 0.013789 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.47058 @ 95%CL (1 toyMC)
median expected limit: r < 6.47058 @ 95%CL (1 toyMC)
   68% expected band : 6.47058 < r < 6.47058
   95% expected band : 6.47058 < r < 6.47058
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -747039741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.43192 +/- 0.0149912 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.43192 @ 95%CL (1 toyMC)
median expected limit: r < 8.43192 @ 95%CL (1 toyMC)
   68% expected band : 8.43192 < r < 8.43192
   95% expected band : 8.43192 < r < 8.43192
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1212295632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0711 +/- 0.0140837 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.0711 @ 95%CL (1 toyMC)
median expected limit: r < 11.0711 @ 95%CL (1 toyMC)
   68% expected band : 11.0711 < r < 11.0711
   95% expected band : 11.0711 < r < 11.0711
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -48327183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.57127 +/- 0.0122501 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.57127 @ 95%CL (1 toyMC)
median expected limit: r < 7.57127 @ 95%CL (1 toyMC)
   68% expected band : 7.57127 < r < 7.57127
   95% expected band : 7.57127 < r < 7.57127
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1589939309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2195 +/- 0.0100738 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2195 @ 95%CL (1 toyMC)
median expected limit: r < 16.2195 @ 95%CL (1 toyMC)
   68% expected band : 16.2195 < r < 16.2195
   95% expected band : 16.2195 < r < 16.2195
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -939727450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7696 +/- 0.0131513 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.7696 @ 95%CL (1 toyMC)
median expected limit: r < 11.7696 @ 95%CL (1 toyMC)
   68% expected band : 11.7696 < r < 11.7696
   95% expected band : 11.7696 < r < 11.7696
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 200828377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4306 +/- 0.0115238 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.4306 @ 95%CL (1 toyMC)
median expected limit: r < 13.4306 @ 95%CL (1 toyMC)
   68% expected band : 13.4306 < r < 13.4306
   95% expected band : 13.4306 < r < 13.4306
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 428523663
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.73212 +/- 0.0138877 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.73212 @ 95%CL (1 toyMC)
median expected limit: r < 8.73212 @ 95%CL (1 toyMC)
   68% expected band : 8.73212 < r < 8.73212
   95% expected band : 8.73212 < r < 8.73212
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -224684653
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.89948 +/- 0.0134138 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.89948 @ 95%CL (1 toyMC)
median expected limit: r < 8.89948 @ 95%CL (1 toyMC)
   68% expected band : 8.89948 < r < 8.89948
   95% expected band : 8.89948 < r < 8.89948
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -145588009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2347 +/- 0.00983104 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2347 @ 95%CL (1 toyMC)
median expected limit: r < 16.2347 @ 95%CL (1 toyMC)
   68% expected band : 16.2347 < r < 16.2347
   95% expected band : 16.2347 < r < 16.2347
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2001199214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5727 +/- 0.0174072 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 10.5727 @ 95%CL (1 toyMC)
median expected limit: r < 10.5727 @ 95%CL (1 toyMC)
   68% expected band : 10.5727 < r < 10.5727
   95% expected band : 10.5727 < r < 10.5727
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1155682897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.42051 +/- 0.0158833 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.42051 @ 95%CL (1 toyMC)
median expected limit: r < 9.42051 @ 95%CL (1 toyMC)
   68% expected band : 9.42051 < r < 9.42051
   95% expected band : 9.42051 < r < 9.42051
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -413468364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7494 +/- 0.013026 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.7494 @ 95%CL (1 toyMC)
median expected limit: r < 10.7494 @ 95%CL (1 toyMC)
   68% expected band : 10.7494 < r < 10.7494
   95% expected band : 10.7494 < r < 10.7494
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -923275158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.53265 +/- 0.0165288 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.53265 @ 95%CL (1 toyMC)
median expected limit: r < 8.53265 @ 95%CL (1 toyMC)
   68% expected band : 8.53265 < r < 8.53265
   95% expected band : 8.53265 < r < 8.53265
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1823771974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.73404 +/- 0.016744 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.73404 @ 95%CL (1 toyMC)
median expected limit: r < 9.73404 @ 95%CL (1 toyMC)
   68% expected band : 9.73404 < r < 9.73404
   95% expected band : 9.73404 < r < 9.73404
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1001379807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.0695 +/- 0.0137491 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.0695 @ 95%CL (1 toyMC)
median expected limit: r < 8.0695 @ 95%CL (1 toyMC)
   68% expected band : 8.0695 < r < 8.0695
   95% expected band : 8.0695 < r < 8.0695
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1485194435
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.57667 +/- 0.0135709 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.57667 @ 95%CL (1 toyMC)
median expected limit: r < 9.57667 @ 95%CL (1 toyMC)
   68% expected band : 9.57667 < r < 9.57667
   95% expected band : 9.57667 < r < 9.57667
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1176241292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.26944 +/- 0.0137131 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.26944 @ 95%CL (1 toyMC)
median expected limit: r < 6.26944 @ 95%CL (1 toyMC)
   68% expected band : 6.26944 < r < 6.26944
   95% expected band : 6.26944 < r < 6.26944
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1001379807.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1059527181.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1079704487.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1346729852.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1384330695.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1385826980.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-145588009.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1485194435.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1485482074.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1526526278.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1539865742.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1566307084.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1566383327.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1753053103.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1767003054.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1835115140.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1841220504.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1861312492.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1892494999.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1923843518.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-2079108681.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-2093333252.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2146366733.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-217068660.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-224684653.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-283955602.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-322786307.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-323290825.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-374655513.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-397743023.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-401257613.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-413468364.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-478067534.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-48327183.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-567374991.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-593729829.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-602185281.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-620821697.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-663930227.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-677357435.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-73349672.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-747039741.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-831260025.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-923275158.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-939727450.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-951514381.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-96092175.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-962376936.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1004162096.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1051718319.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.106402669.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1092710613.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1114181961.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1155682897.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1163415282.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1176241292.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1180250763.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1209171929.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1212295632.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1306278550.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1326608108.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1349697511.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1380980169.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1418966187.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.143867976.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1483157502.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1532759709.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1569525037.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1584361477.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1589939309.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1630737228.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1696133671.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1724510367.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1729327041.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1730765663.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1749131083.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1779185409.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1819312277.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.1823771974.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.1919617652.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.194634950.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.2001199214.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.200828377.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.201927162.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.2067653702.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.288353019.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.3059393.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.361783374.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.408545214.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.428523663.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.57308843.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.606866214.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.650800032.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.655135358.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.689973833.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.6901881.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.734976972.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.789933226.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.91685325.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.997186203.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1787233570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.39828 +/- 0.015708 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.39828 @ 95%CL (1 toyMC)
median expected limit: r < 7.39828 @ 95%CL (1 toyMC)
   68% expected band : 7.39828 < r < 7.39828
   95% expected band : 7.39828 < r < 7.39828
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -300448780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1991 +/- 0.0147391 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.1991 @ 95%CL (1 toyMC)
median expected limit: r < 14.1991 @ 95%CL (1 toyMC)
   68% expected band : 14.1991 < r < 14.1991
   95% expected band : 14.1991 < r < 14.1991
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1564534144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.85129 +/- 0.0146556 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.85129 @ 95%CL (1 toyMC)
median expected limit: r < 9.85129 @ 95%CL (1 toyMC)
   68% expected band : 9.85129 < r < 9.85129
   95% expected band : 9.85129 < r < 9.85129
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 894683694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.67642 +/- 0.00856005 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.67642 @ 95%CL (1 toyMC)
median expected limit: r < 5.67642 @ 95%CL (1 toyMC)
   68% expected band : 5.67642 < r < 5.67642
   95% expected band : 5.67642 < r < 5.67642
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1563338443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.496 +/- 0.0163828 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.496 @ 95%CL (1 toyMC)
median expected limit: r < 13.496 @ 95%CL (1 toyMC)
   68% expected band : 13.496 < r < 13.496
   95% expected band : 13.496 < r < 13.496
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1423966268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4949 +/- 0.01549 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.4949 @ 95%CL (1 toyMC)
median expected limit: r < 10.4949 @ 95%CL (1 toyMC)
   68% expected band : 10.4949 < r < 10.4949
   95% expected band : 10.4949 < r < 10.4949
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2052409172
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.25386 +/- 0.00976075 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.20 min (real)
mean   expected limit: r < 5.25386 @ 95%CL (1 toyMC)
median expected limit: r < 5.25386 @ 95%CL (1 toyMC)
   68% expected band : 5.25386 < r < 5.25386
   95% expected band : 5.25386 < r < 5.25386
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 578477695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6153 +/- 0.0119895 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 14.6153 @ 95%CL (1 toyMC)
median expected limit: r < 14.6153 @ 95%CL (1 toyMC)
   68% expected band : 14.6153 < r < 14.6153
   95% expected band : 14.6153 < r < 14.6153
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -152105279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9562 +/- 0.0137639 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 12.9562 @ 95%CL (1 toyMC)
median expected limit: r < 12.9562 @ 95%CL (1 toyMC)
   68% expected band : 12.9562 < r < 12.9562
   95% expected band : 12.9562 < r < 12.9562
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1826687375
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3248 +/- 0.0120674 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.3248 @ 95%CL (1 toyMC)
median expected limit: r < 15.3248 @ 95%CL (1 toyMC)
   68% expected band : 15.3248 < r < 15.3248
   95% expected band : 15.3248 < r < 15.3248
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 406669033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.17861 +/- 0.0142928 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.17861 @ 95%CL (1 toyMC)
median expected limit: r < 7.17861 @ 95%CL (1 toyMC)
   68% expected band : 7.17861 < r < 7.17861
   95% expected band : 7.17861 < r < 7.17861
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -223486235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.044 +/- 0.0105241 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.044 @ 95%CL (1 toyMC)
median expected limit: r < 15.044 @ 95%CL (1 toyMC)
   68% expected band : 15.044 < r < 15.044
   95% expected band : 15.044 < r < 15.044
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -483471067
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5649 +/- 0.0127484 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.5649 @ 95%CL (1 toyMC)
median expected limit: r < 14.5649 @ 95%CL (1 toyMC)
   68% expected band : 14.5649 < r < 14.5649
   95% expected band : 14.5649 < r < 14.5649
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1171020635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.39383 +/- 0.0135262 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.39383 @ 95%CL (1 toyMC)
median expected limit: r < 8.39383 @ 95%CL (1 toyMC)
   68% expected band : 8.39383 < r < 8.39383
   95% expected band : 8.39383 < r < 8.39383
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1942614881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4778 +/- 0.00982068 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.4778 @ 95%CL (1 toyMC)
median expected limit: r < 15.4778 @ 95%CL (1 toyMC)
   68% expected band : 15.4778 < r < 15.4778
   95% expected band : 15.4778 < r < 15.4778
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2008729019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4405 +/- 0.00559061 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4405 @ 95%CL (1 toyMC)
median expected limit: r < 18.4405 @ 95%CL (1 toyMC)
   68% expected band : 18.4405 < r < 18.4405
   95% expected band : 18.4405 < r < 18.4405
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2076667817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5916 +/- 0.0169134 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5916 @ 95%CL (1 toyMC)
median expected limit: r < 10.5916 @ 95%CL (1 toyMC)
   68% expected band : 10.5916 < r < 10.5916
   95% expected band : 10.5916 < r < 10.5916
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1588261381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.34306 +/- 0.0152446 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.34306 @ 95%CL (1 toyMC)
median expected limit: r < 8.34306 @ 95%CL (1 toyMC)
   68% expected band : 8.34306 < r < 8.34306
   95% expected band : 8.34306 < r < 8.34306
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2046745984
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.68047 +/- 0.0122433 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.68047 @ 95%CL (1 toyMC)
median expected limit: r < 8.68047 @ 95%CL (1 toyMC)
   68% expected band : 8.68047 < r < 8.68047
   95% expected band : 8.68047 < r < 8.68047
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -39092914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3828 +/- 0.0147025 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.3828 @ 95%CL (1 toyMC)
median expected limit: r < 13.3828 @ 95%CL (1 toyMC)
   68% expected band : 13.3828 < r < 13.3828
   95% expected band : 13.3828 < r < 13.3828
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -430306943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5899 +/- 0.0177783 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.5899 @ 95%CL (1 toyMC)
median expected limit: r < 10.5899 @ 95%CL (1 toyMC)
   68% expected band : 10.5899 < r < 10.5899
   95% expected band : 10.5899 < r < 10.5899
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2134078767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.00553 +/- 0.0107772 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.00553 @ 95%CL (1 toyMC)
median expected limit: r < 6.00553 @ 95%CL (1 toyMC)
   68% expected band : 6.00553 < r < 6.00553
   95% expected band : 6.00553 < r < 6.00553
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1399348635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8716 +/- 0.0183475 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 11.8716 @ 95%CL (1 toyMC)
median expected limit: r < 11.8716 @ 95%CL (1 toyMC)
   68% expected band : 11.8716 < r < 11.8716
   95% expected band : 11.8716 < r < 11.8716
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -425271169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1363 +/- 0.0132728 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.1363 @ 95%CL (1 toyMC)
median expected limit: r < 14.1363 @ 95%CL (1 toyMC)
   68% expected band : 14.1363 < r < 14.1363
   95% expected band : 14.1363 < r < 14.1363
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1347355461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6001 +/- 0.0167049 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.6001 @ 95%CL (1 toyMC)
median expected limit: r < 11.6001 @ 95%CL (1 toyMC)
   68% expected band : 11.6001 < r < 11.6001
   95% expected band : 11.6001 < r < 11.6001
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1335810840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5213 +/- 0.00581614 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.5213 @ 95%CL (1 toyMC)
median expected limit: r < 18.5213 @ 95%CL (1 toyMC)
   68% expected band : 18.5213 < r < 18.5213
   95% expected band : 18.5213 < r < 18.5213
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -786622269
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0909 +/- 0.0175123 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.0909 @ 95%CL (1 toyMC)
median expected limit: r < 11.0909 @ 95%CL (1 toyMC)
   68% expected band : 11.0909 < r < 11.0909
   95% expected band : 11.0909 < r < 11.0909
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 676091657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3348 +/- 0.0126018 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.3348 @ 95%CL (1 toyMC)
median expected limit: r < 10.3348 @ 95%CL (1 toyMC)
   68% expected band : 10.3348 < r < 10.3348
   95% expected band : 10.3348 < r < 10.3348
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 511416287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9462 +/- 0.0101833 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.9462 @ 95%CL (1 toyMC)
median expected limit: r < 15.9462 @ 95%CL (1 toyMC)
   68% expected band : 15.9462 < r < 15.9462
   95% expected band : 15.9462 < r < 15.9462
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1900778541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.885 +/- 0.0141063 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.885 @ 95%CL (1 toyMC)
median expected limit: r < 14.885 @ 95%CL (1 toyMC)
   68% expected band : 14.885 < r < 14.885
   95% expected band : 14.885 < r < 14.885
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1832475961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5115 +/- 0.0127548 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.5115 @ 95%CL (1 toyMC)
median expected limit: r < 14.5115 @ 95%CL (1 toyMC)
   68% expected band : 14.5115 < r < 14.5115
   95% expected band : 14.5115 < r < 14.5115
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -727547431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.6456 +/- 0.0151455 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.6456 @ 95%CL (1 toyMC)
median expected limit: r < 8.6456 @ 95%CL (1 toyMC)
   68% expected band : 8.6456 < r < 8.6456
   95% expected band : 8.6456 < r < 8.6456
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1457598050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.8868 +/- 0.0153846 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 8.8868 @ 95%CL (1 toyMC)
median expected limit: r < 8.8868 @ 95%CL (1 toyMC)
   68% expected band : 8.8868 < r < 8.8868
   95% expected band : 8.8868 < r < 8.8868
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1178072071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.02984 +/- 0.0172237 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.02984 @ 95%CL (1 toyMC)
median expected limit: r < 9.02984 @ 95%CL (1 toyMC)
   68% expected band : 9.02984 < r < 9.02984
   95% expected band : 9.02984 < r < 9.02984
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -941765732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.99251 +/- 0.0115467 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.99251 @ 95%CL (1 toyMC)
median expected limit: r < 7.99251 @ 95%CL (1 toyMC)
   68% expected band : 7.99251 < r < 7.99251
   95% expected band : 7.99251 < r < 7.99251
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 427179043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1627 +/- 0.0122202 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.1627 @ 95%CL (1 toyMC)
median expected limit: r < 13.1627 @ 95%CL (1 toyMC)
   68% expected band : 13.1627 < r < 13.1627
   95% expected band : 13.1627 < r < 13.1627
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2008725445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8098 +/- 0.0164708 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.8098 @ 95%CL (1 toyMC)
median expected limit: r < 10.8098 @ 95%CL (1 toyMC)
   68% expected band : 10.8098 < r < 10.8098
   95% expected band : 10.8098 < r < 10.8098
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 982754080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8983 +/- 0.0179207 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.8983 @ 95%CL (1 toyMC)
median expected limit: r < 11.8983 @ 95%CL (1 toyMC)
   68% expected band : 11.8983 < r < 11.8983
   95% expected band : 11.8983 < r < 11.8983
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1056710841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.27291 +/- 0.0156174 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.27291 @ 95%CL (1 toyMC)
median expected limit: r < 9.27291 @ 95%CL (1 toyMC)
   68% expected band : 9.27291 < r < 9.27291
   95% expected band : 9.27291 < r < 9.27291
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1467913805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5045 +/- 0.0155239 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5045 @ 95%CL (1 toyMC)
median expected limit: r < 10.5045 @ 95%CL (1 toyMC)
   68% expected band : 10.5045 < r < 10.5045
   95% expected band : 10.5045 < r < 10.5045
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2077279120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2963 +/- 0.0152655 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.2963 @ 95%CL (1 toyMC)
median expected limit: r < 12.2963 @ 95%CL (1 toyMC)
   68% expected band : 12.2963 < r < 12.2963
   95% expected band : 12.2963 < r < 12.2963
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1933792629
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9795 +/- 0.0165198 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.9795 @ 95%CL (1 toyMC)
median expected limit: r < 13.9795 @ 95%CL (1 toyMC)
   68% expected band : 13.9795 < r < 13.9795
   95% expected band : 13.9795 < r < 13.9795
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -196135581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4652 +/- 0.00740676 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4652 @ 95%CL (1 toyMC)
median expected limit: r < 17.4652 @ 95%CL (1 toyMC)
   68% expected band : 17.4652 < r < 17.4652
   95% expected band : 17.4652 < r < 17.4652
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 545895913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.07662 +/- 0.0161063 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.07662 @ 95%CL (1 toyMC)
median expected limit: r < 7.07662 @ 95%CL (1 toyMC)
   68% expected band : 7.07662 < r < 7.07662
   95% expected band : 7.07662 < r < 7.07662
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -746298596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.05564 +/- 0.0141134 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 8.05564 @ 95%CL (1 toyMC)
median expected limit: r < 8.05564 @ 95%CL (1 toyMC)
   68% expected band : 8.05564 < r < 8.05564
   95% expected band : 8.05564 < r < 8.05564
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1083912234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.21853 +/- 0.0138946 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.21853 @ 95%CL (1 toyMC)
median expected limit: r < 9.21853 @ 95%CL (1 toyMC)
   68% expected band : 9.21853 < r < 9.21853
   95% expected band : 9.21853 < r < 9.21853
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1434237389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1125 +/- 0.0146961 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.1125 @ 95%CL (1 toyMC)
median expected limit: r < 10.1125 @ 95%CL (1 toyMC)
   68% expected band : 10.1125 < r < 10.1125
   95% expected band : 10.1125 < r < 10.1125
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -684676464
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8971 +/- 0.0138667 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.8971 @ 95%CL (1 toyMC)
median expected limit: r < 12.8971 @ 95%CL (1 toyMC)
   68% expected band : 12.8971 < r < 12.8971
   95% expected band : 12.8971 < r < 12.8971
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 958853452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7248 +/- 0.0176553 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.7248 @ 95%CL (1 toyMC)
median expected limit: r < 10.7248 @ 95%CL (1 toyMC)
   68% expected band : 10.7248 < r < 10.7248
   95% expected band : 10.7248 < r < 10.7248
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 630710010
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.10378 +/- 0.0135313 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.10378 @ 95%CL (1 toyMC)
median expected limit: r < 9.10378 @ 95%CL (1 toyMC)
   68% expected band : 9.10378 < r < 9.10378
   95% expected band : 9.10378 < r < 9.10378
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1599123721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.66013 +/- 0.0121551 @ 95% CL (100 tries)
Done in 0.19 min (cpu), 0.19 min (real)
mean   expected limit: r < 5.66013 @ 95%CL (1 toyMC)
median expected limit: r < 5.66013 @ 95%CL (1 toyMC)
   68% expected band : 5.66013 < r < 5.66013
   95% expected band : 5.66013 < r < 5.66013
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -815932997
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.44064 +/- 0.0179628 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.44064 @ 95%CL (1 toyMC)
median expected limit: r < 8.44064 @ 95%CL (1 toyMC)
   68% expected band : 8.44064 < r < 8.44064
   95% expected band : 8.44064 < r < 8.44064
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2144867235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0858 +/- 0.0143961 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.0858 @ 95%CL (1 toyMC)
median expected limit: r < 12.0858 @ 95%CL (1 toyMC)
   68% expected band : 12.0858 < r < 12.0858
   95% expected band : 12.0858 < r < 12.0858
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1610790179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.91118 +/- 0.0105552 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.91118 @ 95%CL (1 toyMC)
median expected limit: r < 8.91118 @ 95%CL (1 toyMC)
   68% expected band : 8.91118 < r < 8.91118
   95% expected band : 8.91118 < r < 8.91118
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -901390560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.03778 +/- 0.0137529 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.03778 @ 95%CL (1 toyMC)
median expected limit: r < 8.03778 @ 95%CL (1 toyMC)
   68% expected band : 8.03778 < r < 8.03778
   95% expected band : 8.03778 < r < 8.03778
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -804563883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.26114 +/- 0.0149251 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.26114 @ 95%CL (1 toyMC)
median expected limit: r < 8.26114 @ 95%CL (1 toyMC)
   68% expected band : 8.26114 < r < 8.26114
   95% expected band : 8.26114 < r < 8.26114
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 721975301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.23 +/- 0.00964771 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.23 @ 95%CL (1 toyMC)
median expected limit: r < 16.23 @ 95%CL (1 toyMC)
   68% expected band : 16.23 < r < 16.23
   95% expected band : 16.23 < r < 16.23
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 132277098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1487 +/- 0.0156355 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.1487 @ 95%CL (1 toyMC)
median expected limit: r < 11.1487 @ 95%CL (1 toyMC)
   68% expected band : 11.1487 < r < 11.1487
   95% expected band : 11.1487 < r < 11.1487
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1991728013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4103 +/- 0.0115691 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.4103 @ 95%CL (1 toyMC)
median expected limit: r < 16.4103 @ 95%CL (1 toyMC)
   68% expected band : 16.4103 < r < 16.4103
   95% expected band : 16.4103 < r < 16.4103
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2036633935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.9177 +/- 0.0148953 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.9177 @ 95%CL (1 toyMC)
median expected limit: r < 9.9177 @ 95%CL (1 toyMC)
   68% expected band : 9.9177 < r < 9.9177
   95% expected band : 9.9177 < r < 9.9177
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1342324714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7444 +/- 0.00692254 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.7444 @ 95%CL (1 toyMC)
median expected limit: r < 17.7444 @ 95%CL (1 toyMC)
   68% expected band : 17.7444 < r < 17.7444
   95% expected band : 17.7444 < r < 17.7444
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1890357879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3855 +/- 0.0185938 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.3855 @ 95%CL (1 toyMC)
median expected limit: r < 10.3855 @ 95%CL (1 toyMC)
   68% expected band : 10.3855 < r < 10.3855
   95% expected band : 10.3855 < r < 10.3855
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -432810811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3052 +/- 0.020988 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.3052 @ 95%CL (1 toyMC)
median expected limit: r < 11.3052 @ 95%CL (1 toyMC)
   68% expected band : 11.3052 < r < 11.3052
   95% expected band : 11.3052 < r < 11.3052
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 930785868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1822 +/- 0.0163526 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.1822 @ 95%CL (1 toyMC)
median expected limit: r < 11.1822 @ 95%CL (1 toyMC)
   68% expected band : 11.1822 < r < 11.1822
   95% expected band : 11.1822 < r < 11.1822
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -310981587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0818 +/- 0.0182407 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.0818 @ 95%CL (1 toyMC)
median expected limit: r < 10.0818 @ 95%CL (1 toyMC)
   68% expected band : 10.0818 < r < 10.0818
   95% expected band : 10.0818 < r < 10.0818
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2099566522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.744 +/- 0.0146602 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.744 @ 95%CL (1 toyMC)
median expected limit: r < 14.744 @ 95%CL (1 toyMC)
   68% expected band : 14.744 < r < 14.744
   95% expected band : 14.744 < r < 14.744
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1701442685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.26256 +/- 0.016842 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.26256 @ 95%CL (1 toyMC)
median expected limit: r < 7.26256 @ 95%CL (1 toyMC)
   68% expected band : 7.26256 < r < 7.26256
   95% expected band : 7.26256 < r < 7.26256
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1212215442
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.15615 +/- 0.013464 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.15615 @ 95%CL (1 toyMC)
median expected limit: r < 7.15615 @ 95%CL (1 toyMC)
   68% expected band : 7.15615 < r < 7.15615
   95% expected band : 7.15615 < r < 7.15615
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -442210265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0198 +/- 0.0133869 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.0198 @ 95%CL (1 toyMC)
median expected limit: r < 15.0198 @ 95%CL (1 toyMC)
   68% expected band : 15.0198 < r < 15.0198
   95% expected band : 15.0198 < r < 15.0198
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -286459089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.92427 +/- 0.0158353 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.92427 @ 95%CL (1 toyMC)
median expected limit: r < 7.92427 @ 95%CL (1 toyMC)
   68% expected band : 7.92427 < r < 7.92427
   95% expected band : 7.92427 < r < 7.92427
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -341393661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9562 +/- 0.0113196 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.9562 @ 95%CL (1 toyMC)
median expected limit: r < 13.9562 @ 95%CL (1 toyMC)
   68% expected band : 13.9562 < r < 13.9562
   95% expected band : 13.9562 < r < 13.9562
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2002298026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9995 +/- 0.00926955 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.9995 @ 95%CL (1 toyMC)
median expected limit: r < 15.9995 @ 95%CL (1 toyMC)
   68% expected band : 15.9995 < r < 15.9995
   95% expected band : 15.9995 < r < 15.9995
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1815193954
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9816 +/- 0.00524364 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.9816 @ 95%CL (1 toyMC)
median expected limit: r < 17.9816 @ 95%CL (1 toyMC)
   68% expected band : 17.9816 < r < 17.9816
   95% expected band : 17.9816 < r < 17.9816
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1848619001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6859 +/- 0.0144219 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.6859 @ 95%CL (1 toyMC)
median expected limit: r < 12.6859 @ 95%CL (1 toyMC)
   68% expected band : 12.6859 < r < 12.6859
   95% expected band : 12.6859 < r < 12.6859
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 770967578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.37481 +/- 0.0159479 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.37481 @ 95%CL (1 toyMC)
median expected limit: r < 7.37481 @ 95%CL (1 toyMC)
   68% expected band : 7.37481 < r < 7.37481
   95% expected band : 7.37481 < r < 7.37481
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 9510731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.61169 +/- 0.0141036 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.61169 @ 95%CL (1 toyMC)
median expected limit: r < 8.61169 @ 95%CL (1 toyMC)
   68% expected band : 8.61169 < r < 8.61169
   95% expected band : 8.61169 < r < 8.61169
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 800571823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4411 +/- 0.015334 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.4411 @ 95%CL (1 toyMC)
median expected limit: r < 12.4411 @ 95%CL (1 toyMC)
   68% expected band : 12.4411 < r < 12.4411
   95% expected band : 12.4411 < r < 12.4411
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -243659281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.07959 +/- 0.0110783 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.07959 @ 95%CL (1 toyMC)
median expected limit: r < 6.07959 @ 95%CL (1 toyMC)
   68% expected band : 6.07959 < r < 6.07959
   95% expected band : 6.07959 < r < 6.07959
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2067802749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2524 +/- 0.0119023 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.2524 @ 95%CL (1 toyMC)
median expected limit: r < 10.2524 @ 95%CL (1 toyMC)
   68% expected band : 10.2524 < r < 10.2524
   95% expected band : 10.2524 < r < 10.2524
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1575760229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.95822 +/- 0.0151518 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.95822 @ 95%CL (1 toyMC)
median expected limit: r < 7.95822 @ 95%CL (1 toyMC)
   68% expected band : 7.95822 < r < 7.95822
   95% expected band : 7.95822 < r < 7.95822
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1135684726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4207 +/- 0.0175883 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.4207 @ 95%CL (1 toyMC)
median expected limit: r < 10.4207 @ 95%CL (1 toyMC)
   68% expected band : 10.4207 < r < 10.4207
   95% expected band : 10.4207 < r < 10.4207
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1508443639
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1817 +/- 0.0162566 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.1817 @ 95%CL (1 toyMC)
median expected limit: r < 10.1817 @ 95%CL (1 toyMC)
   68% expected band : 10.1817 < r < 10.1817
   95% expected band : 10.1817 < r < 10.1817
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1148135160
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8581 +/- 0.0100751 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.8581 @ 95%CL (1 toyMC)
median expected limit: r < 14.8581 @ 95%CL (1 toyMC)
   68% expected band : 14.8581 < r < 14.8581
   95% expected band : 14.8581 < r < 14.8581
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1093340654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5946 +/- 0.0124394 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.5946 @ 95%CL (1 toyMC)
median expected limit: r < 14.5946 @ 95%CL (1 toyMC)
   68% expected band : 14.5946 < r < 14.5946
   95% expected band : 14.5946 < r < 14.5946
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1763817734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1442 +/- 0.00982523 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.1442 @ 95%CL (1 toyMC)
median expected limit: r < 16.1442 @ 95%CL (1 toyMC)
   68% expected band : 16.1442 < r < 16.1442
   95% expected band : 16.1442 < r < 16.1442
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1223547425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.52673 +/- 0.0149029 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.52673 @ 95%CL (1 toyMC)
median expected limit: r < 8.52673 @ 95%CL (1 toyMC)
   68% expected band : 8.52673 < r < 8.52673
   95% expected band : 8.52673 < r < 8.52673
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1746911031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.99966 +/- 0.0150541 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.99966 @ 95%CL (1 toyMC)
median expected limit: r < 9.99966 @ 95%CL (1 toyMC)
   68% expected band : 9.99966 < r < 9.99966
   95% expected band : 9.99966 < r < 9.99966
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 200278059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2328 +/- 0.0129848 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.2328 @ 95%CL (1 toyMC)
median expected limit: r < 10.2328 @ 95%CL (1 toyMC)
   68% expected band : 10.2328 < r < 10.2328
   95% expected band : 10.2328 < r < 10.2328
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1729854590
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.88666 +/- 0.0158752 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.88666 @ 95%CL (1 toyMC)
median expected limit: r < 8.88666 @ 95%CL (1 toyMC)
   68% expected band : 8.88666 < r < 8.88666
   95% expected band : 8.88666 < r < 8.88666
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 503014580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.94076 +/- 0.0142773 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.94076 @ 95%CL (1 toyMC)
median expected limit: r < 6.94076 @ 95%CL (1 toyMC)
   68% expected band : 6.94076 < r < 6.94076
   95% expected band : 6.94076 < r < 6.94076
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1502054252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.1356 +/- 0.0136893 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.1356 @ 95%CL (1 toyMC)
median expected limit: r < 7.1356 @ 95%CL (1 toyMC)
   68% expected band : 7.1356 < r < 7.1356
   95% expected band : 7.1356 < r < 7.1356
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -100159537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.26799 +/- 0.0151086 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.26799 @ 95%CL (1 toyMC)
median expected limit: r < 7.26799 @ 95%CL (1 toyMC)
   68% expected band : 7.26799 < r < 7.26799
   95% expected band : 7.26799 < r < 7.26799
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -32369000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.19195 +/- 0.0131547 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.19195 @ 95%CL (1 toyMC)
median expected limit: r < 7.19195 @ 95%CL (1 toyMC)
   68% expected band : 7.19195 < r < 7.19195
   95% expected band : 7.19195 < r < 7.19195
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 345462674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.39523 +/- 0.0149338 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.39523 @ 95%CL (1 toyMC)
median expected limit: r < 7.39523 @ 95%CL (1 toyMC)
   68% expected band : 7.39523 < r < 7.39523
   95% expected band : 7.39523 < r < 7.39523
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 629172959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.13433 +/- 0.0187778 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.13433 @ 95%CL (1 toyMC)
median expected limit: r < 9.13433 @ 95%CL (1 toyMC)
   68% expected band : 9.13433 < r < 9.13433
   95% expected band : 9.13433 < r < 9.13433
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1219076817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8513 +/- 0.015897 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.8513 @ 95%CL (1 toyMC)
median expected limit: r < 12.8513 @ 95%CL (1 toyMC)
   68% expected band : 12.8513 < r < 12.8513
   95% expected band : 12.8513 < r < 12.8513
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1959649042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.3011 +/- 0.0151576 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.3011 @ 95%CL (1 toyMC)
median expected limit: r < 11.3011 @ 95%CL (1 toyMC)
   68% expected band : 11.3011 < r < 11.3011
   95% expected band : 11.3011 < r < 11.3011
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 186797113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7751 +/- 0.0117638 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.7751 @ 95%CL (1 toyMC)
median expected limit: r < 13.7751 @ 95%CL (1 toyMC)
   68% expected band : 13.7751 < r < 13.7751
   95% expected band : 13.7751 < r < 13.7751
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -917016445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5 +/- 0.0127906 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.5 @ 95%CL (1 toyMC)
median expected limit: r < 13.5 @ 95%CL (1 toyMC)
   68% expected band : 13.5 < r < 13.5
   95% expected band : 13.5 < r < 13.5
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1806802011
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.6837 +/- 0.0188421 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.6837 @ 95%CL (1 toyMC)
median expected limit: r < 10.6837 @ 95%CL (1 toyMC)
   68% expected band : 10.6837 < r < 10.6837
   95% expected band : 10.6837 < r < 10.6837
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-100159537.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1056710841.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1083912234.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1093340654.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1212215442.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1347355461.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1399348635.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1423966268.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1467913805.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1502054252.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-152105279.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1564534144.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1575760229.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1599123721.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1763817734.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1787233570.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1832475961.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1848619001.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1890357879.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1933792629.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-196135581.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1991728013.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2002298026.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-2008729019.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2036633935.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2134078767.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-223486235.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-243659281.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-286459089.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-300448780.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-310981587.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-32369000.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-341393661.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-39092914.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-425271169.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-430306943.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-432810811.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-442210265.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-483471067.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-684676464.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-727547431.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-746298596.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-786622269.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-804563883.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-815932997.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-901390560.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-917016445.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-941765732.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1135684726.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1148135160.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1171020635.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1178072071.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1219076817.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1223547425.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.132277098.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1335810840.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1342324714.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1434237389.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1457598050.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1508443639.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1563338443.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1588261381.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1610790179.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1701442685.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1729854590.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1746911031.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1806802011.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1815193954.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1826687375.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.186797113.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1900778541.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1942614881.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1959649042.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.200278059.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2008725445.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2046745984.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2052409172.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.2067802749.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.2076667817.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.2077279120.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.2099566522.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.2144867235.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.345462674.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.406669033.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.427179043.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.503014580.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.511416287.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.545895913.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.578477695.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.629172959.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.630710010.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.676091657.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.721975301.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.770967578.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.800571823.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.894683694.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.930785868.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.9510731.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.958853452.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.982754080.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1545072344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5286 +/- 0.0169856 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5286 @ 95%CL (1 toyMC)
median expected limit: r < 10.5286 @ 95%CL (1 toyMC)
   68% expected band : 10.5286 < r < 10.5286
   95% expected band : 10.5286 < r < 10.5286
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 663904138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.37283 +/- 0.01789 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.37283 @ 95%CL (1 toyMC)
median expected limit: r < 8.37283 @ 95%CL (1 toyMC)
   68% expected band : 8.37283 < r < 8.37283
   95% expected band : 8.37283 < r < 8.37283
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -394998786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2936 +/- 0.0104596 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.2936 @ 95%CL (1 toyMC)
median expected limit: r < 16.2936 @ 95%CL (1 toyMC)
   68% expected band : 16.2936 < r < 16.2936
   95% expected band : 16.2936 < r < 16.2936
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 420111281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6443 +/- 0.0127766 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.6443 @ 95%CL (1 toyMC)
median expected limit: r < 13.6443 @ 95%CL (1 toyMC)
   68% expected band : 13.6443 < r < 13.6443
   95% expected band : 13.6443 < r < 13.6443
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1995583718
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0347 +/- 0.0145062 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.0347 @ 95%CL (1 toyMC)
median expected limit: r < 11.0347 @ 95%CL (1 toyMC)
   68% expected band : 11.0347 < r < 11.0347
   95% expected band : 11.0347 < r < 11.0347
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1015454383
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9148 +/- 0.0150709 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.9148 @ 95%CL (1 toyMC)
median expected limit: r < 12.9148 @ 95%CL (1 toyMC)
   68% expected band : 12.9148 < r < 12.9148
   95% expected band : 12.9148 < r < 12.9148
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -780228674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.79587 +/- 0.0139078 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.79587 @ 95%CL (1 toyMC)
median expected limit: r < 9.79587 @ 95%CL (1 toyMC)
   68% expected band : 9.79587 < r < 9.79587
   95% expected band : 9.79587 < r < 9.79587
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 298369548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9556 +/- 0.0194685 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.9556 @ 95%CL (1 toyMC)
median expected limit: r < 11.9556 @ 95%CL (1 toyMC)
   68% expected band : 11.9556 < r < 11.9556
   95% expected band : 11.9556 < r < 11.9556
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2021880340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.07594 +/- 0.013126 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.07594 @ 95%CL (1 toyMC)
median expected limit: r < 7.07594 @ 95%CL (1 toyMC)
   68% expected band : 7.07594 < r < 7.07594
   95% expected band : 7.07594 < r < 7.07594
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2099640230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.10106 +/- 0.0159654 @ 95% CL (100 tries)
Done in 0.21 min (cpu), 0.21 min (real)
mean   expected limit: r < 7.10106 @ 95%CL (1 toyMC)
median expected limit: r < 7.10106 @ 95%CL (1 toyMC)
   68% expected band : 7.10106 < r < 7.10106
   95% expected band : 7.10106 < r < 7.10106
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1209176440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.75436 +/- 0.0178896 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.75436 @ 95%CL (1 toyMC)
median expected limit: r < 9.75436 @ 95%CL (1 toyMC)
   68% expected band : 9.75436 < r < 9.75436
   95% expected band : 9.75436 < r < 9.75436
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2072882800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87561 +/- 0.0149444 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.87561 @ 95%CL (1 toyMC)
median expected limit: r < 9.87561 @ 95%CL (1 toyMC)
   68% expected band : 9.87561 < r < 9.87561
   95% expected band : 9.87561 < r < 9.87561
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1099631529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.26323 +/- 0.0160772 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 8.26323 @ 95%CL (1 toyMC)
median expected limit: r < 8.26323 @ 95%CL (1 toyMC)
   68% expected band : 8.26323 < r < 8.26323
   95% expected band : 8.26323 < r < 8.26323
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1585296466
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5088 +/- 0.00542975 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5088 @ 95%CL (1 toyMC)
median expected limit: r < 18.5088 @ 95%CL (1 toyMC)
   68% expected band : 18.5088 < r < 18.5088
   95% expected band : 18.5088 < r < 18.5088
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 580009425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.4475 +/- 0.0173838 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.4475 @ 95%CL (1 toyMC)
median expected limit: r < 8.4475 @ 95%CL (1 toyMC)
   68% expected band : 8.4475 < r < 8.4475
   95% expected band : 8.4475 < r < 8.4475
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1201566570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5612 +/- 0.016521 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.5612 @ 95%CL (1 toyMC)
median expected limit: r < 10.5612 @ 95%CL (1 toyMC)
   68% expected band : 10.5612 < r < 10.5612
   95% expected band : 10.5612 < r < 10.5612
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1761368420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2661 +/- 0.0137797 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.2661 @ 95%CL (1 toyMC)
median expected limit: r < 15.2661 @ 95%CL (1 toyMC)
   68% expected band : 15.2661 < r < 15.2661
   95% expected band : 15.2661 < r < 15.2661
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 697287403
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5463 +/- 0.0151469 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.5463 @ 95%CL (1 toyMC)
median expected limit: r < 14.5463 @ 95%CL (1 toyMC)
   68% expected band : 14.5463 < r < 14.5463
   95% expected band : 14.5463 < r < 14.5463
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1907460646
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0721 +/- 0.0156554 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.0721 @ 95%CL (1 toyMC)
median expected limit: r < 11.0721 @ 95%CL (1 toyMC)
   68% expected band : 11.0721 < r < 11.0721
   95% expected band : 11.0721 < r < 11.0721
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1677755801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1851 +/- 0.0225407 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.1851 @ 95%CL (1 toyMC)
median expected limit: r < 11.1851 @ 95%CL (1 toyMC)
   68% expected band : 11.1851 < r < 11.1851
   95% expected band : 11.1851 < r < 11.1851
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1336584339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7656 +/- 0.0165913 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.7656 @ 95%CL (1 toyMC)
median expected limit: r < 12.7656 @ 95%CL (1 toyMC)
   68% expected band : 12.7656 < r < 12.7656
   95% expected band : 12.7656 < r < 12.7656
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1642411001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.91067 +/- 0.0147291 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.91067 @ 95%CL (1 toyMC)
median expected limit: r < 9.91067 @ 95%CL (1 toyMC)
   68% expected band : 9.91067 < r < 9.91067
   95% expected band : 9.91067 < r < 9.91067
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -675865159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6636 +/- 0.0168516 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.6636 @ 95%CL (1 toyMC)
median expected limit: r < 12.6636 @ 95%CL (1 toyMC)
   68% expected band : 12.6636 < r < 12.6636
   95% expected band : 12.6636 < r < 12.6636
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 255505477
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.62315 +/- 0.0198884 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.62315 @ 95%CL (1 toyMC)
median expected limit: r < 9.62315 @ 95%CL (1 toyMC)
   68% expected band : 9.62315 < r < 9.62315
   95% expected band : 9.62315 < r < 9.62315
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 245362603
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0892 +/- 0.00619585 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.0892 @ 95%CL (1 toyMC)
median expected limit: r < 18.0892 @ 95%CL (1 toyMC)
   68% expected band : 18.0892 < r < 18.0892
   95% expected band : 18.0892 < r < 18.0892
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -806874380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7723 +/- 0.0123998 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.7723 @ 95%CL (1 toyMC)
median expected limit: r < 13.7723 @ 95%CL (1 toyMC)
   68% expected band : 13.7723 < r < 13.7723
   95% expected band : 13.7723 < r < 13.7723
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1531452443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9987 +/- 0.0110496 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.9987 @ 95%CL (1 toyMC)
median expected limit: r < 13.9987 @ 95%CL (1 toyMC)
   68% expected band : 13.9987 < r < 13.9987
   95% expected band : 13.9987 < r < 13.9987
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2071465270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1081 +/- 0.006543 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.1081 @ 95%CL (1 toyMC)
median expected limit: r < 18.1081 @ 95%CL (1 toyMC)
   68% expected band : 18.1081 < r < 18.1081
   95% expected band : 18.1081 < r < 18.1081
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 94598561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.92784 +/- 0.0129934 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.92784 @ 95%CL (1 toyMC)
median expected limit: r < 8.92784 @ 95%CL (1 toyMC)
   68% expected band : 8.92784 < r < 8.92784
   95% expected band : 8.92784 < r < 8.92784
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1259490440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.141 +/- 0.0136663 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.141 @ 95%CL (1 toyMC)
median expected limit: r < 10.141 @ 95%CL (1 toyMC)
   68% expected band : 10.141 < r < 10.141
   95% expected band : 10.141 < r < 10.141
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1213922963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.17033 +/- 0.0153165 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.17033 @ 95%CL (1 toyMC)
median expected limit: r < 9.17033 @ 95%CL (1 toyMC)
   68% expected band : 9.17033 < r < 9.17033
   95% expected band : 9.17033 < r < 9.17033
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -990138901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4848 +/- 0.0197781 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.4848 @ 95%CL (1 toyMC)
median expected limit: r < 10.4848 @ 95%CL (1 toyMC)
   68% expected band : 10.4848 < r < 10.4848
   95% expected band : 10.4848 < r < 10.4848
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 280379580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6107 +/- 0.0128282 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 15.6107 @ 95%CL (1 toyMC)
median expected limit: r < 15.6107 @ 95%CL (1 toyMC)
   68% expected band : 15.6107 < r < 15.6107
   95% expected band : 15.6107 < r < 15.6107
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2132370542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.79343 +/- 0.0142049 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 9.79343 @ 95%CL (1 toyMC)
median expected limit: r < 9.79343 @ 95%CL (1 toyMC)
   68% expected band : 9.79343 < r < 9.79343
   95% expected band : 9.79343 < r < 9.79343
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1907202352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.83075 +/- 0.0148677 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.83075 @ 95%CL (1 toyMC)
median expected limit: r < 9.83075 @ 95%CL (1 toyMC)
   68% expected band : 9.83075 < r < 9.83075
   95% expected band : 9.83075 < r < 9.83075
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 91196173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9512 +/- 0.0172086 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.9512 @ 95%CL (1 toyMC)
median expected limit: r < 10.9512 @ 95%CL (1 toyMC)
   68% expected band : 10.9512 < r < 10.9512
   95% expected band : 10.9512 < r < 10.9512
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -166949167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.61255 +/- 0.0156132 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.61255 @ 95%CL (1 toyMC)
median expected limit: r < 9.61255 @ 95%CL (1 toyMC)
   68% expected band : 9.61255 < r < 9.61255
   95% expected band : 9.61255 < r < 9.61255
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 596137910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6431 +/- 0.0164357 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.6431 @ 95%CL (1 toyMC)
median expected limit: r < 12.6431 @ 95%CL (1 toyMC)
   68% expected band : 12.6431 < r < 12.6431
   95% expected band : 12.6431 < r < 12.6431
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -934315267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8459 +/- 0.0151653 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.8459 @ 95%CL (1 toyMC)
median expected limit: r < 10.8459 @ 95%CL (1 toyMC)
   68% expected band : 10.8459 < r < 10.8459
   95% expected band : 10.8459 < r < 10.8459
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1686650613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.79 +/- 0.0195971 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.79 @ 95%CL (1 toyMC)
median expected limit: r < 9.79 @ 95%CL (1 toyMC)
   68% expected band : 9.79 < r < 9.79
   95% expected band : 9.79 < r < 9.79
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -313648514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2573 +/- 0.017758 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.2573 @ 95%CL (1 toyMC)
median expected limit: r < 11.2573 @ 95%CL (1 toyMC)
   68% expected band : 11.2573 < r < 11.2573
   95% expected band : 11.2573 < r < 11.2573
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1941804052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4229 +/- 0.00730511 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4229 @ 95%CL (1 toyMC)
median expected limit: r < 17.4229 @ 95%CL (1 toyMC)
   68% expected band : 17.4229 < r < 17.4229
   95% expected band : 17.4229 < r < 17.4229
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 697580330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.59406 +/- 0.012942 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.23 min (real)
mean   expected limit: r < 7.59406 @ 95%CL (1 toyMC)
median expected limit: r < 7.59406 @ 95%CL (1 toyMC)
   68% expected band : 7.59406 < r < 7.59406
   95% expected band : 7.59406 < r < 7.59406
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1131466173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.6321 +/- 0.0157179 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.6321 @ 95%CL (1 toyMC)
median expected limit: r < 12.6321 @ 95%CL (1 toyMC)
   68% expected band : 12.6321 < r < 12.6321
   95% expected band : 12.6321 < r < 12.6321
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -24037281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2074 +/- 0.0174746 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.2074 @ 95%CL (1 toyMC)
median expected limit: r < 10.2074 @ 95%CL (1 toyMC)
   68% expected band : 10.2074 < r < 10.2074
   95% expected band : 10.2074 < r < 10.2074
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 116063359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7102 +/- 0.00643794 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.7102 @ 95%CL (1 toyMC)
median expected limit: r < 17.7102 @ 95%CL (1 toyMC)
   68% expected band : 17.7102 < r < 17.7102
   95% expected band : 17.7102 < r < 17.7102
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2114396692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4274 +/- 0.0104469 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.4274 @ 95%CL (1 toyMC)
median expected limit: r < 14.4274 @ 95%CL (1 toyMC)
   68% expected band : 14.4274 < r < 14.4274
   95% expected band : 14.4274 < r < 14.4274
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1678526469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2969 +/- 0.0108845 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.2969 @ 95%CL (1 toyMC)
median expected limit: r < 16.2969 @ 95%CL (1 toyMC)
   68% expected band : 16.2969 < r < 16.2969
   95% expected band : 16.2969 < r < 16.2969
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2027664257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.212 +/- 0.0169051 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.212 @ 95%CL (1 toyMC)
median expected limit: r < 10.212 @ 95%CL (1 toyMC)
   68% expected band : 10.212 < r < 10.212
   95% expected band : 10.212 < r < 10.212
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1634592860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1545 +/- 0.0167443 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.1545 @ 95%CL (1 toyMC)
median expected limit: r < 12.1545 @ 95%CL (1 toyMC)
   68% expected band : 12.1545 < r < 12.1545
   95% expected band : 12.1545 < r < 12.1545
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1814474992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0482 +/- 0.0149943 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.0482 @ 95%CL (1 toyMC)
median expected limit: r < 13.0482 @ 95%CL (1 toyMC)
   68% expected band : 13.0482 < r < 13.0482
   95% expected band : 13.0482 < r < 13.0482
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -909772506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7504 +/- 0.0181078 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.7504 @ 95%CL (1 toyMC)
median expected limit: r < 11.7504 @ 95%CL (1 toyMC)
   68% expected band : 11.7504 < r < 11.7504
   95% expected band : 11.7504 < r < 11.7504
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -857041721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.828 +/- 0.017126 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 11.828 @ 95%CL (1 toyMC)
median expected limit: r < 11.828 @ 95%CL (1 toyMC)
   68% expected band : 11.828 < r < 11.828
   95% expected band : 11.828 < r < 11.828
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 121286835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.67633 +/- 0.0174594 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.67633 @ 95%CL (1 toyMC)
median expected limit: r < 9.67633 @ 95%CL (1 toyMC)
   68% expected band : 9.67633 < r < 9.67633
   95% expected band : 9.67633 < r < 9.67633
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1934410147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2398 +/- 0.0143632 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.2398 @ 95%CL (1 toyMC)
median expected limit: r < 11.2398 @ 95%CL (1 toyMC)
   68% expected band : 11.2398 < r < 11.2398
   95% expected band : 11.2398 < r < 11.2398
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -320047156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3916 +/- 0.0103968 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.3916 @ 95%CL (1 toyMC)
median expected limit: r < 16.3916 @ 95%CL (1 toyMC)
   68% expected band : 16.3916 < r < 16.3916
   95% expected band : 16.3916 < r < 16.3916
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 440571369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5571 +/- 0.0120544 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.5571 @ 95%CL (1 toyMC)
median expected limit: r < 14.5571 @ 95%CL (1 toyMC)
   68% expected band : 14.5571 < r < 14.5571
   95% expected band : 14.5571 < r < 14.5571
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 623665748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.65414 +/- 0.0135106 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 6.65414 @ 95%CL (1 toyMC)
median expected limit: r < 6.65414 @ 95%CL (1 toyMC)
   68% expected band : 6.65414 < r < 6.65414
   95% expected band : 6.65414 < r < 6.65414
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -889968322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5212 +/- 0.0130677 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.5212 @ 95%CL (1 toyMC)
median expected limit: r < 14.5212 @ 95%CL (1 toyMC)
   68% expected band : 14.5212 < r < 14.5212
   95% expected band : 14.5212 < r < 14.5212
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -486372964
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.27897 +/- 0.0129458 @ 95% CL (100 tries)
Done in 0.20 min (cpu), 0.21 min (real)
mean   expected limit: r < 6.27897 @ 95%CL (1 toyMC)
median expected limit: r < 6.27897 @ 95%CL (1 toyMC)
   68% expected band : 6.27897 < r < 6.27897
   95% expected band : 6.27897 < r < 6.27897
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1116081956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7767 +/- 0.013317 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.7767 @ 95%CL (1 toyMC)
median expected limit: r < 10.7767 @ 95%CL (1 toyMC)
   68% expected band : 10.7767 < r < 10.7767
   95% expected band : 10.7767 < r < 10.7767
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1642295050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0528 +/- 0.00973779 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.0528 @ 95%CL (1 toyMC)
median expected limit: r < 17.0528 @ 95%CL (1 toyMC)
   68% expected band : 17.0528 < r < 17.0528
   95% expected band : 17.0528 < r < 17.0528
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1192610359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.94969 +/- 0.0147366 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 7.94969 @ 95%CL (1 toyMC)
median expected limit: r < 7.94969 @ 95%CL (1 toyMC)
   68% expected band : 7.94969 < r < 7.94969
   95% expected band : 7.94969 < r < 7.94969
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1031078003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.06143 +/- 0.0153784 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.06143 @ 95%CL (1 toyMC)
median expected limit: r < 9.06143 @ 95%CL (1 toyMC)
   68% expected band : 9.06143 < r < 9.06143
   95% expected band : 9.06143 < r < 9.06143
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -150342711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7796 +/- 0.0168733 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.7796 @ 95%CL (1 toyMC)
median expected limit: r < 10.7796 @ 95%CL (1 toyMC)
   68% expected band : 10.7796 < r < 10.7796
   95% expected band : 10.7796 < r < 10.7796
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -795569204
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8601 +/- 0.0156453 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.8601 @ 95%CL (1 toyMC)
median expected limit: r < 10.8601 @ 95%CL (1 toyMC)
   68% expected band : 10.8601 < r < 10.8601
   95% expected band : 10.8601 < r < 10.8601
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1738177227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6353 +/- 0.0156461 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.6353 @ 95%CL (1 toyMC)
median expected limit: r < 11.6353 @ 95%CL (1 toyMC)
   68% expected band : 11.6353 < r < 11.6353
   95% expected band : 11.6353 < r < 11.6353
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 604017567
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8733 +/- 0.0135454 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.8733 @ 95%CL (1 toyMC)
median expected limit: r < 14.8733 @ 95%CL (1 toyMC)
   68% expected band : 14.8733 < r < 14.8733
   95% expected band : 14.8733 < r < 14.8733
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 123673167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2469 +/- 0.0155587 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.2469 @ 95%CL (1 toyMC)
median expected limit: r < 12.2469 @ 95%CL (1 toyMC)
   68% expected band : 12.2469 < r < 12.2469
   95% expected band : 12.2469 < r < 12.2469
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 155107277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4109 +/- 0.0091373 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.4109 @ 95%CL (1 toyMC)
median expected limit: r < 16.4109 @ 95%CL (1 toyMC)
   68% expected band : 16.4109 < r < 16.4109
   95% expected band : 16.4109 < r < 16.4109
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2052296029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.24852 +/- 0.017313 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.24852 @ 95%CL (1 toyMC)
median expected limit: r < 9.24852 @ 95%CL (1 toyMC)
   68% expected band : 9.24852 < r < 9.24852
   95% expected band : 9.24852 < r < 9.24852
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -99130641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5792 +/- 0.0146975 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.5792 @ 95%CL (1 toyMC)
median expected limit: r < 14.5792 @ 95%CL (1 toyMC)
   68% expected band : 14.5792 < r < 14.5792
   95% expected band : 14.5792 < r < 14.5792
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 227276644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9626 +/- 0.0110085 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.9626 @ 95%CL (1 toyMC)
median expected limit: r < 14.9626 @ 95%CL (1 toyMC)
   68% expected band : 14.9626 < r < 14.9626
   95% expected band : 14.9626 < r < 14.9626
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1362670031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1452 +/- 0.0122762 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.1452 @ 95%CL (1 toyMC)
median expected limit: r < 16.1452 @ 95%CL (1 toyMC)
   68% expected band : 16.1452 < r < 16.1452
   95% expected band : 16.1452 < r < 16.1452
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1572793569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.50398 +/- 0.0179308 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.50398 @ 95%CL (1 toyMC)
median expected limit: r < 9.50398 @ 95%CL (1 toyMC)
   68% expected band : 9.50398 < r < 9.50398
   95% expected band : 9.50398 < r < 9.50398
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -121815476
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.294 +/- 0.0188391 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.294 @ 95%CL (1 toyMC)
median expected limit: r < 10.294 @ 95%CL (1 toyMC)
   68% expected band : 10.294 < r < 10.294
   95% expected band : 10.294 < r < 10.294
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 319640051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.04929 +/- 0.0199138 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.04929 @ 95%CL (1 toyMC)
median expected limit: r < 9.04929 @ 95%CL (1 toyMC)
   68% expected band : 9.04929 < r < 9.04929
   95% expected band : 9.04929 < r < 9.04929
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1871881300
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.9477 +/- 0.0182836 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.9477 @ 95%CL (1 toyMC)
median expected limit: r < 10.9477 @ 95%CL (1 toyMC)
   68% expected band : 10.9477 < r < 10.9477
   95% expected band : 10.9477 < r < 10.9477
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1827658753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.48798 +/- 0.0142703 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 7.48798 @ 95%CL (1 toyMC)
median expected limit: r < 7.48798 @ 95%CL (1 toyMC)
   68% expected band : 7.48798 < r < 7.48798
   95% expected band : 7.48798 < r < 7.48798
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 611305292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.6829 +/- 0.015551 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.6829 @ 95%CL (1 toyMC)
median expected limit: r < 9.6829 @ 95%CL (1 toyMC)
   68% expected band : 9.6829 < r < 9.6829
   95% expected band : 9.6829 < r < 9.6829
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1013319608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5414 +/- 0.0121277 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.5414 @ 95%CL (1 toyMC)
median expected limit: r < 15.5414 @ 95%CL (1 toyMC)
   68% expected band : 15.5414 < r < 15.5414
   95% expected band : 15.5414 < r < 15.5414
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2006233648
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.92506 +/- 0.0178896 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.92506 @ 95%CL (1 toyMC)
median expected limit: r < 9.92506 @ 95%CL (1 toyMC)
   68% expected band : 9.92506 < r < 9.92506
   95% expected band : 9.92506 < r < 9.92506
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -470767341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0022 +/- 0.0144299 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.0022 @ 95%CL (1 toyMC)
median expected limit: r < 13.0022 @ 95%CL (1 toyMC)
   68% expected band : 13.0022 < r < 13.0022
   95% expected band : 13.0022 < r < 13.0022
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 988235267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6254 +/- 0.00658485 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.6254 @ 95%CL (1 toyMC)
median expected limit: r < 17.6254 @ 95%CL (1 toyMC)
   68% expected band : 17.6254 < r < 17.6254
   95% expected band : 17.6254 < r < 17.6254
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1424865111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9988 +/- 0.00966228 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.9988 @ 95%CL (1 toyMC)
median expected limit: r < 16.9988 @ 95%CL (1 toyMC)
   68% expected band : 16.9988 < r < 16.9988
   95% expected band : 16.9988 < r < 16.9988
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -96771863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9947 +/- 0.015111 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.9947 @ 95%CL (1 toyMC)
median expected limit: r < 11.9947 @ 95%CL (1 toyMC)
   68% expected band : 11.9947 < r < 11.9947
   95% expected band : 11.9947 < r < 11.9947
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1040785060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87312 +/- 0.0182889 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.87312 @ 95%CL (1 toyMC)
median expected limit: r < 9.87312 @ 95%CL (1 toyMC)
   68% expected band : 9.87312 < r < 9.87312
   95% expected band : 9.87312 < r < 9.87312
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1638658443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8036 +/- 0.00877523 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.8036 @ 95%CL (1 toyMC)
median expected limit: r < 16.8036 @ 95%CL (1 toyMC)
   68% expected band : 16.8036 < r < 16.8036
   95% expected band : 16.8036 < r < 16.8036
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1090336194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0928 +/- 0.015634 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.0928 @ 95%CL (1 toyMC)
median expected limit: r < 14.0928 @ 95%CL (1 toyMC)
   68% expected band : 14.0928 < r < 14.0928
   95% expected band : 14.0928 < r < 14.0928
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -488589505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.93505 +/- 0.0155542 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.93505 @ 95%CL (1 toyMC)
median expected limit: r < 9.93505 @ 95%CL (1 toyMC)
   68% expected band : 9.93505 < r < 9.93505
   95% expected band : 9.93505 < r < 9.93505
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -818865164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4634 +/- 0.0132494 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.4634 @ 95%CL (1 toyMC)
median expected limit: r < 12.4634 @ 95%CL (1 toyMC)
   68% expected band : 12.4634 < r < 12.4634
   95% expected band : 12.4634 < r < 12.4634
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 571989734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7342 +/- 0.0173644 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.7342 @ 95%CL (1 toyMC)
median expected limit: r < 14.7342 @ 95%CL (1 toyMC)
   68% expected band : 14.7342 < r < 14.7342
   95% expected band : 14.7342 < r < 14.7342
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -81259058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1625 +/- 0.0122744 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.1625 @ 95%CL (1 toyMC)
median expected limit: r < 15.1625 @ 95%CL (1 toyMC)
   68% expected band : 15.1625 < r < 15.1625
   95% expected band : 15.1625 < r < 15.1625
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 445514332
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7766 +/- 0.0164833 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.7766 @ 95%CL (1 toyMC)
median expected limit: r < 11.7766 @ 95%CL (1 toyMC)
   68% expected band : 11.7766 < r < 11.7766
   95% expected band : 11.7766 < r < 11.7766
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1041726464
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.96124 +/- 0.0186417 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.96124 @ 95%CL (1 toyMC)
median expected limit: r < 8.96124 @ 95%CL (1 toyMC)
   68% expected band : 8.96124 < r < 8.96124
   95% expected band : 8.96124 < r < 8.96124
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1217736857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.82616 +/- 0.0149592 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.82616 @ 95%CL (1 toyMC)
median expected limit: r < 9.82616 @ 95%CL (1 toyMC)
   68% expected band : 9.82616 < r < 9.82616
   95% expected band : 9.82616 < r < 9.82616
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -165003345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.21594 +/- 0.0169745 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.21594 @ 95%CL (1 toyMC)
median expected limit: r < 9.21594 @ 95%CL (1 toyMC)
   68% expected band : 9.21594 < r < 9.21594
   95% expected band : 9.21594 < r < 9.21594
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 689449554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8399 +/- 0.0159125 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.8399 @ 95%CL (1 toyMC)
median expected limit: r < 13.8399 @ 95%CL (1 toyMC)
   68% expected band : 13.8399 < r < 13.8399
   95% expected band : 13.8399 < r < 13.8399
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 853533667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1913 +/- 0.00998138 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.1913 @ 95%CL (1 toyMC)
median expected limit: r < 15.1913 @ 95%CL (1 toyMC)
   68% expected band : 15.1913 < r < 15.1913
   95% expected band : 15.1913 < r < 15.1913
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1447716953
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6903 +/- 0.00559772 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.6903 @ 95%CL (1 toyMC)
median expected limit: r < 17.6903 @ 95%CL (1 toyMC)
   68% expected band : 17.6903 < r < 17.6903
   95% expected band : 17.6903 < r < 17.6903
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1015454383.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1090336194.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1131466173.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1213922963.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-121815476.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1362670031.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1424865111.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1447716953.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-150342711.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1585296466.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1642295050.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-165003345.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-166949167.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1814474992.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1907202352.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1907460646.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1941804052.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-2027664257.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-2099640230.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-2132370542.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-24037281.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-313648514.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-320047156.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-394998786.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-470767341.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-486372964.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-488589505.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-675865159.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-780228674.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-795569204.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-806874380.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-81259058.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-818865164.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-857041721.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-889968322.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-909772506.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-934315267.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-96771863.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-990138901.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-99130641.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.1013319608.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.1031078003.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.1040785060.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.1041726464.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.1099631529.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.1116081956.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.116063359.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1192610359.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1201566570.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1209176440.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.121286835.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1217736857.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.123673167.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1259490440.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1336584339.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1531452443.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1545072344.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.155107277.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1572793569.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1634592860.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1638658443.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1642411001.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1677755801.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1678526469.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1686650613.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1738177227.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1761368420.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1827658753.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1871881300.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1934410147.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1995583718.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.2006233648.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.2021880340.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2052296029.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2071465270.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2072882800.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2114396692.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.227276644.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.245362603.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.255505477.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.280379580.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.298369548.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.319640051.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.420111281.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.440571369.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.445514332.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.571989734.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.580009425.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.596137910.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.604017567.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.611305292.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.623665748.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.663904138.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.689449554.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.697287403.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.697580330.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.853533667.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.91196173.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.94598561.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.988235267.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1959391047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0561 +/- 0.0197931 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 10.0561 @ 95%CL (1 toyMC)
median expected limit: r < 10.0561 @ 95%CL (1 toyMC)
   68% expected band : 10.0561 < r < 10.0561
   95% expected band : 10.0561 < r < 10.0561
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2102556070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.19696 +/- 0.0192326 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.19696 @ 95%CL (1 toyMC)
median expected limit: r < 9.19696 @ 95%CL (1 toyMC)
   68% expected band : 9.19696 < r < 9.19696
   95% expected band : 9.19696 < r < 9.19696
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2141771992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7702 +/- 0.0140208 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.7702 @ 95%CL (1 toyMC)
median expected limit: r < 15.7702 @ 95%CL (1 toyMC)
   68% expected band : 15.7702 < r < 15.7702
   95% expected band : 15.7702 < r < 15.7702
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 113900123
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2998 +/- 0.014895 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2998 @ 95%CL (1 toyMC)
median expected limit: r < 14.2998 @ 95%CL (1 toyMC)
   68% expected band : 14.2998 < r < 14.2998
   95% expected band : 14.2998 < r < 14.2998
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -425269095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3625 +/- 0.0182996 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.3625 @ 95%CL (1 toyMC)
median expected limit: r < 13.3625 @ 95%CL (1 toyMC)
   68% expected band : 13.3625 < r < 13.3625
   95% expected band : 13.3625 < r < 13.3625
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1397621671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0396 +/- 0.0133709 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.0396 @ 95%CL (1 toyMC)
median expected limit: r < 14.0396 @ 95%CL (1 toyMC)
   68% expected band : 14.0396 < r < 14.0396
   95% expected band : 14.0396 < r < 14.0396
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1379543798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8052 +/- 0.0110843 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.8052 @ 95%CL (1 toyMC)
median expected limit: r < 15.8052 @ 95%CL (1 toyMC)
   68% expected band : 15.8052 < r < 15.8052
   95% expected band : 15.8052 < r < 15.8052
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 771959506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1093 +/- 0.0199735 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.1093 @ 95%CL (1 toyMC)
median expected limit: r < 13.1093 @ 95%CL (1 toyMC)
   68% expected band : 13.1093 < r < 13.1093
   95% expected band : 13.1093 < r < 13.1093
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 225879293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1776 +/- 0.00323573 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.1776 @ 95%CL (1 toyMC)
median expected limit: r < 19.1776 @ 95%CL (1 toyMC)
   68% expected band : 19.1776 < r < 19.1776
   95% expected band : 19.1776 < r < 19.1776
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -494400448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.899 +/- 0.0121212 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.899 @ 95%CL (1 toyMC)
median expected limit: r < 15.899 @ 95%CL (1 toyMC)
   68% expected band : 15.899 < r < 15.899
   95% expected band : 15.899 < r < 15.899
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -836999141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.865 +/- 0.00761806 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.865 @ 95%CL (1 toyMC)
median expected limit: r < 17.865 @ 95%CL (1 toyMC)
   68% expected band : 17.865 < r < 17.865
   95% expected band : 17.865 < r < 17.865
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 927592451
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.615 +/- 0.0191838 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.615 @ 95%CL (1 toyMC)
median expected limit: r < 13.615 @ 95%CL (1 toyMC)
   68% expected band : 13.615 < r < 13.615
   95% expected band : 13.615 < r < 13.615
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367529349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7018 +/- 0.0178555 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.7018 @ 95%CL (1 toyMC)
median expected limit: r < 11.7018 @ 95%CL (1 toyMC)
   68% expected band : 11.7018 < r < 11.7018
   95% expected band : 11.7018 < r < 11.7018
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1242240414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5433 +/- 0.0171961 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.5433 @ 95%CL (1 toyMC)
median expected limit: r < 13.5433 @ 95%CL (1 toyMC)
   68% expected band : 13.5433 < r < 13.5433
   95% expected band : 13.5433 < r < 13.5433
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1684978110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.97907 +/- 0.0168068 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.97907 @ 95%CL (1 toyMC)
median expected limit: r < 9.97907 @ 95%CL (1 toyMC)
   68% expected band : 9.97907 < r < 9.97907
   95% expected band : 9.97907 < r < 9.97907
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1730187388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7329 +/- 0.0152955 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.7329 @ 95%CL (1 toyMC)
median expected limit: r < 14.7329 @ 95%CL (1 toyMC)
   68% expected band : 14.7329 < r < 14.7329
   95% expected band : 14.7329 < r < 14.7329
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -126682269
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6157 +/- 0.0196706 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.6157 @ 95%CL (1 toyMC)
median expected limit: r < 11.6157 @ 95%CL (1 toyMC)
   68% expected band : 11.6157 < r < 11.6157
   95% expected band : 11.6157 < r < 11.6157
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1900512120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2501 +/- 0.0147007 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.2501 @ 95%CL (1 toyMC)
median expected limit: r < 14.2501 @ 95%CL (1 toyMC)
   68% expected band : 14.2501 < r < 14.2501
   95% expected band : 14.2501 < r < 14.2501
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1389704683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1917 +/- 0.0128398 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1917 @ 95%CL (1 toyMC)
median expected limit: r < 16.1917 @ 95%CL (1 toyMC)
   68% expected band : 16.1917 < r < 16.1917
   95% expected band : 16.1917 < r < 16.1917
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 661883710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1025 +/- 0.0117835 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.1025 @ 95%CL (1 toyMC)
median expected limit: r < 15.1025 @ 95%CL (1 toyMC)
   68% expected band : 15.1025 < r < 15.1025
   95% expected band : 15.1025 < r < 15.1025
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -713835111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.533 +/- 0.0197318 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.533 @ 95%CL (1 toyMC)
median expected limit: r < 13.533 @ 95%CL (1 toyMC)
   68% expected band : 13.533 < r < 13.533
   95% expected band : 13.533 < r < 13.533
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 227208167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.237 +/- 0.0158486 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.237 @ 95%CL (1 toyMC)
median expected limit: r < 13.237 @ 95%CL (1 toyMC)
   68% expected band : 13.237 < r < 13.237
   95% expected band : 13.237 < r < 13.237
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1689455925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3528 +/- 0.0171461 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.3528 @ 95%CL (1 toyMC)
median expected limit: r < 10.3528 @ 95%CL (1 toyMC)
   68% expected band : 10.3528 < r < 10.3528
   95% expected band : 10.3528 < r < 10.3528
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 190121105
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0095 +/- 0.0141109 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0095 @ 95%CL (1 toyMC)
median expected limit: r < 15.0095 @ 95%CL (1 toyMC)
   68% expected band : 15.0095 < r < 15.0095
   95% expected band : 15.0095 < r < 15.0095
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1572472243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7144 +/- 0.0076029 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.7144 @ 95%CL (1 toyMC)
median expected limit: r < 16.7144 @ 95%CL (1 toyMC)
   68% expected band : 16.7144 < r < 16.7144
   95% expected band : 16.7144 < r < 16.7144
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1588339732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5534 +/- 0.00773261 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.5534 @ 95%CL (1 toyMC)
median expected limit: r < 17.5534 @ 95%CL (1 toyMC)
   68% expected band : 17.5534 < r < 17.5534
   95% expected band : 17.5534 < r < 17.5534
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2137689545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1202 +/- 0.0186209 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.1202 @ 95%CL (1 toyMC)
median expected limit: r < 12.1202 @ 95%CL (1 toyMC)
   68% expected band : 12.1202 < r < 12.1202
   95% expected band : 12.1202 < r < 12.1202
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1478335845
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7123 +/- 0.0148772 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.7123 @ 95%CL (1 toyMC)
median expected limit: r < 15.7123 @ 95%CL (1 toyMC)
   68% expected band : 15.7123 < r < 15.7123
   95% expected band : 15.7123 < r < 15.7123
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1024630197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6275 +/- 0.0108712 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.6275 @ 95%CL (1 toyMC)
median expected limit: r < 16.6275 @ 95%CL (1 toyMC)
   68% expected band : 16.6275 < r < 16.6275
   95% expected band : 16.6275 < r < 16.6275
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -570733708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4476 +/- 0.0158038 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.4476 @ 95%CL (1 toyMC)
median expected limit: r < 14.4476 @ 95%CL (1 toyMC)
   68% expected band : 14.4476 < r < 14.4476
   95% expected band : 14.4476 < r < 14.4476
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1560127512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6122 +/- 0.0180362 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.6122 @ 95%CL (1 toyMC)
median expected limit: r < 14.6122 @ 95%CL (1 toyMC)
   68% expected band : 14.6122 < r < 14.6122
   95% expected band : 14.6122 < r < 14.6122
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 936718076
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6915 +/- 0.0167391 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.6915 @ 95%CL (1 toyMC)
median expected limit: r < 14.6915 @ 95%CL (1 toyMC)
   68% expected band : 14.6915 < r < 14.6915
   95% expected band : 14.6915 < r < 14.6915
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1302853908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8505 +/- 0.0104122 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.8505 @ 95%CL (1 toyMC)
median expected limit: r < 16.8505 @ 95%CL (1 toyMC)
   68% expected band : 16.8505 < r < 16.8505
   95% expected band : 16.8505 < r < 16.8505
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1596022854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3302 +/- 0.0171087 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3302 @ 95%CL (1 toyMC)
median expected limit: r < 13.3302 @ 95%CL (1 toyMC)
   68% expected band : 13.3302 < r < 13.3302
   95% expected band : 13.3302 < r < 13.3302
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 814363586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3013 +/- 0.0104421 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.3013 @ 95%CL (1 toyMC)
median expected limit: r < 16.3013 @ 95%CL (1 toyMC)
   68% expected band : 16.3013 < r < 16.3013
   95% expected band : 16.3013 < r < 16.3013
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 365343903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4754 +/- 0.00497944 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4754 @ 95%CL (1 toyMC)
median expected limit: r < 18.4754 @ 95%CL (1 toyMC)
   68% expected band : 18.4754 < r < 18.4754
   95% expected band : 18.4754 < r < 18.4754
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1771732667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.4853 +/- 0.0202839 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.4853 @ 95%CL (1 toyMC)
median expected limit: r < 10.4853 @ 95%CL (1 toyMC)
   68% expected band : 10.4853 < r < 10.4853
   95% expected band : 10.4853 < r < 10.4853
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -440866251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.254 +/- 0.019892 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.254 @ 95%CL (1 toyMC)
median expected limit: r < 11.254 @ 95%CL (1 toyMC)
   68% expected band : 11.254 < r < 11.254
   95% expected band : 11.254 < r < 11.254
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 594013303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8184 +/- 0.0170365 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.8184 @ 95%CL (1 toyMC)
median expected limit: r < 11.8184 @ 95%CL (1 toyMC)
   68% expected band : 11.8184 < r < 11.8184
   95% expected band : 11.8184 < r < 11.8184
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -576407822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1553 +/- 0.0169203 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.1553 @ 95%CL (1 toyMC)
median expected limit: r < 12.1553 @ 95%CL (1 toyMC)
   68% expected band : 12.1553 < r < 12.1553
   95% expected band : 12.1553 < r < 12.1553
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 833892225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.94461 +/- 0.019429 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.94461 @ 95%CL (1 toyMC)
median expected limit: r < 9.94461 @ 95%CL (1 toyMC)
   68% expected band : 9.94461 < r < 9.94461
   95% expected band : 9.94461 < r < 9.94461
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2147179749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7489 +/- 0.0171901 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.7489 @ 95%CL (1 toyMC)
median expected limit: r < 12.7489 @ 95%CL (1 toyMC)
   68% expected band : 12.7489 < r < 12.7489
   95% expected band : 12.7489 < r < 12.7489
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1044186621
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1358 +/- 0.0160622 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.1358 @ 95%CL (1 toyMC)
median expected limit: r < 13.1358 @ 95%CL (1 toyMC)
   68% expected band : 13.1358 < r < 13.1358
   95% expected band : 13.1358 < r < 13.1358
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 520773230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1439 +/- 0.00859641 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.1439 @ 95%CL (1 toyMC)
median expected limit: r < 16.1439 @ 95%CL (1 toyMC)
   68% expected band : 16.1439 < r < 16.1439
   95% expected band : 16.1439 < r < 16.1439
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1305258096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.329 +/- 0.0192358 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.329 @ 95%CL (1 toyMC)
median expected limit: r < 13.329 @ 95%CL (1 toyMC)
   68% expected band : 13.329 < r < 13.329
   95% expected band : 13.329 < r < 13.329
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -987419150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7374 +/- 0.0139885 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.7374 @ 95%CL (1 toyMC)
median expected limit: r < 14.7374 @ 95%CL (1 toyMC)
   68% expected band : 14.7374 < r < 14.7374
   95% expected band : 14.7374 < r < 14.7374
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1727719535
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5024 +/- 0.019433 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.5024 @ 95%CL (1 toyMC)
median expected limit: r < 11.5024 @ 95%CL (1 toyMC)
   68% expected band : 11.5024 < r < 11.5024
   95% expected band : 11.5024 < r < 11.5024
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 227097778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9311 +/- 0.0183408 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.9311 @ 95%CL (1 toyMC)
median expected limit: r < 13.9311 @ 95%CL (1 toyMC)
   68% expected band : 13.9311 < r < 13.9311
   95% expected band : 13.9311 < r < 13.9311
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1415417781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5612 +/- 0.0182016 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.5612 @ 95%CL (1 toyMC)
median expected limit: r < 10.5612 @ 95%CL (1 toyMC)
   68% expected band : 10.5612 < r < 10.5612
   95% expected band : 10.5612 < r < 10.5612
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 866807296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5987 +/- 0.016833 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.5987 @ 95%CL (1 toyMC)
median expected limit: r < 13.5987 @ 95%CL (1 toyMC)
   68% expected band : 13.5987 < r < 13.5987
   95% expected band : 13.5987 < r < 13.5987
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1977737074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8336 +/- 0.0108078 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.8336 @ 95%CL (1 toyMC)
median expected limit: r < 16.8336 @ 95%CL (1 toyMC)
   68% expected band : 16.8336 < r < 16.8336
   95% expected band : 16.8336 < r < 16.8336
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1869925143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.6856 +/- 0.015396 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 13.6856 @ 95%CL (1 toyMC)
median expected limit: r < 13.6856 @ 95%CL (1 toyMC)
   68% expected band : 13.6856 < r < 13.6856
   95% expected band : 13.6856 < r < 13.6856
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1402026785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4003 +/- 0.0157984 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.4003 @ 95%CL (1 toyMC)
median expected limit: r < 12.4003 @ 95%CL (1 toyMC)
   68% expected band : 12.4003 < r < 12.4003
   95% expected band : 12.4003 < r < 12.4003
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 699319967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2747 +/- 0.0130453 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.2747 @ 95%CL (1 toyMC)
median expected limit: r < 16.2747 @ 95%CL (1 toyMC)
   68% expected band : 16.2747 < r < 16.2747
   95% expected band : 16.2747 < r < 16.2747
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 140632904
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5802 +/- 0.0223848 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5802 @ 95%CL (1 toyMC)
median expected limit: r < 11.5802 @ 95%CL (1 toyMC)
   68% expected band : 11.5802 < r < 11.5802
   95% expected band : 11.5802 < r < 11.5802
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 570293666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1573 +/- 0.020874 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1573 @ 95%CL (1 toyMC)
median expected limit: r < 14.1573 @ 95%CL (1 toyMC)
   68% expected band : 14.1573 < r < 14.1573
   95% expected band : 14.1573 < r < 14.1573
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 295665666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1661 +/- 0.0145216 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.1661 @ 95%CL (1 toyMC)
median expected limit: r < 12.1661 @ 95%CL (1 toyMC)
   68% expected band : 12.1661 < r < 12.1661
   95% expected band : 12.1661 < r < 12.1661
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -852226928
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0542 +/- 0.0176804 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 10.0542 @ 95%CL (1 toyMC)
median expected limit: r < 10.0542 @ 95%CL (1 toyMC)
   68% expected band : 10.0542 < r < 10.0542
   95% expected band : 10.0542 < r < 10.0542
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1829625681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7805 +/- 0.0247138 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.7805 @ 95%CL (1 toyMC)
median expected limit: r < 11.7805 @ 95%CL (1 toyMC)
   68% expected band : 11.7805 < r < 11.7805
   95% expected band : 11.7805 < r < 11.7805
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 494341878
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9848 +/- 0.00971757 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9848 @ 95%CL (1 toyMC)
median expected limit: r < 16.9848 @ 95%CL (1 toyMC)
   68% expected band : 16.9848 < r < 16.9848
   95% expected band : 16.9848 < r < 16.9848
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1908110911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1028 +/- 0.0112901 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1028 @ 95%CL (1 toyMC)
median expected limit: r < 16.1028 @ 95%CL (1 toyMC)
   68% expected band : 16.1028 < r < 16.1028
   95% expected band : 16.1028 < r < 16.1028
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1953704958
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.61264 +/- 0.0197646 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.61264 @ 95%CL (1 toyMC)
median expected limit: r < 9.61264 @ 95%CL (1 toyMC)
   68% expected band : 9.61264 < r < 9.61264
   95% expected band : 9.61264 < r < 9.61264
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -994181592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3309 +/- 0.0167357 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.3309 @ 95%CL (1 toyMC)
median expected limit: r < 12.3309 @ 95%CL (1 toyMC)
   68% expected band : 12.3309 < r < 12.3309
   95% expected band : 12.3309 < r < 12.3309
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -638308294
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.5222 +/- 0.0206238 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.5222 @ 95%CL (1 toyMC)
median expected limit: r < 10.5222 @ 95%CL (1 toyMC)
   68% expected band : 10.5222 < r < 10.5222
   95% expected band : 10.5222 < r < 10.5222
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -854277189
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.152 +/- 0.00825123 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.152 @ 95%CL (1 toyMC)
median expected limit: r < 17.152 @ 95%CL (1 toyMC)
   68% expected band : 17.152 < r < 17.152
   95% expected band : 17.152 < r < 17.152
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1195760904
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3486 +/- 0.00728294 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.3486 @ 95%CL (1 toyMC)
median expected limit: r < 17.3486 @ 95%CL (1 toyMC)
   68% expected band : 17.3486 < r < 17.3486
   95% expected band : 17.3486 < r < 17.3486
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1062911410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.47281 +/- 0.0204611 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.47281 @ 95%CL (1 toyMC)
median expected limit: r < 9.47281 @ 95%CL (1 toyMC)
   68% expected band : 9.47281 < r < 9.47281
   95% expected band : 9.47281 < r < 9.47281
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 746153141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4537 +/- 0.0173387 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.4537 @ 95%CL (1 toyMC)
median expected limit: r < 13.4537 @ 95%CL (1 toyMC)
   68% expected band : 13.4537 < r < 13.4537
   95% expected band : 13.4537 < r < 13.4537
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1686909424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0308 +/- 0.0156616 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.0308 @ 95%CL (1 toyMC)
median expected limit: r < 14.0308 @ 95%CL (1 toyMC)
   68% expected band : 14.0308 < r < 14.0308
   95% expected band : 14.0308 < r < 14.0308
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 468106289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7161 +/- 0.0221943 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.7161 @ 95%CL (1 toyMC)
median expected limit: r < 12.7161 @ 95%CL (1 toyMC)
   68% expected band : 12.7161 < r < 12.7161
   95% expected band : 12.7161 < r < 12.7161
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1198150127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3862 +/- 0.0126418 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.3862 @ 95%CL (1 toyMC)
median expected limit: r < 15.3862 @ 95%CL (1 toyMC)
   68% expected band : 15.3862 < r < 15.3862
   95% expected band : 15.3862 < r < 15.3862
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -760660943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.0152 +/- 0.0176605 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.0152 @ 95%CL (1 toyMC)
median expected limit: r < 13.0152 @ 95%CL (1 toyMC)
   68% expected band : 13.0152 < r < 13.0152
   95% expected band : 13.0152 < r < 13.0152
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2095494796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5789 +/- 0.00470373 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5789 @ 95%CL (1 toyMC)
median expected limit: r < 18.5789 @ 95%CL (1 toyMC)
   68% expected band : 18.5789 < r < 18.5789
   95% expected band : 18.5789 < r < 18.5789
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -724916808
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5576 +/- 0.0158878 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.5576 @ 95%CL (1 toyMC)
median expected limit: r < 14.5576 @ 95%CL (1 toyMC)
   68% expected band : 14.5576 < r < 14.5576
   95% expected band : 14.5576 < r < 14.5576
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1186451715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.689 +/- 0.0146581 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.689 @ 95%CL (1 toyMC)
median expected limit: r < 13.689 @ 95%CL (1 toyMC)
   68% expected band : 13.689 < r < 13.689
   95% expected band : 13.689 < r < 13.689
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 20841362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6963 +/- 0.0113875 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.6963 @ 95%CL (1 toyMC)
median expected limit: r < 15.6963 @ 95%CL (1 toyMC)
   68% expected band : 15.6963 < r < 15.6963
   95% expected band : 15.6963 < r < 15.6963
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1826521473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2283 +/- 0.0210444 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 10.2283 @ 95%CL (1 toyMC)
median expected limit: r < 10.2283 @ 95%CL (1 toyMC)
   68% expected band : 10.2283 < r < 10.2283
   95% expected band : 10.2283 < r < 10.2283
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1732314763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6864 +/- 0.0185877 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.6864 @ 95%CL (1 toyMC)
median expected limit: r < 11.6864 @ 95%CL (1 toyMC)
   68% expected band : 11.6864 < r < 11.6864
   95% expected band : 11.6864 < r < 11.6864
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -880748769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5683 +/- 0.00946216 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.5683 @ 95%CL (1 toyMC)
median expected limit: r < 16.5683 @ 95%CL (1 toyMC)
   68% expected band : 16.5683 < r < 16.5683
   95% expected band : 16.5683 < r < 16.5683
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2065633962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9547 +/- 0.0104333 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.9547 @ 95%CL (1 toyMC)
median expected limit: r < 15.9547 @ 95%CL (1 toyMC)
   68% expected band : 15.9547 < r < 15.9547
   95% expected band : 15.9547 < r < 15.9547
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 849636037
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7664 +/- 0.0101751 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.7664 @ 95%CL (1 toyMC)
median expected limit: r < 16.7664 @ 95%CL (1 toyMC)
   68% expected band : 16.7664 < r < 16.7664
   95% expected band : 16.7664 < r < 16.7664
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1810850920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2029 +/- 0.0145464 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.2029 @ 95%CL (1 toyMC)
median expected limit: r < 13.2029 @ 95%CL (1 toyMC)
   68% expected band : 13.2029 < r < 13.2029
   95% expected band : 13.2029 < r < 13.2029
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -921422812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5515 +/- 0.0187469 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.5515 @ 95%CL (1 toyMC)
median expected limit: r < 13.5515 @ 95%CL (1 toyMC)
   68% expected band : 13.5515 < r < 13.5515
   95% expected band : 13.5515 < r < 13.5515
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -102581778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8747 +/- 0.0156889 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.8747 @ 95%CL (1 toyMC)
median expected limit: r < 15.8747 @ 95%CL (1 toyMC)
   68% expected band : 15.8747 < r < 15.8747
   95% expected band : 15.8747 < r < 15.8747
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1308182211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3397 +/- 0.00888339 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.3397 @ 95%CL (1 toyMC)
median expected limit: r < 17.3397 @ 95%CL (1 toyMC)
   68% expected band : 17.3397 < r < 17.3397
   95% expected band : 17.3397 < r < 17.3397
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1710476197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.22217 +/- 0.0203575 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 9.22217 @ 95%CL (1 toyMC)
median expected limit: r < 9.22217 @ 95%CL (1 toyMC)
   68% expected band : 9.22217 < r < 9.22217
   95% expected band : 9.22217 < r < 9.22217
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 922379634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0236 +/- 0.0161008 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.0236 @ 95%CL (1 toyMC)
median expected limit: r < 14.0236 @ 95%CL (1 toyMC)
   68% expected band : 14.0236 < r < 14.0236
   95% expected band : 14.0236 < r < 14.0236
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -258874278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3608 +/- 0.0108351 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.3608 @ 95%CL (1 toyMC)
median expected limit: r < 16.3608 @ 95%CL (1 toyMC)
   68% expected band : 16.3608 < r < 16.3608
   95% expected band : 16.3608 < r < 16.3608
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1698970166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.796 +/- 0.0101344 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.796 @ 95%CL (1 toyMC)
median expected limit: r < 16.796 @ 95%CL (1 toyMC)
   68% expected band : 16.796 < r < 16.796
   95% expected band : 16.796 < r < 16.796
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1804544534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4618 +/- 0.0227654 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.4618 @ 95%CL (1 toyMC)
median expected limit: r < 11.4618 @ 95%CL (1 toyMC)
   68% expected band : 11.4618 < r < 11.4618
   95% expected band : 11.4618 < r < 11.4618
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -670702893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4551 +/- 0.00954985 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4551 @ 95%CL (1 toyMC)
median expected limit: r < 17.4551 @ 95%CL (1 toyMC)
   68% expected band : 17.4551 < r < 17.4551
   95% expected band : 17.4551 < r < 17.4551
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1015364069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.874 +/- 0.0136133 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.874 @ 95%CL (1 toyMC)
median expected limit: r < 13.874 @ 95%CL (1 toyMC)
   68% expected band : 13.874 < r < 13.874
   95% expected band : 13.874 < r < 13.874
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -14434554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3757 +/- 0.016273 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.3757 @ 95%CL (1 toyMC)
median expected limit: r < 14.3757 @ 95%CL (1 toyMC)
   68% expected band : 14.3757 < r < 14.3757
   95% expected band : 14.3757 < r < 14.3757
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1832324690
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9146 +/- 0.0140367 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.9146 @ 95%CL (1 toyMC)
median expected limit: r < 14.9146 @ 95%CL (1 toyMC)
   68% expected band : 14.9146 < r < 14.9146
   95% expected band : 14.9146 < r < 14.9146
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2128024980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3775 +/- 0.0168762 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3775 @ 95%CL (1 toyMC)
median expected limit: r < 13.3775 @ 95%CL (1 toyMC)
   68% expected band : 13.3775 < r < 13.3775
   95% expected band : 13.3775 < r < 13.3775
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1523022835
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7508 +/- 0.0136624 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.7508 @ 95%CL (1 toyMC)
median expected limit: r < 15.7508 @ 95%CL (1 toyMC)
   68% expected band : 15.7508 < r < 15.7508
   95% expected band : 15.7508 < r < 15.7508
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -410740629
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7409 +/- 0.0112318 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.7409 @ 95%CL (1 toyMC)
median expected limit: r < 14.7409 @ 95%CL (1 toyMC)
   68% expected band : 14.7409 < r < 14.7409
   95% expected band : 14.7409 < r < 14.7409
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 328882636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3806 +/- 0.0201642 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.3806 @ 95%CL (1 toyMC)
median expected limit: r < 10.3806 @ 95%CL (1 toyMC)
   68% expected band : 10.3806 < r < 10.3806
   95% expected band : 10.3806 < r < 10.3806
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -254712042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.8174 +/- 0.0146882 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.8174 @ 95%CL (1 toyMC)
median expected limit: r < 10.8174 @ 95%CL (1 toyMC)
   68% expected band : 10.8174 < r < 10.8174
   95% expected band : 10.8174 < r < 10.8174
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -897544903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.125 +/- 0.0149307 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.125 @ 95%CL (1 toyMC)
median expected limit: r < 14.125 @ 95%CL (1 toyMC)
   68% expected band : 14.125 < r < 14.125
   95% expected band : 14.125 < r < 14.125
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1024630197.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-102581778.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1044186621.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1186451715.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1198150127.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-126682269.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1302853908.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1308182211.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1389704683.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-14434554.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1478335845.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1560127512.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1596022854.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1686909424.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1689455925.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1730187388.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1771732667.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1810850920.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1826521473.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1829625681.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1832324690.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1869925143.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2065633962.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-2095494796.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2102556070.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2128024980.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-2141771992.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-254712042.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-258874278.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-410740629.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-425269095.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-440866251.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-494400448.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-570733708.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-576407822.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-638308294.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-670702893.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-713835111.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-724916808.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-760660943.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-836999141.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-852226928.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-854277189.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-880748769.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-897544903.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-921422812.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-987419150.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-994181592.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1015364069.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1062911410.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.113900123.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1195760904.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1242240414.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1305258096.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1367529349.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1379543798.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1397621671.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1402026785.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.140632904.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1415417781.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1523022835.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1572472243.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1588339732.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1684978110.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1698970166.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1710476197.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1727719535.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1732314763.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1804544534.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1900512120.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.190121105.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1908110911.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1953704958.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1959391047.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1977737074.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.20841362.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2137689545.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.2147179749.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.225879293.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.227097778.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.227208167.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.295665666.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.328882636.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.365343903.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.468106289.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.494341878.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.520773230.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.570293666.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.594013303.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.661883710.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.699319967.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.746153141.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.771959506.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.814363586.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.833892225.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.849636037.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.866807296.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.922379634.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.927592451.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.936718076.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 980488748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.122 +/- 0.0178261 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.122 @ 95%CL (1 toyMC)
median expected limit: r < 10.122 @ 95%CL (1 toyMC)
   68% expected band : 10.122 < r < 10.122
   95% expected band : 10.122 < r < 10.122
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -773559053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3293 +/- 0.0155478 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3293 @ 95%CL (1 toyMC)
median expected limit: r < 13.3293 @ 95%CL (1 toyMC)
   68% expected band : 13.3293 < r < 13.3293
   95% expected band : 13.3293 < r < 13.3293
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2053666911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4171 +/- 0.0163974 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.4171 @ 95%CL (1 toyMC)
median expected limit: r < 12.4171 @ 95%CL (1 toyMC)
   68% expected band : 12.4171 < r < 12.4171
   95% expected band : 12.4171 < r < 12.4171
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1423407458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0656 +/- 0.0113659 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.0656 @ 95%CL (1 toyMC)
median expected limit: r < 16.0656 @ 95%CL (1 toyMC)
   68% expected band : 16.0656 < r < 16.0656
   95% expected band : 16.0656 < r < 16.0656
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1129278016
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4546 +/- 0.0129363 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.4546 @ 95%CL (1 toyMC)
median expected limit: r < 13.4546 @ 95%CL (1 toyMC)
   68% expected band : 13.4546 < r < 13.4546
   95% expected band : 13.4546 < r < 13.4546
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1499684811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.491 +/- 0.0184266 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.491 @ 95%CL (1 toyMC)
median expected limit: r < 12.491 @ 95%CL (1 toyMC)
   68% expected band : 12.491 < r < 12.491
   95% expected band : 12.491 < r < 12.491
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1368152557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.118 +/- 0.018286 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.118 @ 95%CL (1 toyMC)
median expected limit: r < 13.118 @ 95%CL (1 toyMC)
   68% expected band : 13.118 < r < 13.118
   95% expected band : 13.118 < r < 13.118
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 94118852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7689 +/- 0.00911508 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.7689 @ 95%CL (1 toyMC)
median expected limit: r < 16.7689 @ 95%CL (1 toyMC)
   68% expected band : 16.7689 < r < 16.7689
   95% expected band : 16.7689 < r < 16.7689
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -103150137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7663 +/- 0.0149797 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.7663 @ 95%CL (1 toyMC)
median expected limit: r < 14.7663 @ 95%CL (1 toyMC)
   68% expected band : 14.7663 < r < 14.7663
   95% expected band : 14.7663 < r < 14.7663
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 501009769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8582 +/- 0.0181385 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.8582 @ 95%CL (1 toyMC)
median expected limit: r < 11.8582 @ 95%CL (1 toyMC)
   68% expected band : 11.8582 < r < 11.8582
   95% expected band : 11.8582 < r < 11.8582
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 752064534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.3607 +/- 0.0195465 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.3607 @ 95%CL (1 toyMC)
median expected limit: r < 10.3607 @ 95%CL (1 toyMC)
   68% expected band : 10.3607 < r < 10.3607
   95% expected band : 10.3607 < r < 10.3607
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1286719351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7994 +/- 0.00893214 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.7994 @ 95%CL (1 toyMC)
median expected limit: r < 16.7994 @ 95%CL (1 toyMC)
   68% expected band : 16.7994 < r < 16.7994
   95% expected band : 16.7994 < r < 16.7994
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1861013640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3873 +/- 0.0102636 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.3873 @ 95%CL (1 toyMC)
median expected limit: r < 15.3873 @ 95%CL (1 toyMC)
   68% expected band : 15.3873 < r < 15.3873
   95% expected band : 15.3873 < r < 15.3873
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1874931099
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1035 +/- 0.0202077 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.1035 @ 95%CL (1 toyMC)
median expected limit: r < 11.1035 @ 95%CL (1 toyMC)
   68% expected band : 11.1035 < r < 11.1035
   95% expected band : 11.1035 < r < 11.1035
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1933197769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2995 +/- 0.0177705 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.2995 @ 95%CL (1 toyMC)
median expected limit: r < 13.2995 @ 95%CL (1 toyMC)
   68% expected band : 13.2995 < r < 13.2995
   95% expected band : 13.2995 < r < 13.2995
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 453938806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6715 +/- 0.0198182 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.6715 @ 95%CL (1 toyMC)
median expected limit: r < 11.6715 @ 95%CL (1 toyMC)
   68% expected band : 11.6715 < r < 11.6715
   95% expected band : 11.6715 < r < 11.6715
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 298783521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7884 +/- 0.0126176 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.7884 @ 95%CL (1 toyMC)
median expected limit: r < 14.7884 @ 95%CL (1 toyMC)
   68% expected band : 14.7884 < r < 14.7884
   95% expected band : 14.7884 < r < 14.7884
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1108881563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2781 +/- 0.00275773 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.2781 @ 95%CL (1 toyMC)
median expected limit: r < 19.2781 @ 95%CL (1 toyMC)
   68% expected band : 19.2781 < r < 19.2781
   95% expected band : 19.2781 < r < 19.2781
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 41936340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6263 +/- 0.00568048 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.6263 @ 95%CL (1 toyMC)
median expected limit: r < 17.6263 @ 95%CL (1 toyMC)
   68% expected band : 17.6263 < r < 17.6263
   95% expected band : 17.6263 < r < 17.6263
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 511110085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4887 +/- 0.00763054 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.4887 @ 95%CL (1 toyMC)
median expected limit: r < 17.4887 @ 95%CL (1 toyMC)
   68% expected band : 17.4887 < r < 17.4887
   95% expected band : 17.4887 < r < 17.4887
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 407637402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9073 +/- 0.0166157 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.9073 @ 95%CL (1 toyMC)
median expected limit: r < 12.9073 @ 95%CL (1 toyMC)
   68% expected band : 12.9073 < r < 12.9073
   95% expected band : 12.9073 < r < 12.9073
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1113819513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2536 +/- 0.00993162 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.2536 @ 95%CL (1 toyMC)
median expected limit: r < 16.2536 @ 95%CL (1 toyMC)
   68% expected band : 16.2536 < r < 16.2536
   95% expected band : 16.2536 < r < 16.2536
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2075510311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.36952 +/- 0.0196677 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.36952 @ 95%CL (1 toyMC)
median expected limit: r < 9.36952 @ 95%CL (1 toyMC)
   68% expected band : 9.36952 < r < 9.36952
   95% expected band : 9.36952 < r < 9.36952
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1943609069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8961 +/- 0.0123961 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.8961 @ 95%CL (1 toyMC)
median expected limit: r < 15.8961 @ 95%CL (1 toyMC)
   68% expected band : 15.8961 < r < 15.8961
   95% expected band : 15.8961 < r < 15.8961
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 524668899
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1076 +/- 0.0176746 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.1076 @ 95%CL (1 toyMC)
median expected limit: r < 11.1076 @ 95%CL (1 toyMC)
   68% expected band : 11.1076 < r < 11.1076
   95% expected band : 11.1076 < r < 11.1076
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -909836891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.637 +/- 0.0139324 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.637 @ 95%CL (1 toyMC)
median expected limit: r < 12.637 @ 95%CL (1 toyMC)
   68% expected band : 12.637 < r < 12.637
   95% expected band : 12.637 < r < 12.637
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 278446568
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0631 +/- 0.0153758 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.0631 @ 95%CL (1 toyMC)
median expected limit: r < 10.0631 @ 95%CL (1 toyMC)
   68% expected band : 10.0631 < r < 10.0631
   95% expected band : 10.0631 < r < 10.0631
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1995313856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1597 +/- 0.0118733 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.1597 @ 95%CL (1 toyMC)
median expected limit: r < 14.1597 @ 95%CL (1 toyMC)
   68% expected band : 14.1597 < r < 14.1597
   95% expected band : 14.1597 < r < 14.1597
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 893484884
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2914 +/- 0.00816572 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.2914 @ 95%CL (1 toyMC)
median expected limit: r < 17.2914 @ 95%CL (1 toyMC)
   68% expected band : 17.2914 < r < 17.2914
   95% expected band : 17.2914 < r < 17.2914
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1629563577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.76275 +/- 0.0200198 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.76275 @ 95%CL (1 toyMC)
median expected limit: r < 9.76275 @ 95%CL (1 toyMC)
   68% expected band : 9.76275 < r < 9.76275
   95% expected band : 9.76275 < r < 9.76275
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 771983811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2396 +/- 0.00672221 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.2396 @ 95%CL (1 toyMC)
median expected limit: r < 17.2396 @ 95%CL (1 toyMC)
   68% expected band : 17.2396 < r < 17.2396
   95% expected band : 17.2396 < r < 17.2396
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1134009392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.767 +/- 0.0203053 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.767 @ 95%CL (1 toyMC)
median expected limit: r < 10.767 @ 95%CL (1 toyMC)
   68% expected band : 10.767 < r < 10.767
   95% expected band : 10.767 < r < 10.767
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1186132001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4609 +/- 0.00809868 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4609 @ 95%CL (1 toyMC)
median expected limit: r < 17.4609 @ 95%CL (1 toyMC)
   68% expected band : 17.4609 < r < 17.4609
   95% expected band : 17.4609 < r < 17.4609
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 634714930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.79463 +/- 0.0189644 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 8.79463 @ 95%CL (1 toyMC)
median expected limit: r < 8.79463 @ 95%CL (1 toyMC)
   68% expected band : 8.79463 < r < 8.79463
   95% expected band : 8.79463 < r < 8.79463
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 598817158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2202 +/- 0.0170052 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.2202 @ 95%CL (1 toyMC)
median expected limit: r < 11.2202 @ 95%CL (1 toyMC)
   68% expected band : 11.2202 < r < 11.2202
   95% expected band : 11.2202 < r < 11.2202
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1458769376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5063 +/- 0.00890102 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.5063 @ 95%CL (1 toyMC)
median expected limit: r < 16.5063 @ 95%CL (1 toyMC)
   68% expected band : 16.5063 < r < 16.5063
   95% expected band : 16.5063 < r < 16.5063
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2108954781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7506 +/- 0.0168417 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 10.7506 @ 95%CL (1 toyMC)
median expected limit: r < 10.7506 @ 95%CL (1 toyMC)
   68% expected band : 10.7506 < r < 10.7506
   95% expected band : 10.7506 < r < 10.7506
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -133299473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9386 +/- 0.0053606 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.9386 @ 95%CL (1 toyMC)
median expected limit: r < 17.9386 @ 95%CL (1 toyMC)
   68% expected band : 17.9386 < r < 17.9386
   95% expected band : 17.9386 < r < 17.9386
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 477635314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9297 +/- 0.020749 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.9297 @ 95%CL (1 toyMC)
median expected limit: r < 11.9297 @ 95%CL (1 toyMC)
   68% expected band : 11.9297 < r < 11.9297
   95% expected band : 11.9297 < r < 11.9297
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 869930630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4005 +/- 0.0107485 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.4005 @ 95%CL (1 toyMC)
median expected limit: r < 16.4005 @ 95%CL (1 toyMC)
   68% expected band : 16.4005 < r < 16.4005
   95% expected band : 16.4005 < r < 16.4005
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -250261825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7244 +/- 0.00927004 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.7244 @ 95%CL (1 toyMC)
median expected limit: r < 16.7244 @ 95%CL (1 toyMC)
   68% expected band : 16.7244 < r < 16.7244
   95% expected band : 16.7244 < r < 16.7244
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 448994668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.2368 +/- 0.0195835 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.2368 @ 95%CL (1 toyMC)
median expected limit: r < 9.2368 @ 95%CL (1 toyMC)
   68% expected band : 9.2368 < r < 9.2368
   95% expected band : 9.2368 < r < 9.2368
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2031326190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.398 +/- 0.0169565 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 10.398 @ 95%CL (1 toyMC)
median expected limit: r < 10.398 @ 95%CL (1 toyMC)
   68% expected band : 10.398 < r < 10.398
   95% expected band : 10.398 < r < 10.398
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 48467863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.799 +/- 0.0161317 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.799 @ 95%CL (1 toyMC)
median expected limit: r < 13.799 @ 95%CL (1 toyMC)
   68% expected band : 13.799 < r < 13.799
   95% expected band : 13.799 < r < 13.799
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1460850528
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.2768 +/- 0.0128485 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.2768 @ 95%CL (1 toyMC)
median expected limit: r < 15.2768 @ 95%CL (1 toyMC)
   68% expected band : 15.2768 < r < 15.2768
   95% expected band : 15.2768 < r < 15.2768
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -789891802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.73 +/- 0.0127271 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 12.73 @ 95%CL (1 toyMC)
median expected limit: r < 12.73 @ 95%CL (1 toyMC)
   68% expected band : 12.73 < r < 12.73
   95% expected band : 12.73 < r < 12.73
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 942561904
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.002 +/- 0.0126588 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.002 @ 95%CL (1 toyMC)
median expected limit: r < 14.002 @ 95%CL (1 toyMC)
   68% expected band : 14.002 < r < 14.002
   95% expected band : 14.002 < r < 14.002
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1884689169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4195 +/- 0.0105748 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.4195 @ 95%CL (1 toyMC)
median expected limit: r < 16.4195 @ 95%CL (1 toyMC)
   68% expected band : 16.4195 < r < 16.4195
   95% expected band : 16.4195 < r < 16.4195
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -886837499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5163 +/- 0.0195772 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.5163 @ 95%CL (1 toyMC)
median expected limit: r < 11.5163 @ 95%CL (1 toyMC)
   68% expected band : 11.5163 < r < 11.5163
   95% expected band : 11.5163 < r < 11.5163
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1645513674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3423 +/- 0.0134197 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.3423 @ 95%CL (1 toyMC)
median expected limit: r < 14.3423 @ 95%CL (1 toyMC)
   68% expected band : 14.3423 < r < 14.3423
   95% expected band : 14.3423 < r < 14.3423
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1168400307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7387 +/- 0.0167497 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.7387 @ 95%CL (1 toyMC)
median expected limit: r < 13.7387 @ 95%CL (1 toyMC)
   68% expected band : 13.7387 < r < 13.7387
   95% expected band : 13.7387 < r < 13.7387
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1881703186
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0808 +/- 0.0143825 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.0808 @ 95%CL (1 toyMC)
median expected limit: r < 11.0808 @ 95%CL (1 toyMC)
   68% expected band : 11.0808 < r < 11.0808
   95% expected band : 11.0808 < r < 11.0808
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1825497586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.26646 +/- 0.0172071 @ 95% CL (100 tries)
Done in 0.22 min (cpu), 0.22 min (real)
mean   expected limit: r < 8.26646 @ 95%CL (1 toyMC)
median expected limit: r < 8.26646 @ 95%CL (1 toyMC)
   68% expected band : 8.26646 < r < 8.26646
   95% expected band : 8.26646 < r < 8.26646
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -935038637
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3738 +/- 0.00676607 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.3738 @ 95%CL (1 toyMC)
median expected limit: r < 17.3738 @ 95%CL (1 toyMC)
   68% expected band : 17.3738 < r < 17.3738
   95% expected band : 17.3738 < r < 17.3738
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -434365924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8614 +/- 0.0134302 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.8614 @ 95%CL (1 toyMC)
median expected limit: r < 12.8614 @ 95%CL (1 toyMC)
   68% expected band : 12.8614 < r < 12.8614
   95% expected band : 12.8614 < r < 12.8614
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1817060312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.7186 +/- 0.0197389 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.7186 @ 95%CL (1 toyMC)
median expected limit: r < 12.7186 @ 95%CL (1 toyMC)
   68% expected band : 12.7186 < r < 12.7186
   95% expected band : 12.7186 < r < 12.7186
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1346395201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6165 +/- 0.0070364 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.6165 @ 95%CL (1 toyMC)
median expected limit: r < 17.6165 @ 95%CL (1 toyMC)
   68% expected band : 17.6165 < r < 17.6165
   95% expected band : 17.6165 < r < 17.6165
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -389828797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1085 +/- 0.0152009 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.1085 @ 95%CL (1 toyMC)
median expected limit: r < 13.1085 @ 95%CL (1 toyMC)
   68% expected band : 13.1085 < r < 13.1085
   95% expected band : 13.1085 < r < 13.1085
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 102220570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2037 +/- 0.0180023 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.2037 @ 95%CL (1 toyMC)
median expected limit: r < 11.2037 @ 95%CL (1 toyMC)
   68% expected band : 11.2037 < r < 11.2037
   95% expected band : 11.2037 < r < 11.2037
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -991145299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.27446 +/- 0.0176408 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.27446 @ 95%CL (1 toyMC)
median expected limit: r < 8.27446 @ 95%CL (1 toyMC)
   68% expected band : 8.27446 < r < 8.27446
   95% expected band : 8.27446 < r < 8.27446
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 796802433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5053 +/- 0.0158812 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.5053 @ 95%CL (1 toyMC)
median expected limit: r < 12.5053 @ 95%CL (1 toyMC)
   68% expected band : 12.5053 < r < 12.5053
   95% expected band : 12.5053 < r < 12.5053
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 678186007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0332 +/- 0.0109195 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.0332 @ 95%CL (1 toyMC)
median expected limit: r < 16.0332 @ 95%CL (1 toyMC)
   68% expected band : 16.0332 < r < 16.0332
   95% expected band : 16.0332 < r < 16.0332
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -368566698
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8698 +/- 0.00783438 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.8698 @ 95%CL (1 toyMC)
median expected limit: r < 16.8698 @ 95%CL (1 toyMC)
   68% expected band : 16.8698 < r < 16.8698
   95% expected band : 16.8698 < r < 16.8698
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 18991502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3307 +/- 0.01292 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.3307 @ 95%CL (1 toyMC)
median expected limit: r < 14.3307 @ 95%CL (1 toyMC)
   68% expected band : 14.3307 < r < 14.3307
   95% expected band : 14.3307 < r < 14.3307
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -565840187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2317 +/- 0.016764 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.2317 @ 95%CL (1 toyMC)
median expected limit: r < 13.2317 @ 95%CL (1 toyMC)
   68% expected band : 13.2317 < r < 13.2317
   95% expected band : 13.2317 < r < 13.2317
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -895856840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.08306 +/- 0.014424 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.08306 @ 95%CL (1 toyMC)
median expected limit: r < 9.08306 @ 95%CL (1 toyMC)
   68% expected band : 9.08306 < r < 9.08306
   95% expected band : 9.08306 < r < 9.08306
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 756877966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1104 +/- 0.0213596 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.1104 @ 95%CL (1 toyMC)
median expected limit: r < 12.1104 @ 95%CL (1 toyMC)
   68% expected band : 12.1104 < r < 12.1104
   95% expected band : 12.1104 < r < 12.1104
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1953875205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2951 +/- 0.00547057 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.2951 @ 95%CL (1 toyMC)
median expected limit: r < 18.2951 @ 95%CL (1 toyMC)
   68% expected band : 18.2951 < r < 18.2951
   95% expected band : 18.2951 < r < 18.2951
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1606008170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5079 +/- 0.0103013 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5079 @ 95%CL (1 toyMC)
median expected limit: r < 16.5079 @ 95%CL (1 toyMC)
   68% expected band : 16.5079 < r < 16.5079
   95% expected band : 16.5079 < r < 16.5079
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 202575270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4251 +/- 0.0122292 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.4251 @ 95%CL (1 toyMC)
median expected limit: r < 13.4251 @ 95%CL (1 toyMC)
   68% expected band : 13.4251 < r < 13.4251
   95% expected band : 13.4251 < r < 13.4251
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -345484586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.375 +/- 0.0138533 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.375 @ 95%CL (1 toyMC)
median expected limit: r < 13.375 @ 95%CL (1 toyMC)
   68% expected band : 13.375 < r < 13.375
   95% expected band : 13.375 < r < 13.375
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -345723804
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1473 +/- 0.0160357 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.1473 @ 95%CL (1 toyMC)
median expected limit: r < 11.1473 @ 95%CL (1 toyMC)
   68% expected band : 11.1473 < r < 11.1473
   95% expected band : 11.1473 < r < 11.1473
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -496667217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9493 +/- 0.0145587 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 14.9493 @ 95%CL (1 toyMC)
median expected limit: r < 14.9493 @ 95%CL (1 toyMC)
   68% expected band : 14.9493 < r < 14.9493
   95% expected band : 14.9493 < r < 14.9493
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -860887558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2048 +/- 0.0165415 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2048 @ 95%CL (1 toyMC)
median expected limit: r < 10.2048 @ 95%CL (1 toyMC)
   68% expected band : 10.2048 < r < 10.2048
   95% expected band : 10.2048 < r < 10.2048
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -78430866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0891 +/- 0.0115824 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.0891 @ 95%CL (1 toyMC)
median expected limit: r < 15.0891 @ 95%CL (1 toyMC)
   68% expected band : 15.0891 < r < 15.0891
   95% expected band : 15.0891 < r < 15.0891
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 548654087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7746 +/- 0.00820522 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.7746 @ 95%CL (1 toyMC)
median expected limit: r < 16.7746 @ 95%CL (1 toyMC)
   68% expected band : 16.7746 < r < 16.7746
   95% expected band : 16.7746 < r < 16.7746
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1779945691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2711 +/- 0.0247133 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 10.2711 @ 95%CL (1 toyMC)
median expected limit: r < 10.2711 @ 95%CL (1 toyMC)
   68% expected band : 10.2711 < r < 10.2711
   95% expected band : 10.2711 < r < 10.2711
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1358045869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5785 +/- 0.0171094 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.5785 @ 95%CL (1 toyMC)
median expected limit: r < 12.5785 @ 95%CL (1 toyMC)
   68% expected band : 12.5785 < r < 12.5785
   95% expected band : 12.5785 < r < 12.5785
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 387315970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1771 +/- 0.0143164 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.1771 @ 95%CL (1 toyMC)
median expected limit: r < 15.1771 @ 95%CL (1 toyMC)
   68% expected band : 15.1771 < r < 15.1771
   95% expected band : 15.1771 < r < 15.1771
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1123985020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5181 +/- 0.00482043 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.5181 @ 95%CL (1 toyMC)
median expected limit: r < 18.5181 @ 95%CL (1 toyMC)
   68% expected band : 18.5181 < r < 18.5181
   95% expected band : 18.5181 < r < 18.5181
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1850502647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8436 +/- 0.0167842 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.8436 @ 95%CL (1 toyMC)
median expected limit: r < 12.8436 @ 95%CL (1 toyMC)
   68% expected band : 12.8436 < r < 12.8436
   95% expected band : 12.8436 < r < 12.8436
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1609649856
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3319 +/- 0.0119195 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.3319 @ 95%CL (1 toyMC)
median expected limit: r < 15.3319 @ 95%CL (1 toyMC)
   68% expected band : 15.3319 < r < 15.3319
   95% expected band : 15.3319 < r < 15.3319
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1504935272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4456 +/- 0.0177697 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.4456 @ 95%CL (1 toyMC)
median expected limit: r < 12.4456 @ 95%CL (1 toyMC)
   68% expected band : 12.4456 < r < 12.4456
   95% expected band : 12.4456 < r < 12.4456
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 71550724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3332 +/- 0.0188288 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.3332 @ 95%CL (1 toyMC)
median expected limit: r < 12.3332 @ 95%CL (1 toyMC)
   68% expected band : 12.3332 < r < 12.3332
   95% expected band : 12.3332 < r < 12.3332
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2008347221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.1105 +/- 0.0175622 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 9.1105 @ 95%CL (1 toyMC)
median expected limit: r < 9.1105 @ 95%CL (1 toyMC)
   68% expected band : 9.1105 < r < 9.1105
   95% expected band : 9.1105 < r < 9.1105
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -298962368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4807 +/- 0.0139053 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.4807 @ 95%CL (1 toyMC)
median expected limit: r < 14.4807 @ 95%CL (1 toyMC)
   68% expected band : 14.4807 < r < 14.4807
   95% expected band : 14.4807 < r < 14.4807
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1100619151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9569 +/- 0.00997305 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 15.9569 @ 95%CL (1 toyMC)
median expected limit: r < 15.9569 @ 95%CL (1 toyMC)
   68% expected band : 15.9569 < r < 15.9569
   95% expected band : 15.9569 < r < 15.9569
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1407167879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2474 +/- 0.0193822 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.2474 @ 95%CL (1 toyMC)
median expected limit: r < 12.2474 @ 95%CL (1 toyMC)
   68% expected band : 12.2474 < r < 12.2474
   95% expected band : 12.2474 < r < 12.2474
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1665991904
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.32661 +/- 0.0169593 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 8.32661 @ 95%CL (1 toyMC)
median expected limit: r < 8.32661 @ 95%CL (1 toyMC)
   68% expected band : 8.32661 < r < 8.32661
   95% expected band : 8.32661 < r < 8.32661
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 124938147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5637 +/- 0.00785233 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.5637 @ 95%CL (1 toyMC)
median expected limit: r < 17.5637 @ 95%CL (1 toyMC)
   68% expected band : 17.5637 < r < 17.5637
   95% expected band : 17.5637 < r < 17.5637
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -197836712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1484 +/- 0.0114467 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.1484 @ 95%CL (1 toyMC)
median expected limit: r < 15.1484 @ 95%CL (1 toyMC)
   68% expected band : 15.1484 < r < 15.1484
   95% expected band : 15.1484 < r < 15.1484
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1738530354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2984 +/- 0.0160066 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.2984 @ 95%CL (1 toyMC)
median expected limit: r < 13.2984 @ 95%CL (1 toyMC)
   68% expected band : 13.2984 < r < 13.2984
   95% expected band : 13.2984 < r < 13.2984
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2020272277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.4215 +/- 0.0157257 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.4215 @ 95%CL (1 toyMC)
median expected limit: r < 12.4215 @ 95%CL (1 toyMC)
   68% expected band : 12.4215 < r < 12.4215
   95% expected band : 12.4215 < r < 12.4215
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2111811543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0368 +/- 0.0172336 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.0368 @ 95%CL (1 toyMC)
median expected limit: r < 10.0368 @ 95%CL (1 toyMC)
   68% expected band : 10.0368 < r < 10.0368
   95% expected band : 10.0368 < r < 10.0368
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -598358886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8423 +/- 0.0169959 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.8423 @ 95%CL (1 toyMC)
median expected limit: r < 11.8423 @ 95%CL (1 toyMC)
   68% expected band : 11.8423 < r < 11.8423
   95% expected band : 11.8423 < r < 11.8423
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -542170438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0276 +/- 0.015943 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.0276 @ 95%CL (1 toyMC)
median expected limit: r < 10.0276 @ 95%CL (1 toyMC)
   68% expected band : 10.0276 < r < 10.0276
   95% expected band : 10.0276 < r < 10.0276
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -758990965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8972 +/- 0.010022 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.8972 @ 95%CL (1 toyMC)
median expected limit: r < 15.8972 @ 95%CL (1 toyMC)
   68% expected band : 15.8972 < r < 15.8972
   95% expected band : 15.8972 < r < 15.8972
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1751823476
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.7878 +/- 0.00975526 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.7878 @ 95%CL (1 toyMC)
median expected limit: r < 16.7878 @ 95%CL (1 toyMC)
   68% expected band : 16.7878 < r < 16.7878
   95% expected band : 16.7878 < r < 16.7878
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1449738936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.2037 +/- 0.01993 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.2037 @ 95%CL (1 toyMC)
median expected limit: r < 10.2037 @ 95%CL (1 toyMC)
   68% expected band : 10.2037 < r < 10.2037
   95% expected band : 10.2037 < r < 10.2037
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1523143549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1479 +/- 0.00984927 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.1479 @ 95%CL (1 toyMC)
median expected limit: r < 17.1479 @ 95%CL (1 toyMC)
   68% expected band : 17.1479 < r < 17.1479
   95% expected band : 17.1479 < r < 17.1479
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-103150137.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1108881563.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1123985020.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1134009392.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1168400307.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1286719351.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-133299473.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1346395201.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1368152557.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1407167879.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1423407458.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1449738936.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1458769376.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1504935272.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1645513674.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1665991904.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1825497586.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1861013640.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-197836712.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1995313856.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-2008347221.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-2031326190.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2053666911.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-2108954781.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2111811543.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-250261825.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-298962368.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-345484586.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-345723804.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-368566698.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-389828797.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-434365924.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-496667217.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-542170438.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-565840187.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-598358886.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-758990965.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-773559053.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-78430866.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-789891802.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-860887558.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-886837499.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-895856840.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-909836891.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-935038637.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-991145299.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.102220570.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1100619151.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1113819513.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1129278016.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1186132001.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.124938147.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1358045869.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1460850528.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1499684811.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1523143549.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1606008170.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1609649856.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1629563577.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1738530354.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1751823476.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1779945691.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1817060312.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1850502647.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1874931099.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1881703186.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1884689169.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.18991502.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1933197769.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1943609069.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1953875205.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.2020272277.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.202575270.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2075510311.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.278446568.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.298783521.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.387315970.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.407637402.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.41936340.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.448994668.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.453938806.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.477635314.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.48467863.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.501009769.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.511110085.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.524668899.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.548654087.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.598817158.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.634714930.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.678186007.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.71550724.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.752064534.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.756877966.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.771983811.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.796802433.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.869930630.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.893484884.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.94118852.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.942561904.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.980488748.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1520268087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9835 +/- 0.013599 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.9835 @ 95%CL (1 toyMC)
median expected limit: r < 14.9835 @ 95%CL (1 toyMC)
   68% expected band : 14.9835 < r < 14.9835
   95% expected band : 14.9835 < r < 14.9835
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1575444790
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.7187 +/- 0.0116131 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.7187 @ 95%CL (1 toyMC)
median expected limit: r < 13.7187 @ 95%CL (1 toyMC)
   68% expected band : 13.7187 < r < 13.7187
   95% expected band : 13.7187 < r < 13.7187
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1229220472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1328 +/- 0.0177726 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.1328 @ 95%CL (1 toyMC)
median expected limit: r < 12.1328 @ 95%CL (1 toyMC)
   68% expected band : 12.1328 < r < 12.1328
   95% expected band : 12.1328 < r < 12.1328
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1473296230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6239 +/- 0.0131918 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.6239 @ 95%CL (1 toyMC)
median expected limit: r < 14.6239 @ 95%CL (1 toyMC)
   68% expected band : 14.6239 < r < 14.6239
   95% expected band : 14.6239 < r < 14.6239
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 484917862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0612 +/- 0.00839172 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.0612 @ 95%CL (1 toyMC)
median expected limit: r < 17.0612 @ 95%CL (1 toyMC)
   68% expected band : 17.0612 < r < 17.0612
   95% expected band : 17.0612 < r < 17.0612
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1929661784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4439 +/- 0.0110271 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.4439 @ 95%CL (1 toyMC)
median expected limit: r < 16.4439 @ 95%CL (1 toyMC)
   68% expected band : 16.4439 < r < 16.4439
   95% expected band : 16.4439 < r < 16.4439
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1865098437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.846 +/- 0.0161735 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.846 @ 95%CL (1 toyMC)
median expected limit: r < 12.846 @ 95%CL (1 toyMC)
   68% expected band : 12.846 < r < 12.846
   95% expected band : 12.846 < r < 12.846
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -502776274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0756 +/- 0.0135196 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0756 @ 95%CL (1 toyMC)
median expected limit: r < 15.0756 @ 95%CL (1 toyMC)
   68% expected band : 15.0756 < r < 15.0756
   95% expected band : 15.0756 < r < 15.0756
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1683231528
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4184 +/- 0.0148402 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4184 @ 95%CL (1 toyMC)
median expected limit: r < 14.4184 @ 95%CL (1 toyMC)
   68% expected band : 14.4184 < r < 14.4184
   95% expected band : 14.4184 < r < 14.4184
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1099997526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3033 +/- 0.0124664 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.3033 @ 95%CL (1 toyMC)
median expected limit: r < 15.3033 @ 95%CL (1 toyMC)
   68% expected band : 15.3033 < r < 15.3033
   95% expected band : 15.3033 < r < 15.3033
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -330520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.375 +/- 0.0139002 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 13.375 @ 95%CL (1 toyMC)
median expected limit: r < 13.375 @ 95%CL (1 toyMC)
   68% expected band : 13.375 < r < 13.375
   95% expected band : 13.375 < r < 13.375
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 477637827
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5483 +/- 0.0149519 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.5483 @ 95%CL (1 toyMC)
median expected limit: r < 13.5483 @ 95%CL (1 toyMC)
   68% expected band : 13.5483 < r < 13.5483
   95% expected band : 13.5483 < r < 13.5483
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 434701520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.01745 +/- 0.0213819 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.01745 @ 95%CL (1 toyMC)
median expected limit: r < 9.01745 @ 95%CL (1 toyMC)
   68% expected band : 9.01745 < r < 9.01745
   95% expected band : 9.01745 < r < 9.01745
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1221392847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8665 +/- 0.0101799 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.8665 @ 95%CL (1 toyMC)
median expected limit: r < 16.8665 @ 95%CL (1 toyMC)
   68% expected band : 16.8665 < r < 16.8665
   95% expected band : 16.8665 < r < 16.8665
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1912812765
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0932 +/- 0.0149501 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.0932 @ 95%CL (1 toyMC)
median expected limit: r < 11.0932 @ 95%CL (1 toyMC)
   68% expected band : 11.0932 < r < 11.0932
   95% expected band : 11.0932 < r < 11.0932
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 402417774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5049 +/- 0.00490743 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.5049 @ 95%CL (1 toyMC)
median expected limit: r < 18.5049 @ 95%CL (1 toyMC)
   68% expected band : 18.5049 < r < 18.5049
   95% expected band : 18.5049 < r < 18.5049
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 696787484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5621 +/- 0.0141695 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.5621 @ 95%CL (1 toyMC)
median expected limit: r < 15.5621 @ 95%CL (1 toyMC)
   68% expected band : 15.5621 < r < 15.5621
   95% expected band : 15.5621 < r < 15.5621
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1994050726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0525 +/- 0.0146835 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 10.0525 @ 95%CL (1 toyMC)
median expected limit: r < 10.0525 @ 95%CL (1 toyMC)
   68% expected band : 10.0525 < r < 10.0525
   95% expected band : 10.0525 < r < 10.0525
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1244756753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5022 +/- 0.0113778 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.5022 @ 95%CL (1 toyMC)
median expected limit: r < 14.5022 @ 95%CL (1 toyMC)
   68% expected band : 14.5022 < r < 14.5022
   95% expected band : 14.5022 < r < 14.5022
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1709664238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5572 +/- 0.00549898 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.5572 @ 95%CL (1 toyMC)
median expected limit: r < 18.5572 @ 95%CL (1 toyMC)
   68% expected band : 18.5572 < r < 18.5572
   95% expected band : 18.5572 < r < 18.5572
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 782857281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1151 +/- 0.0169562 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.1151 @ 95%CL (1 toyMC)
median expected limit: r < 13.1151 @ 95%CL (1 toyMC)
   68% expected band : 13.1151 < r < 13.1151
   95% expected band : 13.1151 < r < 13.1151
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1591543096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4091 +/- 0.0156633 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.4091 @ 95%CL (1 toyMC)
median expected limit: r < 13.4091 @ 95%CL (1 toyMC)
   68% expected band : 13.4091 < r < 13.4091
   95% expected band : 13.4091 < r < 13.4091
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1214030017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0564 +/- 0.00702514 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.0564 @ 95%CL (1 toyMC)
median expected limit: r < 18.0564 @ 95%CL (1 toyMC)
   68% expected band : 18.0564 < r < 18.0564
   95% expected band : 18.0564 < r < 18.0564
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1697890986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0148 +/- 0.0212351 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.0148 @ 95%CL (1 toyMC)
median expected limit: r < 11.0148 @ 95%CL (1 toyMC)
   68% expected band : 11.0148 < r < 11.0148
   95% expected band : 11.0148 < r < 11.0148
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 309733035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3053 +/- 0.0182487 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.3053 @ 95%CL (1 toyMC)
median expected limit: r < 13.3053 @ 95%CL (1 toyMC)
   68% expected band : 13.3053 < r < 13.3053
   95% expected band : 13.3053 < r < 13.3053
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1956894960
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2544 +/- 0.0152002 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.2544 @ 95%CL (1 toyMC)
median expected limit: r < 13.2544 @ 95%CL (1 toyMC)
   68% expected band : 13.2544 < r < 13.2544
   95% expected band : 13.2544 < r < 13.2544
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -772198961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2898 +/- 0.0161229 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.2898 @ 95%CL (1 toyMC)
median expected limit: r < 13.2898 @ 95%CL (1 toyMC)
   68% expected band : 13.2898 < r < 13.2898
   95% expected band : 13.2898 < r < 13.2898
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1870642626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3197 +/- 0.0202271 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.3197 @ 95%CL (1 toyMC)
median expected limit: r < 12.3197 @ 95%CL (1 toyMC)
   68% expected band : 12.3197 < r < 12.3197
   95% expected band : 12.3197 < r < 12.3197
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -957999831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5787 +/- 0.0105069 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.5787 @ 95%CL (1 toyMC)
median expected limit: r < 15.5787 @ 95%CL (1 toyMC)
   68% expected band : 15.5787 < r < 15.5787
   95% expected band : 15.5787 < r < 15.5787
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 692676924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4264 +/- 0.0155797 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4264 @ 95%CL (1 toyMC)
median expected limit: r < 14.4264 @ 95%CL (1 toyMC)
   68% expected band : 14.4264 < r < 14.4264
   95% expected band : 14.4264 < r < 14.4264
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1336025455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9094 +/- 0.0103413 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.9094 @ 95%CL (1 toyMC)
median expected limit: r < 15.9094 @ 95%CL (1 toyMC)
   68% expected band : 15.9094 < r < 15.9094
   95% expected band : 15.9094 < r < 15.9094
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -813871307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0493 +/- 0.00708791 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.0493 @ 95%CL (1 toyMC)
median expected limit: r < 18.0493 @ 95%CL (1 toyMC)
   68% expected band : 18.0493 < r < 18.0493
   95% expected band : 18.0493 < r < 18.0493
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1070605581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.1163 +/- 0.0142469 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.1163 @ 95%CL (1 toyMC)
median expected limit: r < 15.1163 @ 95%CL (1 toyMC)
   68% expected band : 15.1163 < r < 15.1163
   95% expected band : 15.1163 < r < 15.1163
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 819562503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5003 +/- 0.00783988 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.5003 @ 95%CL (1 toyMC)
median expected limit: r < 17.5003 @ 95%CL (1 toyMC)
   68% expected band : 17.5003 < r < 17.5003
   95% expected band : 17.5003 < r < 17.5003
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1030888899
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.8345 +/- 0.0217075 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.8345 @ 95%CL (1 toyMC)
median expected limit: r < 11.8345 @ 95%CL (1 toyMC)
   68% expected band : 11.8345 < r < 11.8345
   95% expected band : 11.8345 < r < 11.8345
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1948491425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0408 +/- 0.0145819 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.0408 @ 95%CL (1 toyMC)
median expected limit: r < 11.0408 @ 95%CL (1 toyMC)
   68% expected band : 11.0408 < r < 11.0408
   95% expected band : 11.0408 < r < 11.0408
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 168968466
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.02186 +/- 0.0167895 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 9.02186 @ 95%CL (1 toyMC)
median expected limit: r < 9.02186 @ 95%CL (1 toyMC)
   68% expected band : 9.02186 < r < 9.02186
   95% expected band : 9.02186 < r < 9.02186
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1109393737
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1425 +/- 0.0176087 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.1425 @ 95%CL (1 toyMC)
median expected limit: r < 11.1425 @ 95%CL (1 toyMC)
   68% expected band : 11.1425 < r < 11.1425
   95% expected band : 11.1425 < r < 11.1425
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 94091986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.337 +/- 0.0102601 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.337 @ 95%CL (1 toyMC)
median expected limit: r < 14.337 @ 95%CL (1 toyMC)
   68% expected band : 14.337 < r < 14.337
   95% expected band : 14.337 < r < 14.337
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1923214193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.1559 +/- 0.0186556 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.1559 @ 95%CL (1 toyMC)
median expected limit: r < 11.1559 @ 95%CL (1 toyMC)
   68% expected band : 11.1559 < r < 11.1559
   95% expected band : 11.1559 < r < 11.1559
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1497054320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0232 +/- 0.010435 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.0232 @ 95%CL (1 toyMC)
median expected limit: r < 16.0232 @ 95%CL (1 toyMC)
   68% expected band : 16.0232 < r < 16.0232
   95% expected band : 16.0232 < r < 16.0232
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 630884592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.967 +/- 0.0203184 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.967 @ 95%CL (1 toyMC)
median expected limit: r < 10.967 @ 95%CL (1 toyMC)
   68% expected band : 10.967 < r < 10.967
   95% expected band : 10.967 < r < 10.967
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -457943982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7779 +/- 0.00653039 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.7779 @ 95%CL (1 toyMC)
median expected limit: r < 17.7779 @ 95%CL (1 toyMC)
   68% expected band : 17.7779 < r < 17.7779
   95% expected band : 17.7779 < r < 17.7779
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 901275794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3433 +/- 0.0182207 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.3433 @ 95%CL (1 toyMC)
median expected limit: r < 13.3433 @ 95%CL (1 toyMC)
   68% expected band : 13.3433 < r < 13.3433
   95% expected band : 13.3433 < r < 13.3433
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1797264414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3002 +/- 0.00850579 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.3002 @ 95%CL (1 toyMC)
median expected limit: r < 17.3002 @ 95%CL (1 toyMC)
   68% expected band : 17.3002 < r < 17.3002
   95% expected band : 17.3002 < r < 17.3002
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1646787926
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3197 +/- 0.00760863 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.3197 @ 95%CL (1 toyMC)
median expected limit: r < 17.3197 @ 95%CL (1 toyMC)
   68% expected band : 17.3197 < r < 17.3197
   95% expected band : 17.3197 < r < 17.3197
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1486295932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.7429 +/- 0.0171752 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 10.7429 @ 95%CL (1 toyMC)
median expected limit: r < 10.7429 @ 95%CL (1 toyMC)
   68% expected band : 10.7429 < r < 10.7429
   95% expected band : 10.7429 < r < 10.7429
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2105714317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0112 +/- 0.0100789 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.0112 @ 95%CL (1 toyMC)
median expected limit: r < 17.0112 @ 95%CL (1 toyMC)
   68% expected band : 17.0112 < r < 17.0112
   95% expected band : 17.0112 < r < 17.0112
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1267760900
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5685 +/- 0.012671 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.5685 @ 95%CL (1 toyMC)
median expected limit: r < 14.5685 @ 95%CL (1 toyMC)
   68% expected band : 14.5685 < r < 14.5685
   95% expected band : 14.5685 < r < 14.5685
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -102315084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.4849 +/- 0.012083 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.4849 @ 95%CL (1 toyMC)
median expected limit: r < 15.4849 @ 95%CL (1 toyMC)
   68% expected band : 15.4849 < r < 15.4849
   95% expected band : 15.4849 < r < 15.4849
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1250906199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3331 +/- 0.0131159 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.3331 @ 95%CL (1 toyMC)
median expected limit: r < 13.3331 @ 95%CL (1 toyMC)
   68% expected band : 13.3331 < r < 13.3331
   95% expected band : 13.3331 < r < 13.3331
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -447167929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.0842 +/- 0.0174084 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.0842 @ 95%CL (1 toyMC)
median expected limit: r < 11.0842 @ 95%CL (1 toyMC)
   68% expected band : 11.0842 < r < 11.0842
   95% expected band : 11.0842 < r < 11.0842
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -371811273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.03187 +/- 0.019453 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 9.03187 @ 95%CL (1 toyMC)
median expected limit: r < 9.03187 @ 95%CL (1 toyMC)
   68% expected band : 9.03187 < r < 9.03187
   95% expected band : 9.03187 < r < 9.03187
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1709635339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8702 +/- 0.0174946 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.8702 @ 95%CL (1 toyMC)
median expected limit: r < 12.8702 @ 95%CL (1 toyMC)
   68% expected band : 12.8702 < r < 12.8702
   95% expected band : 12.8702 < r < 12.8702
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1051234497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.561 +/- 0.015373 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.561 @ 95%CL (1 toyMC)
median expected limit: r < 14.561 @ 95%CL (1 toyMC)
   68% expected band : 14.561 < r < 14.561
   95% expected band : 14.561 < r < 14.561
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1528234259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2828 +/- 0.0164695 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.2828 @ 95%CL (1 toyMC)
median expected limit: r < 12.2828 @ 95%CL (1 toyMC)
   68% expected band : 12.2828 < r < 12.2828
   95% expected band : 12.2828 < r < 12.2828
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1111257334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1394 +/- 0.0196119 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.1394 @ 95%CL (1 toyMC)
median expected limit: r < 10.1394 @ 95%CL (1 toyMC)
   68% expected band : 10.1394 < r < 10.1394
   95% expected band : 10.1394 < r < 10.1394
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 976966231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1523 +/- 0.00362499 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.1523 @ 95%CL (1 toyMC)
median expected limit: r < 19.1523 @ 95%CL (1 toyMC)
   68% expected band : 19.1523 < r < 19.1523
   95% expected band : 19.1523 < r < 19.1523
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1893695946
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6197 +/- 0.00812559 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.6197 @ 95%CL (1 toyMC)
median expected limit: r < 17.6197 @ 95%CL (1 toyMC)
   68% expected band : 17.6197 < r < 17.6197
   95% expected band : 17.6197 < r < 17.6197
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -121777286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.8536 +/- 0.0152084 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.8536 @ 95%CL (1 toyMC)
median expected limit: r < 12.8536 @ 95%CL (1 toyMC)
   68% expected band : 12.8536 < r < 12.8536
   95% expected band : 12.8536 < r < 12.8536
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 629245071
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.1918 +/- 0.0118834 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.1918 @ 95%CL (1 toyMC)
median expected limit: r < 13.1918 @ 95%CL (1 toyMC)
   68% expected band : 13.1918 < r < 13.1918
   95% expected band : 13.1918 < r < 13.1918
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1386052852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4331 +/- 0.0141908 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.4331 @ 95%CL (1 toyMC)
median expected limit: r < 13.4331 @ 95%CL (1 toyMC)
   68% expected band : 13.4331 < r < 13.4331
   95% expected band : 13.4331 < r < 13.4331
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 620491739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3332 +/- 0.0181767 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3332 @ 95%CL (1 toyMC)
median expected limit: r < 13.3332 @ 95%CL (1 toyMC)
   68% expected band : 13.3332 < r < 13.3332
   95% expected band : 13.3332 < r < 13.3332
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 676285419
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.264 +/- 0.0158057 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.264 @ 95%CL (1 toyMC)
median expected limit: r < 12.264 @ 95%CL (1 toyMC)
   68% expected band : 12.264 < r < 12.264
   95% expected band : 12.264 < r < 12.264
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 385864869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5045 +/- 0.0161931 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.5045 @ 95%CL (1 toyMC)
median expected limit: r < 12.5045 @ 95%CL (1 toyMC)
   68% expected band : 12.5045 < r < 12.5045
   95% expected band : 12.5045 < r < 12.5045
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1893679585
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2546 +/- 0.0153394 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.2546 @ 95%CL (1 toyMC)
median expected limit: r < 14.2546 @ 95%CL (1 toyMC)
   68% expected band : 14.2546 < r < 14.2546
   95% expected band : 14.2546 < r < 14.2546
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -702103488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6852 +/- 0.00967211 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.6852 @ 95%CL (1 toyMC)
median expected limit: r < 15.6852 @ 95%CL (1 toyMC)
   68% expected band : 15.6852 < r < 15.6852
   95% expected band : 15.6852 < r < 15.6852
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 33755259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.963 +/- 0.0120048 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.963 @ 95%CL (1 toyMC)
median expected limit: r < 15.963 @ 95%CL (1 toyMC)
   68% expected band : 15.963 < r < 15.963
   95% expected band : 15.963 < r < 15.963
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -439626577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.1635 +/- 0.0206834 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 10.1635 @ 95%CL (1 toyMC)
median expected limit: r < 10.1635 @ 95%CL (1 toyMC)
   68% expected band : 10.1635 < r < 10.1635
   95% expected band : 10.1635 < r < 10.1635
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 679827626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9219 +/- 0.0143446 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.9219 @ 95%CL (1 toyMC)
median expected limit: r < 15.9219 @ 95%CL (1 toyMC)
   68% expected band : 15.9219 < r < 15.9219
   95% expected band : 15.9219 < r < 15.9219
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 324661540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.356 +/- 0.0119642 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.356 @ 95%CL (1 toyMC)
median expected limit: r < 15.356 @ 95%CL (1 toyMC)
   68% expected band : 15.356 < r < 15.356
   95% expected band : 15.356 < r < 15.356
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -866329694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2801 +/- 0.017372 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.2801 @ 95%CL (1 toyMC)
median expected limit: r < 12.2801 @ 95%CL (1 toyMC)
   68% expected band : 12.2801 < r < 12.2801
   95% expected band : 12.2801 < r < 12.2801
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 236777144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.9242 +/- 0.020273 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.9242 @ 95%CL (1 toyMC)
median expected limit: r < 12.9242 @ 95%CL (1 toyMC)
   68% expected band : 12.9242 < r < 12.9242
   95% expected band : 12.9242 < r < 12.9242
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 760854949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4302 +/- 0.0155653 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 14.4302 @ 95%CL (1 toyMC)
median expected limit: r < 14.4302 @ 95%CL (1 toyMC)
   68% expected band : 14.4302 < r < 14.4302
   95% expected band : 14.4302 < r < 14.4302
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -976911898
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.5497 +/- 0.0182215 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.5497 @ 95%CL (1 toyMC)
median expected limit: r < 13.5497 @ 95%CL (1 toyMC)
   68% expected band : 13.5497 < r < 13.5497
   95% expected band : 13.5497 < r < 13.5497
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -258323883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.96613 +/- 0.020726 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.96613 @ 95%CL (1 toyMC)
median expected limit: r < 9.96613 @ 95%CL (1 toyMC)
   68% expected band : 9.96613 < r < 9.96613
   95% expected band : 9.96613 < r < 9.96613
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1265696345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1666 +/- 0.016185 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.1666 @ 95%CL (1 toyMC)
median expected limit: r < 12.1666 @ 95%CL (1 toyMC)
   68% expected band : 12.1666 < r < 12.1666
   95% expected band : 12.1666 < r < 12.1666
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 449788201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.5778 +/- 0.0123996 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.5778 @ 95%CL (1 toyMC)
median expected limit: r < 15.5778 @ 95%CL (1 toyMC)
   68% expected band : 15.5778 < r < 15.5778
   95% expected band : 15.5778 < r < 15.5778
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -42678921
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4826 +/- 0.0105491 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.4826 @ 95%CL (1 toyMC)
median expected limit: r < 16.4826 @ 95%CL (1 toyMC)
   68% expected band : 16.4826 < r < 16.4826
   95% expected band : 16.4826 < r < 16.4826
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -388067687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7936 +/- 0.00726783 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.7936 @ 95%CL (1 toyMC)
median expected limit: r < 17.7936 @ 95%CL (1 toyMC)
   68% expected band : 17.7936 < r < 17.7936
   95% expected band : 17.7936 < r < 17.7936
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1622124120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4623 +/- 0.0148962 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4623 @ 95%CL (1 toyMC)
median expected limit: r < 14.4623 @ 95%CL (1 toyMC)
   68% expected band : 14.4623 < r < 14.4623
   95% expected band : 14.4623 < r < 14.4623
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1801428937
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0446 +/- 0.00722557 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.0446 @ 95%CL (1 toyMC)
median expected limit: r < 17.0446 @ 95%CL (1 toyMC)
   68% expected band : 17.0446 < r < 17.0446
   95% expected band : 17.0446 < r < 17.0446
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1852662783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6026 +/- 0.00915917 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.6026 @ 95%CL (1 toyMC)
median expected limit: r < 15.6026 @ 95%CL (1 toyMC)
   68% expected band : 15.6026 < r < 15.6026
   95% expected band : 15.6026 < r < 15.6026
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 867630198
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1797 +/- 0.00699835 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.1797 @ 95%CL (1 toyMC)
median expected limit: r < 18.1797 @ 95%CL (1 toyMC)
   68% expected band : 18.1797 < r < 18.1797
   95% expected band : 18.1797 < r < 18.1797
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1618511089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3391 +/- 0.00989476 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.3391 @ 95%CL (1 toyMC)
median expected limit: r < 16.3391 @ 95%CL (1 toyMC)
   68% expected band : 16.3391 < r < 16.3391
   95% expected band : 16.3391 < r < 16.3391
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1790500844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.4231 +/- 0.0146604 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.4231 @ 95%CL (1 toyMC)
median expected limit: r < 13.4231 @ 95%CL (1 toyMC)
   68% expected band : 13.4231 < r < 13.4231
   95% expected band : 13.4231 < r < 13.4231
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1579030044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0773 +/- 0.0103265 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.0773 @ 95%CL (1 toyMC)
median expected limit: r < 16.0773 @ 95%CL (1 toyMC)
   68% expected band : 16.0773 < r < 16.0773
   95% expected band : 16.0773 < r < 16.0773
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1102994215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3639 +/- 0.0165953 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.3639 @ 95%CL (1 toyMC)
median expected limit: r < 12.3639 @ 95%CL (1 toyMC)
   68% expected band : 12.3639 < r < 12.3639
   95% expected band : 12.3639 < r < 12.3639
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1016433894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9509 +/- 0.0081701 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.9509 @ 95%CL (1 toyMC)
median expected limit: r < 16.9509 @ 95%CL (1 toyMC)
   68% expected band : 16.9509 < r < 16.9509
   95% expected band : 16.9509 < r < 16.9509
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 337572046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7161 +/- 0.00699954 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.7161 @ 95%CL (1 toyMC)
median expected limit: r < 17.7161 @ 95%CL (1 toyMC)
   68% expected band : 17.7161 < r < 17.7161
   95% expected band : 17.7161 < r < 17.7161
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -688930161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.269 +/- 0.0151076 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.269 @ 95%CL (1 toyMC)
median expected limit: r < 11.269 @ 95%CL (1 toyMC)
   68% expected band : 11.269 < r < 11.269
   95% expected band : 11.269 < r < 11.269
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1460126205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.7981 +/- 0.0184906 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 11.7981 @ 95%CL (1 toyMC)
median expected limit: r < 11.7981 @ 95%CL (1 toyMC)
   68% expected band : 11.7981 < r < 11.7981
   95% expected band : 11.7981 < r < 11.7981
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1141905425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.2072 +/- 0.021584 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.2072 @ 95%CL (1 toyMC)
median expected limit: r < 11.2072 @ 95%CL (1 toyMC)
   68% expected band : 11.2072 < r < 11.2072
   95% expected band : 11.2072 < r < 11.2072
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2006541654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5366 +/- 0.013193 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.5366 @ 95%CL (1 toyMC)
median expected limit: r < 14.5366 @ 95%CL (1 toyMC)
   68% expected band : 14.5366 < r < 14.5366
   95% expected band : 14.5366 < r < 14.5366
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1813180837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.774 +/- 0.0198031 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.774 @ 95%CL (1 toyMC)
median expected limit: r < 11.774 @ 95%CL (1 toyMC)
   68% expected band : 11.774 < r < 11.774
   95% expected band : 11.774 < r < 11.774
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -306592923
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5545 +/- 0.00705234 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.5545 @ 95%CL (1 toyMC)
median expected limit: r < 17.5545 @ 95%CL (1 toyMC)
   68% expected band : 17.5545 < r < 17.5545
   95% expected band : 17.5545 < r < 17.5545
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1119465562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.04375 +/- 0.0200738 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.04375 @ 95%CL (1 toyMC)
median expected limit: r < 9.04375 @ 95%CL (1 toyMC)
   68% expected band : 9.04375 < r < 9.04375
   95% expected band : 9.04375 < r < 9.04375
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1721747412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3651 +/- 0.00448168 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.3651 @ 95%CL (1 toyMC)
median expected limit: r < 18.3651 @ 95%CL (1 toyMC)
   68% expected band : 18.3651 < r < 18.3651
   95% expected band : 18.3651 < r < 18.3651
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1538559103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.00298 +/- 0.0232044 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.23 min (real)
mean   expected limit: r < 9.00298 @ 95%CL (1 toyMC)
median expected limit: r < 9.00298 @ 95%CL (1 toyMC)
   68% expected band : 9.00298 < r < 9.00298
   95% expected band : 9.00298 < r < 9.00298
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2075916997
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9563 +/- 0.0118408 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 15.9563 @ 95%CL (1 toyMC)
median expected limit: r < 15.9563 @ 95%CL (1 toyMC)
   68% expected band : 15.9563 < r < 15.9563
   95% expected band : 15.9563 < r < 15.9563
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1016433894.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-102315084.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1030888899.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1051234497.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1070605581.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1102994215.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1109393737.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1141905425.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-121777286.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1265696345.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1336025455.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1473296230.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1486295932.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1520268087.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1528234259.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1538559103.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1575444790.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1579030044.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1591543096.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1618511089.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1622124120.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1646787926.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1683231528.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1797264414.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1801428937.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1865098437.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1893679585.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1912812765.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-1929661784.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-1994050726.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-2075916997.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-258323883.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-306592923.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-330520.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-371811273.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-388067687.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-42678921.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-439626577.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-447167929.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-457943982.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-502776274.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-688930161.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-702103488.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-772198961.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-813871307.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-866329694.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-957999831.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-976911898.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1099997526.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1111257334.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1119465562.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1214030017.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1221392847.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1229220472.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1244756753.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1250906199.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1267760900.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1386052852.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1460126205.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1497054320.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.168968466.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1697890986.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1709635339.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1709664238.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1721747412.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1790500844.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1813180837.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1852662783.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1870642626.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1893695946.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1923214193.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1948491425.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1956894960.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2006541654.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2105714317.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.236777144.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.309733035.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.324661540.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.33755259.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.337572046.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.385864869.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.402417774.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.434701520.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.449788201.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.477637827.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.484917862.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.620491739.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.629245071.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.630884592.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.676285419.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.679827626.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.692676924.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.696787484.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.760854949.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.782857281.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.819562503.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.867630198.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.901275794.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.94091986.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.976966231.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2105248374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9982 +/- 0.0210923 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9982 @ 95%CL (1 toyMC)
median expected limit: r < 11.9982 @ 95%CL (1 toyMC)
   68% expected band : 11.9982 < r < 11.9982
   95% expected band : 11.9982 < r < 11.9982
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -557113960
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.5909 +/- 0.0209597 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.5909 @ 95%CL (1 toyMC)
median expected limit: r < 12.5909 @ 95%CL (1 toyMC)
   68% expected band : 12.5909 < r < 12.5909
   95% expected band : 12.5909 < r < 12.5909
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1107851127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3516 +/- 0.0186597 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 12.3516 @ 95%CL (1 toyMC)
median expected limit: r < 12.3516 @ 95%CL (1 toyMC)
   68% expected band : 12.3516 < r < 12.3516
   95% expected band : 12.3516 < r < 12.3516
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1545141331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6191 +/- 0.00938576 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.6191 @ 95%CL (1 toyMC)
median expected limit: r < 16.6191 @ 95%CL (1 toyMC)
   68% expected band : 16.6191 < r < 16.6191
   95% expected band : 16.6191 < r < 16.6191
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 842709808
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3669 +/- 0.0131261 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.3669 @ 95%CL (1 toyMC)
median expected limit: r < 14.3669 @ 95%CL (1 toyMC)
   68% expected band : 14.3669 < r < 14.3669
   95% expected band : 14.3669 < r < 14.3669
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -70312157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1729 +/- 0.00588836 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.1729 @ 95%CL (1 toyMC)
median expected limit: r < 18.1729 @ 95%CL (1 toyMC)
   68% expected band : 18.1729 < r < 18.1729
   95% expected band : 18.1729 < r < 18.1729
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1908242758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6618 +/- 0.0180222 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.6618 @ 95%CL (1 toyMC)
median expected limit: r < 11.6618 @ 95%CL (1 toyMC)
   68% expected band : 11.6618 < r < 11.6618
   95% expected band : 11.6618 < r < 11.6618
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1683141213
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9173 +/- 0.0141769 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.9173 @ 95%CL (1 toyMC)
median expected limit: r < 13.9173 @ 95%CL (1 toyMC)
   68% expected band : 13.9173 < r < 13.9173
   95% expected band : 13.9173 < r < 13.9173
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 152603802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0267 +/- 0.0204555 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0267 @ 95%CL (1 toyMC)
median expected limit: r < 12.0267 @ 95%CL (1 toyMC)
   68% expected band : 12.0267 < r < 12.0267
   95% expected band : 12.0267 < r < 12.0267
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -12686802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2642 +/- 0.0084331 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.2642 @ 95%CL (1 toyMC)
median expected limit: r < 17.2642 @ 95%CL (1 toyMC)
   68% expected band : 17.2642 < r < 17.2642
   95% expected band : 17.2642 < r < 17.2642
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1461665138
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4096 +/- 0.00950657 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.4096 @ 95%CL (1 toyMC)
median expected limit: r < 16.4096 @ 95%CL (1 toyMC)
   68% expected band : 16.4096 < r < 16.4096
   95% expected band : 16.4096 < r < 16.4096
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1633471683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0534 +/- 0.0191358 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0534 @ 95%CL (1 toyMC)
median expected limit: r < 12.0534 @ 95%CL (1 toyMC)
   68% expected band : 12.0534 < r < 12.0534
   95% expected band : 12.0534 < r < 12.0534
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1378992770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.487 +/- 0.0158464 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.487 @ 95%CL (1 toyMC)
median expected limit: r < 14.487 @ 95%CL (1 toyMC)
   68% expected band : 14.487 < r < 14.487
   95% expected band : 14.487 < r < 14.487
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1457087563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1666 +/- 0.0186066 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 12.1666 @ 95%CL (1 toyMC)
median expected limit: r < 12.1666 @ 95%CL (1 toyMC)
   68% expected band : 12.1666 < r < 12.1666
   95% expected band : 12.1666 < r < 12.1666
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1078282711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2469 +/- 0.0100241 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2469 @ 95%CL (1 toyMC)
median expected limit: r < 16.2469 @ 95%CL (1 toyMC)
   68% expected band : 16.2469 < r < 16.2469
   95% expected band : 16.2469 < r < 16.2469
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1357318622
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9764 +/- 0.0178784 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.9764 @ 95%CL (1 toyMC)
median expected limit: r < 13.9764 @ 95%CL (1 toyMC)
   68% expected band : 13.9764 < r < 13.9764
   95% expected band : 13.9764 < r < 13.9764
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1239621496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1404 +/- 0.00333677 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 19.1404 @ 95%CL (1 toyMC)
median expected limit: r < 19.1404 @ 95%CL (1 toyMC)
   68% expected band : 19.1404 < r < 19.1404
   95% expected band : 19.1404 < r < 19.1404
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 204069304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0633 +/- 0.0139158 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.0633 @ 95%CL (1 toyMC)
median expected limit: r < 14.0633 @ 95%CL (1 toyMC)
   68% expected band : 14.0633 < r < 14.0633
   95% expected band : 14.0633 < r < 14.0633
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1931673209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.212 +/- 0.0186257 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.212 @ 95%CL (1 toyMC)
median expected limit: r < 12.212 @ 95%CL (1 toyMC)
   68% expected band : 12.212 < r < 12.212
   95% expected band : 12.212 < r < 12.212
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1749523800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1084 +/- 0.0178412 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.1084 @ 95%CL (1 toyMC)
median expected limit: r < 12.1084 @ 95%CL (1 toyMC)
   68% expected band : 12.1084 < r < 12.1084
   95% expected band : 12.1084 < r < 12.1084
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -493543051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.2039 +/- 0.0181557 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.2039 @ 95%CL (1 toyMC)
median expected limit: r < 12.2039 @ 95%CL (1 toyMC)
   68% expected band : 12.2039 < r < 12.2039
   95% expected band : 12.2039 < r < 12.2039
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 557196240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1189 +/- 0.0213615 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.1189 @ 95%CL (1 toyMC)
median expected limit: r < 12.1189 @ 95%CL (1 toyMC)
   68% expected band : 12.1189 < r < 12.1189
   95% expected band : 12.1189 < r < 12.1189
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 491402254
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2967 +/- 0.0152724 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.2967 @ 95%CL (1 toyMC)
median expected limit: r < 14.2967 @ 95%CL (1 toyMC)
   68% expected band : 14.2967 < r < 14.2967
   95% expected band : 14.2967 < r < 14.2967
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1219869774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.4349 +/- 0.00912234 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.4349 @ 95%CL (1 toyMC)
median expected limit: r < 16.4349 @ 95%CL (1 toyMC)
   68% expected band : 16.4349 < r < 16.4349
   95% expected band : 16.4349 < r < 16.4349
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1933452867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4136 +/- 0.0124333 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4136 @ 95%CL (1 toyMC)
median expected limit: r < 14.4136 @ 95%CL (1 toyMC)
   68% expected band : 14.4136 < r < 14.4136
   95% expected band : 14.4136 < r < 14.4136
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 122495807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1135 +/- 0.0167186 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.1135 @ 95%CL (1 toyMC)
median expected limit: r < 12.1135 @ 95%CL (1 toyMC)
   68% expected band : 12.1135 < r < 12.1135
   95% expected band : 12.1135 < r < 12.1135
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1679722758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.84624 +/- 0.0201245 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.84624 @ 95%CL (1 toyMC)
median expected limit: r < 9.84624 @ 95%CL (1 toyMC)
   68% expected band : 9.84624 < r < 9.84624
   95% expected band : 9.84624 < r < 9.84624
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1820325004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8029 +/- 0.00692884 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 16.8029 @ 95%CL (1 toyMC)
median expected limit: r < 16.8029 @ 95%CL (1 toyMC)
   68% expected band : 16.8029 < r < 16.8029
   95% expected band : 16.8029 < r < 16.8029
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1916363938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.84092 +/- 0.0204849 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.84092 @ 95%CL (1 toyMC)
median expected limit: r < 9.84092 @ 95%CL (1 toyMC)
   68% expected band : 9.84092 < r < 9.84092
   95% expected band : 9.84092 < r < 9.84092
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 147809948
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1285 +/- 0.0165597 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1285 @ 95%CL (1 toyMC)
median expected limit: r < 14.1285 @ 95%CL (1 toyMC)
   68% expected band : 14.1285 < r < 14.1285
   95% expected band : 14.1285 < r < 14.1285
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -944950229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0232 +/- 0.0133285 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.0232 @ 95%CL (1 toyMC)
median expected limit: r < 15.0232 @ 95%CL (1 toyMC)
   68% expected band : 15.0232 < r < 15.0232
   95% expected band : 15.0232 < r < 15.0232
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1462727500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9508 +/- 0.00647245 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.9508 @ 95%CL (1 toyMC)
median expected limit: r < 17.9508 @ 95%CL (1 toyMC)
   68% expected band : 17.9508 < r < 17.9508
   95% expected band : 17.9508 < r < 17.9508
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1518375039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3959 +/- 0.0179433 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.3959 @ 95%CL (1 toyMC)
median expected limit: r < 12.3959 @ 95%CL (1 toyMC)
   68% expected band : 12.3959 < r < 12.3959
   95% expected band : 12.3959 < r < 12.3959
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -960948886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.25 +/- 0.0122056 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.25 @ 95%CL (1 toyMC)
median expected limit: r < 14.25 @ 95%CL (1 toyMC)
   68% expected band : 14.25 < r < 14.25
   95% expected band : 14.25 < r < 14.25
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 355561421
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3567 +/- 0.011943 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.3567 @ 95%CL (1 toyMC)
median expected limit: r < 14.3567 @ 95%CL (1 toyMC)
   68% expected band : 14.3567 < r < 14.3567
   95% expected band : 14.3567 < r < 14.3567
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 679275127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0731 +/- 0.00338564 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0731 @ 95%CL (1 toyMC)
median expected limit: r < 19.0731 @ 95%CL (1 toyMC)
   68% expected band : 19.0731 < r < 19.0731
   95% expected band : 19.0731 < r < 19.0731
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1796285378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3312 +/- 0.0143042 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.3312 @ 95%CL (1 toyMC)
median expected limit: r < 14.3312 @ 95%CL (1 toyMC)
   68% expected band : 14.3312 < r < 14.3312
   95% expected band : 14.3312 < r < 14.3312
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1332821420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3697 +/- 0.0131671 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.3697 @ 95%CL (1 toyMC)
median expected limit: r < 14.3697 @ 95%CL (1 toyMC)
   68% expected band : 14.3697 < r < 14.3697
   95% expected band : 14.3697 < r < 14.3697
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1748683574
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8925 +/- 0.00615164 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.8925 @ 95%CL (1 toyMC)
median expected limit: r < 17.8925 @ 95%CL (1 toyMC)
   68% expected band : 17.8925 < r < 17.8925
   95% expected band : 17.8925 < r < 17.8925
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 352266599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.6437 +/- 0.0172782 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.6437 @ 95%CL (1 toyMC)
median expected limit: r < 11.6437 @ 95%CL (1 toyMC)
   68% expected band : 11.6437 < r < 11.6437
   95% expected band : 11.6437 < r < 11.6437
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 846970920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0011 +/- 0.00582934 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.0011 @ 95%CL (1 toyMC)
median expected limit: r < 18.0011 @ 95%CL (1 toyMC)
   68% expected band : 18.0011 < r < 18.0011
   95% expected band : 18.0011 < r < 18.0011
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1796916049
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3562 +/- 0.0143997 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.3562 @ 95%CL (1 toyMC)
median expected limit: r < 14.3562 @ 95%CL (1 toyMC)
   68% expected band : 14.3562 < r < 14.3562
   95% expected band : 14.3562 < r < 14.3562
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1385805059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4839 +/- 0.00561989 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.4839 @ 95%CL (1 toyMC)
median expected limit: r < 17.4839 @ 95%CL (1 toyMC)
   68% expected band : 17.4839 < r < 17.4839
   95% expected band : 17.4839 < r < 17.4839
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 378036142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.86209 +/- 0.0193415 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.86209 @ 95%CL (1 toyMC)
median expected limit: r < 9.86209 @ 95%CL (1 toyMC)
   68% expected band : 9.86209 < r < 9.86209
   95% expected band : 9.86209 < r < 9.86209
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 438528103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4414 +/- 0.00905887 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 17.4414 @ 95%CL (1 toyMC)
median expected limit: r < 17.4414 @ 95%CL (1 toyMC)
   68% expected band : 17.4414 < r < 17.4414
   95% expected band : 17.4414 < r < 17.4414
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2033368381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.82329 +/- 0.0152678 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.82329 @ 95%CL (1 toyMC)
median expected limit: r < 9.82329 @ 95%CL (1 toyMC)
   68% expected band : 9.82329 < r < 9.82329
   95% expected band : 9.82329 < r < 9.82329
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1876633500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4676 +/- 0.0130655 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4676 @ 95%CL (1 toyMC)
median expected limit: r < 14.4676 @ 95%CL (1 toyMC)
   68% expected band : 14.4676 < r < 14.4676
   95% expected band : 14.4676 < r < 14.4676
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1021504651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0954 +/- 0.00975041 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.0954 @ 95%CL (1 toyMC)
median expected limit: r < 16.0954 @ 95%CL (1 toyMC)
   68% expected band : 16.0954 < r < 16.0954
   95% expected band : 16.0954 < r < 16.0954
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -338749483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0355 +/- 0.0140467 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.0355 @ 95%CL (1 toyMC)
median expected limit: r < 14.0355 @ 95%CL (1 toyMC)
   68% expected band : 14.0355 < r < 14.0355
   95% expected band : 14.0355 < r < 14.0355
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1304255293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9983 +/- 0.0194151 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.9983 @ 95%CL (1 toyMC)
median expected limit: r < 11.9983 @ 95%CL (1 toyMC)
   68% expected band : 11.9983 < r < 11.9983
   95% expected band : 11.9983 < r < 11.9983
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1703574029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4206 +/- 0.0158145 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.4206 @ 95%CL (1 toyMC)
median expected limit: r < 14.4206 @ 95%CL (1 toyMC)
   68% expected band : 14.4206 < r < 14.4206
   95% expected band : 14.4206 < r < 14.4206
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1101200945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0462 +/- 0.0124573 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.0462 @ 95%CL (1 toyMC)
median expected limit: r < 14.0462 @ 95%CL (1 toyMC)
   68% expected band : 14.0462 < r < 14.0462
   95% expected band : 14.0462 < r < 14.0462
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -990326738
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1477 +/- 0.0164623 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.1477 @ 95%CL (1 toyMC)
median expected limit: r < 14.1477 @ 95%CL (1 toyMC)
   68% expected band : 14.1477 < r < 14.1477
   95% expected band : 14.1477 < r < 14.1477
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1993091031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.82387 +/- 0.0163723 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 9.82387 @ 95%CL (1 toyMC)
median expected limit: r < 9.82387 @ 95%CL (1 toyMC)
   68% expected band : 9.82387 < r < 9.82387
   95% expected band : 9.82387 < r < 9.82387
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1494617695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1872 +/- 0.00992285 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1872 @ 95%CL (1 toyMC)
median expected limit: r < 16.1872 @ 95%CL (1 toyMC)
   68% expected band : 16.1872 < r < 16.1872
   95% expected band : 16.1872 < r < 16.1872
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 983734270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.77746 +/- 0.0156245 @ 95% CL (100 tries)
Done in 0.23 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.77746 @ 95%CL (1 toyMC)
median expected limit: r < 9.77746 @ 95%CL (1 toyMC)
   68% expected band : 9.77746 < r < 9.77746
   95% expected band : 9.77746 < r < 9.77746
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -744838140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.58 +/- 0.00463213 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.58 @ 95%CL (1 toyMC)
median expected limit: r < 18.58 @ 95%CL (1 toyMC)
   68% expected band : 18.58 < r < 18.58
   95% expected band : 18.58 < r < 18.58
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -62031212
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5836 +/- 0.0086458 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5836 @ 95%CL (1 toyMC)
median expected limit: r < 16.5836 @ 95%CL (1 toyMC)
   68% expected band : 16.5836 < r < 16.5836
   95% expected band : 16.5836 < r < 16.5836
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 252027724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0346 +/- 0.0159849 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0346 @ 95%CL (1 toyMC)
median expected limit: r < 12.0346 @ 95%CL (1 toyMC)
   68% expected band : 12.0346 < r < 12.0346
   95% expected band : 12.0346 < r < 12.0346
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1364688467
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.80038 +/- 0.0168348 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.80038 @ 95%CL (1 toyMC)
median expected limit: r < 9.80038 @ 95%CL (1 toyMC)
   68% expected band : 9.80038 < r < 9.80038
   95% expected band : 9.80038 < r < 9.80038
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 291856089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.3679 +/- 0.0131607 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.3679 @ 95%CL (1 toyMC)
median expected limit: r < 15.3679 @ 95%CL (1 toyMC)
   68% expected band : 15.3679 < r < 15.3679
   95% expected band : 15.3679 < r < 15.3679
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 26145141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.78795 +/- 0.0190598 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.78795 @ 95%CL (1 toyMC)
median expected limit: r < 9.78795 @ 95%CL (1 toyMC)
   68% expected band : 9.78795 < r < 9.78795
   95% expected band : 9.78795 < r < 9.78795
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -103382484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9332 +/- 0.0153829 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.9332 @ 95%CL (1 toyMC)
median expected limit: r < 11.9332 @ 95%CL (1 toyMC)
   68% expected band : 11.9332 < r < 11.9332
   95% expected band : 11.9332 < r < 11.9332
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1752067766
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2127 +/- 0.0160152 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.2127 @ 95%CL (1 toyMC)
median expected limit: r < 14.2127 @ 95%CL (1 toyMC)
   68% expected band : 14.2127 < r < 14.2127
   95% expected band : 14.2127 < r < 14.2127
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2094426209
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1339 +/- 0.015612 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.1339 @ 95%CL (1 toyMC)
median expected limit: r < 12.1339 @ 95%CL (1 toyMC)
   68% expected band : 12.1339 < r < 12.1339
   95% expected band : 12.1339 < r < 12.1339
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -378293227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5006 +/- 0.0114 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.5006 @ 95%CL (1 toyMC)
median expected limit: r < 16.5006 @ 95%CL (1 toyMC)
   68% expected band : 16.5006 < r < 16.5006
   95% expected band : 16.5006 < r < 16.5006
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1971504652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5918 +/- 0.0131482 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.5918 @ 95%CL (1 toyMC)
median expected limit: r < 14.5918 @ 95%CL (1 toyMC)
   68% expected band : 14.5918 < r < 14.5918
   95% expected band : 14.5918 < r < 14.5918
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 147036726
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3071 +/- 0.0137592 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.3071 @ 95%CL (1 toyMC)
median expected limit: r < 14.3071 @ 95%CL (1 toyMC)
   68% expected band : 14.3071 < r < 14.3071
   95% expected band : 14.3071 < r < 14.3071
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 396149870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0282 +/- 0.0232592 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0282 @ 95%CL (1 toyMC)
median expected limit: r < 12.0282 @ 95%CL (1 toyMC)
   68% expected band : 12.0282 < r < 12.0282
   95% expected band : 12.0282 < r < 12.0282
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1295445544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9125 +/- 0.0126406 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.9125 @ 95%CL (1 toyMC)
median expected limit: r < 13.9125 @ 95%CL (1 toyMC)
   68% expected band : 13.9125 < r < 13.9125
   95% expected band : 13.9125 < r < 13.9125
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 805874616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1175 +/- 0.0141602 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1175 @ 95%CL (1 toyMC)
median expected limit: r < 14.1175 @ 95%CL (1 toyMC)
   68% expected band : 14.1175 < r < 14.1175
   95% expected band : 14.1175 < r < 14.1175
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1151389208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6722 +/- 0.0098575 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.6722 @ 95%CL (1 toyMC)
median expected limit: r < 16.6722 @ 95%CL (1 toyMC)
   68% expected band : 16.6722 < r < 16.6722
   95% expected band : 16.6722 < r < 16.6722
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2049554023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.628 +/- 0.00710611 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.628 @ 95%CL (1 toyMC)
median expected limit: r < 17.628 @ 95%CL (1 toyMC)
   68% expected band : 17.628 < r < 17.628
   95% expected band : 17.628 < r < 17.628
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1994631367
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.1392 +/- 0.0173504 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.1392 @ 95%CL (1 toyMC)
median expected limit: r < 12.1392 @ 95%CL (1 toyMC)
   68% expected band : 12.1392 < r < 12.1392
   95% expected band : 12.1392 < r < 12.1392
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1510644631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.205 +/- 0.0108707 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.205 @ 95%CL (1 toyMC)
median expected limit: r < 16.205 @ 95%CL (1 toyMC)
   68% expected band : 16.205 < r < 16.205
   95% expected band : 16.205 < r < 16.205
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1180306673
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.9981 +/- 0.0209333 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 11.9981 @ 95%CL (1 toyMC)
median expected limit: r < 11.9981 @ 95%CL (1 toyMC)
   68% expected band : 11.9981 < r < 11.9981
   95% expected band : 11.9981 < r < 11.9981
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1263506939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2473 +/- 0.0138688 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.2473 @ 95%CL (1 toyMC)
median expected limit: r < 14.2473 @ 95%CL (1 toyMC)
   68% expected band : 14.2473 < r < 14.2473
   95% expected band : 14.2473 < r < 14.2473
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1179218702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7946 +/- 0.0152828 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.7946 @ 95%CL (1 toyMC)
median expected limit: r < 14.7946 @ 95%CL (1 toyMC)
   68% expected band : 14.7946 < r < 14.7946
   95% expected band : 14.7946 < r < 14.7946
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 182118361
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4255 +/- 0.00748823 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4255 @ 95%CL (1 toyMC)
median expected limit: r < 17.4255 @ 95%CL (1 toyMC)
   68% expected band : 17.4255 < r < 17.4255
   95% expected band : 17.4255 < r < 17.4255
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1504179617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.3211 +/- 0.0159605 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.3211 @ 95%CL (1 toyMC)
median expected limit: r < 12.3211 @ 95%CL (1 toyMC)
   68% expected band : 12.3211 < r < 12.3211
   95% expected band : 12.3211 < r < 12.3211
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 837896463
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9202 +/- 0.0107243 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 13.9202 @ 95%CL (1 toyMC)
median expected limit: r < 13.9202 @ 95%CL (1 toyMC)
   68% expected band : 13.9202 < r < 13.9202
   95% expected band : 13.9202 < r < 13.9202
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1709672822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2939 +/- 0.00447867 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.2939 @ 95%CL (1 toyMC)
median expected limit: r < 18.2939 @ 95%CL (1 toyMC)
   68% expected band : 18.2939 < r < 18.2939
   95% expected band : 18.2939 < r < 18.2939
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -54712450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0416 +/- 0.019153 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 12.0416 @ 95%CL (1 toyMC)
median expected limit: r < 12.0416 @ 95%CL (1 toyMC)
   68% expected band : 12.0416 < r < 12.0416
   95% expected band : 12.0416 < r < 12.0416
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -427470083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4084 +/- 0.0139045 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.4084 @ 95%CL (1 toyMC)
median expected limit: r < 14.4084 @ 95%CL (1 toyMC)
   68% expected band : 14.4084 < r < 14.4084
   95% expected band : 14.4084 < r < 14.4084
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1395752922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 12.0546 +/- 0.0164857 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 12.0546 @ 95%CL (1 toyMC)
median expected limit: r < 12.0546 @ 95%CL (1 toyMC)
   68% expected band : 12.0546 < r < 12.0546
   95% expected band : 12.0546 < r < 12.0546
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1440032186
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.79014 +/- 0.0189223 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.79014 @ 95%CL (1 toyMC)
median expected limit: r < 9.79014 @ 95%CL (1 toyMC)
   68% expected band : 9.79014 < r < 9.79014
   95% expected band : 9.79014 < r < 9.79014
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -604363676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.82035 +/- 0.0163263 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.82035 @ 95%CL (1 toyMC)
median expected limit: r < 9.82035 @ 95%CL (1 toyMC)
   68% expected band : 9.82035 < r < 9.82035
   95% expected band : 9.82035 < r < 9.82035
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -542053686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9554 +/- 0.0140825 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.9554 @ 95%CL (1 toyMC)
median expected limit: r < 14.9554 @ 95%CL (1 toyMC)
   68% expected band : 14.9554 < r < 14.9554
   95% expected band : 14.9554 < r < 14.9554
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1565088749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1191 +/- 0.0104689 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.1191 @ 95%CL (1 toyMC)
median expected limit: r < 16.1191 @ 95%CL (1 toyMC)
   68% expected band : 16.1191 < r < 16.1191
   95% expected band : 16.1191 < r < 16.1191
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 231353140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9361 +/- 0.00762956 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.9361 @ 95%CL (1 toyMC)
median expected limit: r < 17.9361 @ 95%CL (1 toyMC)
   68% expected band : 17.9361 < r < 17.9361
   95% expected band : 17.9361 < r < 17.9361
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -495028289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5503 +/- 0.00414081 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.5503 @ 95%CL (1 toyMC)
median expected limit: r < 18.5503 @ 95%CL (1 toyMC)
   68% expected band : 18.5503 < r < 18.5503
   95% expected band : 18.5503 < r < 18.5503
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2050036939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.84787 +/- 0.0153714 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 9.84787 @ 95%CL (1 toyMC)
median expected limit: r < 9.84787 @ 95%CL (1 toyMC)
   68% expected band : 9.84787 < r < 9.84787
   95% expected band : 9.84787 < r < 9.84787
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -929202990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8741 +/- 0.00323354 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8741 @ 95%CL (1 toyMC)
median expected limit: r < 18.8741 @ 95%CL (1 toyMC)
   68% expected band : 18.8741 < r < 18.8741
   95% expected band : 18.8741 < r < 18.8741
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1544074883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.87582 +/- 0.0191484 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 9.87582 @ 95%CL (1 toyMC)
median expected limit: r < 9.87582 @ 95%CL (1 toyMC)
   68% expected band : 9.87582 < r < 9.87582
   95% expected band : 9.87582 < r < 9.87582
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1453825620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.4967 +/- 0.01347 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.4967 @ 95%CL (1 toyMC)
median expected limit: r < 14.4967 @ 95%CL (1 toyMC)
   68% expected band : 14.4967 < r < 14.4967
   95% expected band : 14.4967 < r < 14.4967
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -938693178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3159 +/- 0.00878614 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.3159 @ 95%CL (1 toyMC)
median expected limit: r < 16.3159 @ 95%CL (1 toyMC)
   68% expected band : 16.3159 < r < 16.3159
   95% expected band : 16.3159 < r < 16.3159
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 100191155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9918 +/- 0.00350476 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.9918 @ 95%CL (1 toyMC)
median expected limit: r < 18.9918 @ 95%CL (1 toyMC)
   68% expected band : 18.9918 < r < 18.9918
   95% expected band : 18.9918 < r < 18.9918
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 292009837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.0074 +/- 0.0121939 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.0074 @ 95%CL (1 toyMC)
median expected limit: r < 15.0074 @ 95%CL (1 toyMC)
   68% expected band : 15.0074 < r < 15.0074
   95% expected band : 15.0074 < r < 15.0074
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 840224575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.975 +/- 0.0165965 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.975 @ 95%CL (1 toyMC)
median expected limit: r < 11.975 @ 95%CL (1 toyMC)
   68% expected band : 11.975 < r < 11.975
   95% expected band : 11.975 < r < 11.975
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1255005616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.5311 +/- 0.0139393 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.5311 @ 95%CL (1 toyMC)
median expected limit: r < 14.5311 @ 95%CL (1 toyMC)
   68% expected band : 14.5311 < r < 14.5311
   95% expected band : 14.5311 < r < 14.5311
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1021504651.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-103382484.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1107851127.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1151389208.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1179218702.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1180306673.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1219869774.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1239621496.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1255005616.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-12686802.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1295445544.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1304255293.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1357318622.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1364688467.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1378992770.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1385805059.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1461665138.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1462727500.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1518375039.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1633471683.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1683141213.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1748683574.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1796916049.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1916363938.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1931673209.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1971504652.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1993091031.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1994631367.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-2049554023.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-2050036939.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-2094426209.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-338749483.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-378293227.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-427470083.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-493543051.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-495028289.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-542053686.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-54712450.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-557113960.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-604363676.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-62031212.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-70312157.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-744838140.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-929202990.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-938693178.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-944950229.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-960948886.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-990326738.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.100191155.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1078282711.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1101200945.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.122495807.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1263506939.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1332821420.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1395752922.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1440032186.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1453825620.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1457087563.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.147036726.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.147809948.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1494617695.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1504179617.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1510644631.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.152603802.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1544074883.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1545141331.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1565088749.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1679722758.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1703574029.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1709672822.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1749523800.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1752067766.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1796285378.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1820325004.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.182118361.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1876633500.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1908242758.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1933452867.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.2033368381.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.204069304.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.2105248374.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.231353140.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.252027724.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.26145141.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.291856089.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.292009837.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.352266599.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.355561421.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.378036142.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.396149870.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.438528103.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.491402254.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.557196240.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.679275127.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.805874616.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.837896463.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.840224575.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.842709808.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.846970920.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.983734270.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 748438572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5324 +/- 0.0211676 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5324 @ 95%CL (1 toyMC)
median expected limit: r < 11.5324 @ 95%CL (1 toyMC)
   68% expected band : 11.5324 < r < 11.5324
   95% expected band : 11.5324 < r < 11.5324
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -871554671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3294 +/- 0.0111436 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.3294 @ 95%CL (1 toyMC)
median expected limit: r < 16.3294 @ 95%CL (1 toyMC)
   68% expected band : 16.3294 < r < 16.3294
   95% expected band : 16.3294 < r < 16.3294
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1696562869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0013 +/- 0.00851182 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.0013 @ 95%CL (1 toyMC)
median expected limit: r < 17.0013 @ 95%CL (1 toyMC)
   68% expected band : 17.0013 < r < 17.0013
   95% expected band : 17.0013 < r < 17.0013
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 960478678
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0347 +/- 0.0031388 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 19.0347 @ 95%CL (1 toyMC)
median expected limit: r < 19.0347 @ 95%CL (1 toyMC)
   68% expected band : 19.0347 < r < 19.0347
   95% expected band : 19.0347 < r < 19.0347
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1205512654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7267 +/- 0.0119905 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 14.7267 @ 95%CL (1 toyMC)
median expected limit: r < 14.7267 @ 95%CL (1 toyMC)
   68% expected band : 14.7267 < r < 14.7267
   95% expected band : 14.7267 < r < 14.7267
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -863221266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5249 +/- 0.022541 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5249 @ 95%CL (1 toyMC)
median expected limit: r < 11.5249 @ 95%CL (1 toyMC)
   68% expected band : 11.5249 < r < 11.5249
   95% expected band : 11.5249 < r < 11.5249
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 35491920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6694 +/- 0.00838158 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.6694 @ 95%CL (1 toyMC)
median expected limit: r < 17.6694 @ 95%CL (1 toyMC)
   68% expected band : 17.6694 < r < 17.6694
   95% expected band : 17.6694 < r < 17.6694
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1197250443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2732 +/- 0.0112007 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2732 @ 95%CL (1 toyMC)
median expected limit: r < 16.2732 @ 95%CL (1 toyMC)
   68% expected band : 16.2732 < r < 16.2732
   95% expected band : 16.2732 < r < 16.2732
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 562416312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5609 +/- 0.0193551 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5609 @ 95%CL (1 toyMC)
median expected limit: r < 11.5609 @ 95%CL (1 toyMC)
   68% expected band : 11.5609 < r < 11.5609
   95% expected band : 11.5609 < r < 11.5609
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -765190583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2212 +/- 0.0151457 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2212 @ 95%CL (1 toyMC)
median expected limit: r < 14.2212 @ 95%CL (1 toyMC)
   68% expected band : 14.2212 < r < 14.2212
   95% expected band : 14.2212 < r < 14.2212
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 249510701
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2633 +/- 0.0123303 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.2633 @ 95%CL (1 toyMC)
median expected limit: r < 14.2633 @ 95%CL (1 toyMC)
   68% expected band : 14.2633 < r < 14.2633
   95% expected band : 14.2633 < r < 14.2633
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -174801142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5667 +/- 0.0181605 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5667 @ 95%CL (1 toyMC)
median expected limit: r < 11.5667 @ 95%CL (1 toyMC)
   68% expected band : 11.5667 < r < 11.5667
   95% expected band : 11.5667 < r < 11.5667
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -554211654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0434 +/- 0.00887297 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.0434 @ 95%CL (1 toyMC)
median expected limit: r < 16.0434 @ 95%CL (1 toyMC)
   68% expected band : 16.0434 < r < 16.0434
   95% expected band : 16.0434 < r < 16.0434
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 891976750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5171 +/- 0.0176587 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5171 @ 95%CL (1 toyMC)
median expected limit: r < 11.5171 @ 95%CL (1 toyMC)
   68% expected band : 11.5171 < r < 11.5171
   95% expected band : 11.5171 < r < 11.5171
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1351617083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8474 +/- 0.00686038 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.8474 @ 95%CL (1 toyMC)
median expected limit: r < 17.8474 @ 95%CL (1 toyMC)
   68% expected band : 17.8474 < r < 17.8474
   95% expected band : 17.8474 < r < 17.8474
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -333464124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5184 +/- 0.0182802 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5184 @ 95%CL (1 toyMC)
median expected limit: r < 11.5184 @ 95%CL (1 toyMC)
   68% expected band : 11.5184 < r < 11.5184
   95% expected band : 11.5184 < r < 11.5184
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1345537644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1024 +/- 0.0173776 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1024 @ 95%CL (1 toyMC)
median expected limit: r < 14.1024 @ 95%CL (1 toyMC)
   68% expected band : 14.1024 < r < 14.1024
   95% expected band : 14.1024 < r < 14.1024
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1088223447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5746 +/- 0.0191836 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5746 @ 95%CL (1 toyMC)
median expected limit: r < 11.5746 @ 95%CL (1 toyMC)
   68% expected band : 11.5746 < r < 11.5746
   95% expected band : 11.5746 < r < 11.5746
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -10041269
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8821 +/- 0.0150987 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.8821 @ 95%CL (1 toyMC)
median expected limit: r < 13.8821 @ 95%CL (1 toyMC)
   68% expected band : 13.8821 < r < 13.8821
   95% expected band : 13.8821 < r < 13.8821
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 438539624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5554 +/- 0.0163174 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5554 @ 95%CL (1 toyMC)
median expected limit: r < 11.5554 @ 95%CL (1 toyMC)
   68% expected band : 11.5554 < r < 11.5554
   95% expected band : 11.5554 < r < 11.5554
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1488479962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7509 +/- 0.00748209 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.7509 @ 95%CL (1 toyMC)
median expected limit: r < 17.7509 @ 95%CL (1 toyMC)
   68% expected band : 17.7509 < r < 17.7509
   95% expected band : 17.7509 < r < 17.7509
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -636286640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5431 +/- 0.0162662 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5431 @ 95%CL (1 toyMC)
median expected limit: r < 11.5431 @ 95%CL (1 toyMC)
   68% expected band : 11.5431 < r < 11.5431
   95% expected band : 11.5431 < r < 11.5431
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1435380884
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.3724 +/- 0.00978257 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.3724 @ 95%CL (1 toyMC)
median expected limit: r < 16.3724 @ 95%CL (1 toyMC)
   68% expected band : 16.3724 < r < 16.3724
   95% expected band : 16.3724 < r < 16.3724
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 629436834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5117 +/- 0.00473756 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.5117 @ 95%CL (1 toyMC)
median expected limit: r < 18.5117 @ 95%CL (1 toyMC)
   68% expected band : 18.5117 < r < 18.5117
   95% expected band : 18.5117 < r < 18.5117
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -474509454
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1164 +/- 0.0142925 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1164 @ 95%CL (1 toyMC)
median expected limit: r < 14.1164 @ 95%CL (1 toyMC)
   68% expected band : 14.1164 < r < 14.1164
   95% expected band : 14.1164 < r < 14.1164
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -719811248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0871 +/- 0.0136168 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0871 @ 95%CL (1 toyMC)
median expected limit: r < 14.0871 @ 95%CL (1 toyMC)
   68% expected band : 14.0871 < r < 14.0871
   95% expected band : 14.0871 < r < 14.0871
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 802389086
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4707 +/- 0.00657203 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.4707 @ 95%CL (1 toyMC)
median expected limit: r < 17.4707 @ 95%CL (1 toyMC)
   68% expected band : 17.4707 < r < 17.4707
   95% expected band : 17.4707 < r < 17.4707
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2049763081
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9063 +/- 0.0177407 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.9063 @ 95%CL (1 toyMC)
median expected limit: r < 13.9063 @ 95%CL (1 toyMC)
   68% expected band : 13.9063 < r < 13.9063
   95% expected band : 13.9063 < r < 13.9063
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1123238848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5504 +/- 0.0178053 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5504 @ 95%CL (1 toyMC)
median expected limit: r < 11.5504 @ 95%CL (1 toyMC)
   68% expected band : 11.5504 < r < 11.5504
   95% expected band : 11.5504 < r < 11.5504
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1697633277
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6354 +/- 0.00824343 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.6354 @ 95%CL (1 toyMC)
median expected limit: r < 16.6354 @ 95%CL (1 toyMC)
   68% expected band : 16.6354 < r < 16.6354
   95% expected band : 16.6354 < r < 16.6354
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1035523492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1019 +/- 0.0157363 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.1019 @ 95%CL (1 toyMC)
median expected limit: r < 14.1019 @ 95%CL (1 toyMC)
   68% expected band : 14.1019 < r < 14.1019
   95% expected band : 14.1019 < r < 14.1019
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -335312801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9876 +/- 0.0166948 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.9876 @ 95%CL (1 toyMC)
median expected limit: r < 13.9876 @ 95%CL (1 toyMC)
   68% expected band : 13.9876 < r < 13.9876
   95% expected band : 13.9876 < r < 13.9876
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -665803850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1105 +/- 0.0149655 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1105 @ 95%CL (1 toyMC)
median expected limit: r < 14.1105 @ 95%CL (1 toyMC)
   68% expected band : 14.1105 < r < 14.1105
   95% expected band : 14.1105 < r < 14.1105
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -555565989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4531 +/- 0.00360653 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.4531 @ 95%CL (1 toyMC)
median expected limit: r < 18.4531 @ 95%CL (1 toyMC)
   68% expected band : 18.4531 < r < 18.4531
   95% expected band : 18.4531 < r < 18.4531
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2056971046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5247 +/- 0.0181844 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5247 @ 95%CL (1 toyMC)
median expected limit: r < 11.5247 @ 95%CL (1 toyMC)
   68% expected band : 11.5247 < r < 11.5247
   95% expected band : 11.5247 < r < 11.5247
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1153903897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8735 +/- 0.0149654 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.8735 @ 95%CL (1 toyMC)
median expected limit: r < 13.8735 @ 95%CL (1 toyMC)
   68% expected band : 13.8735 < r < 13.8735
   95% expected band : 13.8735 < r < 13.8735
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2071330888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7502 +/- 0.0060153 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.7502 @ 95%CL (1 toyMC)
median expected limit: r < 17.7502 @ 95%CL (1 toyMC)
   68% expected band : 17.7502 < r < 17.7502
   95% expected band : 17.7502 < r < 17.7502
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2023455359
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5436 +/- 0.0204016 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5436 @ 95%CL (1 toyMC)
median expected limit: r < 11.5436 @ 95%CL (1 toyMC)
   68% expected band : 11.5436 < r < 11.5436
   95% expected band : 11.5436 < r < 11.5436
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 478333110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2068 +/- 0.0135728 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.2068 @ 95%CL (1 toyMC)
median expected limit: r < 14.2068 @ 95%CL (1 toyMC)
   68% expected band : 14.2068 < r < 14.2068
   95% expected band : 14.2068 < r < 14.2068
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -687463184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4884 +/- 0.00478763 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.4884 @ 95%CL (1 toyMC)
median expected limit: r < 18.4884 @ 95%CL (1 toyMC)
   68% expected band : 18.4884 < r < 18.4884
   95% expected band : 18.4884 < r < 18.4884
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -232539933
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8307 +/- 0.00826671 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.8307 @ 95%CL (1 toyMC)
median expected limit: r < 17.8307 @ 95%CL (1 toyMC)
   68% expected band : 17.8307 < r < 17.8307
   95% expected band : 17.8307 < r < 17.8307
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1283357803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1568 +/- 0.0135498 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.1568 @ 95%CL (1 toyMC)
median expected limit: r < 14.1568 @ 95%CL (1 toyMC)
   68% expected band : 14.1568 < r < 14.1568
   95% expected band : 14.1568 < r < 14.1568
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1495092539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0542 +/- 0.018989 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.0542 @ 95%CL (1 toyMC)
median expected limit: r < 14.0542 @ 95%CL (1 toyMC)
   68% expected band : 14.0542 < r < 14.0542
   95% expected band : 14.0542 < r < 14.0542
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 494067574
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5214 +/- 0.00535048 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.5214 @ 95%CL (1 toyMC)
median expected limit: r < 18.5214 @ 95%CL (1 toyMC)
   68% expected band : 18.5214 < r < 18.5214
   95% expected band : 18.5214 < r < 18.5214
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2131944268
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1417 +/- 0.0101631 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1417 @ 95%CL (1 toyMC)
median expected limit: r < 16.1417 @ 95%CL (1 toyMC)
   68% expected band : 16.1417 < r < 16.1417
   95% expected band : 16.1417 < r < 16.1417
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1134795399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5012 +/- 0.00551131 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.5012 @ 95%CL (1 toyMC)
median expected limit: r < 18.5012 @ 95%CL (1 toyMC)
   68% expected band : 18.5012 < r < 18.5012
   95% expected band : 18.5012 < r < 18.5012
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1545774385
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6532 +/- 0.0093638 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.6532 @ 95%CL (1 toyMC)
median expected limit: r < 16.6532 @ 95%CL (1 toyMC)
   68% expected band : 16.6532 < r < 16.6532
   95% expected band : 16.6532 < r < 16.6532
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1367136235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3004 +/- 0.014638 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.3004 @ 95%CL (1 toyMC)
median expected limit: r < 14.3004 @ 95%CL (1 toyMC)
   68% expected band : 14.3004 < r < 14.3004
   95% expected band : 14.3004 < r < 14.3004
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 59955978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5711 +/- 0.0190672 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5711 @ 95%CL (1 toyMC)
median expected limit: r < 11.5711 @ 95%CL (1 toyMC)
   68% expected band : 11.5711 < r < 11.5711
   95% expected band : 11.5711 < r < 11.5711
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1350379882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.3197 +/- 0.0144898 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.3197 @ 95%CL (1 toyMC)
median expected limit: r < 14.3197 @ 95%CL (1 toyMC)
   68% expected band : 14.3197 < r < 14.3197
   95% expected band : 14.3197 < r < 14.3197
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 389767662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9689 +/- 0.0145509 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.9689 @ 95%CL (1 toyMC)
median expected limit: r < 13.9689 @ 95%CL (1 toyMC)
   68% expected band : 13.9689 < r < 13.9689
   95% expected band : 13.9689 < r < 13.9689
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1119445554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5027 +/- 0.0166392 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5027 @ 95%CL (1 toyMC)
median expected limit: r < 11.5027 @ 95%CL (1 toyMC)
   68% expected band : 11.5027 < r < 11.5027
   95% expected band : 11.5027 < r < 11.5027
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 762590246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4837 +/- 0.0203552 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.4837 @ 95%CL (1 toyMC)
median expected limit: r < 11.4837 @ 95%CL (1 toyMC)
   68% expected band : 11.4837 < r < 11.4837
   95% expected band : 11.4837 < r < 11.4837
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1037220736
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9041 +/- 0.0148882 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.9041 @ 95%CL (1 toyMC)
median expected limit: r < 13.9041 @ 95%CL (1 toyMC)
   68% expected band : 13.9041 < r < 13.9041
   95% expected band : 13.9041 < r < 13.9041
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1992419488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2657 +/- 0.0155838 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.2657 @ 95%CL (1 toyMC)
median expected limit: r < 14.2657 @ 95%CL (1 toyMC)
   68% expected band : 14.2657 < r < 14.2657
   95% expected band : 14.2657 < r < 14.2657
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 624034577
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.0994 +/- 0.0141345 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.0994 @ 95%CL (1 toyMC)
median expected limit: r < 14.0994 @ 95%CL (1 toyMC)
   68% expected band : 14.0994 < r < 14.0994
   95% expected band : 14.0994 < r < 14.0994
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1787040112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9806 +/- 0.00328548 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.9806 @ 95%CL (1 toyMC)
median expected limit: r < 18.9806 @ 95%CL (1 toyMC)
   68% expected band : 18.9806 < r < 18.9806
   95% expected band : 18.9806 < r < 18.9806
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2143710033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9105 +/- 0.0149297 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.9105 @ 95%CL (1 toyMC)
median expected limit: r < 13.9105 @ 95%CL (1 toyMC)
   68% expected band : 13.9105 < r < 13.9105
   95% expected band : 13.9105 < r < 13.9105
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 945983432
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8722 +/- 0.0135452 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.8722 @ 95%CL (1 toyMC)
median expected limit: r < 13.8722 @ 95%CL (1 toyMC)
   68% expected band : 13.8722 < r < 13.8722
   95% expected band : 13.8722 < r < 13.8722
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -919058792
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9955 +/- 0.0119275 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.9955 @ 95%CL (1 toyMC)
median expected limit: r < 15.9955 @ 95%CL (1 toyMC)
   68% expected band : 15.9955 < r < 15.9955
   95% expected band : 15.9955 < r < 15.9955
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 439810273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0497 +/- 0.0113082 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.0497 @ 95%CL (1 toyMC)
median expected limit: r < 16.0497 @ 95%CL (1 toyMC)
   68% expected band : 16.0497 < r < 16.0497
   95% expected band : 16.0497 < r < 16.0497
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 496421730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.069 +/- 0.0120374 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.069 @ 95%CL (1 toyMC)
median expected limit: r < 14.069 @ 95%CL (1 toyMC)
   68% expected band : 14.069 < r < 14.069
   95% expected band : 14.069 < r < 14.069
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -619430092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5853 +/- 0.0214053 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5853 @ 95%CL (1 toyMC)
median expected limit: r < 11.5853 @ 95%CL (1 toyMC)
   68% expected band : 11.5853 < r < 11.5853
   95% expected band : 11.5853 < r < 11.5853
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1649049805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2859 +/- 0.00763899 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2859 @ 95%CL (1 toyMC)
median expected limit: r < 16.2859 @ 95%CL (1 toyMC)
   68% expected band : 16.2859 < r < 16.2859
   95% expected band : 16.2859 < r < 16.2859
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1227357472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1279 +/- 0.00941467 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1279 @ 95%CL (1 toyMC)
median expected limit: r < 16.1279 @ 95%CL (1 toyMC)
   68% expected band : 16.1279 < r < 16.1279
   95% expected band : 16.1279 < r < 16.1279
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1402422727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9234 +/- 0.0164373 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.9234 @ 95%CL (1 toyMC)
median expected limit: r < 13.9234 @ 95%CL (1 toyMC)
   68% expected band : 13.9234 < r < 13.9234
   95% expected band : 13.9234 < r < 13.9234
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1131123713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5822 +/- 0.00505409 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.5822 @ 95%CL (1 toyMC)
median expected limit: r < 17.5822 @ 95%CL (1 toyMC)
   68% expected band : 17.5822 < r < 17.5822
   95% expected band : 17.5822 < r < 17.5822
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 349441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.2434 +/- 0.0164237 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.2434 @ 95%CL (1 toyMC)
median expected limit: r < 14.2434 @ 95%CL (1 toyMC)
   68% expected band : 14.2434 < r < 14.2434
   95% expected band : 14.2434 < r < 14.2434
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -934237697
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1314 +/- 0.0109818 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1314 @ 95%CL (1 toyMC)
median expected limit: r < 16.1314 @ 95%CL (1 toyMC)
   68% expected band : 16.1314 < r < 16.1314
   95% expected band : 16.1314 < r < 16.1314
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 10058945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1386 +/- 0.00907904 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.1386 @ 95%CL (1 toyMC)
median expected limit: r < 16.1386 @ 95%CL (1 toyMC)
   68% expected band : 16.1386 < r < 16.1386
   95% expected band : 16.1386 < r < 16.1386
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -316748072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2257 +/- 0.00941293 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.2257 @ 95%CL (1 toyMC)
median expected limit: r < 16.2257 @ 95%CL (1 toyMC)
   68% expected band : 16.2257 < r < 16.2257
   95% expected band : 16.2257 < r < 16.2257
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1704471184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8847 +/- 0.0150369 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.8847 @ 95%CL (1 toyMC)
median expected limit: r < 13.8847 @ 95%CL (1 toyMC)
   68% expected band : 13.8847 < r < 13.8847
   95% expected band : 13.8847 < r < 13.8847
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 368434491
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9528 +/- 0.0124297 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.9528 @ 95%CL (1 toyMC)
median expected limit: r < 13.9528 @ 95%CL (1 toyMC)
   68% expected band : 13.9528 < r < 13.9528
   95% expected band : 13.9528 < r < 13.9528
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 207852918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.138 +/- 0.0115241 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.138 @ 95%CL (1 toyMC)
median expected limit: r < 16.138 @ 95%CL (1 toyMC)
   68% expected band : 16.138 < r < 16.138
   95% expected band : 16.138 < r < 16.138
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 879263921
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.6519 +/- 0.0127958 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.6519 @ 95%CL (1 toyMC)
median expected limit: r < 14.6519 @ 95%CL (1 toyMC)
   68% expected band : 14.6519 < r < 14.6519
   95% expected band : 14.6519 < r < 14.6519
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1806956142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8697 +/- 0.0146728 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.8697 @ 95%CL (1 toyMC)
median expected limit: r < 13.8697 @ 95%CL (1 toyMC)
   68% expected band : 13.8697 < r < 13.8697
   95% expected band : 13.8697 < r < 13.8697
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -755524433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9268 +/- 0.0142713 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.9268 @ 95%CL (1 toyMC)
median expected limit: r < 13.9268 @ 95%CL (1 toyMC)
   68% expected band : 13.9268 < r < 13.9268
   95% expected band : 13.9268 < r < 13.9268
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1038435072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.48 +/- 0.00453039 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.48 @ 95%CL (1 toyMC)
median expected limit: r < 18.48 @ 95%CL (1 toyMC)
   68% expected band : 18.48 < r < 18.48
   95% expected band : 18.48 < r < 18.48
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 377937674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0482 +/- 0.012191 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.0482 @ 95%CL (1 toyMC)
median expected limit: r < 16.0482 @ 95%CL (1 toyMC)
   68% expected band : 16.0482 < r < 16.0482
   95% expected band : 16.0482 < r < 16.0482
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1907038335
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5384 +/- 0.0171306 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5384 @ 95%CL (1 toyMC)
median expected limit: r < 11.5384 @ 95%CL (1 toyMC)
   68% expected band : 11.5384 < r < 11.5384
   95% expected band : 11.5384 < r < 11.5384
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1584668831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1024 +/- 0.0134121 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.1024 @ 95%CL (1 toyMC)
median expected limit: r < 14.1024 @ 95%CL (1 toyMC)
   68% expected band : 14.1024 < r < 14.1024
   95% expected band : 14.1024 < r < 14.1024
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -429029494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5287 +/- 0.0195661 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.5287 @ 95%CL (1 toyMC)
median expected limit: r < 11.5287 @ 95%CL (1 toyMC)
   68% expected band : 11.5287 < r < 11.5287
   95% expected band : 11.5287 < r < 11.5287
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2002519876
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1446 +/- 0.0163509 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.1446 @ 95%CL (1 toyMC)
median expected limit: r < 14.1446 @ 95%CL (1 toyMC)
   68% expected band : 14.1446 < r < 14.1446
   95% expected band : 14.1446 < r < 14.1446
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2035741415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.4575 +/- 0.0185723 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.4575 @ 95%CL (1 toyMC)
median expected limit: r < 11.4575 @ 95%CL (1 toyMC)
   68% expected band : 11.4575 < r < 11.4575
   95% expected band : 11.4575 < r < 11.4575
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1180911754
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0216 +/- 0.00912175 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.0216 @ 95%CL (1 toyMC)
median expected limit: r < 17.0216 @ 95%CL (1 toyMC)
   68% expected band : 17.0216 < r < 17.0216
   95% expected band : 17.0216 < r < 17.0216
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -648367311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.559 +/- 0.018264 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 11.559 @ 95%CL (1 toyMC)
median expected limit: r < 11.559 @ 95%CL (1 toyMC)
   68% expected band : 11.559 < r < 11.559
   95% expected band : 11.559 < r < 11.559
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1516375439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.014 +/- 0.0113029 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.014 @ 95%CL (1 toyMC)
median expected limit: r < 16.014 @ 95%CL (1 toyMC)
   68% expected band : 16.014 < r < 16.014
   95% expected band : 16.014 < r < 16.014
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 484635499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.047 +/- 0.0140801 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.047 @ 95%CL (1 toyMC)
median expected limit: r < 14.047 @ 95%CL (1 toyMC)
   68% expected band : 14.047 < r < 14.047
   95% expected band : 14.047 < r < 14.047
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1598410654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1861 +/- 0.00869249 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1861 @ 95%CL (1 toyMC)
median expected limit: r < 16.1861 @ 95%CL (1 toyMC)
   68% expected band : 16.1861 < r < 16.1861
   95% expected band : 16.1861 < r < 16.1861
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -16949000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.8917 +/- 0.0143585 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.8917 @ 95%CL (1 toyMC)
median expected limit: r < 13.8917 @ 95%CL (1 toyMC)
   68% expected band : 13.8917 < r < 13.8917
   95% expected band : 13.8917 < r < 13.8917
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -320514887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5086 +/- 0.0104353 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.5086 @ 95%CL (1 toyMC)
median expected limit: r < 16.5086 @ 95%CL (1 toyMC)
   68% expected band : 16.5086 < r < 16.5086
   95% expected band : 16.5086 < r < 16.5086
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2068370940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9342 +/- 0.0136407 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 13.9342 @ 95%CL (1 toyMC)
median expected limit: r < 13.9342 @ 95%CL (1 toyMC)
   68% expected band : 13.9342 < r < 13.9342
   95% expected band : 13.9342 < r < 13.9342
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1451407190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.0162 +/- 0.00907185 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.0162 @ 95%CL (1 toyMC)
median expected limit: r < 16.0162 @ 95%CL (1 toyMC)
   68% expected band : 16.0162 < r < 16.0162
   95% expected band : 16.0162 < r < 16.0162
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1736458352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9682 +/- 0.0177585 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.9682 @ 95%CL (1 toyMC)
median expected limit: r < 13.9682 @ 95%CL (1 toyMC)
   68% expected band : 13.9682 < r < 13.9682
   95% expected band : 13.9682 < r < 13.9682
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 311389142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 11.5145 +/- 0.0179891 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 11.5145 @ 95%CL (1 toyMC)
median expected limit: r < 11.5145 @ 95%CL (1 toyMC)
   68% expected band : 11.5145 < r < 11.5145
   95% expected band : 11.5145 < r < 11.5145
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1616939447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.1346 +/- 0.0144678 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.1346 @ 95%CL (1 toyMC)
median expected limit: r < 14.1346 @ 95%CL (1 toyMC)
   68% expected band : 14.1346 < r < 14.1346
   95% expected band : 14.1346 < r < 14.1346
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -958101908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.9909 +/- 0.0147419 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.9909 @ 95%CL (1 toyMC)
median expected limit: r < 13.9909 @ 95%CL (1 toyMC)
   68% expected band : 13.9909 < r < 13.9909
   95% expected band : 13.9909 < r < 13.9909
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 484693252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.148 +/- 0.0126953 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.148 @ 95%CL (1 toyMC)
median expected limit: r < 16.148 @ 95%CL (1 toyMC)
   68% expected band : 16.148 < r < 16.148
   95% expected band : 16.148 < r < 16.148
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 845641506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4508 +/- 0.00500436 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.4508 @ 95%CL (1 toyMC)
median expected limit: r < 18.4508 @ 95%CL (1 toyMC)
   68% expected band : 18.4508 < r < 18.4508
   95% expected band : 18.4508 < r < 18.4508
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -700432314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.2627 +/- 0.00963414 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.2627 @ 95%CL (1 toyMC)
median expected limit: r < 16.2627 @ 95%CL (1 toyMC)
   68% expected band : 16.2627 < r < 16.2627
   95% expected band : 16.2627 < r < 16.2627
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-10041269.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1035523492.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1037220736.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1038435072.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1088223447.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1119445554.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1131123713.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1205512654.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1227357472.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1345537644.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1367136235.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1402422727.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1488479962.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1495092539.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1516375439.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1545774385.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1616939447.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1649049805.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-16949000.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-174801142.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1806956142.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1907038335.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2002519876.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-2035741415.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2049763081.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2056971046.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-2071330888.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-2131944268.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-232539933.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-316748072.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-320514887.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-333464124.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-335312801.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-429029494.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-474509454.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-554211654.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-555565989.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-619430092.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-636286640.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-648367311.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-665803850.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-687463184.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-700432314.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-719811248.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-755524433.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-765190583.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-863221266.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-871554671.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-919058792.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-934237697.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-958101908.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.10058945.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1123238848.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1134795399.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1153903897.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1180911754.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1197250443.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1283357803.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1350379882.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1351617083.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1435380884.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1451407190.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1584668831.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1598410654.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1696562869.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1697633277.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1704471184.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1736458352.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1787040112.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1992419488.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.2023455359.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.2068370940.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.207852918.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2143710033.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.249510701.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.311389142.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.349441.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.35491920.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.368434491.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.377937674.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.389767662.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.438539624.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.439810273.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.478333110.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.484635499.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.484693252.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.494067574.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.496421730.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.562416312.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.59955978.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.624034577.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.629436834.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.748438572.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.762590246.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.802389086.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.845641506.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.879263921.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.891976750.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.945983432.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.960478678.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -990918242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8501 +/- 0.0107547 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8501 @ 95%CL (1 toyMC)
median expected limit: r < 15.8501 @ 95%CL (1 toyMC)
   68% expected band : 15.8501 < r < 15.8501
   95% expected band : 15.8501 < r < 15.8501
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -63398422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.33 +/- 0.0187073 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.33 @ 95%CL (1 toyMC)
median expected limit: r < 13.33 @ 95%CL (1 toyMC)
   68% expected band : 13.33 < r < 13.33
   95% expected band : 13.33 < r < 13.33
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1748045283
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.698 +/- 0.00405309 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.698 @ 95%CL (1 toyMC)
median expected limit: r < 18.698 @ 95%CL (1 toyMC)
   68% expected band : 18.698 < r < 18.698
   95% expected band : 18.698 < r < 18.698
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 937912058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4461 +/- 0.00505354 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.4461 @ 95%CL (1 toyMC)
median expected limit: r < 18.4461 @ 95%CL (1 toyMC)
   68% expected band : 18.4461 < r < 18.4461
   95% expected band : 18.4461 < r < 18.4461
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 572273817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3086 +/- 0.0154414 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3086 @ 95%CL (1 toyMC)
median expected limit: r < 13.3086 @ 95%CL (1 toyMC)
   68% expected band : 13.3086 < r < 13.3086
   95% expected band : 13.3086 < r < 13.3086
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1634070641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3456 +/- 0.0183156 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3456 @ 95%CL (1 toyMC)
median expected limit: r < 13.3456 @ 95%CL (1 toyMC)
   68% expected band : 13.3456 < r < 13.3456
   95% expected band : 13.3456 < r < 13.3456
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -929980994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.346 +/- 0.0175026 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.346 @ 95%CL (1 toyMC)
median expected limit: r < 13.346 @ 95%CL (1 toyMC)
   68% expected band : 13.346 < r < 13.346
   95% expected band : 13.346 < r < 13.346
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 244813162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9057 +/- 0.0117715 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.9057 @ 95%CL (1 toyMC)
median expected limit: r < 15.9057 @ 95%CL (1 toyMC)
   68% expected band : 15.9057 < r < 15.9057
   95% expected band : 15.9057 < r < 15.9057
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1027571226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3934 +/- 0.0163767 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3934 @ 95%CL (1 toyMC)
median expected limit: r < 13.3934 @ 95%CL (1 toyMC)
   68% expected band : 13.3934 < r < 13.3934
   95% expected band : 13.3934 < r < 13.3934
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1484277346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.1397 +/- 0.0103447 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.1397 @ 95%CL (1 toyMC)
median expected limit: r < 16.1397 @ 95%CL (1 toyMC)
   68% expected band : 16.1397 < r < 16.1397
   95% expected band : 16.1397 < r < 16.1397
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1721887613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3926 +/- 0.0184588 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3926 @ 95%CL (1 toyMC)
median expected limit: r < 13.3926 @ 95%CL (1 toyMC)
   68% expected band : 13.3926 < r < 13.3926
   95% expected band : 13.3926 < r < 13.3926
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2116254111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.914 +/- 0.0100574 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.914 @ 95%CL (1 toyMC)
median expected limit: r < 15.914 @ 95%CL (1 toyMC)
   68% expected band : 15.914 < r < 15.914
   95% expected band : 15.914 < r < 15.914
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 725882220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9594 +/- 0.0109096 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.9594 @ 95%CL (1 toyMC)
median expected limit: r < 15.9594 @ 95%CL (1 toyMC)
   68% expected band : 15.9594 < r < 15.9594
   95% expected band : 15.9594 < r < 15.9594
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 854943433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4531 +/- 0.00705282 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4531 @ 95%CL (1 toyMC)
median expected limit: r < 17.4531 @ 95%CL (1 toyMC)
   68% expected band : 17.4531 < r < 17.4531
   95% expected band : 17.4531 < r < 17.4531
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1929272706
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.947 +/- 0.0119231 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.947 @ 95%CL (1 toyMC)
median expected limit: r < 15.947 @ 95%CL (1 toyMC)
   68% expected band : 15.947 < r < 15.947
   95% expected band : 15.947 < r < 15.947
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 713435092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2948 +/- 0.0141478 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.2948 @ 95%CL (1 toyMC)
median expected limit: r < 13.2948 @ 95%CL (1 toyMC)
   68% expected band : 13.2948 < r < 13.2948
   95% expected band : 13.2948 < r < 13.2948
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2078873525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.405 +/- 0.00509826 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.405 @ 95%CL (1 toyMC)
median expected limit: r < 18.405 @ 95%CL (1 toyMC)
   68% expected band : 18.405 < r < 18.405
   95% expected band : 18.405 < r < 18.405
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1498124055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4967 +/- 0.00809978 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4967 @ 95%CL (1 toyMC)
median expected limit: r < 17.4967 @ 95%CL (1 toyMC)
   68% expected band : 17.4967 < r < 17.4967
   95% expected band : 17.4967 < r < 17.4967
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1732810947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7911 +/- 0.0126238 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.7911 @ 95%CL (1 toyMC)
median expected limit: r < 15.7911 @ 95%CL (1 toyMC)
   68% expected band : 15.7911 < r < 15.7911
   95% expected band : 15.7911 < r < 15.7911
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -397481745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6585 +/- 0.011906 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.6585 @ 95%CL (1 toyMC)
median expected limit: r < 15.6585 @ 95%CL (1 toyMC)
   68% expected band : 15.6585 < r < 15.6585
   95% expected band : 15.6585 < r < 15.6585
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1936432438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.605 +/- 0.0107362 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 15.605 @ 95%CL (1 toyMC)
median expected limit: r < 15.605 @ 95%CL (1 toyMC)
   68% expected band : 15.605 < r < 15.605
   95% expected band : 15.605 < r < 15.605
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1949908434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4323 +/- 0.00799725 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4323 @ 95%CL (1 toyMC)
median expected limit: r < 17.4323 @ 95%CL (1 toyMC)
   68% expected band : 17.4323 < r < 17.4323
   95% expected band : 17.4323 < r < 17.4323
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1849811244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3302 +/- 0.0162735 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3302 @ 95%CL (1 toyMC)
median expected limit: r < 13.3302 @ 95%CL (1 toyMC)
   68% expected band : 13.3302 < r < 13.3302
   95% expected band : 13.3302 < r < 13.3302
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1155811808
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9118 +/- 0.0108615 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.9118 @ 95%CL (1 toyMC)
median expected limit: r < 15.9118 @ 95%CL (1 toyMC)
   68% expected band : 15.9118 < r < 15.9118
   95% expected band : 15.9118 < r < 15.9118
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -410098292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7955 +/- 0.0118987 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.7955 @ 95%CL (1 toyMC)
median expected limit: r < 15.7955 @ 95%CL (1 toyMC)
   68% expected band : 15.7955 < r < 15.7955
   95% expected band : 15.7955 < r < 15.7955
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1287288689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3339 +/- 0.0150559 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3339 @ 95%CL (1 toyMC)
median expected limit: r < 13.3339 @ 95%CL (1 toyMC)
   68% expected band : 13.3339 < r < 13.3339
   95% expected band : 13.3339 < r < 13.3339
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1696248735
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.028 +/- 0.00391023 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 19.028 @ 95%CL (1 toyMC)
median expected limit: r < 19.028 @ 95%CL (1 toyMC)
   68% expected band : 19.028 < r < 19.028
   95% expected band : 19.028 < r < 19.028
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1689857615
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4579 +/- 0.00403692 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.4579 @ 95%CL (1 toyMC)
median expected limit: r < 18.4579 @ 95%CL (1 toyMC)
   68% expected band : 18.4579 < r < 18.4579
   95% expected band : 18.4579 < r < 18.4579
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1027924490
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7119 +/- 0.0118499 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.7119 @ 95%CL (1 toyMC)
median expected limit: r < 15.7119 @ 95%CL (1 toyMC)
   68% expected band : 15.7119 < r < 15.7119
   95% expected band : 15.7119 < r < 15.7119
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1197301241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8589 +/- 0.0108091 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8589 @ 95%CL (1 toyMC)
median expected limit: r < 15.8589 @ 95%CL (1 toyMC)
   68% expected band : 15.8589 < r < 15.8589
   95% expected band : 15.8589 < r < 15.8589
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -476618595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8181 +/- 0.0114288 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8181 @ 95%CL (1 toyMC)
median expected limit: r < 15.8181 @ 95%CL (1 toyMC)
   68% expected band : 15.8181 < r < 15.8181
   95% expected band : 15.8181 < r < 15.8181
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1403430548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7666 +/- 0.00376913 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.7666 @ 95%CL (1 toyMC)
median expected limit: r < 18.7666 @ 95%CL (1 toyMC)
   68% expected band : 18.7666 < r < 18.7666
   95% expected band : 18.7666 < r < 18.7666
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 65662776
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3417 +/- 0.017183 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 13.3417 @ 95%CL (1 toyMC)
median expected limit: r < 13.3417 @ 95%CL (1 toyMC)
   68% expected band : 13.3417 < r < 13.3417
   95% expected band : 13.3417 < r < 13.3417
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -897106873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8692 +/- 0.00561018 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.8692 @ 95%CL (1 toyMC)
median expected limit: r < 17.8692 @ 95%CL (1 toyMC)
   68% expected band : 17.8692 < r < 17.8692
   95% expected band : 17.8692 < r < 17.8692
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -892340460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8176 +/- 0.0114352 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.8176 @ 95%CL (1 toyMC)
median expected limit: r < 15.8176 @ 95%CL (1 toyMC)
   68% expected band : 15.8176 < r < 15.8176
   95% expected band : 15.8176 < r < 15.8176
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1733140844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8433 +/- 0.0114092 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8433 @ 95%CL (1 toyMC)
median expected limit: r < 15.8433 @ 95%CL (1 toyMC)
   68% expected band : 15.8433 < r < 15.8433
   95% expected band : 15.8433 < r < 15.8433
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1430237777
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8092 +/- 0.0110347 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8092 @ 95%CL (1 toyMC)
median expected limit: r < 15.8092 @ 95%CL (1 toyMC)
   68% expected band : 15.8092 < r < 15.8092
   95% expected band : 15.8092 < r < 15.8092
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1900886907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.034 +/- 0.0073272 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.034 @ 95%CL (1 toyMC)
median expected limit: r < 17.034 @ 95%CL (1 toyMC)
   68% expected band : 17.034 < r < 17.034
   95% expected band : 17.034 < r < 17.034
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680469560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8064 +/- 0.0115931 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.8064 @ 95%CL (1 toyMC)
median expected limit: r < 15.8064 @ 95%CL (1 toyMC)
   68% expected band : 15.8064 < r < 15.8064
   95% expected band : 15.8064 < r < 15.8064
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -87227731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.28 +/- 0.00966148 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.28 @ 95%CL (1 toyMC)
median expected limit: r < 16.28 @ 95%CL (1 toyMC)
   68% expected band : 16.28 < r < 16.28
   95% expected band : 16.28 < r < 16.28
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 542486710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3699 +/- 0.019889 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 13.3699 @ 95%CL (1 toyMC)
median expected limit: r < 13.3699 @ 95%CL (1 toyMC)
   68% expected band : 13.3699 < r < 13.3699
   95% expected band : 13.3699 < r < 13.3699
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 145112985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3176 +/- 0.00618199 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.3176 @ 95%CL (1 toyMC)
median expected limit: r < 18.3176 @ 95%CL (1 toyMC)
   68% expected band : 18.3176 < r < 18.3176
   95% expected band : 18.3176 < r < 18.3176
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 577655423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8067 +/- 0.012318 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8067 @ 95%CL (1 toyMC)
median expected limit: r < 15.8067 @ 95%CL (1 toyMC)
   68% expected band : 15.8067 < r < 15.8067
   95% expected band : 15.8067 < r < 15.8067
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 935042976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8911 +/- 0.00990871 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.8911 @ 95%CL (1 toyMC)
median expected limit: r < 15.8911 @ 95%CL (1 toyMC)
   68% expected band : 15.8911 < r < 15.8911
   95% expected band : 15.8911 < r < 15.8911
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1601942471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3459 +/- 0.0186601 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3459 @ 95%CL (1 toyMC)
median expected limit: r < 13.3459 @ 95%CL (1 toyMC)
   68% expected band : 13.3459 < r < 13.3459
   95% expected band : 13.3459 < r < 13.3459
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 830541092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3205 +/- 0.0153033 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3205 @ 95%CL (1 toyMC)
median expected limit: r < 13.3205 @ 95%CL (1 toyMC)
   68% expected band : 13.3205 < r < 13.3205
   95% expected band : 13.3205 < r < 13.3205
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -314387800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7263 +/- 0.0104632 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.7263 @ 95%CL (1 toyMC)
median expected limit: r < 15.7263 @ 95%CL (1 toyMC)
   68% expected band : 15.7263 < r < 15.7263
   95% expected band : 15.7263 < r < 15.7263
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 492879803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7964 +/- 0.007082 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.7964 @ 95%CL (1 toyMC)
median expected limit: r < 17.7964 @ 95%CL (1 toyMC)
   68% expected band : 17.7964 < r < 17.7964
   95% expected band : 17.7964 < r < 17.7964
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1173309920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.5001 +/- 0.00971306 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.5001 @ 95%CL (1 toyMC)
median expected limit: r < 16.5001 @ 95%CL (1 toyMC)
   68% expected band : 16.5001 < r < 16.5001
   95% expected band : 16.5001 < r < 16.5001
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 747083494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.359 +/- 0.0137189 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 13.359 @ 95%CL (1 toyMC)
median expected limit: r < 13.359 @ 95%CL (1 toyMC)
   68% expected band : 13.359 < r < 13.359
   95% expected band : 13.359 < r < 13.359
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 815346279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3608 +/- 0.0137626 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3608 @ 95%CL (1 toyMC)
median expected limit: r < 13.3608 @ 95%CL (1 toyMC)
   68% expected band : 13.3608 < r < 13.3608
   95% expected band : 13.3608 < r < 13.3608
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 236279072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3935 +/- 0.0171247 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3935 @ 95%CL (1 toyMC)
median expected limit: r < 13.3935 @ 95%CL (1 toyMC)
   68% expected band : 13.3935 < r < 13.3935
   95% expected band : 13.3935 < r < 13.3935
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -916970347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.267 +/- 0.0103089 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.267 @ 95%CL (1 toyMC)
median expected limit: r < 16.267 @ 95%CL (1 toyMC)
   68% expected band : 16.267 < r < 16.267
   95% expected band : 16.267 < r < 16.267
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1811635489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3397 +/- 0.0155173 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3397 @ 95%CL (1 toyMC)
median expected limit: r < 13.3397 @ 95%CL (1 toyMC)
   68% expected band : 13.3397 < r < 13.3397
   95% expected band : 13.3397 < r < 13.3397
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -73633834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6407 +/- 0.00444503 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6407 @ 95%CL (1 toyMC)
median expected limit: r < 18.6407 @ 95%CL (1 toyMC)
   68% expected band : 18.6407 < r < 18.6407
   95% expected band : 18.6407 < r < 18.6407
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2142415057
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3601 +/- 0.0164385 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3601 @ 95%CL (1 toyMC)
median expected limit: r < 13.3601 @ 95%CL (1 toyMC)
   68% expected band : 13.3601 < r < 13.3601
   95% expected band : 13.3601 < r < 13.3601
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 692684397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6025 +/- 0.00784432 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.6025 @ 95%CL (1 toyMC)
median expected limit: r < 17.6025 @ 95%CL (1 toyMC)
   68% expected band : 17.6025 < r < 17.6025
   95% expected band : 17.6025 < r < 17.6025
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1365759964
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8109 +/- 0.0122982 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8109 @ 95%CL (1 toyMC)
median expected limit: r < 15.8109 @ 95%CL (1 toyMC)
   68% expected band : 15.8109 < r < 15.8109
   95% expected band : 15.8109 < r < 15.8109
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 634329963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6044 +/- 0.00602666 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.6044 @ 95%CL (1 toyMC)
median expected limit: r < 17.6044 @ 95%CL (1 toyMC)
   68% expected band : 17.6044 < r < 17.6044
   95% expected band : 17.6044 < r < 17.6044
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1011847163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6866 +/- 0.0122984 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.6866 @ 95%CL (1 toyMC)
median expected limit: r < 15.6866 @ 95%CL (1 toyMC)
   68% expected band : 15.6866 < r < 15.6866
   95% expected band : 15.6866 < r < 15.6866
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -198859211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3641 +/- 0.0190748 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3641 @ 95%CL (1 toyMC)
median expected limit: r < 13.3641 @ 95%CL (1 toyMC)
   68% expected band : 13.3641 < r < 13.3641
   95% expected band : 13.3641 < r < 13.3641
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -286262192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8615 +/- 0.0138202 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8615 @ 95%CL (1 toyMC)
median expected limit: r < 15.8615 @ 95%CL (1 toyMC)
   68% expected band : 15.8615 < r < 15.8615
   95% expected band : 15.8615 < r < 15.8615
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1001299423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6505 +/- 0.0123837 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.6505 @ 95%CL (1 toyMC)
median expected limit: r < 15.6505 @ 95%CL (1 toyMC)
   68% expected band : 15.6505 < r < 15.6505
   95% expected band : 15.6505 < r < 15.6505
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 600017317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3396 +/- 0.0153374 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 13.3396 @ 95%CL (1 toyMC)
median expected limit: r < 13.3396 @ 95%CL (1 toyMC)
   68% expected band : 13.3396 < r < 13.3396
   95% expected band : 13.3396 < r < 13.3396
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1467589545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3197 +/- 0.0145229 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 13.3197 @ 95%CL (1 toyMC)
median expected limit: r < 13.3197 @ 95%CL (1 toyMC)
   68% expected band : 13.3197 < r < 13.3197
   95% expected band : 13.3197 < r < 13.3197
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1191138035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3791 +/- 0.0162671 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3791 @ 95%CL (1 toyMC)
median expected limit: r < 13.3791 @ 95%CL (1 toyMC)
   68% expected band : 13.3791 < r < 13.3791
   95% expected band : 13.3791 < r < 13.3791
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1779511330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3684 +/- 0.018559 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3684 @ 95%CL (1 toyMC)
median expected limit: r < 13.3684 @ 95%CL (1 toyMC)
   68% expected band : 13.3684 < r < 13.3684
   95% expected band : 13.3684 < r < 13.3684
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -382941449
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3646 +/- 0.0177149 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3646 @ 95%CL (1 toyMC)
median expected limit: r < 13.3646 @ 95%CL (1 toyMC)
   68% expected band : 13.3646 < r < 13.3646
   95% expected band : 13.3646 < r < 13.3646
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2002455003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9634 +/- 0.0126596 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.9634 @ 95%CL (1 toyMC)
median expected limit: r < 15.9634 @ 95%CL (1 toyMC)
   68% expected band : 15.9634 < r < 15.9634
   95% expected band : 15.9634 < r < 15.9634
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -237425083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.144 +/- 0.0117645 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.144 @ 95%CL (1 toyMC)
median expected limit: r < 16.144 @ 95%CL (1 toyMC)
   68% expected band : 16.144 < r < 16.144
   95% expected band : 16.144 < r < 16.144
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 214060470
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.2948 +/- 0.0142332 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.2948 @ 95%CL (1 toyMC)
median expected limit: r < 13.2948 @ 95%CL (1 toyMC)
   68% expected band : 13.2948 < r < 13.2948
   95% expected band : 13.2948 < r < 13.2948
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 386423529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8773 +/- 0.013617 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8773 @ 95%CL (1 toyMC)
median expected limit: r < 15.8773 @ 95%CL (1 toyMC)
   68% expected band : 15.8773 < r < 15.8773
   95% expected band : 15.8773 < r < 15.8773
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1375378418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.326 +/- 0.0159133 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.326 @ 95%CL (1 toyMC)
median expected limit: r < 13.326 @ 95%CL (1 toyMC)
   68% expected band : 13.326 < r < 13.326
   95% expected band : 13.326 < r < 13.326
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 384718424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0905 +/- 0.00337712 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0905 @ 95%CL (1 toyMC)
median expected limit: r < 19.0905 @ 95%CL (1 toyMC)
   68% expected band : 19.0905 < r < 19.0905
   95% expected band : 19.0905 < r < 19.0905
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 547101611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3413 +/- 0.0175926 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3413 @ 95%CL (1 toyMC)
median expected limit: r < 13.3413 @ 95%CL (1 toyMC)
   68% expected band : 13.3413 < r < 13.3413
   95% expected band : 13.3413 < r < 13.3413
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -261125805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8291 +/- 0.00883376 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8291 @ 95%CL (1 toyMC)
median expected limit: r < 15.8291 @ 95%CL (1 toyMC)
   68% expected band : 15.8291 < r < 15.8291
   95% expected band : 15.8291 < r < 15.8291
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -276224083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9549 +/- 0.011886 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.9549 @ 95%CL (1 toyMC)
median expected limit: r < 15.9549 @ 95%CL (1 toyMC)
   68% expected band : 15.9549 < r < 15.9549
   95% expected band : 15.9549 < r < 15.9549
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1477396818
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3058 +/- 0.01674 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 13.3058 @ 95%CL (1 toyMC)
median expected limit: r < 13.3058 @ 95%CL (1 toyMC)
   68% expected band : 13.3058 < r < 13.3058
   95% expected band : 13.3058 < r < 13.3058
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 190702927
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0479 +/- 0.00342072 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 19.0479 @ 95%CL (1 toyMC)
median expected limit: r < 19.0479 @ 95%CL (1 toyMC)
   68% expected band : 19.0479 < r < 19.0479
   95% expected band : 19.0479 < r < 19.0479
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 905728578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5579 +/- 0.00474552 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.5579 @ 95%CL (1 toyMC)
median expected limit: r < 18.5579 @ 95%CL (1 toyMC)
   68% expected band : 18.5579 < r < 18.5579
   95% expected band : 18.5579 < r < 18.5579
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1906016503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6786 +/- 0.0125892 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.6786 @ 95%CL (1 toyMC)
median expected limit: r < 15.6786 @ 95%CL (1 toyMC)
   68% expected band : 15.6786 < r < 15.6786
   95% expected band : 15.6786 < r < 15.6786
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 336773327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5053 +/- 0.00678789 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.5053 @ 95%CL (1 toyMC)
median expected limit: r < 17.5053 @ 95%CL (1 toyMC)
   68% expected band : 17.5053 < r < 17.5053
   95% expected band : 17.5053 < r < 17.5053
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1200046940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9475 +/- 0.0114589 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.9475 @ 95%CL (1 toyMC)
median expected limit: r < 15.9475 @ 95%CL (1 toyMC)
   68% expected band : 15.9475 < r < 15.9475
   95% expected band : 15.9475 < r < 15.9475
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1433218030
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3521 +/- 0.0121204 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3521 @ 95%CL (1 toyMC)
median expected limit: r < 13.3521 @ 95%CL (1 toyMC)
   68% expected band : 13.3521 < r < 13.3521
   95% expected band : 13.3521 < r < 13.3521
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1721941349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8176 +/- 0.0101893 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8176 @ 95%CL (1 toyMC)
median expected limit: r < 15.8176 @ 95%CL (1 toyMC)
   68% expected band : 15.8176 < r < 15.8176
   95% expected band : 15.8176 < r < 15.8176
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1383740382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.9675 +/- 0.0142839 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.9675 @ 95%CL (1 toyMC)
median expected limit: r < 14.9675 @ 95%CL (1 toyMC)
   68% expected band : 14.9675 < r < 14.9675
   95% expected band : 14.9675 < r < 14.9675
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 810430966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3093 +/- 0.0164344 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3093 @ 95%CL (1 toyMC)
median expected limit: r < 13.3093 @ 95%CL (1 toyMC)
   68% expected band : 13.3093 < r < 13.3093
   95% expected band : 13.3093 < r < 13.3093
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1180797557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3462 +/- 0.0172959 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3462 @ 95%CL (1 toyMC)
median expected limit: r < 13.3462 @ 95%CL (1 toyMC)
   68% expected band : 13.3462 < r < 13.3462
   95% expected band : 13.3462 < r < 13.3462
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -856914389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5072 +/- 0.00647877 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.5072 @ 95%CL (1 toyMC)
median expected limit: r < 17.5072 @ 95%CL (1 toyMC)
   68% expected band : 17.5072 < r < 17.5072
   95% expected band : 17.5072 < r < 17.5072
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1494896007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4639 +/- 0.00461383 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.4639 @ 95%CL (1 toyMC)
median expected limit: r < 18.4639 @ 95%CL (1 toyMC)
   68% expected band : 18.4639 < r < 18.4639
   95% expected band : 18.4639 < r < 18.4639
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1969166340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6387 +/- 0.00732379 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.6387 @ 95%CL (1 toyMC)
median expected limit: r < 17.6387 @ 95%CL (1 toyMC)
   68% expected band : 17.6387 < r < 17.6387
   95% expected band : 17.6387 < r < 17.6387
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1068939562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4709 +/- 0.00664605 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.4709 @ 95%CL (1 toyMC)
median expected limit: r < 17.4709 @ 95%CL (1 toyMC)
   68% expected band : 17.4709 < r < 17.4709
   95% expected band : 17.4709 < r < 17.4709
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1246265867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3758 +/- 0.0040252 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.3758 @ 95%CL (1 toyMC)
median expected limit: r < 18.3758 @ 95%CL (1 toyMC)
   68% expected band : 18.3758 < r < 18.3758
   95% expected band : 18.3758 < r < 18.3758
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -780242251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3488 +/- 0.0175049 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 13.3488 @ 95%CL (1 toyMC)
median expected limit: r < 13.3488 @ 95%CL (1 toyMC)
   68% expected band : 13.3488 < r < 13.3488
   95% expected band : 13.3488 < r < 13.3488
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 380044694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9532 +/- 0.0122188 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.9532 @ 95%CL (1 toyMC)
median expected limit: r < 15.9532 @ 95%CL (1 toyMC)
   68% expected band : 15.9532 < r < 15.9532
   95% expected band : 15.9532 < r < 15.9532
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2039851795
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.6377 +/- 0.0115343 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.6377 @ 95%CL (1 toyMC)
median expected limit: r < 15.6377 @ 95%CL (1 toyMC)
   68% expected band : 15.6377 < r < 15.6377
   95% expected band : 15.6377 < r < 15.6377
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1023397753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.7293 +/- 0.0110471 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.7293 @ 95%CL (1 toyMC)
median expected limit: r < 15.7293 @ 95%CL (1 toyMC)
   68% expected band : 15.7293 < r < 15.7293
   95% expected band : 15.7293 < r < 15.7293
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1991189989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.787 +/- 0.0140061 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.787 @ 95%CL (1 toyMC)
median expected limit: r < 15.787 @ 95%CL (1 toyMC)
   68% expected band : 15.787 < r < 15.787
   95% expected band : 15.787 < r < 15.787
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1275438789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5053 +/- 0.00683404 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.5053 @ 95%CL (1 toyMC)
median expected limit: r < 17.5053 @ 95%CL (1 toyMC)
   68% expected band : 17.5053 < r < 17.5053
   95% expected band : 17.5053 < r < 17.5053
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1464623587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.378 +/- 0.0133398 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 13.378 @ 95%CL (1 toyMC)
median expected limit: r < 13.378 @ 95%CL (1 toyMC)
   68% expected band : 13.378 < r < 13.378
   95% expected band : 13.378 < r < 13.378
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1001299423.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1011847163.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1027571226.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1155811808.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1173309920.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1180797557.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1191138035.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1197301241.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1246265867.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1275438789.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1287288689.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1383740382.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1403430548.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1430237777.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1433218030.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1484277346.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1494896007.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1601942471.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1634070641.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1689857615.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1696248735.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1732810947.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1733140844.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1779511330.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1849811244.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1900886907.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1929272706.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1936432438.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-1969166340.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-198859211.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-1991189989.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-2002455003.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-2078873525.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-2116254111.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-2142415057.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-237425083.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-261125805.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-276224083.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-286262192.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-314387800.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-382941449.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-397481745.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-410098292.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-476618595.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-63398422.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-73633834.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-780242251.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-856914389.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-87227731.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-892340460.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-897106873.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-916970347.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-929980994.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.-990918242.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1023397753.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1027924490.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1068939562.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1200046940.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1365759964.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1375378418.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.145112985.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1464623587.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1467589545.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1477396818.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1498124055.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1680469560.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1721887613.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1721941349.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1748045283.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1811635489.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1906016503.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.190702927.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1949908434.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2039851795.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.214060470.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.236279072.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.244813162.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.336773327.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.380044694.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.384718424.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.386423529.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.492879803.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.542486710.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.547101611.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.572273817.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.577655423.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.600017317.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.634329963.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.65662776.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.692684397.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.713435092.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.725882220.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.747083494.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.810430966.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.815346279.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.830541092.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.854943433.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.905728578.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.935042976.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.937912058.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 399741281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2133 +/- 0.00488275 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.2133 @ 95%CL (1 toyMC)
median expected limit: r < 18.2133 @ 95%CL (1 toyMC)
   68% expected band : 18.2133 < r < 18.2133
   95% expected band : 18.2133 < r < 18.2133
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1087936392
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9602 +/- 0.00356812 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9602 @ 95%CL (1 toyMC)
median expected limit: r < 18.9602 @ 95%CL (1 toyMC)
   68% expected band : 18.9602 < r < 18.9602
   95% expected band : 18.9602 < r < 18.9602
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -838551655
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0599 +/- 0.00956451 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.0599 @ 95%CL (1 toyMC)
median expected limit: r < 17.0599 @ 95%CL (1 toyMC)
   68% expected band : 17.0599 < r < 17.0599
   95% expected band : 17.0599 < r < 17.0599
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 726562327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7988 +/- 0.0155428 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7988 @ 95%CL (1 toyMC)
median expected limit: r < 14.7988 @ 95%CL (1 toyMC)
   68% expected band : 14.7988 < r < 14.7988
   95% expected band : 14.7988 < r < 14.7988
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -791357466
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0539 +/- 0.00870069 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.0539 @ 95%CL (1 toyMC)
median expected limit: r < 17.0539 @ 95%CL (1 toyMC)
   68% expected band : 17.0539 < r < 17.0539
   95% expected band : 17.0539 < r < 17.0539
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1300573596
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5778 +/- 0.00710126 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.5778 @ 95%CL (1 toyMC)
median expected limit: r < 17.5778 @ 95%CL (1 toyMC)
   68% expected band : 17.5778 < r < 17.5778
   95% expected band : 17.5778 < r < 17.5778
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1115541848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2138 +/- 0.00591559 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.2138 @ 95%CL (1 toyMC)
median expected limit: r < 18.2138 @ 95%CL (1 toyMC)
   68% expected band : 18.2138 < r < 18.2138
   95% expected band : 18.2138 < r < 18.2138
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -117472662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8251 +/- 0.0112574 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.8251 @ 95%CL (1 toyMC)
median expected limit: r < 14.8251 @ 95%CL (1 toyMC)
   68% expected band : 14.8251 < r < 14.8251
   95% expected band : 14.8251 < r < 14.8251
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -437871148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9634 +/- 0.00928352 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.9634 @ 95%CL (1 toyMC)
median expected limit: r < 16.9634 @ 95%CL (1 toyMC)
   68% expected band : 16.9634 < r < 16.9634
   95% expected band : 16.9634 < r < 16.9634
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -698714807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7985 +/- 0.0110765 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7985 @ 95%CL (1 toyMC)
median expected limit: r < 14.7985 @ 95%CL (1 toyMC)
   68% expected band : 14.7985 < r < 14.7985
   95% expected band : 14.7985 < r < 14.7985
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1788599417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8342 +/- 0.0130774 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8342 @ 95%CL (1 toyMC)
median expected limit: r < 14.8342 @ 95%CL (1 toyMC)
   68% expected band : 14.8342 < r < 14.8342
   95% expected band : 14.8342 < r < 14.8342
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -37099938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8279 +/- 0.01075 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.8279 @ 95%CL (1 toyMC)
median expected limit: r < 14.8279 @ 95%CL (1 toyMC)
   68% expected band : 14.8279 < r < 14.8279
   95% expected band : 14.8279 < r < 14.8279
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2137089061
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8158 +/- 0.0173098 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.8158 @ 95%CL (1 toyMC)
median expected limit: r < 14.8158 @ 95%CL (1 toyMC)
   68% expected band : 14.8158 < r < 14.8158
   95% expected band : 14.8158 < r < 14.8158
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1570700040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0542 +/- 0.00776913 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.0542 @ 95%CL (1 toyMC)
median expected limit: r < 17.0542 @ 95%CL (1 toyMC)
   68% expected band : 17.0542 < r < 17.0542
   95% expected band : 17.0542 < r < 17.0542
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 181781553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8403 +/- 0.0152317 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8403 @ 95%CL (1 toyMC)
median expected limit: r < 14.8403 @ 95%CL (1 toyMC)
   68% expected band : 14.8403 < r < 14.8403
   95% expected band : 14.8403 < r < 14.8403
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1240564293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7963 +/- 0.0178835 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7963 @ 95%CL (1 toyMC)
median expected limit: r < 14.7963 @ 95%CL (1 toyMC)
   68% expected band : 14.7963 < r < 14.7963
   95% expected band : 14.7963 < r < 14.7963
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 408505504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5025 +/- 0.00467336 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.5025 @ 95%CL (1 toyMC)
median expected limit: r < 18.5025 @ 95%CL (1 toyMC)
   68% expected band : 18.5025 < r < 18.5025
   95% expected band : 18.5025 < r < 18.5025
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1690397443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1805 +/- 0.00573312 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.1805 @ 95%CL (1 toyMC)
median expected limit: r < 18.1805 @ 95%CL (1 toyMC)
   68% expected band : 18.1805 < r < 18.1805
   95% expected band : 18.1805 < r < 18.1805
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 898679382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9628 +/- 0.00845249 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9628 @ 95%CL (1 toyMC)
median expected limit: r < 16.9628 @ 95%CL (1 toyMC)
   68% expected band : 16.9628 < r < 16.9628
   95% expected band : 16.9628 < r < 16.9628
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 716606910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0823 +/- 0.0105622 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.0823 @ 95%CL (1 toyMC)
median expected limit: r < 17.0823 @ 95%CL (1 toyMC)
   68% expected band : 17.0823 < r < 17.0823
   95% expected band : 17.0823 < r < 17.0823
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1303422345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1799 +/- 0.00404447 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.1799 @ 95%CL (1 toyMC)
median expected limit: r < 18.1799 @ 95%CL (1 toyMC)
   68% expected band : 18.1799 < r < 18.1799
   95% expected band : 18.1799 < r < 18.1799
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1181086722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7876 +/- 0.0133218 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7876 @ 95%CL (1 toyMC)
median expected limit: r < 14.7876 @ 95%CL (1 toyMC)
   68% expected band : 14.7876 < r < 14.7876
   95% expected band : 14.7876 < r < 14.7876
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 453088129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7697 +/- 0.0115533 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7697 @ 95%CL (1 toyMC)
median expected limit: r < 14.7697 @ 95%CL (1 toyMC)
   68% expected band : 14.7697 < r < 14.7697
   95% expected band : 14.7697 < r < 14.7697
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1943456713
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2277 +/- 0.00436269 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.2277 @ 95%CL (1 toyMC)
median expected limit: r < 18.2277 @ 95%CL (1 toyMC)
   68% expected band : 18.2277 < r < 18.2277
   95% expected band : 18.2277 < r < 18.2277
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1698481987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0444 +/- 0.00781146 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.0444 @ 95%CL (1 toyMC)
median expected limit: r < 17.0444 @ 95%CL (1 toyMC)
   68% expected band : 17.0444 < r < 17.0444
   95% expected band : 17.0444 < r < 17.0444
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -237364142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9327 +/- 0.00974775 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 16.9327 @ 95%CL (1 toyMC)
median expected limit: r < 16.9327 @ 95%CL (1 toyMC)
   68% expected band : 16.9327 < r < 16.9327
   95% expected band : 16.9327 < r < 16.9327
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 603902891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9909 +/- 0.0102172 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9909 @ 95%CL (1 toyMC)
median expected limit: r < 16.9909 @ 95%CL (1 toyMC)
   68% expected band : 16.9909 < r < 16.9909
   95% expected band : 16.9909 < r < 16.9909
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1098988046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9593 +/- 0.00842708 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.9593 @ 95%CL (1 toyMC)
median expected limit: r < 16.9593 @ 95%CL (1 toyMC)
   68% expected band : 16.9593 < r < 16.9593
   95% expected band : 16.9593 < r < 16.9593
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1831690580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4341 +/- 0.00546358 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.4341 @ 95%CL (1 toyMC)
median expected limit: r < 17.4341 @ 95%CL (1 toyMC)
   68% expected band : 17.4341 < r < 17.4341
   95% expected band : 17.4341 < r < 17.4341
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 51589621
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8222 +/- 0.0128878 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 14.8222 @ 95%CL (1 toyMC)
median expected limit: r < 14.8222 @ 95%CL (1 toyMC)
   68% expected band : 14.8222 < r < 14.8222
   95% expected band : 14.8222 < r < 14.8222
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1489000891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3075 +/- 0.00863936 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.3075 @ 95%CL (1 toyMC)
median expected limit: r < 17.3075 @ 95%CL (1 toyMC)
   68% expected band : 17.3075 < r < 17.3075
   95% expected band : 17.3075 < r < 17.3075
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -118883250
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8463 +/- 0.0137435 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.8463 @ 95%CL (1 toyMC)
median expected limit: r < 14.8463 @ 95%CL (1 toyMC)
   68% expected band : 14.8463 < r < 14.8463
   95% expected band : 14.8463 < r < 14.8463
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1050554376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8192 +/- 0.0180171 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.8192 @ 95%CL (1 toyMC)
median expected limit: r < 14.8192 @ 95%CL (1 toyMC)
   68% expected band : 14.8192 < r < 14.8192
   95% expected band : 14.8192 < r < 14.8192
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2068568989
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8105 +/- 0.012686 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8105 @ 95%CL (1 toyMC)
median expected limit: r < 14.8105 @ 95%CL (1 toyMC)
   68% expected band : 14.8105 < r < 14.8105
   95% expected band : 14.8105 < r < 14.8105
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1829321638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4813 +/- 0.00435853 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.4813 @ 95%CL (1 toyMC)
median expected limit: r < 18.4813 @ 95%CL (1 toyMC)
   68% expected band : 18.4813 < r < 18.4813
   95% expected band : 18.4813 < r < 18.4813
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1337014419
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9765 +/- 0.0080515 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.9765 @ 95%CL (1 toyMC)
median expected limit: r < 16.9765 @ 95%CL (1 toyMC)
   68% expected band : 16.9765 < r < 16.9765
   95% expected band : 16.9765 < r < 16.9765
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1640012678
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8666 +/- 0.0153379 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.8666 @ 95%CL (1 toyMC)
median expected limit: r < 14.8666 @ 95%CL (1 toyMC)
   68% expected band : 14.8666 < r < 14.8666
   95% expected band : 14.8666 < r < 14.8666
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2073568247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2737 +/- 0.00487978 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.2737 @ 95%CL (1 toyMC)
median expected limit: r < 18.2737 @ 95%CL (1 toyMC)
   68% expected band : 18.2737 < r < 18.2737
   95% expected band : 18.2737 < r < 18.2737
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1888265512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2726 +/- 0.00643803 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 17.2726 @ 95%CL (1 toyMC)
median expected limit: r < 17.2726 @ 95%CL (1 toyMC)
   68% expected band : 17.2726 < r < 17.2726
   95% expected band : 17.2726 < r < 17.2726
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 962747547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9713 +/- 0.00977512 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 16.9713 @ 95%CL (1 toyMC)
median expected limit: r < 16.9713 @ 95%CL (1 toyMC)
   68% expected band : 16.9713 < r < 16.9713
   95% expected band : 16.9713 < r < 16.9713
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1387001870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8343 +/- 0.0121579 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8343 @ 95%CL (1 toyMC)
median expected limit: r < 14.8343 @ 95%CL (1 toyMC)
   68% expected band : 14.8343 < r < 14.8343
   95% expected band : 14.8343 < r < 14.8343
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1926826525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5385 +/- 0.004836 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.5385 @ 95%CL (1 toyMC)
median expected limit: r < 18.5385 @ 95%CL (1 toyMC)
   68% expected band : 18.5385 < r < 18.5385
   95% expected band : 18.5385 < r < 18.5385
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1919368296
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8174 +/- 0.0152055 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.8174 @ 95%CL (1 toyMC)
median expected limit: r < 14.8174 @ 95%CL (1 toyMC)
   68% expected band : 14.8174 < r < 14.8174
   95% expected band : 14.8174 < r < 14.8174
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1824303901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8256 +/- 0.00968022 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.8256 @ 95%CL (1 toyMC)
median expected limit: r < 16.8256 @ 95%CL (1 toyMC)
   68% expected band : 16.8256 < r < 16.8256
   95% expected band : 16.8256 < r < 16.8256
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1863584763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6531 +/- 0.00656622 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.6531 @ 95%CL (1 toyMC)
median expected limit: r < 17.6531 @ 95%CL (1 toyMC)
   68% expected band : 17.6531 < r < 17.6531
   95% expected band : 17.6531 < r < 17.6531
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -94530719
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9553 +/- 0.00442262 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9553 @ 95%CL (1 toyMC)
median expected limit: r < 18.9553 @ 95%CL (1 toyMC)
   68% expected band : 18.9553 < r < 18.9553
   95% expected band : 18.9553 < r < 18.9553
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1045812344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9453 +/- 0.00851491 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.9453 @ 95%CL (1 toyMC)
median expected limit: r < 16.9453 @ 95%CL (1 toyMC)
   68% expected band : 16.9453 < r < 16.9453
   95% expected band : 16.9453 < r < 16.9453
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -134026399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7927 +/- 0.0146418 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7927 @ 95%CL (1 toyMC)
median expected limit: r < 14.7927 @ 95%CL (1 toyMC)
   68% expected band : 14.7927 < r < 14.7927
   95% expected band : 14.7927 < r < 14.7927
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1672631753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1999 +/- 0.00458095 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1999 @ 95%CL (1 toyMC)
median expected limit: r < 18.1999 @ 95%CL (1 toyMC)
   68% expected band : 18.1999 < r < 18.1999
   95% expected band : 18.1999 < r < 18.1999
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1723468986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8236 +/- 0.0128088 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.8236 @ 95%CL (1 toyMC)
median expected limit: r < 14.8236 @ 95%CL (1 toyMC)
   68% expected band : 14.8236 < r < 14.8236
   95% expected band : 14.8236 < r < 14.8236
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 369171558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9737 +/- 0.00785879 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.9737 @ 95%CL (1 toyMC)
median expected limit: r < 16.9737 @ 95%CL (1 toyMC)
   68% expected band : 16.9737 < r < 16.9737
   95% expected band : 16.9737 < r < 16.9737
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 141221658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.834 +/- 0.0158575 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.834 @ 95%CL (1 toyMC)
median expected limit: r < 14.834 @ 95%CL (1 toyMC)
   68% expected band : 14.834 < r < 14.834
   95% expected band : 14.834 < r < 14.834
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1121189468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8133 +/- 0.0180154 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.8133 @ 95%CL (1 toyMC)
median expected limit: r < 14.8133 @ 95%CL (1 toyMC)
   68% expected band : 14.8133 < r < 14.8133
   95% expected band : 14.8133 < r < 14.8133
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1932393132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8299 +/- 0.0093 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.8299 @ 95%CL (1 toyMC)
median expected limit: r < 16.8299 @ 95%CL (1 toyMC)
   68% expected band : 16.8299 < r < 16.8299
   95% expected band : 16.8299 < r < 16.8299
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -283089170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7942 +/- 0.0117185 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.7942 @ 95%CL (1 toyMC)
median expected limit: r < 14.7942 @ 95%CL (1 toyMC)
   68% expected band : 14.7942 < r < 14.7942
   95% expected band : 14.7942 < r < 14.7942
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1228467088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8063 +/- 0.0136406 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8063 @ 95%CL (1 toyMC)
median expected limit: r < 14.8063 @ 95%CL (1 toyMC)
   68% expected band : 14.8063 < r < 14.8063
   95% expected band : 14.8063 < r < 14.8063
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1555967279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4391 +/- 0.00560799 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.4391 @ 95%CL (1 toyMC)
median expected limit: r < 18.4391 @ 95%CL (1 toyMC)
   68% expected band : 18.4391 < r < 18.4391
   95% expected band : 18.4391 < r < 18.4391
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -876718883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8172 +/- 0.0146634 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8172 @ 95%CL (1 toyMC)
median expected limit: r < 14.8172 @ 95%CL (1 toyMC)
   68% expected band : 14.8172 < r < 14.8172
   95% expected band : 14.8172 < r < 14.8172
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1798819409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7792 +/- 0.0161763 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7792 @ 95%CL (1 toyMC)
median expected limit: r < 14.7792 @ 95%CL (1 toyMC)
   68% expected band : 14.7792 < r < 14.7792
   95% expected band : 14.7792 < r < 14.7792
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1895075272
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8236 +/- 0.0143815 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.8236 @ 95%CL (1 toyMC)
median expected limit: r < 14.8236 @ 95%CL (1 toyMC)
   68% expected band : 14.8236 < r < 14.8236
   95% expected band : 14.8236 < r < 14.8236
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1126129798
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9566 +/- 0.00966063 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9566 @ 95%CL (1 toyMC)
median expected limit: r < 16.9566 @ 95%CL (1 toyMC)
   68% expected band : 16.9566 < r < 16.9566
   95% expected band : 16.9566 < r < 16.9566
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1547080007
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7903 +/- 0.0143645 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7903 @ 95%CL (1 toyMC)
median expected limit: r < 14.7903 @ 95%CL (1 toyMC)
   68% expected band : 14.7903 < r < 14.7903
   95% expected band : 14.7903 < r < 14.7903
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1490810051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1779 +/- 0.00652821 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.1779 @ 95%CL (1 toyMC)
median expected limit: r < 18.1779 @ 95%CL (1 toyMC)
   68% expected band : 18.1779 < r < 18.1779
   95% expected band : 18.1779 < r < 18.1779
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1012408493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2782 +/- 0.00761955 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.2782 @ 95%CL (1 toyMC)
median expected limit: r < 17.2782 @ 95%CL (1 toyMC)
   68% expected band : 17.2782 < r < 17.2782
   95% expected band : 17.2782 < r < 17.2782
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1609763599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8026 +/- 0.0168358 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.8026 @ 95%CL (1 toyMC)
median expected limit: r < 14.8026 @ 95%CL (1 toyMC)
   68% expected band : 14.8026 < r < 14.8026
   95% expected band : 14.8026 < r < 14.8026
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 633837526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7782 +/- 0.0166168 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 14.7782 @ 95%CL (1 toyMC)
median expected limit: r < 14.7782 @ 95%CL (1 toyMC)
   68% expected band : 14.7782 < r < 14.7782
   95% expected band : 14.7782 < r < 14.7782
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1015561044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4616 +/- 0.00494795 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4616 @ 95%CL (1 toyMC)
median expected limit: r < 18.4616 @ 95%CL (1 toyMC)
   68% expected band : 18.4616 < r < 18.4616
   95% expected band : 18.4616 < r < 18.4616
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -573352934
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7922 +/- 0.0128574 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7922 @ 95%CL (1 toyMC)
median expected limit: r < 14.7922 @ 95%CL (1 toyMC)
   68% expected band : 14.7922 < r < 14.7922
   95% expected band : 14.7922 < r < 14.7922
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1937665741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7986 +/- 0.0144787 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.7986 @ 95%CL (1 toyMC)
median expected limit: r < 14.7986 @ 95%CL (1 toyMC)
   68% expected band : 14.7986 < r < 14.7986
   95% expected band : 14.7986 < r < 14.7986
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -147635207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.7849 +/- 0.0143197 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.7849 @ 95%CL (1 toyMC)
median expected limit: r < 14.7849 @ 95%CL (1 toyMC)
   68% expected band : 14.7849 < r < 14.7849
   95% expected band : 14.7849 < r < 14.7849
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -172592494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3062 +/- 0.00720613 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.3062 @ 95%CL (1 toyMC)
median expected limit: r < 17.3062 @ 95%CL (1 toyMC)
   68% expected band : 17.3062 < r < 17.3062
   95% expected band : 17.3062 < r < 17.3062
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1874068578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9819 +/- 0.0105979 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.9819 @ 95%CL (1 toyMC)
median expected limit: r < 16.9819 @ 95%CL (1 toyMC)
   68% expected band : 16.9819 < r < 16.9819
   95% expected band : 16.9819 < r < 16.9819
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1999220409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0734 +/- 0.0103205 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.0734 @ 95%CL (1 toyMC)
median expected limit: r < 17.0734 @ 95%CL (1 toyMC)
   68% expected band : 17.0734 < r < 17.0734
   95% expected band : 17.0734 < r < 17.0734
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1170941046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1875 +/- 0.00578745 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1875 @ 95%CL (1 toyMC)
median expected limit: r < 18.1875 @ 95%CL (1 toyMC)
   68% expected band : 18.1875 < r < 18.1875
   95% expected band : 18.1875 < r < 18.1875
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1726015533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2096 +/- 0.00424816 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 18.2096 @ 95%CL (1 toyMC)
median expected limit: r < 18.2096 @ 95%CL (1 toyMC)
   68% expected band : 18.2096 < r < 18.2096
   95% expected band : 18.2096 < r < 18.2096
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1331176161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9202 +/- 0.00331896 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9202 @ 95%CL (1 toyMC)
median expected limit: r < 18.9202 @ 95%CL (1 toyMC)
   68% expected band : 18.9202 < r < 18.9202
   95% expected band : 18.9202 < r < 18.9202
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1895424890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8262 +/- 0.0126188 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 14.8262 @ 95%CL (1 toyMC)
median expected limit: r < 14.8262 @ 95%CL (1 toyMC)
   68% expected band : 14.8262 < r < 14.8262
   95% expected band : 14.8262 < r < 14.8262
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1282404151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8092 +/- 0.00986447 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.8092 @ 95%CL (1 toyMC)
median expected limit: r < 16.8092 @ 95%CL (1 toyMC)
   68% expected band : 16.8092 < r < 16.8092
   95% expected band : 16.8092 < r < 16.8092
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -626323094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2522 +/- 0.00557414 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 18.2522 @ 95%CL (1 toyMC)
median expected limit: r < 18.2522 @ 95%CL (1 toyMC)
   68% expected band : 18.2522 < r < 18.2522
   95% expected band : 18.2522 < r < 18.2522
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1483549353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9433 +/- 0.00723423 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 16.9433 @ 95%CL (1 toyMC)
median expected limit: r < 16.9433 @ 95%CL (1 toyMC)
   68% expected band : 16.9433 < r < 16.9433
   95% expected band : 16.9433 < r < 16.9433
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1103986532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8739 +/- 0.00367743 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.8739 @ 95%CL (1 toyMC)
median expected limit: r < 18.8739 @ 95%CL (1 toyMC)
   68% expected band : 18.8739 < r < 18.8739
   95% expected band : 18.8739 < r < 18.8739
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1550915555
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1639 +/- 0.0052749 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.1639 @ 95%CL (1 toyMC)
median expected limit: r < 18.1639 @ 95%CL (1 toyMC)
   68% expected band : 18.1639 < r < 18.1639
   95% expected band : 18.1639 < r < 18.1639
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 227527444
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8079 +/- 0.0153951 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8079 @ 95%CL (1 toyMC)
median expected limit: r < 14.8079 @ 95%CL (1 toyMC)
   68% expected band : 14.8079 < r < 14.8079
   95% expected band : 14.8079 < r < 14.8079
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -960887230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.824 +/- 0.0118765 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.824 @ 95%CL (1 toyMC)
median expected limit: r < 14.824 @ 95%CL (1 toyMC)
   68% expected band : 14.824 < r < 14.824
   95% expected band : 14.824 < r < 14.824
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1624293469
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0168 +/- 0.0104658 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.0168 @ 95%CL (1 toyMC)
median expected limit: r < 17.0168 @ 95%CL (1 toyMC)
   68% expected band : 17.0168 < r < 17.0168
   95% expected band : 17.0168 < r < 17.0168
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 669479069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.39 +/- 0.00473246 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.39 @ 95%CL (1 toyMC)
median expected limit: r < 18.39 @ 95%CL (1 toyMC)
   68% expected band : 18.39 < r < 18.39
   95% expected band : 18.39 < r < 18.39
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1162686110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3035 +/- 0.00451176 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.3035 @ 95%CL (1 toyMC)
median expected limit: r < 18.3035 @ 95%CL (1 toyMC)
   68% expected band : 18.3035 < r < 18.3035
   95% expected band : 18.3035 < r < 18.3035
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 183719612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8405 +/- 0.00935055 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.8405 @ 95%CL (1 toyMC)
median expected limit: r < 16.8405 @ 95%CL (1 toyMC)
   68% expected band : 16.8405 < r < 16.8405
   95% expected band : 16.8405 < r < 16.8405
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -750472345
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2262 +/- 0.00520313 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.2262 @ 95%CL (1 toyMC)
median expected limit: r < 18.2262 @ 95%CL (1 toyMC)
   68% expected band : 18.2262 < r < 18.2262
   95% expected band : 18.2262 < r < 18.2262
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 797307147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8717 +/- 0.00344872 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.8717 @ 95%CL (1 toyMC)
median expected limit: r < 18.8717 @ 95%CL (1 toyMC)
   68% expected band : 18.8717 < r < 18.8717
   95% expected band : 18.8717 < r < 18.8717
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1829190752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8256 +/- 0.0140728 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8256 @ 95%CL (1 toyMC)
median expected limit: r < 14.8256 @ 95%CL (1 toyMC)
   68% expected band : 14.8256 < r < 14.8256
   95% expected band : 14.8256 < r < 14.8256
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 837374843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8294 +/- 0.0082983 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.8294 @ 95%CL (1 toyMC)
median expected limit: r < 16.8294 @ 95%CL (1 toyMC)
   68% expected band : 16.8294 < r < 16.8294
   95% expected band : 16.8294 < r < 16.8294
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 340496159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1763 +/- 0.0090968 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.1763 @ 95%CL (1 toyMC)
median expected limit: r < 17.1763 @ 95%CL (1 toyMC)
   68% expected band : 17.1763 < r < 17.1763
   95% expected band : 17.1763 < r < 17.1763
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -142234054
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.9449 +/- 0.00942993 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.9449 @ 95%CL (1 toyMC)
median expected limit: r < 16.9449 @ 95%CL (1 toyMC)
   68% expected band : 16.9449 < r < 16.9449
   95% expected band : 16.9449 < r < 16.9449
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1270550255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.959 +/- 0.00815589 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 16.959 @ 95%CL (1 toyMC)
median expected limit: r < 16.959 @ 95%CL (1 toyMC)
   68% expected band : 16.959 < r < 16.959
   95% expected band : 16.959 < r < 16.959
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1023452631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.0698 +/- 0.00949985 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.0698 @ 95%CL (1 toyMC)
median expected limit: r < 17.0698 @ 95%CL (1 toyMC)
   68% expected band : 17.0698 < r < 17.0698
   95% expected band : 17.0698 < r < 17.0698
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -339178295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8246 +/- 0.0155308 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 14.8246 @ 95%CL (1 toyMC)
median expected limit: r < 14.8246 @ 95%CL (1 toyMC)
   68% expected band : 14.8246 < r < 14.8246
   95% expected band : 14.8246 < r < 14.8246
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1016925772
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8474 +/- 0.018352 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8474 @ 95%CL (1 toyMC)
median expected limit: r < 14.8474 @ 95%CL (1 toyMC)
   68% expected band : 14.8474 < r < 14.8474
   95% expected band : 14.8474 < r < 14.8474
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2084099809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.8635 +/- 0.00819932 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 16.8635 @ 95%CL (1 toyMC)
median expected limit: r < 16.8635 @ 95%CL (1 toyMC)
   68% expected band : 16.8635 < r < 16.8635
   95% expected band : 16.8635 < r < 16.8635
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1948535711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 14.8379 +/- 0.015036 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 14.8379 @ 95%CL (1 toyMC)
median expected limit: r < 14.8379 @ 95%CL (1 toyMC)
   68% expected band : 14.8379 < r < 14.8379
   95% expected band : 14.8379 < r < 14.8379
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1023452631.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1045812344.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1050554376.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1098988046.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1115541848.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1162686110.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1170941046.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-117472662.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1181086722.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-118883250.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1240564293.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1270550255.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1331176161.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-134026399.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-142234054.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-147635207.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1489000891.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1555967279.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1624293469.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1672631753.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1690397443.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1723468986.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-172592494.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1798819409.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1824303901.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1829190752.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1829321638.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1831690580.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-1863584763.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-1874068578.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-1895075272.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-1919368296.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-1937665741.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-1943456713.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-2068568989.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-2084099809.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-2137089061.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-237364142.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-283089170.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-339178295.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-37099938.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-437871148.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-573352934.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-626323094.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-698714807.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-750472345.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-791357466.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-838551655.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-876718883.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-94530719.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-960887230.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1012408493.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1015561044.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1016925772.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1087936392.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1103986532.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1121189468.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1126129798.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1228467088.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1282404151.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1300573596.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1303422345.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1337014419.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1387001870.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.141221658.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1483549353.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1490810051.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1547080007.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1550915555.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1570700040.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1609763599.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1640012678.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1698481987.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1726015533.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1788599417.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.181781553.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.183719612.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1888265512.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.1895424890.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.1926826525.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.1932393132.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.1948535711.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.1999220409.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.2073568247.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.227527444.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.340496159.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.369171558.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.399741281.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.408505504.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.453088129.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.51589621.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.603902891.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.633837526.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.669479069.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.716606910.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.726562327.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.797307147.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.837374843.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.898679382.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.962747547.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 734934578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.666 +/- 0.00364436 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.666 @ 95%CL (1 toyMC)
median expected limit: r < 18.666 @ 95%CL (1 toyMC)
   68% expected band : 18.666 < r < 18.666
   95% expected band : 18.666 < r < 18.666
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 377240158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9217 +/- 0.00976608 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.9217 @ 95%CL (1 toyMC)
median expected limit: r < 15.9217 @ 95%CL (1 toyMC)
   68% expected band : 15.9217 < r < 15.9217
   95% expected band : 15.9217 < r < 15.9217
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2057824808
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7406 +/- 0.00655712 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.7406 @ 95%CL (1 toyMC)
median expected limit: r < 17.7406 @ 95%CL (1 toyMC)
   68% expected band : 17.7406 < r < 17.7406
   95% expected band : 17.7406 < r < 17.7406
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1057881411
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8633 +/- 0.0143546 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8633 @ 95%CL (1 toyMC)
median expected limit: r < 15.8633 @ 95%CL (1 toyMC)
   68% expected band : 15.8633 < r < 15.8633
   95% expected band : 15.8633 < r < 15.8633
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1416138063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8576 +/- 0.0115187 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8576 @ 95%CL (1 toyMC)
median expected limit: r < 15.8576 @ 95%CL (1 toyMC)
   68% expected band : 15.8576 < r < 15.8576
   95% expected band : 15.8576 < r < 15.8576
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -734434221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.173 +/- 0.00315303 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 19.173 @ 95%CL (1 toyMC)
median expected limit: r < 19.173 @ 95%CL (1 toyMC)
   68% expected band : 19.173 < r < 19.173
   95% expected band : 19.173 < r < 19.173
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1501686980
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8653 +/- 0.0117327 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8653 @ 95%CL (1 toyMC)
median expected limit: r < 15.8653 @ 95%CL (1 toyMC)
   68% expected band : 15.8653 < r < 15.8653
   95% expected band : 15.8653 < r < 15.8653
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -108992854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9179 +/- 0.00645363 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9179 @ 95%CL (1 toyMC)
median expected limit: r < 17.9179 @ 95%CL (1 toyMC)
   68% expected band : 17.9179 < r < 17.9179
   95% expected band : 17.9179 < r < 17.9179
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 34467347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8725 +/- 0.0112129 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8725 @ 95%CL (1 toyMC)
median expected limit: r < 15.8725 @ 95%CL (1 toyMC)
   68% expected band : 15.8725 < r < 15.8725
   95% expected band : 15.8725 < r < 15.8725
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 229000280
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1806 +/- 0.00457196 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1806 @ 95%CL (1 toyMC)
median expected limit: r < 18.1806 @ 95%CL (1 toyMC)
   68% expected band : 18.1806 < r < 18.1806
   95% expected band : 18.1806 < r < 18.1806
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1296062988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.61 +/- 0.00433329 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.61 @ 95%CL (1 toyMC)
median expected limit: r < 18.61 @ 95%CL (1 toyMC)
   68% expected band : 18.61 < r < 18.61
   95% expected band : 18.61 < r < 18.61
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1857498629
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8858 +/- 0.0123203 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8858 @ 95%CL (1 toyMC)
median expected limit: r < 15.8858 @ 95%CL (1 toyMC)
   68% expected band : 15.8858 < r < 15.8858
   95% expected band : 15.8858 < r < 15.8858
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1768884227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2036 +/- 0.00270362 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.2036 @ 95%CL (1 toyMC)
median expected limit: r < 19.2036 @ 95%CL (1 toyMC)
   68% expected band : 19.2036 < r < 19.2036
   95% expected band : 19.2036 < r < 19.2036
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1438319324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6912 +/- 0.00687509 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.6912 @ 95%CL (1 toyMC)
median expected limit: r < 17.6912 @ 95%CL (1 toyMC)
   68% expected band : 17.6912 < r < 17.6912
   95% expected band : 17.6912 < r < 17.6912
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1428318676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6102 +/- 0.00496611 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.6102 @ 95%CL (1 toyMC)
median expected limit: r < 18.6102 @ 95%CL (1 toyMC)
   68% expected band : 18.6102 < r < 18.6102
   95% expected band : 18.6102 < r < 18.6102
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1238990189
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8998 +/- 0.0127201 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8998 @ 95%CL (1 toyMC)
median expected limit: r < 15.8998 @ 95%CL (1 toyMC)
   68% expected band : 15.8998 < r < 15.8998
   95% expected band : 15.8998 < r < 15.8998
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1025475983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8703 +/- 0.0144944 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8703 @ 95%CL (1 toyMC)
median expected limit: r < 15.8703 @ 95%CL (1 toyMC)
   68% expected band : 15.8703 < r < 15.8703
   95% expected band : 15.8703 < r < 15.8703
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -979537922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8888 +/- 0.0129979 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8888 @ 95%CL (1 toyMC)
median expected limit: r < 15.8888 @ 95%CL (1 toyMC)
   68% expected band : 15.8888 < r < 15.8888
   95% expected band : 15.8888 < r < 15.8888
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -808805354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8703 +/- 0.0103975 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8703 @ 95%CL (1 toyMC)
median expected limit: r < 15.8703 @ 95%CL (1 toyMC)
   68% expected band : 15.8703 < r < 15.8703
   95% expected band : 15.8703 < r < 15.8703
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -722292875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8625 +/- 0.0114063 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8625 @ 95%CL (1 toyMC)
median expected limit: r < 15.8625 @ 95%CL (1 toyMC)
   68% expected band : 15.8625 < r < 15.8625
   95% expected band : 15.8625 < r < 15.8625
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1362054151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7263 +/- 0.00668797 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.7263 @ 95%CL (1 toyMC)
median expected limit: r < 17.7263 @ 95%CL (1 toyMC)
   68% expected band : 17.7263 < r < 17.7263
   95% expected band : 17.7263 < r < 17.7263
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2143296757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8364 +/- 0.0126623 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8364 @ 95%CL (1 toyMC)
median expected limit: r < 15.8364 @ 95%CL (1 toyMC)
   68% expected band : 15.8364 < r < 15.8364
   95% expected band : 15.8364 < r < 15.8364
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1489102611
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8814 +/- 0.0115253 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8814 @ 95%CL (1 toyMC)
median expected limit: r < 15.8814 @ 95%CL (1 toyMC)
   68% expected band : 15.8814 < r < 15.8814
   95% expected band : 15.8814 < r < 15.8814
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1170141304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7744 +/- 0.00742235 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.7744 @ 95%CL (1 toyMC)
median expected limit: r < 17.7744 @ 95%CL (1 toyMC)
   68% expected band : 17.7744 < r < 17.7744
   95% expected band : 17.7744 < r < 17.7744
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -471737959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8899 +/- 0.0125763 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8899 @ 95%CL (1 toyMC)
median expected limit: r < 15.8899 @ 95%CL (1 toyMC)
   68% expected band : 15.8899 < r < 15.8899
   95% expected band : 15.8899 < r < 15.8899
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1050460950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8971 +/- 0.0117959 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8971 @ 95%CL (1 toyMC)
median expected limit: r < 15.8971 @ 95%CL (1 toyMC)
   68% expected band : 15.8971 < r < 15.8971
   95% expected band : 15.8971 < r < 15.8971
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -972874925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9124 +/- 0.00663522 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.9124 @ 95%CL (1 toyMC)
median expected limit: r < 17.9124 @ 95%CL (1 toyMC)
   68% expected band : 17.9124 < r < 17.9124
   95% expected band : 17.9124 < r < 17.9124
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1953974542
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8664 +/- 0.0120711 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8664 @ 95%CL (1 toyMC)
median expected limit: r < 15.8664 @ 95%CL (1 toyMC)
   68% expected band : 15.8664 < r < 15.8664
   95% expected band : 15.8664 < r < 15.8664
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -413740170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8485 +/- 0.00372619 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8485 @ 95%CL (1 toyMC)
median expected limit: r < 18.8485 @ 95%CL (1 toyMC)
   68% expected band : 18.8485 < r < 18.8485
   95% expected band : 18.8485 < r < 18.8485
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 575401417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8602 +/- 0.0119 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8602 @ 95%CL (1 toyMC)
median expected limit: r < 15.8602 @ 95%CL (1 toyMC)
   68% expected band : 15.8602 < r < 15.8602
   95% expected band : 15.8602 < r < 15.8602
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1988883161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8699 +/- 0.00690754 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.8699 @ 95%CL (1 toyMC)
median expected limit: r < 17.8699 @ 95%CL (1 toyMC)
   68% expected band : 17.8699 < r < 17.8699
   95% expected band : 17.8699 < r < 17.8699
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1103399588
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9048 +/- 0.0143465 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.9048 @ 95%CL (1 toyMC)
median expected limit: r < 15.9048 @ 95%CL (1 toyMC)
   68% expected band : 15.9048 < r < 15.9048
   95% expected band : 15.9048 < r < 15.9048
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1083886175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8724 +/- 0.0124451 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8724 @ 95%CL (1 toyMC)
median expected limit: r < 15.8724 @ 95%CL (1 toyMC)
   68% expected band : 15.8724 < r < 15.8724
   95% expected band : 15.8724 < r < 15.8724
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1588584606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7893 +/- 0.00633519 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.7893 @ 95%CL (1 toyMC)
median expected limit: r < 17.7893 @ 95%CL (1 toyMC)
   68% expected band : 17.7893 < r < 17.7893
   95% expected band : 17.7893 < r < 17.7893
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 71067613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9142 +/- 0.00660805 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.9142 @ 95%CL (1 toyMC)
median expected limit: r < 17.9142 @ 95%CL (1 toyMC)
   68% expected band : 17.9142 < r < 17.9142
   95% expected band : 17.9142 < r < 17.9142
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1237824913
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8733 +/- 0.0100261 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 15.8733 @ 95%CL (1 toyMC)
median expected limit: r < 15.8733 @ 95%CL (1 toyMC)
   68% expected band : 15.8733 < r < 15.8733
   95% expected band : 15.8733 < r < 15.8733
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 881056065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8872 +/- 0.0117671 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8872 @ 95%CL (1 toyMC)
median expected limit: r < 15.8872 @ 95%CL (1 toyMC)
   68% expected band : 15.8872 < r < 15.8872
   95% expected band : 15.8872 < r < 15.8872
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2094533693
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8658 +/- 0.0113167 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8658 @ 95%CL (1 toyMC)
median expected limit: r < 15.8658 @ 95%CL (1 toyMC)
   68% expected band : 15.8658 < r < 15.8658
   95% expected band : 15.8658 < r < 15.8658
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -89846586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.322 +/- 0.00527014 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.322 @ 95%CL (1 toyMC)
median expected limit: r < 18.322 @ 95%CL (1 toyMC)
   68% expected band : 18.322 < r < 18.322
   95% expected band : 18.322 < r < 18.322
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1367872261
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9038 +/- 0.00967349 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.9038 @ 95%CL (1 toyMC)
median expected limit: r < 15.9038 @ 95%CL (1 toyMC)
   68% expected band : 15.9038 < r < 15.9038
   95% expected band : 15.9038 < r < 15.9038
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -605571066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8997 +/- 0.0115612 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8997 @ 95%CL (1 toyMC)
median expected limit: r < 15.8997 @ 95%CL (1 toyMC)
   68% expected band : 15.8997 < r < 15.8997
   95% expected band : 15.8997 < r < 15.8997
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1886231378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9173 +/- 0.0060558 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9173 @ 95%CL (1 toyMC)
median expected limit: r < 17.9173 @ 95%CL (1 toyMC)
   68% expected band : 17.9173 < r < 17.9173
   95% expected band : 17.9173 < r < 17.9173
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1906361761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7003 +/- 0.00686282 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.7003 @ 95%CL (1 toyMC)
median expected limit: r < 17.7003 @ 95%CL (1 toyMC)
   68% expected band : 17.7003 < r < 17.7003
   95% expected band : 17.7003 < r < 17.7003
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -964248431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8789 +/- 0.0108396 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8789 @ 95%CL (1 toyMC)
median expected limit: r < 15.8789 @ 95%CL (1 toyMC)
   68% expected band : 15.8789 < r < 15.8789
   95% expected band : 15.8789 < r < 15.8789
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 621319152
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8785 +/- 0.0123639 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8785 @ 95%CL (1 toyMC)
median expected limit: r < 15.8785 @ 95%CL (1 toyMC)
   68% expected band : 15.8785 < r < 15.8785
   95% expected band : 15.8785 < r < 15.8785
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1127678306
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.4335 +/- 0.00279952 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 19.4335 @ 95%CL (1 toyMC)
median expected limit: r < 19.4335 @ 95%CL (1 toyMC)
   68% expected band : 19.4335 < r < 19.4335
   95% expected band : 19.4335 < r < 19.4335
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 499164118
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9254 +/- 0.00528469 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.9254 @ 95%CL (1 toyMC)
median expected limit: r < 17.9254 @ 95%CL (1 toyMC)
   68% expected band : 17.9254 < r < 17.9254
   95% expected band : 17.9254 < r < 17.9254
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1221587029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6938 +/- 0.00416325 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6938 @ 95%CL (1 toyMC)
median expected limit: r < 18.6938 @ 95%CL (1 toyMC)
   68% expected band : 18.6938 < r < 18.6938
   95% expected band : 18.6938 < r < 18.6938
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2011105056
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8977 +/- 0.00957816 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8977 @ 95%CL (1 toyMC)
median expected limit: r < 15.8977 @ 95%CL (1 toyMC)
   68% expected band : 15.8977 < r < 15.8977
   95% expected band : 15.8977 < r < 15.8977
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -416257882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8978 +/- 0.00714816 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.8978 @ 95%CL (1 toyMC)
median expected limit: r < 17.8978 @ 95%CL (1 toyMC)
   68% expected band : 17.8978 < r < 17.8978
   95% expected band : 17.8978 < r < 17.8978
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1923678918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8802 +/- 0.0124123 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8802 @ 95%CL (1 toyMC)
median expected limit: r < 15.8802 @ 95%CL (1 toyMC)
   68% expected band : 15.8802 < r < 15.8802
   95% expected band : 15.8802 < r < 15.8802
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1651116218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8578 +/- 0.0105544 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8578 @ 95%CL (1 toyMC)
median expected limit: r < 15.8578 @ 95%CL (1 toyMC)
   68% expected band : 15.8578 < r < 15.8578
   95% expected band : 15.8578 < r < 15.8578
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1049591933
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7548 +/- 0.00677877 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.7548 @ 95%CL (1 toyMC)
median expected limit: r < 17.7548 @ 95%CL (1 toyMC)
   68% expected band : 17.7548 < r < 17.7548
   95% expected band : 17.7548 < r < 17.7548
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1690153352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8972 +/- 0.0100325 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8972 @ 95%CL (1 toyMC)
median expected limit: r < 15.8972 @ 95%CL (1 toyMC)
   68% expected band : 15.8972 < r < 15.8972
   95% expected band : 15.8972 < r < 15.8972
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2131366349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8722 +/- 0.0118638 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8722 @ 95%CL (1 toyMC)
median expected limit: r < 15.8722 @ 95%CL (1 toyMC)
   68% expected band : 15.8722 < r < 15.8722
   95% expected band : 15.8722 < r < 15.8722
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1737864524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.335 +/- 0.00602907 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.335 @ 95%CL (1 toyMC)
median expected limit: r < 17.335 @ 95%CL (1 toyMC)
   68% expected band : 17.335 < r < 17.335
   95% expected band : 17.335 < r < 17.335
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1325296059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6768 +/- 0.00496824 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.6768 @ 95%CL (1 toyMC)
median expected limit: r < 17.6768 @ 95%CL (1 toyMC)
   68% expected band : 17.6768 < r < 17.6768
   95% expected band : 17.6768 < r < 17.6768
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 337124328
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8527 +/- 0.0130404 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8527 @ 95%CL (1 toyMC)
median expected limit: r < 15.8527 @ 95%CL (1 toyMC)
   68% expected band : 15.8527 < r < 15.8527
   95% expected band : 15.8527 < r < 15.8527
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -180558452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.912 +/- 0.0125244 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.912 @ 95%CL (1 toyMC)
median expected limit: r < 15.912 @ 95%CL (1 toyMC)
   68% expected band : 15.912 < r < 15.912
   95% expected band : 15.912 < r < 15.912
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1211699712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8774 +/- 0.0108609 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8774 @ 95%CL (1 toyMC)
median expected limit: r < 15.8774 @ 95%CL (1 toyMC)
   68% expected band : 15.8774 < r < 15.8774
   95% expected band : 15.8774 < r < 15.8774
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1252157196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6724 +/- 0.00793804 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.6724 @ 95%CL (1 toyMC)
median expected limit: r < 17.6724 @ 95%CL (1 toyMC)
   68% expected band : 17.6724 < r < 17.6724
   95% expected band : 17.6724 < r < 17.6724
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1006040683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8828 +/- 0.0114908 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8828 @ 95%CL (1 toyMC)
median expected limit: r < 15.8828 @ 95%CL (1 toyMC)
   68% expected band : 15.8828 < r < 15.8828
   95% expected band : 15.8828 < r < 15.8828
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 830975874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1528 +/- 0.00538228 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1528 @ 95%CL (1 toyMC)
median expected limit: r < 18.1528 @ 95%CL (1 toyMC)
   68% expected band : 18.1528 < r < 18.1528
   95% expected band : 18.1528 < r < 18.1528
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2040258245
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6714 +/- 0.00388102 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6714 @ 95%CL (1 toyMC)
median expected limit: r < 18.6714 @ 95%CL (1 toyMC)
   68% expected band : 18.6714 < r < 18.6714
   95% expected band : 18.6714 < r < 18.6714
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1493063765
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8465 +/- 0.0103543 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8465 @ 95%CL (1 toyMC)
median expected limit: r < 15.8465 @ 95%CL (1 toyMC)
   68% expected band : 15.8465 < r < 15.8465
   95% expected band : 15.8465 < r < 15.8465
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 663875196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.4868 +/- 0.00671528 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.4868 @ 95%CL (1 toyMC)
median expected limit: r < 17.4868 @ 95%CL (1 toyMC)
   68% expected band : 17.4868 < r < 17.4868
   95% expected band : 17.4868 < r < 17.4868
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1712540164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7475 +/- 0.00633303 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 17.7475 @ 95%CL (1 toyMC)
median expected limit: r < 17.7475 @ 95%CL (1 toyMC)
   68% expected band : 17.7475 < r < 17.7475
   95% expected band : 17.7475 < r < 17.7475
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1960889223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1081 +/- 0.00341742 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 19.1081 @ 95%CL (1 toyMC)
median expected limit: r < 19.1081 @ 95%CL (1 toyMC)
   68% expected band : 19.1081 < r < 19.1081
   95% expected band : 19.1081 < r < 19.1081
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1292776521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2449 +/- 0.00561607 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.2449 @ 95%CL (1 toyMC)
median expected limit: r < 18.2449 @ 95%CL (1 toyMC)
   68% expected band : 18.2449 < r < 18.2449
   95% expected band : 18.2449 < r < 18.2449
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1526707060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8752 +/- 0.0131639 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8752 @ 95%CL (1 toyMC)
median expected limit: r < 15.8752 @ 95%CL (1 toyMC)
   68% expected band : 15.8752 < r < 15.8752
   95% expected band : 15.8752 < r < 15.8752
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1629391468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6244 +/- 0.00380746 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.6244 @ 95%CL (1 toyMC)
median expected limit: r < 18.6244 @ 95%CL (1 toyMC)
   68% expected band : 18.6244 < r < 18.6244
   95% expected band : 18.6244 < r < 18.6244
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1442065939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8953 +/- 0.0130383 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8953 @ 95%CL (1 toyMC)
median expected limit: r < 15.8953 @ 95%CL (1 toyMC)
   68% expected band : 15.8953 < r < 15.8953
   95% expected band : 15.8953 < r < 15.8953
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 555517699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8661 +/- 0.0114855 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 15.8661 @ 95%CL (1 toyMC)
median expected limit: r < 15.8661 @ 95%CL (1 toyMC)
   68% expected band : 15.8661 < r < 15.8661
   95% expected band : 15.8661 < r < 15.8661
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1705548369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8503 +/- 0.0115678 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8503 @ 95%CL (1 toyMC)
median expected limit: r < 15.8503 @ 95%CL (1 toyMC)
   68% expected band : 15.8503 < r < 15.8503
   95% expected band : 15.8503 < r < 15.8503
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -971282232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7439 +/- 0.00667994 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7439 @ 95%CL (1 toyMC)
median expected limit: r < 17.7439 @ 95%CL (1 toyMC)
   68% expected band : 17.7439 < r < 17.7439
   95% expected band : 17.7439 < r < 17.7439
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 812239378
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8907 +/- 0.0121725 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8907 @ 95%CL (1 toyMC)
median expected limit: r < 15.8907 @ 95%CL (1 toyMC)
   68% expected band : 15.8907 < r < 15.8907
   95% expected band : 15.8907 < r < 15.8907
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2053449979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.889 +/- 0.0107426 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.889 @ 95%CL (1 toyMC)
median expected limit: r < 15.889 @ 95%CL (1 toyMC)
   68% expected band : 15.889 < r < 15.889
   95% expected band : 15.889 < r < 15.889
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -714120415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8924 +/- 0.0120382 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8924 @ 95%CL (1 toyMC)
median expected limit: r < 15.8924 @ 95%CL (1 toyMC)
   68% expected band : 15.8924 < r < 15.8924
   95% expected band : 15.8924 < r < 15.8924
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 241261341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9101 +/- 0.0103311 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9101 @ 95%CL (1 toyMC)
median expected limit: r < 15.9101 @ 95%CL (1 toyMC)
   68% expected band : 15.9101 < r < 15.9101
   95% expected band : 15.9101 < r < 15.9101
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1046046998
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9205 +/- 0.0102589 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9205 @ 95%CL (1 toyMC)
median expected limit: r < 15.9205 @ 95%CL (1 toyMC)
   68% expected band : 15.9205 < r < 15.9205
   95% expected band : 15.9205 < r < 15.9205
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -63224028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8499 +/- 0.0136866 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8499 @ 95%CL (1 toyMC)
median expected limit: r < 15.8499 @ 95%CL (1 toyMC)
   68% expected band : 15.8499 < r < 15.8499
   95% expected band : 15.8499 < r < 15.8499
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 199372781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.8413 +/- 0.00657827 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 17.8413 @ 95%CL (1 toyMC)
median expected limit: r < 17.8413 @ 95%CL (1 toyMC)
   68% expected band : 17.8413 < r < 17.8413
   95% expected band : 17.8413 < r < 17.8413
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1860018430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8695 +/- 0.0137698 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8695 @ 95%CL (1 toyMC)
median expected limit: r < 15.8695 @ 95%CL (1 toyMC)
   68% expected band : 15.8695 < r < 15.8695
   95% expected band : 15.8695 < r < 15.8695
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1814457960
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8979 +/- 0.0117917 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8979 @ 95%CL (1 toyMC)
median expected limit: r < 15.8979 @ 95%CL (1 toyMC)
   68% expected band : 15.8979 < r < 15.8979
   95% expected band : 15.8979 < r < 15.8979
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 646321320
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8925 +/- 0.0123388 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.8925 @ 95%CL (1 toyMC)
median expected limit: r < 15.8925 @ 95%CL (1 toyMC)
   68% expected band : 15.8925 < r < 15.8925
   95% expected band : 15.8925 < r < 15.8925
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -505281384
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6 +/- 0.00765849 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.6 @ 95%CL (1 toyMC)
median expected limit: r < 17.6 @ 95%CL (1 toyMC)
   68% expected band : 17.6 < r < 17.6
   95% expected band : 17.6 < r < 17.6
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1491436869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6916 +/- 0.00608054 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.6916 @ 95%CL (1 toyMC)
median expected limit: r < 17.6916 @ 95%CL (1 toyMC)
   68% expected band : 17.6916 < r < 17.6916
   95% expected band : 17.6916 < r < 17.6916
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1450803823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1179 +/- 0.00314518 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 19.1179 @ 95%CL (1 toyMC)
median expected limit: r < 19.1179 @ 95%CL (1 toyMC)
   68% expected band : 19.1179 < r < 19.1179
   95% expected band : 19.1179 < r < 19.1179
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1853191815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9028 +/- 0.0125611 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 15.9028 @ 95%CL (1 toyMC)
median expected limit: r < 15.9028 @ 95%CL (1 toyMC)
   68% expected band : 15.9028 < r < 15.9028
   95% expected band : 15.9028 < r < 15.9028
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1179902992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8576 +/- 0.0118822 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8576 @ 95%CL (1 toyMC)
median expected limit: r < 15.8576 @ 95%CL (1 toyMC)
   68% expected band : 15.8576 < r < 15.8576
   95% expected band : 15.8576 < r < 15.8576
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -272101846
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8827 +/- 0.0117524 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8827 @ 95%CL (1 toyMC)
median expected limit: r < 15.8827 @ 95%CL (1 toyMC)
   68% expected band : 15.8827 < r < 15.8827
   95% expected band : 15.8827 < r < 15.8827
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1988939125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7377 +/- 0.00707436 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7377 @ 95%CL (1 toyMC)
median expected limit: r < 17.7377 @ 95%CL (1 toyMC)
   68% expected band : 17.7377 < r < 17.7377
   95% expected band : 17.7377 < r < 17.7377
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -674914868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.3392 +/- 0.00688949 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.3392 @ 95%CL (1 toyMC)
median expected limit: r < 17.3392 @ 95%CL (1 toyMC)
   68% expected band : 17.3392 < r < 17.3392
   95% expected band : 17.3392 < r < 17.3392
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2075976862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6741 +/- 0.00594842 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6741 @ 95%CL (1 toyMC)
median expected limit: r < 17.6741 @ 95%CL (1 toyMC)
   68% expected band : 17.6741 < r < 17.6741
   95% expected band : 17.6741 < r < 17.6741
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -924352420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6613 +/- 0.00611442 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6613 @ 95%CL (1 toyMC)
median expected limit: r < 17.6613 @ 95%CL (1 toyMC)
   68% expected band : 17.6613 < r < 17.6613
   95% expected band : 17.6613 < r < 17.6613
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1321458191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9014 +/- 0.0108141 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.9014 @ 95%CL (1 toyMC)
median expected limit: r < 15.9014 @ 95%CL (1 toyMC)
   68% expected band : 15.9014 < r < 15.9014
   95% expected band : 15.9014 < r < 15.9014
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1279401228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.7152 +/- 0.00712056 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.7152 @ 95%CL (1 toyMC)
median expected limit: r < 17.7152 @ 95%CL (1 toyMC)
   68% expected band : 17.7152 < r < 17.7152
   95% expected band : 17.7152 < r < 17.7152
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1127492741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.9516 +/- 0.0133473 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.9516 @ 95%CL (1 toyMC)
median expected limit: r < 15.9516 @ 95%CL (1 toyMC)
   68% expected band : 15.9516 < r < 15.9516
   95% expected band : 15.9516 < r < 15.9516
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1492264628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8992 +/- 0.0144828 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 15.8992 @ 95%CL (1 toyMC)
median expected limit: r < 15.8992 @ 95%CL (1 toyMC)
   68% expected band : 15.8992 < r < 15.8992
   95% expected band : 15.8992 < r < 15.8992
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -362890025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 15.8789 +/- 0.0155942 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 15.8789 @ 95%CL (1 toyMC)
median expected limit: r < 15.8789 @ 95%CL (1 toyMC)
   68% expected band : 15.8789 < r < 15.8789
   95% expected band : 15.8789 < r < 15.8789
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1006040683.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1046046998.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1049591933.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-108992854.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1127492741.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1127678306.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1179902992.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1221587029.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1279401228.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1321458191.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1325296059.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1367872261.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1438319324.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1442065939.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1450803823.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1489102611.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1491436869.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1526707060.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1629391468.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1651116218.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1712540164.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1768884227.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-180558452.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1857498629.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1860018430.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1953974542.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1988883161.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1988939125.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-2053449979.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-2075976862.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-2143296757.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-272101846.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-362890025.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-413740170.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-416257882.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-471737959.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-505281384.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-605571066.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-63224028.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-674914868.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-714120415.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-722292875.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-734434221.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-808805354.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-89846586.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-924352420.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-964248431.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-971282232.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-972874925.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-979537922.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1025475983.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1050460950.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1057881411.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1083886175.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1103399588.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1170141304.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1211699712.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1237824913.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1238990189.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1252157196.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1292776521.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1296062988.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1362054151.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1416138063.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1428318676.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1492264628.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1493063765.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1501686980.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1588584606.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1690153352.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1705548369.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1737864524.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1814457960.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1853191815.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1886231378.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1906361761.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.1923678918.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.1960889223.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.199372781.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.2011105056.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.2040258245.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.2057824808.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.2094533693.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.2131366349.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.229000280.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.241261341.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.337124328.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.34467347.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.377240158.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.499164118.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.555517699.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.575401417.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.621319152.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.646321320.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.663875196.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.71067613.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.734934578.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.812239378.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.830975874.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.881056065.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1824718786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6429 +/- 0.00950663 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6429 @ 95%CL (1 toyMC)
median expected limit: r < 16.6429 @ 95%CL (1 toyMC)
   68% expected band : 16.6429 < r < 16.6429
   95% expected band : 16.6429 < r < 16.6429
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 36173338
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0703 +/- 0.00403527 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0703 @ 95%CL (1 toyMC)
median expected limit: r < 19.0703 @ 95%CL (1 toyMC)
   68% expected band : 19.0703 < r < 19.0703
   95% expected band : 19.0703 < r < 19.0703
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1396749664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.634 +/- 0.00865062 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.634 @ 95%CL (1 toyMC)
median expected limit: r < 16.634 @ 95%CL (1 toyMC)
   68% expected band : 16.634 < r < 16.634
   95% expected band : 16.634 < r < 16.634
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1011944072
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8924 +/- 0.00404566 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.8924 @ 95%CL (1 toyMC)
median expected limit: r < 18.8924 @ 95%CL (1 toyMC)
   68% expected band : 18.8924 < r < 18.8924
   95% expected band : 18.8924 < r < 18.8924
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -244584170
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6595 +/- 0.0107108 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6595 @ 95%CL (1 toyMC)
median expected limit: r < 16.6595 @ 95%CL (1 toyMC)
   68% expected band : 16.6595 < r < 16.6595
   95% expected band : 16.6595 < r < 16.6595
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -235665025
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6388 +/- 0.011132 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6388 @ 95%CL (1 toyMC)
median expected limit: r < 16.6388 @ 95%CL (1 toyMC)
   68% expected band : 16.6388 < r < 16.6388
   95% expected band : 16.6388 < r < 16.6388
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1297092870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6692 +/- 0.00822629 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6692 @ 95%CL (1 toyMC)
median expected limit: r < 16.6692 @ 95%CL (1 toyMC)
   68% expected band : 16.6692 < r < 16.6692
   95% expected band : 16.6692 < r < 16.6692
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1472239118
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1345 +/- 0.00612713 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1345 @ 95%CL (1 toyMC)
median expected limit: r < 18.1345 @ 95%CL (1 toyMC)
   68% expected band : 18.1345 < r < 18.1345
   95% expected band : 18.1345 < r < 18.1345
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1529071136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6363 +/- 0.0108767 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6363 @ 95%CL (1 toyMC)
median expected limit: r < 16.6363 @ 95%CL (1 toyMC)
   68% expected band : 16.6363 < r < 16.6363
   95% expected band : 16.6363 < r < 16.6363
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1022224450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9706 +/- 0.00368934 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.9706 @ 95%CL (1 toyMC)
median expected limit: r < 18.9706 @ 95%CL (1 toyMC)
   68% expected band : 18.9706 < r < 18.9706
   95% expected band : 18.9706 < r < 18.9706
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1388537616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8924 +/- 0.00330151 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8924 @ 95%CL (1 toyMC)
median expected limit: r < 18.8924 @ 95%CL (1 toyMC)
   68% expected band : 18.8924 < r < 18.8924
   95% expected band : 18.8924 < r < 18.8924
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1953119940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6332 +/- 0.00844893 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6332 @ 95%CL (1 toyMC)
median expected limit: r < 16.6332 @ 95%CL (1 toyMC)
   68% expected band : 16.6332 < r < 16.6332
   95% expected band : 16.6332 < r < 16.6332
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1912582197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6577 +/- 0.00870102 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6577 @ 95%CL (1 toyMC)
median expected limit: r < 16.6577 @ 95%CL (1 toyMC)
   68% expected band : 16.6577 < r < 16.6577
   95% expected band : 16.6577 < r < 16.6577
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1867958982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6147 +/- 0.0103497 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6147 @ 95%CL (1 toyMC)
median expected limit: r < 16.6147 @ 95%CL (1 toyMC)
   68% expected band : 16.6147 < r < 16.6147
   95% expected band : 16.6147 < r < 16.6147
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1766992218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1349 +/- 0.00482237 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1349 @ 95%CL (1 toyMC)
median expected limit: r < 18.1349 @ 95%CL (1 toyMC)
   68% expected band : 18.1349 < r < 18.1349
   95% expected band : 18.1349 < r < 18.1349
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1076193311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6212 +/- 0.00892023 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6212 @ 95%CL (1 toyMC)
median expected limit: r < 16.6212 @ 95%CL (1 toyMC)
   68% expected band : 16.6212 < r < 16.6212
   95% expected band : 16.6212 < r < 16.6212
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1752779045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6337 +/- 0.0113204 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6337 @ 95%CL (1 toyMC)
median expected limit: r < 16.6337 @ 95%CL (1 toyMC)
   68% expected band : 16.6337 < r < 16.6337
   95% expected band : 16.6337 < r < 16.6337
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -219435838
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6917 +/- 0.0110988 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6917 @ 95%CL (1 toyMC)
median expected limit: r < 16.6917 @ 95%CL (1 toyMC)
   68% expected band : 16.6917 < r < 16.6917
   95% expected band : 16.6917 < r < 16.6917
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1724728739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1573 +/- 0.00504146 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.1573 @ 95%CL (1 toyMC)
median expected limit: r < 18.1573 @ 95%CL (1 toyMC)
   68% expected band : 18.1573 < r < 18.1573
   95% expected band : 18.1573 < r < 18.1573
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 79941413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.189 +/- 0.00539855 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.189 @ 95%CL (1 toyMC)
median expected limit: r < 18.189 @ 95%CL (1 toyMC)
   68% expected band : 18.189 < r < 18.189
   95% expected band : 18.189 < r < 18.189
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 568725859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9755 +/- 0.00385644 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9755 @ 95%CL (1 toyMC)
median expected limit: r < 18.9755 @ 95%CL (1 toyMC)
   68% expected band : 18.9755 < r < 18.9755
   95% expected band : 18.9755 < r < 18.9755
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1047744649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.315 +/- 0.00566663 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.315 @ 95%CL (1 toyMC)
median expected limit: r < 18.315 @ 95%CL (1 toyMC)
   68% expected band : 18.315 < r < 18.315
   95% expected band : 18.315 < r < 18.315
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2072863114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.295 +/- 0.00454272 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.295 @ 95%CL (1 toyMC)
median expected limit: r < 18.295 @ 95%CL (1 toyMC)
   68% expected band : 18.295 < r < 18.295
   95% expected band : 18.295 < r < 18.295
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2011607760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.652 +/- 0.0100489 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.652 @ 95%CL (1 toyMC)
median expected limit: r < 16.652 @ 95%CL (1 toyMC)
   68% expected band : 16.652 < r < 16.652
   95% expected band : 16.652 < r < 16.652
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 431303280
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9223 +/- 0.00347828 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9223 @ 95%CL (1 toyMC)
median expected limit: r < 18.9223 @ 95%CL (1 toyMC)
   68% expected band : 18.9223 < r < 18.9223
   95% expected band : 18.9223 < r < 18.9223
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1294531896
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3148 +/- 0.0048725 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3148 @ 95%CL (1 toyMC)
median expected limit: r < 18.3148 @ 95%CL (1 toyMC)
   68% expected band : 18.3148 < r < 18.3148
   95% expected band : 18.3148 < r < 18.3148
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -391205624
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0627 +/- 0.00334465 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.0627 @ 95%CL (1 toyMC)
median expected limit: r < 19.0627 @ 95%CL (1 toyMC)
   68% expected band : 19.0627 < r < 19.0627
   95% expected band : 19.0627 < r < 19.0627
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1383689066
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6135 +/- 0.0096425 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6135 @ 95%CL (1 toyMC)
median expected limit: r < 16.6135 @ 95%CL (1 toyMC)
   68% expected band : 16.6135 < r < 16.6135
   95% expected band : 16.6135 < r < 16.6135
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1221648638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6462 +/- 0.0088464 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6462 @ 95%CL (1 toyMC)
median expected limit: r < 16.6462 @ 95%CL (1 toyMC)
   68% expected band : 16.6462 < r < 16.6462
   95% expected band : 16.6462 < r < 16.6462
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2118671400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9732 +/- 0.00283987 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.9732 @ 95%CL (1 toyMC)
median expected limit: r < 18.9732 @ 95%CL (1 toyMC)
   68% expected band : 18.9732 < r < 18.9732
   95% expected band : 18.9732 < r < 18.9732
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1471391028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6294 +/- 0.00825884 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6294 @ 95%CL (1 toyMC)
median expected limit: r < 16.6294 @ 95%CL (1 toyMC)
   68% expected band : 16.6294 < r < 16.6294
   95% expected band : 16.6294 < r < 16.6294
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 912175641
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6559 +/- 0.00958667 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6559 @ 95%CL (1 toyMC)
median expected limit: r < 16.6559 @ 95%CL (1 toyMC)
   68% expected band : 16.6559 < r < 16.6559
   95% expected band : 16.6559 < r < 16.6559
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -397565231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6447 +/- 0.00873497 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6447 @ 95%CL (1 toyMC)
median expected limit: r < 16.6447 @ 95%CL (1 toyMC)
   68% expected band : 16.6447 < r < 16.6447
   95% expected band : 16.6447 < r < 16.6447
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1081459746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6482 +/- 0.00755143 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6482 @ 95%CL (1 toyMC)
median expected limit: r < 16.6482 @ 95%CL (1 toyMC)
   68% expected band : 16.6482 < r < 16.6482
   95% expected band : 16.6482 < r < 16.6482
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -611880843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1258 +/- 0.00630221 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1258 @ 95%CL (1 toyMC)
median expected limit: r < 18.1258 @ 95%CL (1 toyMC)
   68% expected band : 18.1258 < r < 18.1258
   95% expected band : 18.1258 < r < 18.1258
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1839344485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1811 +/- 0.00529028 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1811 @ 95%CL (1 toyMC)
median expected limit: r < 18.1811 @ 95%CL (1 toyMC)
   68% expected band : 18.1811 < r < 18.1811
   95% expected band : 18.1811 < r < 18.1811
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1701697618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6134 +/- 0.00833057 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6134 @ 95%CL (1 toyMC)
median expected limit: r < 16.6134 @ 95%CL (1 toyMC)
   68% expected band : 16.6134 < r < 16.6134
   95% expected band : 16.6134 < r < 16.6134
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 850489561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6431 +/- 0.0093066 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6431 @ 95%CL (1 toyMC)
median expected limit: r < 16.6431 @ 95%CL (1 toyMC)
   68% expected band : 16.6431 < r < 16.6431
   95% expected band : 16.6431 < r < 16.6431
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1900961662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6351 +/- 0.00999697 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6351 @ 95%CL (1 toyMC)
median expected limit: r < 16.6351 @ 95%CL (1 toyMC)
   68% expected band : 16.6351 < r < 16.6351
   95% expected band : 16.6351 < r < 16.6351
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2031475301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6184 +/- 0.00949382 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6184 @ 95%CL (1 toyMC)
median expected limit: r < 16.6184 @ 95%CL (1 toyMC)
   68% expected band : 16.6184 < r < 16.6184
   95% expected band : 16.6184 < r < 16.6184
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 983515496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6356 +/- 0.0105058 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6356 @ 95%CL (1 toyMC)
median expected limit: r < 16.6356 @ 95%CL (1 toyMC)
   68% expected band : 16.6356 < r < 16.6356
   95% expected band : 16.6356 < r < 16.6356
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -220870715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.172 +/- 0.00520083 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.172 @ 95%CL (1 toyMC)
median expected limit: r < 18.172 @ 95%CL (1 toyMC)
   68% expected band : 18.172 < r < 18.172
   95% expected band : 18.172 < r < 18.172
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1355482111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6556 +/- 0.0121885 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6556 @ 95%CL (1 toyMC)
median expected limit: r < 16.6556 @ 95%CL (1 toyMC)
   68% expected band : 16.6556 < r < 16.6556
   95% expected band : 16.6556 < r < 16.6556
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1039340699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6114 +/- 0.00724184 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6114 @ 95%CL (1 toyMC)
median expected limit: r < 16.6114 @ 95%CL (1 toyMC)
   68% expected band : 16.6114 < r < 16.6114
   95% expected band : 16.6114 < r < 16.6114
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1271811810
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6504 +/- 0.0097451 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6504 @ 95%CL (1 toyMC)
median expected limit: r < 16.6504 @ 95%CL (1 toyMC)
   68% expected band : 16.6504 < r < 16.6504
   95% expected band : 16.6504 < r < 16.6504
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1439442658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6393 +/- 0.00870743 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.6393 @ 95%CL (1 toyMC)
median expected limit: r < 16.6393 @ 95%CL (1 toyMC)
   68% expected band : 16.6393 < r < 16.6393
   95% expected band : 16.6393 < r < 16.6393
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -474238614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6464 +/- 0.00839319 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6464 @ 95%CL (1 toyMC)
median expected limit: r < 16.6464 @ 95%CL (1 toyMC)
   68% expected band : 16.6464 < r < 16.6464
   95% expected band : 16.6464 < r < 16.6464
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1678316744
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0563 +/- 0.00351068 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0563 @ 95%CL (1 toyMC)
median expected limit: r < 19.0563 @ 95%CL (1 toyMC)
   68% expected band : 19.0563 < r < 19.0563
   95% expected band : 19.0563 < r < 19.0563
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1925881010
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9159 +/- 0.00273801 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9159 @ 95%CL (1 toyMC)
median expected limit: r < 18.9159 @ 95%CL (1 toyMC)
   68% expected band : 18.9159 < r < 18.9159
   95% expected band : 18.9159 < r < 18.9159
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1164980373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6255 +/- 0.0108679 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6255 @ 95%CL (1 toyMC)
median expected limit: r < 16.6255 @ 95%CL (1 toyMC)
   68% expected band : 16.6255 < r < 16.6255
   95% expected band : 16.6255 < r < 16.6255
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1647415599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.64 +/- 0.00991318 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.64 @ 95%CL (1 toyMC)
median expected limit: r < 16.64 @ 95%CL (1 toyMC)
   68% expected band : 16.64 < r < 16.64
   95% expected band : 16.64 < r < 16.64
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1528178218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1637 +/- 0.00675538 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1637 @ 95%CL (1 toyMC)
median expected limit: r < 18.1637 @ 95%CL (1 toyMC)
   68% expected band : 18.1637 < r < 18.1637
   95% expected band : 18.1637 < r < 18.1637
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1257019063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6224 +/- 0.00986238 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6224 @ 95%CL (1 toyMC)
median expected limit: r < 16.6224 @ 95%CL (1 toyMC)
   68% expected band : 16.6224 < r < 16.6224
   95% expected band : 16.6224 < r < 16.6224
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 279591914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6357 +/- 0.0101829 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6357 @ 95%CL (1 toyMC)
median expected limit: r < 16.6357 @ 95%CL (1 toyMC)
   68% expected band : 16.6357 < r < 16.6357
   95% expected band : 16.6357 < r < 16.6357
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1693940598
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3079 +/- 0.004895 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3079 @ 95%CL (1 toyMC)
median expected limit: r < 18.3079 @ 95%CL (1 toyMC)
   68% expected band : 18.3079 < r < 18.3079
   95% expected band : 18.3079 < r < 18.3079
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -395458227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6419 +/- 0.00855795 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6419 @ 95%CL (1 toyMC)
median expected limit: r < 16.6419 @ 95%CL (1 toyMC)
   68% expected band : 16.6419 < r < 16.6419
   95% expected band : 16.6419 < r < 16.6419
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1380183682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6417 +/- 0.007934 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6417 @ 95%CL (1 toyMC)
median expected limit: r < 16.6417 @ 95%CL (1 toyMC)
   68% expected band : 16.6417 < r < 16.6417
   95% expected band : 16.6417 < r < 16.6417
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1676293246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6333 +/- 0.00966669 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6333 @ 95%CL (1 toyMC)
median expected limit: r < 16.6333 @ 95%CL (1 toyMC)
   68% expected band : 16.6333 < r < 16.6333
   95% expected band : 16.6333 < r < 16.6333
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -117588995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1205 +/- 0.00508463 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1205 @ 95%CL (1 toyMC)
median expected limit: r < 18.1205 @ 95%CL (1 toyMC)
   68% expected band : 18.1205 < r < 18.1205
   95% expected band : 18.1205 < r < 18.1205
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 246934113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6299 +/- 0.0100437 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6299 @ 95%CL (1 toyMC)
median expected limit: r < 16.6299 @ 95%CL (1 toyMC)
   68% expected band : 16.6299 < r < 16.6299
   95% expected band : 16.6299 < r < 16.6299
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 918938853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6256 +/- 0.00894752 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6256 @ 95%CL (1 toyMC)
median expected limit: r < 16.6256 @ 95%CL (1 toyMC)
   68% expected band : 16.6256 < r < 16.6256
   95% expected band : 16.6256 < r < 16.6256
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1819341008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.635 +/- 0.012019 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.635 @ 95%CL (1 toyMC)
median expected limit: r < 16.635 @ 95%CL (1 toyMC)
   68% expected band : 16.635 < r < 16.635
   95% expected band : 16.635 < r < 16.635
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 494239376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6498 +/- 0.00851133 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6498 @ 95%CL (1 toyMC)
median expected limit: r < 16.6498 @ 95%CL (1 toyMC)
   68% expected band : 16.6498 < r < 16.6498
   95% expected band : 16.6498 < r < 16.6498
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1298394053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6661 +/- 0.00972055 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6661 @ 95%CL (1 toyMC)
median expected limit: r < 16.6661 @ 95%CL (1 toyMC)
   68% expected band : 16.6661 < r < 16.6661
   95% expected band : 16.6661 < r < 16.6661
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1478951487
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6505 +/- 0.00982549 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6505 @ 95%CL (1 toyMC)
median expected limit: r < 16.6505 @ 95%CL (1 toyMC)
   68% expected band : 16.6505 < r < 16.6505
   95% expected band : 16.6505 < r < 16.6505
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1535590850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6293 +/- 0.00854015 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6293 @ 95%CL (1 toyMC)
median expected limit: r < 16.6293 @ 95%CL (1 toyMC)
   68% expected band : 16.6293 < r < 16.6293
   95% expected band : 16.6293 < r < 16.6293
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1016647943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8445 +/- 0.00336382 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8445 @ 95%CL (1 toyMC)
median expected limit: r < 18.8445 @ 95%CL (1 toyMC)
   68% expected band : 18.8445 < r < 18.8445
   95% expected band : 18.8445 < r < 18.8445
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -267967252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6583 +/- 0.0094015 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6583 @ 95%CL (1 toyMC)
median expected limit: r < 16.6583 @ 95%CL (1 toyMC)
   68% expected band : 16.6583 < r < 16.6583
   95% expected band : 16.6583 < r < 16.6583
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -381646360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6363 +/- 0.00982023 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6363 @ 95%CL (1 toyMC)
median expected limit: r < 16.6363 @ 95%CL (1 toyMC)
   68% expected band : 16.6363 < r < 16.6363
   95% expected band : 16.6363 < r < 16.6363
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1330901705
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1312 +/- 0.00708371 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1312 @ 95%CL (1 toyMC)
median expected limit: r < 18.1312 @ 95%CL (1 toyMC)
   68% expected band : 18.1312 < r < 18.1312
   95% expected band : 18.1312 < r < 18.1312
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -980851952
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6129 +/- 0.0119967 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6129 @ 95%CL (1 toyMC)
median expected limit: r < 16.6129 @ 95%CL (1 toyMC)
   68% expected band : 16.6129 < r < 16.6129
   95% expected band : 16.6129 < r < 16.6129
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 855431932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6117 +/- 0.00962398 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6117 @ 95%CL (1 toyMC)
median expected limit: r < 16.6117 @ 95%CL (1 toyMC)
   68% expected band : 16.6117 < r < 16.6117
   95% expected band : 16.6117 < r < 16.6117
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1775209092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1766 +/- 0.00427141 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1766 @ 95%CL (1 toyMC)
median expected limit: r < 18.1766 @ 95%CL (1 toyMC)
   68% expected band : 18.1766 < r < 18.1766
   95% expected band : 18.1766 < r < 18.1766
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1608221474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6267 +/- 0.00897647 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6267 @ 95%CL (1 toyMC)
median expected limit: r < 16.6267 @ 95%CL (1 toyMC)
   68% expected band : 16.6267 < r < 16.6267
   95% expected band : 16.6267 < r < 16.6267
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -749691321
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2755 +/- 0.0046487 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.2755 @ 95%CL (1 toyMC)
median expected limit: r < 18.2755 @ 95%CL (1 toyMC)
   68% expected band : 18.2755 < r < 18.2755
   95% expected band : 18.2755 < r < 18.2755
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -530353016
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.612 +/- 0.0108709 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.612 @ 95%CL (1 toyMC)
median expected limit: r < 16.612 @ 95%CL (1 toyMC)
   68% expected band : 16.612 < r < 16.612
   95% expected band : 16.612 < r < 16.612
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 699932526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1789 +/- 0.00547572 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1789 @ 95%CL (1 toyMC)
median expected limit: r < 18.1789 @ 95%CL (1 toyMC)
   68% expected band : 18.1789 < r < 18.1789
   95% expected band : 18.1789 < r < 18.1789
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -495687473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6534 +/- 0.00988443 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6534 @ 95%CL (1 toyMC)
median expected limit: r < 16.6534 @ 95%CL (1 toyMC)
   68% expected band : 16.6534 < r < 16.6534
   95% expected band : 16.6534 < r < 16.6534
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1740278974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6283 +/- 0.00856871 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6283 @ 95%CL (1 toyMC)
median expected limit: r < 16.6283 @ 95%CL (1 toyMC)
   68% expected band : 16.6283 < r < 16.6283
   95% expected band : 16.6283 < r < 16.6283
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1573367578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.2376 +/- 0.0053239 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.2376 @ 95%CL (1 toyMC)
median expected limit: r < 18.2376 @ 95%CL (1 toyMC)
   68% expected band : 18.2376 < r < 18.2376
   95% expected band : 18.2376 < r < 18.2376
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1158874111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6524 +/- 0.00844104 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6524 @ 95%CL (1 toyMC)
median expected limit: r < 16.6524 @ 95%CL (1 toyMC)
   68% expected band : 16.6524 < r < 16.6524
   95% expected band : 16.6524 < r < 16.6524
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -121229029
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6418 +/- 0.00998676 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6418 @ 95%CL (1 toyMC)
median expected limit: r < 16.6418 @ 95%CL (1 toyMC)
   68% expected band : 16.6418 < r < 16.6418
   95% expected band : 16.6418 < r < 16.6418
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1118277696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0997 +/- 0.00562267 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.0997 @ 95%CL (1 toyMC)
median expected limit: r < 18.0997 @ 95%CL (1 toyMC)
   68% expected band : 18.0997 < r < 18.0997
   95% expected band : 18.0997 < r < 18.0997
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 844002164
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6622 +/- 0.00816363 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6622 @ 95%CL (1 toyMC)
median expected limit: r < 16.6622 @ 95%CL (1 toyMC)
   68% expected band : 16.6622 < r < 16.6622
   95% expected band : 16.6622 < r < 16.6622
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 229590528
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6596 +/- 0.00894875 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6596 @ 95%CL (1 toyMC)
median expected limit: r < 16.6596 @ 95%CL (1 toyMC)
   68% expected band : 16.6596 < r < 16.6596
   95% expected band : 16.6596 < r < 16.6596
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1408314826
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9468 +/- 0.00365963 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9468 @ 95%CL (1 toyMC)
median expected limit: r < 18.9468 @ 95%CL (1 toyMC)
   68% expected band : 18.9468 < r < 18.9468
   95% expected band : 18.9468 < r < 18.9468
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1050704312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1834 +/- 0.00414837 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.1834 @ 95%CL (1 toyMC)
median expected limit: r < 18.1834 @ 95%CL (1 toyMC)
   68% expected band : 18.1834 < r < 18.1834
   95% expected band : 18.1834 < r < 18.1834
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 214868869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6163 +/- 0.00968965 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6163 @ 95%CL (1 toyMC)
median expected limit: r < 16.6163 @ 95%CL (1 toyMC)
   68% expected band : 16.6163 < r < 16.6163
   95% expected band : 16.6163 < r < 16.6163
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1195770374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6053 +/- 0.00979942 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6053 @ 95%CL (1 toyMC)
median expected limit: r < 16.6053 @ 95%CL (1 toyMC)
   68% expected band : 16.6053 < r < 16.6053
   95% expected band : 16.6053 < r < 16.6053
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1298651375
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6645 +/- 0.0114621 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6645 @ 95%CL (1 toyMC)
median expected limit: r < 16.6645 @ 95%CL (1 toyMC)
   68% expected band : 16.6645 < r < 16.6645
   95% expected band : 16.6645 < r < 16.6645
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 790822187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6502 +/- 0.00902564 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6502 @ 95%CL (1 toyMC)
median expected limit: r < 16.6502 @ 95%CL (1 toyMC)
   68% expected band : 16.6502 < r < 16.6502
   95% expected band : 16.6502 < r < 16.6502
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1243043617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0452 +/- 0.00304161 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0452 @ 95%CL (1 toyMC)
median expected limit: r < 19.0452 @ 95%CL (1 toyMC)
   68% expected band : 19.0452 < r < 19.0452
   95% expected band : 19.0452 < r < 19.0452
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 819087697
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6376 +/- 0.00974204 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6376 @ 95%CL (1 toyMC)
median expected limit: r < 16.6376 @ 95%CL (1 toyMC)
   68% expected band : 16.6376 < r < 16.6376
   95% expected band : 16.6376 < r < 16.6376
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -436919569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1364 +/- 0.00330784 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.1364 @ 95%CL (1 toyMC)
median expected limit: r < 19.1364 @ 95%CL (1 toyMC)
   68% expected band : 19.1364 < r < 19.1364
   95% expected band : 19.1364 < r < 19.1364
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -30511591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6102 +/- 0.0116765 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 16.6102 @ 95%CL (1 toyMC)
median expected limit: r < 16.6102 @ 95%CL (1 toyMC)
   68% expected band : 16.6102 < r < 16.6102
   95% expected band : 16.6102 < r < 16.6102
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -961040820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6411 +/- 0.008955 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.6411 @ 95%CL (1 toyMC)
median expected limit: r < 16.6411 @ 95%CL (1 toyMC)
   68% expected band : 16.6411 < r < 16.6411
   95% expected band : 16.6411 < r < 16.6411
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 318051468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3123 +/- 0.00575779 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3123 @ 95%CL (1 toyMC)
median expected limit: r < 18.3123 @ 95%CL (1 toyMC)
   68% expected band : 18.3123 < r < 18.3123
   95% expected band : 18.3123 < r < 18.3123
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1040432323
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3081 +/- 0.00547922 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3081 @ 95%CL (1 toyMC)
median expected limit: r < 18.3081 @ 95%CL (1 toyMC)
   68% expected band : 18.3081 < r < 18.3081
   95% expected band : 18.3081 < r < 18.3081
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1643216362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.6321 +/- 0.00916671 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 16.6321 @ 95%CL (1 toyMC)
median expected limit: r < 16.6321 @ 95%CL (1 toyMC)
   68% expected band : 16.6321 < r < 16.6321
   95% expected band : 16.6321 < r < 16.6321
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2005875830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 16.651 +/- 0.010794 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 16.651 @ 95%CL (1 toyMC)
median expected limit: r < 16.651 @ 95%CL (1 toyMC)
   68% expected band : 16.651 < r < 16.651
   95% expected band : 16.651 < r < 16.651
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1011944072.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1016647943.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1022224450.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1050704312.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1076193311.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1164980373.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-117588995.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-121229029.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1221648638.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1243043617.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1257019063.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1271811810.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1294531896.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1297092870.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1298394053.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1380183682.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1383689066.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1388537616.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1396749664.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1408314826.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1439442658.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1471391028.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1573367578.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1608221474.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1643216362.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1647415599.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1678316744.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1724728739.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-1752779045.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-1775209092.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-1839344485.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-1867958982.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-1900961662.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-1912582197.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-1925881010.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-219435838.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-220870715.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-235665025.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-244584170.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-267967252.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-30511591.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-381646360.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-391205624.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-395458227.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-397565231.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-436919569.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-474238614.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-495687473.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-530353016.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-611880843.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-749691321.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-961040820.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-980851952.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1039340699.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1040432323.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1047744649.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1081459746.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1118277696.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1158874111.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1195770374.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1298651375.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1330901705.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1355482111.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1472239118.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1478951487.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1528178218.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1529071136.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1535590850.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1676293246.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1693940598.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1701697618.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1740278974.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1766992218.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1819341008.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1824718786.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1953119940.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2005875830.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.2011607760.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.2031475301.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.2072863114.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.2118671400.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.214868869.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.229590528.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.246934113.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.279591914.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.318051468.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.36173338.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.431303280.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.494239376.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.568725859.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.699932526.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.790822187.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.79941413.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.819087697.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.844002164.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.850489561.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.855431932.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.912175641.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.918938853.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.983515496.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 372222108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4773 +/- 0.0040819 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4773 @ 95%CL (1 toyMC)
median expected limit: r < 18.4773 @ 95%CL (1 toyMC)
   68% expected band : 18.4773 < r < 18.4773
   95% expected band : 18.4773 < r < 18.4773
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 411353414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1667 +/- 0.00320898 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.1667 @ 95%CL (1 toyMC)
median expected limit: r < 19.1667 @ 95%CL (1 toyMC)
   68% expected band : 19.1667 < r < 19.1667
   95% expected band : 19.1667 < r < 19.1667
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1518010551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2038 +/- 0.00973204 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2038 @ 95%CL (1 toyMC)
median expected limit: r < 17.2038 @ 95%CL (1 toyMC)
   68% expected band : 17.2038 < r < 17.2038
   95% expected band : 17.2038 < r < 17.2038
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1711972202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2177 +/- 0.0090169 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2177 @ 95%CL (1 toyMC)
median expected limit: r < 17.2177 @ 95%CL (1 toyMC)
   68% expected band : 17.2177 < r < 17.2177
   95% expected band : 17.2177 < r < 17.2177
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1367941662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5633 +/- 0.00428704 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.5633 @ 95%CL (1 toyMC)
median expected limit: r < 18.5633 @ 95%CL (1 toyMC)
   68% expected band : 18.5633 < r < 18.5633
   95% expected band : 18.5633 < r < 18.5633
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1993800388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2064 +/- 0.00958994 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.2064 @ 95%CL (1 toyMC)
median expected limit: r < 17.2064 @ 95%CL (1 toyMC)
   68% expected band : 17.2064 < r < 17.2064
   95% expected band : 17.2064 < r < 17.2064
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2103197563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4917 +/- 0.00509866 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4917 @ 95%CL (1 toyMC)
median expected limit: r < 18.4917 @ 95%CL (1 toyMC)
   68% expected band : 18.4917 < r < 18.4917
   95% expected band : 18.4917 < r < 18.4917
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1790262682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1943 +/- 0.00927545 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1943 @ 95%CL (1 toyMC)
median expected limit: r < 17.1943 @ 95%CL (1 toyMC)
   68% expected band : 17.1943 < r < 17.1943
   95% expected band : 17.1943 < r < 17.1943
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1525510270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.196 +/- 0.00615654 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.196 @ 95%CL (1 toyMC)
median expected limit: r < 17.196 @ 95%CL (1 toyMC)
   68% expected band : 17.196 < r < 17.196
   95% expected band : 17.196 < r < 17.196
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 26682220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6088 +/- 0.00355904 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6088 @ 95%CL (1 toyMC)
median expected limit: r < 18.6088 @ 95%CL (1 toyMC)
   68% expected band : 18.6088 < r < 18.6088
   95% expected band : 18.6088 < r < 18.6088
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 161490919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2183 +/- 0.00850479 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2183 @ 95%CL (1 toyMC)
median expected limit: r < 17.2183 @ 95%CL (1 toyMC)
   68% expected band : 17.2183 < r < 17.2183
   95% expected band : 17.2183 < r < 17.2183
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1060217824
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.444 +/- 0.00496137 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.444 @ 95%CL (1 toyMC)
median expected limit: r < 18.444 @ 95%CL (1 toyMC)
   68% expected band : 18.444 < r < 18.444
   95% expected band : 18.444 < r < 18.444
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -745136969
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2283 +/- 0.0090513 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2283 @ 95%CL (1 toyMC)
median expected limit: r < 17.2283 @ 95%CL (1 toyMC)
   68% expected band : 17.2283 < r < 17.2283
   95% expected band : 17.2283 < r < 17.2283
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1732521285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2202 +/- 0.00905599 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2202 @ 95%CL (1 toyMC)
median expected limit: r < 17.2202 @ 95%CL (1 toyMC)
   68% expected band : 17.2202 < r < 17.2202
   95% expected band : 17.2202 < r < 17.2202
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 584505230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4941 +/- 0.00358504 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4941 @ 95%CL (1 toyMC)
median expected limit: r < 18.4941 @ 95%CL (1 toyMC)
   68% expected band : 18.4941 < r < 18.4941
   95% expected band : 18.4941 < r < 18.4941
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -31340554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.229 +/- 0.00960694 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.229 @ 95%CL (1 toyMC)
median expected limit: r < 17.229 @ 95%CL (1 toyMC)
   68% expected band : 17.229 < r < 17.229
   95% expected band : 17.229 < r < 17.229
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1659650270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2438 +/- 0.00781204 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2438 @ 95%CL (1 toyMC)
median expected limit: r < 17.2438 @ 95%CL (1 toyMC)
   68% expected band : 17.2438 < r < 17.2438
   95% expected band : 17.2438 < r < 17.2438
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1905550248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4823 +/- 0.00383806 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4823 @ 95%CL (1 toyMC)
median expected limit: r < 18.4823 @ 95%CL (1 toyMC)
   68% expected band : 18.4823 < r < 18.4823
   95% expected band : 18.4823 < r < 18.4823
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -613041416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2182 +/- 0.00934591 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2182 @ 95%CL (1 toyMC)
median expected limit: r < 17.2182 @ 95%CL (1 toyMC)
   68% expected band : 17.2182 < r < 17.2182
   95% expected band : 17.2182 < r < 17.2182
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 812349898
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2025 +/- 0.00859847 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.2025 @ 95%CL (1 toyMC)
median expected limit: r < 17.2025 @ 95%CL (1 toyMC)
   68% expected band : 17.2025 < r < 17.2025
   95% expected band : 17.2025 < r < 17.2025
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -20530174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2518 +/- 0.00321809 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.2518 @ 95%CL (1 toyMC)
median expected limit: r < 19.2518 @ 95%CL (1 toyMC)
   68% expected band : 19.2518 < r < 19.2518
   95% expected band : 19.2518 < r < 19.2518
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2120138852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2243 +/- 0.00775052 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2243 @ 95%CL (1 toyMC)
median expected limit: r < 17.2243 @ 95%CL (1 toyMC)
   68% expected band : 17.2243 < r < 17.2243
   95% expected band : 17.2243 < r < 17.2243
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1761154783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.393 +/- 0.00465589 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.393 @ 95%CL (1 toyMC)
median expected limit: r < 18.393 @ 95%CL (1 toyMC)
   68% expected band : 18.393 < r < 18.393
   95% expected band : 18.393 < r < 18.393
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 69184676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1986 +/- 0.00921326 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1986 @ 95%CL (1 toyMC)
median expected limit: r < 17.1986 @ 95%CL (1 toyMC)
   68% expected band : 17.1986 < r < 17.1986
   95% expected band : 17.1986 < r < 17.1986
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -798615060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2114 +/- 0.00821983 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.2114 @ 95%CL (1 toyMC)
median expected limit: r < 17.2114 @ 95%CL (1 toyMC)
   68% expected band : 17.2114 < r < 17.2114
   95% expected band : 17.2114 < r < 17.2114
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -618104840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4779 +/- 0.0047921 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4779 @ 95%CL (1 toyMC)
median expected limit: r < 18.4779 @ 95%CL (1 toyMC)
   68% expected band : 18.4779 < r < 18.4779
   95% expected band : 18.4779 < r < 18.4779
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 47143669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5577 +/- 0.0050307 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5577 @ 95%CL (1 toyMC)
median expected limit: r < 18.5577 @ 95%CL (1 toyMC)
   68% expected band : 18.5577 < r < 18.5577
   95% expected band : 18.5577 < r < 18.5577
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 67628216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4986 +/- 0.00525634 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.4986 @ 95%CL (1 toyMC)
median expected limit: r < 18.4986 @ 95%CL (1 toyMC)
   68% expected band : 18.4986 < r < 18.4986
   95% expected band : 18.4986 < r < 18.4986
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 305937770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5448 +/- 0.00445965 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.5448 @ 95%CL (1 toyMC)
median expected limit: r < 18.5448 @ 95%CL (1 toyMC)
   68% expected band : 18.5448 < r < 18.5448
   95% expected band : 18.5448 < r < 18.5448
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1405429932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2254 +/- 0.009393 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2254 @ 95%CL (1 toyMC)
median expected limit: r < 17.2254 @ 95%CL (1 toyMC)
   68% expected band : 17.2254 < r < 17.2254
   95% expected band : 17.2254 < r < 17.2254
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1717420199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2015 +/- 0.00897142 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2015 @ 95%CL (1 toyMC)
median expected limit: r < 17.2015 @ 95%CL (1 toyMC)
   68% expected band : 17.2015 < r < 17.2015
   95% expected band : 17.2015 < r < 17.2015
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1104680514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1575 +/- 0.0032121 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.1575 @ 95%CL (1 toyMC)
median expected limit: r < 19.1575 @ 95%CL (1 toyMC)
   68% expected band : 19.1575 < r < 19.1575
   95% expected band : 19.1575 < r < 19.1575
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -861544710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.22 +/- 0.00677485 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.22 @ 95%CL (1 toyMC)
median expected limit: r < 17.22 @ 95%CL (1 toyMC)
   68% expected band : 17.22 < r < 17.22
   95% expected band : 17.22 < r < 17.22
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2079286619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2262 +/- 0.00754933 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2262 @ 95%CL (1 toyMC)
median expected limit: r < 17.2262 @ 95%CL (1 toyMC)
   68% expected band : 17.2262 < r < 17.2262
   95% expected band : 17.2262 < r < 17.2262
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1581993992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2415 +/- 0.00930019 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2415 @ 95%CL (1 toyMC)
median expected limit: r < 17.2415 @ 95%CL (1 toyMC)
   68% expected band : 17.2415 < r < 17.2415
   95% expected band : 17.2415 < r < 17.2415
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -30384440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.464 +/- 0.00278848 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 19.464 @ 95%CL (1 toyMC)
median expected limit: r < 19.464 @ 95%CL (1 toyMC)
   68% expected band : 19.464 < r < 19.464
   95% expected band : 19.464 < r < 19.464
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1543744220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6539 +/- 0.00353467 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6539 @ 95%CL (1 toyMC)
median expected limit: r < 18.6539 @ 95%CL (1 toyMC)
   68% expected band : 18.6539 < r < 18.6539
   95% expected band : 18.6539 < r < 18.6539
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2060687755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5993 +/- 0.00419454 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.5993 @ 95%CL (1 toyMC)
median expected limit: r < 18.5993 @ 95%CL (1 toyMC)
   68% expected band : 18.5993 < r < 18.5993
   95% expected band : 18.5993 < r < 18.5993
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1283520779
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2201 +/- 0.0069666 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2201 @ 95%CL (1 toyMC)
median expected limit: r < 17.2201 @ 95%CL (1 toyMC)
   68% expected band : 17.2201 < r < 17.2201
   95% expected band : 17.2201 < r < 17.2201
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1722038750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6393 +/- 0.00466451 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.6393 @ 95%CL (1 toyMC)
median expected limit: r < 18.6393 @ 95%CL (1 toyMC)
   68% expected band : 18.6393 < r < 18.6393
   95% expected band : 18.6393 < r < 18.6393
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1563239171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2252 +/- 0.00735963 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2252 @ 95%CL (1 toyMC)
median expected limit: r < 17.2252 @ 95%CL (1 toyMC)
   68% expected band : 17.2252 < r < 17.2252
   95% expected band : 17.2252 < r < 17.2252
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -893684657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2281 +/- 0.00869701 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2281 @ 95%CL (1 toyMC)
median expected limit: r < 17.2281 @ 95%CL (1 toyMC)
   68% expected band : 17.2281 < r < 17.2281
   95% expected band : 17.2281 < r < 17.2281
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1231666572
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2107 +/- 0.00893671 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2107 @ 95%CL (1 toyMC)
median expected limit: r < 17.2107 @ 95%CL (1 toyMC)
   68% expected band : 17.2107 < r < 17.2107
   95% expected band : 17.2107 < r < 17.2107
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1902442074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.225 +/- 0.00894875 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.225 @ 95%CL (1 toyMC)
median expected limit: r < 17.225 @ 95%CL (1 toyMC)
   68% expected band : 17.225 < r < 17.225
   95% expected band : 17.225 < r < 17.225
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2133990638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1893 +/- 0.00722539 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1893 @ 95%CL (1 toyMC)
median expected limit: r < 17.1893 @ 95%CL (1 toyMC)
   68% expected band : 17.1893 < r < 17.1893
   95% expected band : 17.1893 < r < 17.1893
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 291730489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2216 +/- 0.00764663 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2216 @ 95%CL (1 toyMC)
median expected limit: r < 17.2216 @ 95%CL (1 toyMC)
   68% expected band : 17.2216 < r < 17.2216
   95% expected band : 17.2216 < r < 17.2216
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1942098569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4774 +/- 0.00479152 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4774 @ 95%CL (1 toyMC)
median expected limit: r < 18.4774 @ 95%CL (1 toyMC)
   68% expected band : 18.4774 < r < 18.4774
   95% expected band : 18.4774 < r < 18.4774
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2078941178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2329 +/- 0.00913441 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2329 @ 95%CL (1 toyMC)
median expected limit: r < 17.2329 @ 95%CL (1 toyMC)
   68% expected band : 17.2329 < r < 17.2329
   95% expected band : 17.2329 < r < 17.2329
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1209453027
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2383 +/- 0.0086234 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2383 @ 95%CL (1 toyMC)
median expected limit: r < 17.2383 @ 95%CL (1 toyMC)
   68% expected band : 17.2383 < r < 17.2383
   95% expected band : 17.2383 < r < 17.2383
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2080846570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2231 +/- 0.00793383 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2231 @ 95%CL (1 toyMC)
median expected limit: r < 17.2231 @ 95%CL (1 toyMC)
   68% expected band : 17.2231 < r < 17.2231
   95% expected band : 17.2231 < r < 17.2231
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1977058628
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0695 +/- 0.00282197 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0695 @ 95%CL (1 toyMC)
median expected limit: r < 19.0695 @ 95%CL (1 toyMC)
   68% expected band : 19.0695 < r < 19.0695
   95% expected band : 19.0695 < r < 19.0695
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 523828142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2207 +/- 0.0103337 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2207 @ 95%CL (1 toyMC)
median expected limit: r < 17.2207 @ 95%CL (1 toyMC)
   68% expected band : 17.2207 < r < 17.2207
   95% expected band : 17.2207 < r < 17.2207
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1928115396
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2096 +/- 0.00722313 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2096 @ 95%CL (1 toyMC)
median expected limit: r < 17.2096 @ 95%CL (1 toyMC)
   68% expected band : 17.2096 < r < 17.2096
   95% expected band : 17.2096 < r < 17.2096
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1801163456
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2405 +/- 0.00929023 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2405 @ 95%CL (1 toyMC)
median expected limit: r < 17.2405 @ 95%CL (1 toyMC)
   68% expected band : 17.2405 < r < 17.2405
   95% expected band : 17.2405 < r < 17.2405
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 348599848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4788 +/- 0.00500121 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4788 @ 95%CL (1 toyMC)
median expected limit: r < 18.4788 @ 95%CL (1 toyMC)
   68% expected band : 18.4788 < r < 18.4788
   95% expected band : 18.4788 < r < 18.4788
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -250219163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2257 +/- 0.00931383 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2257 @ 95%CL (1 toyMC)
median expected limit: r < 17.2257 @ 95%CL (1 toyMC)
   68% expected band : 17.2257 < r < 17.2257
   95% expected band : 17.2257 < r < 17.2257
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1650441893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2241 +/- 0.0068538 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2241 @ 95%CL (1 toyMC)
median expected limit: r < 17.2241 @ 95%CL (1 toyMC)
   68% expected band : 17.2241 < r < 17.2241
   95% expected band : 17.2241 < r < 17.2241
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1232437360
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2249 +/- 0.0085901 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2249 @ 95%CL (1 toyMC)
median expected limit: r < 17.2249 @ 95%CL (1 toyMC)
   68% expected band : 17.2249 < r < 17.2249
   95% expected band : 17.2249 < r < 17.2249
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1457333536
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2131 +/- 0.00238314 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.2131 @ 95%CL (1 toyMC)
median expected limit: r < 19.2131 @ 95%CL (1 toyMC)
   68% expected band : 19.2131 < r < 19.2131
   95% expected band : 19.2131 < r < 19.2131
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -850323135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1917 +/- 0.00708334 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.1917 @ 95%CL (1 toyMC)
median expected limit: r < 17.1917 @ 95%CL (1 toyMC)
   68% expected band : 17.1917 < r < 17.1917
   95% expected band : 17.1917 < r < 17.1917
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 407784315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4915 +/- 0.00377255 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4915 @ 95%CL (1 toyMC)
median expected limit: r < 18.4915 @ 95%CL (1 toyMC)
   68% expected band : 18.4915 < r < 18.4915
   95% expected band : 18.4915 < r < 18.4915
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1633004889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5617 +/- 0.00425164 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.5617 @ 95%CL (1 toyMC)
median expected limit: r < 18.5617 @ 95%CL (1 toyMC)
   68% expected band : 18.5617 < r < 18.5617
   95% expected band : 18.5617 < r < 18.5617
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1135822965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2324 +/- 0.0067801 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2324 @ 95%CL (1 toyMC)
median expected limit: r < 17.2324 @ 95%CL (1 toyMC)
   68% expected band : 17.2324 < r < 17.2324
   95% expected band : 17.2324 < r < 17.2324
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1740176226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4561 +/- 0.00547182 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4561 @ 95%CL (1 toyMC)
median expected limit: r < 18.4561 @ 95%CL (1 toyMC)
   68% expected band : 18.4561 < r < 18.4561
   95% expected band : 18.4561 < r < 18.4561
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -965269756
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2189 +/- 0.00922178 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.2189 @ 95%CL (1 toyMC)
median expected limit: r < 17.2189 @ 95%CL (1 toyMC)
   68% expected band : 17.2189 < r < 17.2189
   95% expected band : 17.2189 < r < 17.2189
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1599808474
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2126 +/- 0.00863013 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2126 @ 95%CL (1 toyMC)
median expected limit: r < 17.2126 @ 95%CL (1 toyMC)
   68% expected band : 17.2126 < r < 17.2126
   95% expected band : 17.2126 < r < 17.2126
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -387885439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2371 +/- 0.00874393 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2371 @ 95%CL (1 toyMC)
median expected limit: r < 17.2371 @ 95%CL (1 toyMC)
   68% expected band : 17.2371 < r < 17.2371
   95% expected band : 17.2371 < r < 17.2371
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2073707428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.219 +/- 0.00895273 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.219 @ 95%CL (1 toyMC)
median expected limit: r < 17.219 @ 95%CL (1 toyMC)
   68% expected band : 17.219 < r < 17.219
   95% expected band : 17.219 < r < 17.219
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1620318938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4549 +/- 0.00542615 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4549 @ 95%CL (1 toyMC)
median expected limit: r < 18.4549 @ 95%CL (1 toyMC)
   68% expected band : 18.4549 < r < 18.4549
   95% expected band : 18.4549 < r < 18.4549
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -540961914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2169 +/- 0.0092156 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2169 @ 95%CL (1 toyMC)
median expected limit: r < 17.2169 @ 95%CL (1 toyMC)
   68% expected band : 17.2169 < r < 17.2169
   95% expected band : 17.2169 < r < 17.2169
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1155692241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3371 +/- 0.00492825 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.3371 @ 95%CL (1 toyMC)
median expected limit: r < 18.3371 @ 95%CL (1 toyMC)
   68% expected band : 18.3371 < r < 18.3371
   95% expected band : 18.3371 < r < 18.3371
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1373948939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2443 +/- 0.0102851 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2443 @ 95%CL (1 toyMC)
median expected limit: r < 17.2443 @ 95%CL (1 toyMC)
   68% expected band : 17.2443 < r < 17.2443
   95% expected band : 17.2443 < r < 17.2443
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -323627949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0938 +/- 0.00354073 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0938 @ 95%CL (1 toyMC)
median expected limit: r < 19.0938 @ 95%CL (1 toyMC)
   68% expected band : 19.0938 < r < 19.0938
   95% expected band : 19.0938 < r < 19.0938
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 731820220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2137 +/- 0.00724654 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2137 @ 95%CL (1 toyMC)
median expected limit: r < 17.2137 @ 95%CL (1 toyMC)
   68% expected band : 17.2137 < r < 17.2137
   95% expected band : 17.2137 < r < 17.2137
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1059783166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2478 +/- 0.00900977 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2478 @ 95%CL (1 toyMC)
median expected limit: r < 17.2478 @ 95%CL (1 toyMC)
   68% expected band : 17.2478 < r < 17.2478
   95% expected band : 17.2478 < r < 17.2478
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1098266656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2043 +/- 0.00332432 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.2043 @ 95%CL (1 toyMC)
median expected limit: r < 19.2043 @ 95%CL (1 toyMC)
   68% expected band : 19.2043 < r < 19.2043
   95% expected band : 19.2043 < r < 19.2043
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 203402482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2098 +/- 0.00903214 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2098 @ 95%CL (1 toyMC)
median expected limit: r < 17.2098 @ 95%CL (1 toyMC)
   68% expected band : 17.2098 < r < 17.2098
   95% expected band : 17.2098 < r < 17.2098
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -748998240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2344 +/- 0.00816148 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2344 @ 95%CL (1 toyMC)
median expected limit: r < 17.2344 @ 95%CL (1 toyMC)
   68% expected band : 17.2344 < r < 17.2344
   95% expected band : 17.2344 < r < 17.2344
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1882514884
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2147 +/- 0.00740201 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2147 @ 95%CL (1 toyMC)
median expected limit: r < 17.2147 @ 95%CL (1 toyMC)
   68% expected band : 17.2147 < r < 17.2147
   95% expected band : 17.2147 < r < 17.2147
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1713304146
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2382 +/- 0.0101946 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2382 @ 95%CL (1 toyMC)
median expected limit: r < 17.2382 @ 95%CL (1 toyMC)
   68% expected band : 17.2382 < r < 17.2382
   95% expected band : 17.2382 < r < 17.2382
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 451105369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2183 +/- 0.0082149 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2183 @ 95%CL (1 toyMC)
median expected limit: r < 17.2183 @ 95%CL (1 toyMC)
   68% expected band : 17.2183 < r < 17.2183
   95% expected band : 17.2183 < r < 17.2183
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -970800144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0857 +/- 0.00297149 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0857 @ 95%CL (1 toyMC)
median expected limit: r < 19.0857 @ 95%CL (1 toyMC)
   68% expected band : 19.0857 < r < 19.0857
   95% expected band : 19.0857 < r < 19.0857
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1123766255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2025 +/- 0.00980796 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2025 @ 95%CL (1 toyMC)
median expected limit: r < 17.2025 @ 95%CL (1 toyMC)
   68% expected band : 17.2025 < r < 17.2025
   95% expected band : 17.2025 < r < 17.2025
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 680844440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2294 +/- 0.0073806 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2294 @ 95%CL (1 toyMC)
median expected limit: r < 17.2294 @ 95%CL (1 toyMC)
   68% expected band : 17.2294 < r < 17.2294
   95% expected band : 17.2294 < r < 17.2294
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1096023866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.1992 +/- 0.00769561 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.1992 @ 95%CL (1 toyMC)
median expected limit: r < 17.1992 @ 95%CL (1 toyMC)
   68% expected band : 17.1992 < r < 17.1992
   95% expected band : 17.1992 < r < 17.1992
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 3115599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2147 +/- 0.00814391 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2147 @ 95%CL (1 toyMC)
median expected limit: r < 17.2147 @ 95%CL (1 toyMC)
   68% expected band : 17.2147 < r < 17.2147
   95% expected band : 17.2147 < r < 17.2147
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -929237788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2012 +/- 0.00813712 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2012 @ 95%CL (1 toyMC)
median expected limit: r < 17.2012 @ 95%CL (1 toyMC)
   68% expected band : 17.2012 < r < 17.2012
   95% expected band : 17.2012 < r < 17.2012
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1438658981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4845 +/- 0.00429174 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4845 @ 95%CL (1 toyMC)
median expected limit: r < 18.4845 @ 95%CL (1 toyMC)
   68% expected band : 18.4845 < r < 18.4845
   95% expected band : 18.4845 < r < 18.4845
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1442128951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2148 +/- 0.00928398 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2148 @ 95%CL (1 toyMC)
median expected limit: r < 17.2148 @ 95%CL (1 toyMC)
   68% expected band : 17.2148 < r < 17.2148
   95% expected band : 17.2148 < r < 17.2148
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -730152786
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.475 +/- 0.0051419 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.475 @ 95%CL (1 toyMC)
median expected limit: r < 18.475 @ 95%CL (1 toyMC)
   68% expected band : 18.475 < r < 18.475
   95% expected band : 18.475 < r < 18.475
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 94609656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.217 +/- 0.00640404 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.217 @ 95%CL (1 toyMC)
median expected limit: r < 17.217 @ 95%CL (1 toyMC)
   68% expected band : 17.217 < r < 17.217
   95% expected band : 17.217 < r < 17.217
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1545652020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2062 +/- 0.00802506 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 17.2062 @ 95%CL (1 toyMC)
median expected limit: r < 17.2062 @ 95%CL (1 toyMC)
   68% expected band : 17.2062 < r < 17.2062
   95% expected band : 17.2062 < r < 17.2062
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1757128362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4882 +/- 0.00457558 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4882 @ 95%CL (1 toyMC)
median expected limit: r < 18.4882 @ 95%CL (1 toyMC)
   68% expected band : 18.4882 < r < 18.4882
   95% expected band : 18.4882 < r < 18.4882
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1288625115
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2163 +/- 0.00926441 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2163 @ 95%CL (1 toyMC)
median expected limit: r < 17.2163 @ 95%CL (1 toyMC)
   68% expected band : 17.2163 < r < 17.2163
   95% expected band : 17.2163 < r < 17.2163
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 364056482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4482 +/- 0.00442918 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.4482 @ 95%CL (1 toyMC)
median expected limit: r < 18.4482 @ 95%CL (1 toyMC)
   68% expected band : 18.4482 < r < 18.4482
   95% expected band : 18.4482 < r < 18.4482
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1991999817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4627 +/- 0.00425529 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4627 @ 95%CL (1 toyMC)
median expected limit: r < 18.4627 @ 95%CL (1 toyMC)
   68% expected band : 18.4627 < r < 18.4627
   95% expected band : 18.4627 < r < 18.4627
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1627068857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.2113 +/- 0.00816837 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.2113 @ 95%CL (1 toyMC)
median expected limit: r < 17.2113 @ 95%CL (1 toyMC)
   68% expected band : 17.2113 < r < 17.2113
   95% expected band : 17.2113 < r < 17.2113
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -380325623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5142 +/- 0.00387707 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.5142 @ 95%CL (1 toyMC)
median expected limit: r < 18.5142 @ 95%CL (1 toyMC)
   68% expected band : 18.5142 < r < 18.5142
   95% expected band : 18.5142 < r < 18.5142
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1110935974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.5481 +/- 0.0044297 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.5481 @ 95%CL (1 toyMC)
median expected limit: r < 18.5481 @ 95%CL (1 toyMC)
   68% expected band : 18.5481 < r < 18.5481
   95% expected band : 18.5481 < r < 18.5481
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1023210793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8104 +/- 0.00381783 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8104 @ 95%CL (1 toyMC)
median expected limit: r < 18.8104 @ 95%CL (1 toyMC)
   68% expected band : 18.8104 < r < 18.8104
   95% expected band : 18.8104 < r < 18.8104
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1023210793.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1059783166.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1060217824.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1096023866.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1110935974.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1155692241.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1232437360.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1367941662.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1438658981.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1442128951.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1525510270.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1543744220.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1545652020.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1581993992.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1620318938.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1711972202.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1717420199.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1722038750.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1761154783.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1882514884.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1928115396.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1977058628.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1993800388.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-20530174.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2060687755.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2103197563.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-250219163.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-30384440.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-31340554.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-323627949.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-380325623.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-387885439.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-540961914.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-613041416.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-618104840.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-730152786.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-745136969.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-748998240.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-798615060.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-850323135.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-861544710.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-893684657.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-929237788.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-965269756.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-970800144.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.1098266656.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.1104680514.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1123766255.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1135822965.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1209453027.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1231666572.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1283520779.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1288625115.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1373948939.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1405429932.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1457333536.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1518010551.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1563239171.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1599808474.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.161490919.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1627068857.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1633004889.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1650441893.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1659650270.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1713304146.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1732521285.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1740176226.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1757128362.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1790262682.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1801163456.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1902442074.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1905550248.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1942098569.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1991999817.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.203402482.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2073707428.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2078941178.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.2079286619.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.2080846570.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.2120138852.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.2133990638.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.26682220.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.291730489.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.305937770.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.3115599.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.348599848.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.364056482.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.372222108.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.407784315.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.411353414.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.451105369.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.47143669.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.523828142.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.584505230.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.67628216.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.680844440.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.69184676.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.731820220.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.812349898.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.94609656.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -965622552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6228 +/- 0.00671509 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6228 @ 95%CL (1 toyMC)
median expected limit: r < 17.6228 @ 95%CL (1 toyMC)
   68% expected band : 17.6228 < r < 17.6228
   95% expected band : 17.6228 < r < 17.6228
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1192191479
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6248 +/- 0.00711414 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6248 @ 95%CL (1 toyMC)
median expected limit: r < 17.6248 @ 95%CL (1 toyMC)
   68% expected band : 17.6248 < r < 17.6248
   95% expected band : 17.6248 < r < 17.6248
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -177587218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6405 +/- 0.00792208 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6405 @ 95%CL (1 toyMC)
median expected limit: r < 17.6405 @ 95%CL (1 toyMC)
   68% expected band : 17.6405 < r < 17.6405
   95% expected band : 17.6405 < r < 17.6405
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -149806322
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5892 +/- 0.00636268 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.5892 @ 95%CL (1 toyMC)
median expected limit: r < 17.5892 @ 95%CL (1 toyMC)
   68% expected band : 17.5892 < r < 17.5892
   95% expected band : 17.5892 < r < 17.5892
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1225325683
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6053 +/- 0.00553008 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6053 @ 95%CL (1 toyMC)
median expected limit: r < 17.6053 @ 95%CL (1 toyMC)
   68% expected band : 17.6053 < r < 17.6053
   95% expected band : 17.6053 < r < 17.6053
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 931942594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6065 +/- 0.00700966 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6065 @ 95%CL (1 toyMC)
median expected limit: r < 17.6065 @ 95%CL (1 toyMC)
   68% expected band : 17.6065 < r < 17.6065
   95% expected band : 17.6065 < r < 17.6065
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 313184837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.63 +/- 0.00854904 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.63 @ 95%CL (1 toyMC)
median expected limit: r < 17.63 @ 95%CL (1 toyMC)
   68% expected band : 17.63 < r < 17.63
   95% expected band : 17.63 < r < 17.63
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -120668967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6305 +/- 0.00780373 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6305 @ 95%CL (1 toyMC)
median expected limit: r < 17.6305 @ 95%CL (1 toyMC)
   68% expected band : 17.6305 < r < 17.6305
   95% expected band : 17.6305 < r < 17.6305
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1175554130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9458 +/- 0.0036425 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.9458 @ 95%CL (1 toyMC)
median expected limit: r < 18.9458 @ 95%CL (1 toyMC)
   68% expected band : 18.9458 < r < 18.9458
   95% expected band : 18.9458 < r < 18.9458
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -22909710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6203 +/- 0.00752852 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6203 @ 95%CL (1 toyMC)
median expected limit: r < 17.6203 @ 95%CL (1 toyMC)
   68% expected band : 17.6203 < r < 17.6203
   95% expected band : 17.6203 < r < 17.6203
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 141716915
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.622 +/- 0.00715267 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.622 @ 95%CL (1 toyMC)
median expected limit: r < 17.622 @ 95%CL (1 toyMC)
   68% expected band : 17.622 < r < 17.622
   95% expected band : 17.622 < r < 17.622
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1612288290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6422 +/- 0.00687852 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6422 @ 95%CL (1 toyMC)
median expected limit: r < 17.6422 @ 95%CL (1 toyMC)
   68% expected band : 17.6422 < r < 17.6422
   95% expected band : 17.6422 < r < 17.6422
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2013166702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4891 +/- 0.00510324 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4891 @ 95%CL (1 toyMC)
median expected limit: r < 18.4891 @ 95%CL (1 toyMC)
   68% expected band : 18.4891 < r < 18.4891
   95% expected band : 18.4891 < r < 18.4891
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 889224531
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7375 +/- 0.00393821 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.7375 @ 95%CL (1 toyMC)
median expected limit: r < 18.7375 @ 95%CL (1 toyMC)
   68% expected band : 18.7375 < r < 18.7375
   95% expected band : 18.7375 < r < 18.7375
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 115518871
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6082 +/- 0.00785043 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6082 @ 95%CL (1 toyMC)
median expected limit: r < 17.6082 @ 95%CL (1 toyMC)
   68% expected band : 17.6082 < r < 17.6082
   95% expected band : 17.6082 < r < 17.6082
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -746824485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6258 +/- 0.00593389 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6258 @ 95%CL (1 toyMC)
median expected limit: r < 17.6258 @ 95%CL (1 toyMC)
   68% expected band : 17.6258 < r < 17.6258
   95% expected band : 17.6258 < r < 17.6258
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 838786794
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.577 +/- 0.00448025 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.577 @ 95%CL (1 toyMC)
median expected limit: r < 18.577 @ 95%CL (1 toyMC)
   68% expected band : 18.577 < r < 18.577
   95% expected band : 18.577 < r < 18.577
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1341291516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6136 +/- 0.00513078 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6136 @ 95%CL (1 toyMC)
median expected limit: r < 17.6136 @ 95%CL (1 toyMC)
   68% expected band : 17.6136 < r < 17.6136
   95% expected band : 17.6136 < r < 17.6136
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 540473520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6414 +/- 0.00718542 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6414 @ 95%CL (1 toyMC)
median expected limit: r < 17.6414 @ 95%CL (1 toyMC)
   68% expected band : 17.6414 < r < 17.6414
   95% expected band : 17.6414 < r < 17.6414
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 914611509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6353 +/- 0.00694417 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6353 @ 95%CL (1 toyMC)
median expected limit: r < 17.6353 @ 95%CL (1 toyMC)
   68% expected band : 17.6353 < r < 17.6353
   95% expected band : 17.6353 < r < 17.6353
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -146868083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6115 +/- 0.00763394 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6115 @ 95%CL (1 toyMC)
median expected limit: r < 17.6115 @ 95%CL (1 toyMC)
   68% expected band : 17.6115 < r < 17.6115
   95% expected band : 17.6115 < r < 17.6115
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 70344751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6184 +/- 0.00617119 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6184 @ 95%CL (1 toyMC)
median expected limit: r < 17.6184 @ 95%CL (1 toyMC)
   68% expected band : 17.6184 < r < 17.6184
   95% expected band : 17.6184 < r < 17.6184
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1264427439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6395 +/- 0.00785196 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6395 @ 95%CL (1 toyMC)
median expected limit: r < 17.6395 @ 95%CL (1 toyMC)
   68% expected band : 17.6395 < r < 17.6395
   95% expected band : 17.6395 < r < 17.6395
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1043469221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6223 +/- 0.00632659 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6223 @ 95%CL (1 toyMC)
median expected limit: r < 17.6223 @ 95%CL (1 toyMC)
   68% expected band : 17.6223 < r < 17.6223
   95% expected band : 17.6223 < r < 17.6223
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1589140594
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6177 +/- 0.00716989 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6177 @ 95%CL (1 toyMC)
median expected limit: r < 17.6177 @ 95%CL (1 toyMC)
   68% expected band : 17.6177 < r < 17.6177
   95% expected band : 17.6177 < r < 17.6177
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2128100868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6108 +/- 0.00737142 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6108 @ 95%CL (1 toyMC)
median expected limit: r < 17.6108 @ 95%CL (1 toyMC)
   68% expected band : 17.6108 < r < 17.6108
   95% expected band : 17.6108 < r < 17.6108
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -964083949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6224 +/- 0.00605133 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6224 @ 95%CL (1 toyMC)
median expected limit: r < 17.6224 @ 95%CL (1 toyMC)
   68% expected band : 17.6224 < r < 17.6224
   95% expected band : 17.6224 < r < 17.6224
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -99771166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6117 +/- 0.00614375 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6117 @ 95%CL (1 toyMC)
median expected limit: r < 17.6117 @ 95%CL (1 toyMC)
   68% expected band : 17.6117 < r < 17.6117
   95% expected band : 17.6117 < r < 17.6117
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -662873882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6353 +/- 0.00671837 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6353 @ 95%CL (1 toyMC)
median expected limit: r < 17.6353 @ 95%CL (1 toyMC)
   68% expected band : 17.6353 < r < 17.6353
   95% expected band : 17.6353 < r < 17.6353
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -387499251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6024 +/- 0.0069677 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6024 @ 95%CL (1 toyMC)
median expected limit: r < 17.6024 @ 95%CL (1 toyMC)
   68% expected band : 17.6024 < r < 17.6024
   95% expected band : 17.6024 < r < 17.6024
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1783803633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.617 +/- 0.00706108 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.617 @ 95%CL (1 toyMC)
median expected limit: r < 17.617 @ 95%CL (1 toyMC)
   68% expected band : 17.617 < r < 17.617
   95% expected band : 17.617 < r < 17.617
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -971471543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8343 +/- 0.0038648 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.8343 @ 95%CL (1 toyMC)
median expected limit: r < 18.8343 @ 95%CL (1 toyMC)
   68% expected band : 18.8343 < r < 18.8343
   95% expected band : 18.8343 < r < 18.8343
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2020471373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6235 +/- 0.00792732 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6235 @ 95%CL (1 toyMC)
median expected limit: r < 17.6235 @ 95%CL (1 toyMC)
   68% expected band : 17.6235 < r < 17.6235
   95% expected band : 17.6235 < r < 17.6235
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 851731428
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6255 +/- 0.0056921 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6255 @ 95%CL (1 toyMC)
median expected limit: r < 17.6255 @ 95%CL (1 toyMC)
   68% expected band : 17.6255 < r < 17.6255
   95% expected band : 17.6255 < r < 17.6255
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 926470421
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.4106 +/- 0.00251453 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 19.4106 @ 95%CL (1 toyMC)
median expected limit: r < 19.4106 @ 95%CL (1 toyMC)
   68% expected band : 19.4106 < r < 19.4106
   95% expected band : 19.4106 < r < 19.4106
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 93102635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8345 +/- 0.00386707 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.8345 @ 95%CL (1 toyMC)
median expected limit: r < 18.8345 @ 95%CL (1 toyMC)
   68% expected band : 18.8345 < r < 18.8345
   95% expected band : 18.8345 < r < 18.8345
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 370831602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6916 +/- 0.00395498 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6916 @ 95%CL (1 toyMC)
median expected limit: r < 18.6916 @ 95%CL (1 toyMC)
   68% expected band : 18.6916 < r < 18.6916
   95% expected band : 18.6916 < r < 18.6916
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -893131199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6189 +/- 0.00728432 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6189 @ 95%CL (1 toyMC)
median expected limit: r < 17.6189 @ 95%CL (1 toyMC)
   68% expected band : 17.6189 < r < 17.6189
   95% expected band : 17.6189 < r < 17.6189
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1063629224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6222 +/- 0.00720161 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6222 @ 95%CL (1 toyMC)
median expected limit: r < 17.6222 @ 95%CL (1 toyMC)
   68% expected band : 17.6222 < r < 17.6222
   95% expected band : 17.6222 < r < 17.6222
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -386151293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6211 +/- 0.00636938 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6211 @ 95%CL (1 toyMC)
median expected limit: r < 17.6211 @ 95%CL (1 toyMC)
   68% expected band : 17.6211 < r < 17.6211
   95% expected band : 17.6211 < r < 17.6211
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -718525017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6226 +/- 0.00655015 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6226 @ 95%CL (1 toyMC)
median expected limit: r < 17.6226 @ 95%CL (1 toyMC)
   68% expected band : 17.6226 < r < 17.6226
   95% expected band : 17.6226 < r < 17.6226
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1952462174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7429 +/- 0.0038081 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 18.7429 @ 95%CL (1 toyMC)
median expected limit: r < 18.7429 @ 95%CL (1 toyMC)
   68% expected band : 18.7429 < r < 18.7429
   95% expected band : 18.7429 < r < 18.7429
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1683278799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6078 +/- 0.00596609 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6078 @ 95%CL (1 toyMC)
median expected limit: r < 17.6078 @ 95%CL (1 toyMC)
   68% expected band : 17.6078 < r < 17.6078
   95% expected band : 17.6078 < r < 17.6078
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -835834221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6329 +/- 0.00758663 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6329 @ 95%CL (1 toyMC)
median expected limit: r < 17.6329 @ 95%CL (1 toyMC)
   68% expected band : 17.6329 < r < 17.6329
   95% expected band : 17.6329 < r < 17.6329
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 513685903
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.4995 +/- 0.00508599 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.4995 @ 95%CL (1 toyMC)
median expected limit: r < 18.4995 @ 95%CL (1 toyMC)
   68% expected band : 18.4995 < r < 18.4995
   95% expected band : 18.4995 < r < 18.4995
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2099375248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.601 +/- 0.00747074 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.601 @ 95%CL (1 toyMC)
median expected limit: r < 17.601 @ 95%CL (1 toyMC)
   68% expected band : 17.601 < r < 17.601
   95% expected band : 17.601 < r < 17.601
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1740299780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.606 +/- 0.0065468 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.606 @ 95%CL (1 toyMC)
median expected limit: r < 17.606 @ 95%CL (1 toyMC)
   68% expected band : 17.606 < r < 17.606
   95% expected band : 17.606 < r < 17.606
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -171177556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6307 +/- 0.00606813 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6307 @ 95%CL (1 toyMC)
median expected limit: r < 17.6307 @ 95%CL (1 toyMC)
   68% expected band : 17.6307 < r < 17.6307
   95% expected band : 17.6307 < r < 17.6307
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1888028132
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6349 +/- 0.00666583 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6349 @ 95%CL (1 toyMC)
median expected limit: r < 17.6349 @ 95%CL (1 toyMC)
   68% expected band : 17.6349 < r < 17.6349
   95% expected band : 17.6349 < r < 17.6349
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1158209254
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5981 +/- 0.00915722 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.5981 @ 95%CL (1 toyMC)
median expected limit: r < 17.5981 @ 95%CL (1 toyMC)
   68% expected band : 17.5981 < r < 17.5981
   95% expected band : 17.5981 < r < 17.5981
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 950460041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6389 +/- 0.00588864 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6389 @ 95%CL (1 toyMC)
median expected limit: r < 17.6389 @ 95%CL (1 toyMC)
   68% expected band : 17.6389 < r < 17.6389
   95% expected band : 17.6389 < r < 17.6389
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 444902561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6075 +/- 0.00733274 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6075 @ 95%CL (1 toyMC)
median expected limit: r < 17.6075 @ 95%CL (1 toyMC)
   68% expected band : 17.6075 < r < 17.6075
   95% expected band : 17.6075 < r < 17.6075
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1027833710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6073 +/- 0.00656703 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6073 @ 95%CL (1 toyMC)
median expected limit: r < 17.6073 @ 95%CL (1 toyMC)
   68% expected band : 17.6073 < r < 17.6073
   95% expected band : 17.6073 < r < 17.6073
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -182382445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8334 +/- 0.00395321 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8334 @ 95%CL (1 toyMC)
median expected limit: r < 18.8334 @ 95%CL (1 toyMC)
   68% expected band : 18.8334 < r < 18.8334
   95% expected band : 18.8334 < r < 18.8334
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 924972850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6107 +/- 0.00670803 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6107 @ 95%CL (1 toyMC)
median expected limit: r < 17.6107 @ 95%CL (1 toyMC)
   68% expected band : 17.6107 < r < 17.6107
   95% expected band : 17.6107 < r < 17.6107
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 763150488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6328 +/- 0.00803478 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6328 @ 95%CL (1 toyMC)
median expected limit: r < 17.6328 @ 95%CL (1 toyMC)
   68% expected band : 17.6328 < r < 17.6328
   95% expected band : 17.6328 < r < 17.6328
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 395682441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6229 +/- 0.00566042 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6229 @ 95%CL (1 toyMC)
median expected limit: r < 17.6229 @ 95%CL (1 toyMC)
   68% expected band : 17.6229 < r < 17.6229
   95% expected band : 17.6229 < r < 17.6229
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -842274875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.612 +/- 0.00796641 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.612 @ 95%CL (1 toyMC)
median expected limit: r < 17.612 @ 95%CL (1 toyMC)
   68% expected band : 17.612 < r < 17.612
   95% expected band : 17.612 < r < 17.612
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 400023973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5972 +/- 0.00669231 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.5972 @ 95%CL (1 toyMC)
median expected limit: r < 17.5972 @ 95%CL (1 toyMC)
   68% expected band : 17.5972 < r < 17.5972
   95% expected band : 17.5972 < r < 17.5972
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2074170307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6301 +/- 0.00678631 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6301 @ 95%CL (1 toyMC)
median expected limit: r < 17.6301 @ 95%CL (1 toyMC)
   68% expected band : 17.6301 < r < 17.6301
   95% expected band : 17.6301 < r < 17.6301
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 764302646
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6334 +/- 0.00739835 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6334 @ 95%CL (1 toyMC)
median expected limit: r < 17.6334 @ 95%CL (1 toyMC)
   68% expected band : 17.6334 < r < 17.6334
   95% expected band : 17.6334 < r < 17.6334
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -456116806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6156 +/- 0.00549077 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6156 @ 95%CL (1 toyMC)
median expected limit: r < 17.6156 @ 95%CL (1 toyMC)
   68% expected band : 17.6156 < r < 17.6156
   95% expected band : 17.6156 < r < 17.6156
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -408337905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6278 +/- 0.00570558 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6278 @ 95%CL (1 toyMC)
median expected limit: r < 17.6278 @ 95%CL (1 toyMC)
   68% expected band : 17.6278 < r < 17.6278
   95% expected band : 17.6278 < r < 17.6278
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 518504681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6252 +/- 0.00742774 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6252 @ 95%CL (1 toyMC)
median expected limit: r < 17.6252 @ 95%CL (1 toyMC)
   68% expected band : 17.6252 < r < 17.6252
   95% expected band : 17.6252 < r < 17.6252
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1969274388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6197 +/- 0.005819 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6197 @ 95%CL (1 toyMC)
median expected limit: r < 17.6197 @ 95%CL (1 toyMC)
   68% expected band : 17.6197 < r < 17.6197
   95% expected band : 17.6197 < r < 17.6197
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 616972866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6287 +/- 0.0055034 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6287 @ 95%CL (1 toyMC)
median expected limit: r < 17.6287 @ 95%CL (1 toyMC)
   68% expected band : 17.6287 < r < 17.6287
   95% expected band : 17.6287 < r < 17.6287
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -241978078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6169 +/- 0.00654071 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6169 @ 95%CL (1 toyMC)
median expected limit: r < 17.6169 @ 95%CL (1 toyMC)
   68% expected band : 17.6169 < r < 17.6169
   95% expected band : 17.6169 < r < 17.6169
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 203173301
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6651 +/- 0.00440316 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6651 @ 95%CL (1 toyMC)
median expected limit: r < 18.6651 @ 95%CL (1 toyMC)
   68% expected band : 18.6651 < r < 18.6651
   95% expected band : 18.6651 < r < 18.6651
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1901523472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7508 +/- 0.00369302 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.7508 @ 95%CL (1 toyMC)
median expected limit: r < 18.7508 @ 95%CL (1 toyMC)
   68% expected band : 18.7508 < r < 18.7508
   95% expected band : 18.7508 < r < 18.7508
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2050829764
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6742 +/- 0.00476382 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6742 @ 95%CL (1 toyMC)
median expected limit: r < 18.6742 @ 95%CL (1 toyMC)
   68% expected band : 18.6742 < r < 18.6742
   95% expected band : 18.6742 < r < 18.6742
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -963599707
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6221 +/- 0.00663148 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6221 @ 95%CL (1 toyMC)
median expected limit: r < 17.6221 @ 95%CL (1 toyMC)
   68% expected band : 17.6221 < r < 17.6221
   95% expected band : 17.6221 < r < 17.6221
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1238463178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6885 +/- 0.00439434 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6885 @ 95%CL (1 toyMC)
median expected limit: r < 18.6885 @ 95%CL (1 toyMC)
   68% expected band : 18.6885 < r < 18.6885
   95% expected band : 18.6885 < r < 18.6885
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1321931117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.62 +/- 0.00770741 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.62 @ 95%CL (1 toyMC)
median expected limit: r < 17.62 @ 95%CL (1 toyMC)
   68% expected band : 17.62 < r < 17.62
   95% expected band : 17.62 < r < 17.62
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1687737055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6293 +/- 0.00785 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6293 @ 95%CL (1 toyMC)
median expected limit: r < 17.6293 @ 95%CL (1 toyMC)
   68% expected band : 17.6293 < r < 17.6293
   95% expected band : 17.6293 < r < 17.6293
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1251153854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6061 +/- 0.00670845 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6061 @ 95%CL (1 toyMC)
median expected limit: r < 17.6061 @ 95%CL (1 toyMC)
   68% expected band : 17.6061 < r < 17.6061
   95% expected band : 17.6061 < r < 17.6061
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1743407053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6044 +/- 0.00737843 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6044 @ 95%CL (1 toyMC)
median expected limit: r < 17.6044 @ 95%CL (1 toyMC)
   68% expected band : 17.6044 < r < 17.6044
   95% expected band : 17.6044 < r < 17.6044
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -26239248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8346 +/- 0.00394022 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.8346 @ 95%CL (1 toyMC)
median expected limit: r < 18.8346 @ 95%CL (1 toyMC)
   68% expected band : 18.8346 < r < 18.8346
   95% expected band : 18.8346 < r < 18.8346
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2110104084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7952 +/- 0.00352508 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.7952 @ 95%CL (1 toyMC)
median expected limit: r < 18.7952 @ 95%CL (1 toyMC)
   68% expected band : 18.7952 < r < 18.7952
   95% expected band : 18.7952 < r < 18.7952
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -781730221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.5989 +/- 0.00728968 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.5989 @ 95%CL (1 toyMC)
median expected limit: r < 17.5989 @ 95%CL (1 toyMC)
   68% expected band : 17.5989 < r < 17.5989
   95% expected band : 17.5989 < r < 17.5989
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1443041228
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7451 +/- 0.00345175 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.7451 @ 95%CL (1 toyMC)
median expected limit: r < 18.7451 @ 95%CL (1 toyMC)
   68% expected band : 18.7451 < r < 18.7451
   95% expected band : 18.7451 < r < 18.7451
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 959839932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6072 +/- 0.00684835 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6072 @ 95%CL (1 toyMC)
median expected limit: r < 17.6072 @ 95%CL (1 toyMC)
   68% expected band : 17.6072 < r < 17.6072
   95% expected band : 17.6072 < r < 17.6072
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1814673773
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6198 +/- 0.00732406 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6198 @ 95%CL (1 toyMC)
median expected limit: r < 17.6198 @ 95%CL (1 toyMC)
   68% expected band : 17.6198 < r < 17.6198
   95% expected band : 17.6198 < r < 17.6198
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -896204595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.624 +/- 0.00585023 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.624 @ 95%CL (1 toyMC)
median expected limit: r < 17.624 @ 95%CL (1 toyMC)
   68% expected band : 17.624 < r < 17.624
   95% expected band : 17.624 < r < 17.624
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1806230720
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6333 +/- 0.00688798 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 17.6333 @ 95%CL (1 toyMC)
median expected limit: r < 17.6333 @ 95%CL (1 toyMC)
   68% expected band : 17.6333 < r < 17.6333
   95% expected band : 17.6333 < r < 17.6333
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1976376344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6072 +/- 0.00566963 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6072 @ 95%CL (1 toyMC)
median expected limit: r < 17.6072 @ 95%CL (1 toyMC)
   68% expected band : 17.6072 < r < 17.6072
   95% expected band : 17.6072 < r < 17.6072
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 382197206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6353 +/- 0.00623162 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6353 @ 95%CL (1 toyMC)
median expected limit: r < 17.6353 @ 95%CL (1 toyMC)
   68% expected band : 17.6353 < r < 17.6353
   95% expected band : 17.6353 < r < 17.6353
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1928730592
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7395 +/- 0.0032921 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.7395 @ 95%CL (1 toyMC)
median expected limit: r < 18.7395 @ 95%CL (1 toyMC)
   68% expected band : 18.7395 < r < 18.7395
   95% expected band : 18.7395 < r < 18.7395
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1866566626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6232 +/- 0.00847197 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6232 @ 95%CL (1 toyMC)
median expected limit: r < 17.6232 @ 95%CL (1 toyMC)
   68% expected band : 17.6232 < r < 17.6232
   95% expected band : 17.6232 < r < 17.6232
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1480021053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6323 +/- 0.0064072 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.6323 @ 95%CL (1 toyMC)
median expected limit: r < 17.6323 @ 95%CL (1 toyMC)
   68% expected band : 17.6323 < r < 17.6323
   95% expected band : 17.6323 < r < 17.6323
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2038795869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.614 +/- 0.00831595 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.614 @ 95%CL (1 toyMC)
median expected limit: r < 17.614 @ 95%CL (1 toyMC)
   68% expected band : 17.614 < r < 17.614
   95% expected band : 17.614 < r < 17.614
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1902047861
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6142 +/- 0.00562764 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6142 @ 95%CL (1 toyMC)
median expected limit: r < 17.6142 @ 95%CL (1 toyMC)
   68% expected band : 17.6142 < r < 17.6142
   95% expected band : 17.6142 < r < 17.6142
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -874927699
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7822 +/- 0.0031526 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.7822 @ 95%CL (1 toyMC)
median expected limit: r < 18.7822 @ 95%CL (1 toyMC)
   68% expected band : 18.7822 < r < 18.7822
   95% expected band : 18.7822 < r < 18.7822
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 733555052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6149 +/- 0.00727966 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6149 @ 95%CL (1 toyMC)
median expected limit: r < 17.6149 @ 95%CL (1 toyMC)
   68% expected band : 17.6149 < r < 17.6149
   95% expected band : 17.6149 < r < 17.6149
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -899509757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1846 +/- 0.00255451 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.1846 @ 95%CL (1 toyMC)
median expected limit: r < 19.1846 @ 95%CL (1 toyMC)
   68% expected band : 19.1846 < r < 19.1846
   95% expected band : 19.1846 < r < 19.1846
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1938254565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6051 +/- 0.0071222 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6051 @ 95%CL (1 toyMC)
median expected limit: r < 17.6051 @ 95%CL (1 toyMC)
   68% expected band : 17.6051 < r < 17.6051
   95% expected band : 17.6051 < r < 17.6051
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1955575718
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2702 +/- 0.00245227 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.2702 @ 95%CL (1 toyMC)
median expected limit: r < 19.2702 @ 95%CL (1 toyMC)
   68% expected band : 19.2702 < r < 19.2702
   95% expected band : 19.2702 < r < 19.2702
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -337320642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6074 +/- 0.0069619 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6074 @ 95%CL (1 toyMC)
median expected limit: r < 17.6074 @ 95%CL (1 toyMC)
   68% expected band : 17.6074 < r < 17.6074
   95% expected band : 17.6074 < r < 17.6074
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 644732723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6158 +/- 0.00801987 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6158 @ 95%CL (1 toyMC)
median expected limit: r < 17.6158 @ 95%CL (1 toyMC)
   68% expected band : 17.6158 < r < 17.6158
   95% expected band : 17.6158 < r < 17.6158
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -14975704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.6124 +/- 0.00567619 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.6124 @ 95%CL (1 toyMC)
median expected limit: r < 17.6124 @ 95%CL (1 toyMC)
   68% expected band : 17.6124 < r < 17.6124
   95% expected band : 17.6124 < r < 17.6124
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -376475485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6607 +/- 0.00445956 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6607 @ 95%CL (1 toyMC)
median expected limit: r < 18.6607 @ 95%CL (1 toyMC)
   68% expected band : 18.6607 < r < 18.6607
   95% expected band : 18.6607 < r < 18.6607
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1192191479.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-120668967.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1264427439.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1341291516.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1443041228.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-146868083.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1480021053.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-14975704.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-149806322.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1589140594.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-171177556.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1740299780.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-177587218.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1783803633.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1806230720.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-182382445.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1888028132.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1902047861.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1955575718.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1969274388.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-2013166702.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-2020471373.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2050829764.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-22909710.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-241978078.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-26239248.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-337320642.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-376475485.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-386151293.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-387499251.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-408337905.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-456116806.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-662873882.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-718525017.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-746824485.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-781730221.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-835834221.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-842274875.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-874927699.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-893131199.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-896204595.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-899509757.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-963599707.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-964083949.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-965622552.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-971471543.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-99771166.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1027833710.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1043469221.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1063629224.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.115518871.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1158209254.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1175554130.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1225325683.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1238463178.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1251153854.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1321931117.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.141716915.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1612288290.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1683278799.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1687737055.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1743407053.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1814673773.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1866566626.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1901523472.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1928730592.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1938254565.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1952462174.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1976376344.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.203173301.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.2038795869.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.2074170307.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.2099375248.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2110104084.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2128100868.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.313184837.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.370831602.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.382197206.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.395682441.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.400023973.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.444902561.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.513685903.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.518504681.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.540473520.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.616972866.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.644732723.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.70344751.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.733555052.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.763150488.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.764302646.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.838786794.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.851731428.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.889224531.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.914611509.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.924972850.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.926470421.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.93102635.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.931942594.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.950460041.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.959839932.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2052822459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9666 +/- 0.00583851 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9666 @ 95%CL (1 toyMC)
median expected limit: r < 17.9666 @ 95%CL (1 toyMC)
   68% expected band : 17.9666 < r < 17.9666
   95% expected band : 17.9666 < r < 17.9666
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 444926453
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9572 +/- 0.00736907 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9572 @ 95%CL (1 toyMC)
median expected limit: r < 17.9572 @ 95%CL (1 toyMC)
   68% expected band : 17.9572 < r < 17.9572
   95% expected band : 17.9572 < r < 17.9572
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 123157510
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9749 +/- 0.00580379 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9749 @ 95%CL (1 toyMC)
median expected limit: r < 17.9749 @ 95%CL (1 toyMC)
   68% expected band : 17.9749 < r < 17.9749
   95% expected band : 17.9749 < r < 17.9749
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1817029004
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9748 +/- 0.00577008 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9748 @ 95%CL (1 toyMC)
median expected limit: r < 17.9748 @ 95%CL (1 toyMC)
   68% expected band : 17.9748 < r < 17.9748
   95% expected band : 17.9748 < r < 17.9748
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 8103821
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9489 +/- 0.00522861 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9489 @ 95%CL (1 toyMC)
median expected limit: r < 17.9489 @ 95%CL (1 toyMC)
   68% expected band : 17.9489 < r < 17.9489
   95% expected band : 17.9489 < r < 17.9489
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 624739158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9544 +/- 0.00491755 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9544 @ 95%CL (1 toyMC)
median expected limit: r < 17.9544 @ 95%CL (1 toyMC)
   68% expected band : 17.9544 < r < 17.9544
   95% expected band : 17.9544 < r < 17.9544
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1110030524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9603 +/- 0.0067657 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9603 @ 95%CL (1 toyMC)
median expected limit: r < 17.9603 @ 95%CL (1 toyMC)
   68% expected band : 17.9603 < r < 17.9603
   95% expected band : 17.9603 < r < 17.9603
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 420936508
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7606 +/- 0.00386261 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.7606 @ 95%CL (1 toyMC)
median expected limit: r < 18.7606 @ 95%CL (1 toyMC)
   68% expected band : 18.7606 < r < 18.7606
   95% expected band : 18.7606 < r < 18.7606
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -933941987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9285 +/- 0.00303408 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9285 @ 95%CL (1 toyMC)
median expected limit: r < 18.9285 @ 95%CL (1 toyMC)
   68% expected band : 18.9285 < r < 18.9285
   95% expected band : 18.9285 < r < 18.9285
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1218474094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9551 +/- 0.00624696 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9551 @ 95%CL (1 toyMC)
median expected limit: r < 17.9551 @ 95%CL (1 toyMC)
   68% expected band : 17.9551 < r < 17.9551
   95% expected band : 17.9551 < r < 17.9551
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 593366674
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9674 +/- 0.00648643 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9674 @ 95%CL (1 toyMC)
median expected limit: r < 17.9674 @ 95%CL (1 toyMC)
   68% expected band : 17.9674 < r < 17.9674
   95% expected band : 17.9674 < r < 17.9674
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1752895195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9588 +/- 0.00514074 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9588 @ 95%CL (1 toyMC)
median expected limit: r < 17.9588 @ 95%CL (1 toyMC)
   68% expected band : 17.9588 < r < 17.9588
   95% expected band : 17.9588 < r < 17.9588
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1785165000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9696 +/- 0.0057494 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9696 @ 95%CL (1 toyMC)
median expected limit: r < 17.9696 @ 95%CL (1 toyMC)
   68% expected band : 17.9696 < r < 17.9696
   95% expected band : 17.9696 < r < 17.9696
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1620803806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9547 +/- 0.00341848 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9547 @ 95%CL (1 toyMC)
median expected limit: r < 18.9547 @ 95%CL (1 toyMC)
   68% expected band : 18.9547 < r < 18.9547
   95% expected band : 18.9547 < r < 18.9547
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1609823427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9369 +/- 0.00712865 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9369 @ 95%CL (1 toyMC)
median expected limit: r < 17.9369 @ 95%CL (1 toyMC)
   68% expected band : 17.9369 < r < 17.9369
   95% expected band : 17.9369 < r < 17.9369
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1727318451
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9713 +/- 0.00577096 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9713 @ 95%CL (1 toyMC)
median expected limit: r < 17.9713 @ 95%CL (1 toyMC)
   68% expected band : 17.9713 < r < 17.9713
   95% expected band : 17.9713 < r < 17.9713
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1238207816
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7644 +/- 0.00376286 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.7644 @ 95%CL (1 toyMC)
median expected limit: r < 18.7644 @ 95%CL (1 toyMC)
   68% expected band : 18.7644 < r < 18.7644
   95% expected band : 18.7644 < r < 18.7644
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1734782313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.3869 +/- 0.00305321 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 19.3869 @ 95%CL (1 toyMC)
median expected limit: r < 19.3869 @ 95%CL (1 toyMC)
   68% expected band : 19.3869 < r < 19.3869
   95% expected band : 19.3869 < r < 19.3869
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1369315588
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6307 +/- 0.00378756 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6307 @ 95%CL (1 toyMC)
median expected limit: r < 18.6307 @ 95%CL (1 toyMC)
   68% expected band : 18.6307 < r < 18.6307
   95% expected band : 18.6307 < r < 18.6307
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 430805332
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.6178 +/- 0.00374877 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.6178 @ 95%CL (1 toyMC)
median expected limit: r < 18.6178 @ 95%CL (1 toyMC)
   68% expected band : 18.6178 < r < 18.6178
   95% expected band : 18.6178 < r < 18.6178
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 840534266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9728 +/- 0.00647025 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9728 @ 95%CL (1 toyMC)
median expected limit: r < 17.9728 @ 95%CL (1 toyMC)
   68% expected band : 17.9728 < r < 17.9728
   95% expected band : 17.9728 < r < 17.9728
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 410389987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9637 +/- 0.00719218 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9637 @ 95%CL (1 toyMC)
median expected limit: r < 17.9637 @ 95%CL (1 toyMC)
   68% expected band : 17.9637 < r < 17.9637
   95% expected band : 17.9637 < r < 17.9637
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 776688124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9697 +/- 0.00719679 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9697 @ 95%CL (1 toyMC)
median expected limit: r < 17.9697 @ 95%CL (1 toyMC)
   68% expected band : 17.9697 < r < 17.9697
   95% expected band : 17.9697 < r < 17.9697
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 991743043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9573 +/- 0.00642749 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9573 @ 95%CL (1 toyMC)
median expected limit: r < 17.9573 @ 95%CL (1 toyMC)
   68% expected band : 17.9573 < r < 17.9573
   95% expected band : 17.9573 < r < 17.9573
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 148602313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9726 +/- 0.00577006 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9726 @ 95%CL (1 toyMC)
median expected limit: r < 17.9726 @ 95%CL (1 toyMC)
   68% expected band : 17.9726 < r < 17.9726
   95% expected band : 17.9726 < r < 17.9726
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -237578055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9508 +/- 0.00685349 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9508 @ 95%CL (1 toyMC)
median expected limit: r < 17.9508 @ 95%CL (1 toyMC)
   68% expected band : 17.9508 < r < 17.9508
   95% expected band : 17.9508 < r < 17.9508
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -343442844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9705 +/- 0.00573234 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9705 @ 95%CL (1 toyMC)
median expected limit: r < 17.9705 @ 95%CL (1 toyMC)
   68% expected band : 17.9705 < r < 17.9705
   95% expected band : 17.9705 < r < 17.9705
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -972138070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9704 +/- 0.0062203 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9704 @ 95%CL (1 toyMC)
median expected limit: r < 17.9704 @ 95%CL (1 toyMC)
   68% expected band : 17.9704 < r < 17.9704
   95% expected band : 17.9704 < r < 17.9704
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2055814375
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9782 +/- 0.00674341 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9782 @ 95%CL (1 toyMC)
median expected limit: r < 17.9782 @ 95%CL (1 toyMC)
   68% expected band : 17.9782 < r < 17.9782
   95% expected band : 17.9782 < r < 17.9782
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1644358533
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9469 +/- 0.00612538 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9469 @ 95%CL (1 toyMC)
median expected limit: r < 17.9469 @ 95%CL (1 toyMC)
   68% expected band : 17.9469 < r < 17.9469
   95% expected band : 17.9469 < r < 17.9469
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1920121308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9534 +/- 0.00504772 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9534 @ 95%CL (1 toyMC)
median expected limit: r < 17.9534 @ 95%CL (1 toyMC)
   68% expected band : 17.9534 < r < 17.9534
   95% expected band : 17.9534 < r < 17.9534
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1169680612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9521 +/- 0.00609968 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9521 @ 95%CL (1 toyMC)
median expected limit: r < 17.9521 @ 95%CL (1 toyMC)
   68% expected band : 17.9521 < r < 17.9521
   95% expected band : 17.9521 < r < 17.9521
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -387251581
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9712 +/- 0.00481658 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9712 @ 95%CL (1 toyMC)
median expected limit: r < 17.9712 @ 95%CL (1 toyMC)
   68% expected band : 17.9712 < r < 17.9712
   95% expected band : 17.9712 < r < 17.9712
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -236771486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9655 +/- 0.00618308 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9655 @ 95%CL (1 toyMC)
median expected limit: r < 17.9655 @ 95%CL (1 toyMC)
   68% expected band : 17.9655 < r < 17.9655
   95% expected band : 17.9655 < r < 17.9655
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1141621475
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9719 +/- 0.00544551 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9719 @ 95%CL (1 toyMC)
median expected limit: r < 17.9719 @ 95%CL (1 toyMC)
   68% expected band : 17.9719 < r < 17.9719
   95% expected band : 17.9719 < r < 17.9719
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 874922722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9868 +/- 0.00322788 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9868 @ 95%CL (1 toyMC)
median expected limit: r < 18.9868 @ 95%CL (1 toyMC)
   68% expected band : 18.9868 < r < 18.9868
   95% expected band : 18.9868 < r < 18.9868
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -326187179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.3278 +/- 0.00238464 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.3278 @ 95%CL (1 toyMC)
median expected limit: r < 19.3278 @ 95%CL (1 toyMC)
   68% expected band : 19.3278 < r < 19.3278
   95% expected band : 19.3278 < r < 19.3278
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2117080171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9378 +/- 0.00663376 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9378 @ 95%CL (1 toyMC)
median expected limit: r < 17.9378 @ 95%CL (1 toyMC)
   68% expected band : 17.9378 < r < 17.9378
   95% expected band : 17.9378 < r < 17.9378
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2010572017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9612 +/- 0.00594564 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9612 @ 95%CL (1 toyMC)
median expected limit: r < 17.9612 @ 95%CL (1 toyMC)
   68% expected band : 17.9612 < r < 17.9612
   95% expected band : 17.9612 < r < 17.9612
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 683807260
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9484 +/- 0.00627618 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9484 @ 95%CL (1 toyMC)
median expected limit: r < 17.9484 @ 95%CL (1 toyMC)
   68% expected band : 17.9484 < r < 17.9484
   95% expected band : 17.9484 < r < 17.9484
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1027513908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9495 +/- 0.00311543 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9495 @ 95%CL (1 toyMC)
median expected limit: r < 18.9495 @ 95%CL (1 toyMC)
   68% expected band : 18.9495 < r < 18.9495
   95% expected band : 18.9495 < r < 18.9495
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -128297717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9539 +/- 0.00508211 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9539 @ 95%CL (1 toyMC)
median expected limit: r < 17.9539 @ 95%CL (1 toyMC)
   68% expected band : 17.9539 < r < 17.9539
   95% expected band : 17.9539 < r < 17.9539
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 766807070
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9584 +/- 0.00641925 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9584 @ 95%CL (1 toyMC)
median expected limit: r < 17.9584 @ 95%CL (1 toyMC)
   68% expected band : 17.9584 < r < 17.9584
   95% expected band : 17.9584 < r < 17.9584
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1156904781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9588 +/- 0.00598508 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9588 @ 95%CL (1 toyMC)
median expected limit: r < 17.9588 @ 95%CL (1 toyMC)
   68% expected band : 17.9588 < r < 17.9588
   95% expected band : 17.9588 < r < 17.9588
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -406504537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9652 +/- 0.00490308 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9652 @ 95%CL (1 toyMC)
median expected limit: r < 17.9652 @ 95%CL (1 toyMC)
   68% expected band : 17.9652 < r < 17.9652
   95% expected band : 17.9652 < r < 17.9652
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -10612571
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9041 +/- 0.00354516 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.9041 @ 95%CL (1 toyMC)
median expected limit: r < 18.9041 @ 95%CL (1 toyMC)
   68% expected band : 18.9041 < r < 18.9041
   95% expected band : 18.9041 < r < 18.9041
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1504336197
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9715 +/- 0.0066887 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9715 @ 95%CL (1 toyMC)
median expected limit: r < 17.9715 @ 95%CL (1 toyMC)
   68% expected band : 17.9715 < r < 17.9715
   95% expected band : 17.9715 < r < 17.9715
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1130456918
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9614 +/- 0.00681932 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9614 @ 95%CL (1 toyMC)
median expected limit: r < 17.9614 @ 95%CL (1 toyMC)
   68% expected band : 17.9614 < r < 17.9614
   95% expected band : 17.9614 < r < 17.9614
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -60078018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9531 +/- 0.00535303 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9531 @ 95%CL (1 toyMC)
median expected limit: r < 17.9531 @ 95%CL (1 toyMC)
   68% expected band : 17.9531 < r < 17.9531
   95% expected band : 17.9531 < r < 17.9531
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -445085515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9773 +/- 0.00668344 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9773 @ 95%CL (1 toyMC)
median expected limit: r < 17.9773 @ 95%CL (1 toyMC)
   68% expected band : 17.9773 < r < 17.9773
   95% expected band : 17.9773 < r < 17.9773
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1033305001
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.5492 +/- 0.00232982 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 19.5492 @ 95%CL (1 toyMC)
median expected limit: r < 19.5492 @ 95%CL (1 toyMC)
   68% expected band : 19.5492 < r < 19.5492
   95% expected band : 19.5492 < r < 19.5492
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -383928354
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.977 +/- 0.00558769 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.977 @ 95%CL (1 toyMC)
median expected limit: r < 17.977 @ 95%CL (1 toyMC)
   68% expected band : 17.977 < r < 17.977
   95% expected band : 17.977 < r < 17.977
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1936311650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8696 +/- 0.00374003 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8696 @ 95%CL (1 toyMC)
median expected limit: r < 18.8696 @ 95%CL (1 toyMC)
   68% expected band : 18.8696 < r < 18.8696
   95% expected band : 18.8696 < r < 18.8696
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1298883676
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0191 +/- 0.00336918 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0191 @ 95%CL (1 toyMC)
median expected limit: r < 19.0191 @ 95%CL (1 toyMC)
   68% expected band : 19.0191 < r < 19.0191
   95% expected band : 19.0191 < r < 19.0191
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1665379327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9818 +/- 0.00478858 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9818 @ 95%CL (1 toyMC)
median expected limit: r < 17.9818 @ 95%CL (1 toyMC)
   68% expected band : 17.9818 < r < 17.9818
   95% expected band : 17.9818 < r < 17.9818
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -4852438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9518 +/- 0.00468449 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9518 @ 95%CL (1 toyMC)
median expected limit: r < 17.9518 @ 95%CL (1 toyMC)
   68% expected band : 17.9518 < r < 17.9518
   95% expected band : 17.9518 < r < 17.9518
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1358727595
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9593 +/- 0.00603094 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9593 @ 95%CL (1 toyMC)
median expected limit: r < 17.9593 @ 95%CL (1 toyMC)
   68% expected band : 17.9593 < r < 17.9593
   95% expected band : 17.9593 < r < 17.9593
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1295117208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.924 +/- 0.00376694 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.924 @ 95%CL (1 toyMC)
median expected limit: r < 18.924 @ 95%CL (1 toyMC)
   68% expected band : 18.924 < r < 18.924
   95% expected band : 18.924 < r < 18.924
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 240352843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9636 +/- 0.00613085 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9636 @ 95%CL (1 toyMC)
median expected limit: r < 17.9636 @ 95%CL (1 toyMC)
   68% expected band : 17.9636 < r < 17.9636
   95% expected band : 17.9636 < r < 17.9636
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 350778425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.885 +/- 0.00344817 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.885 @ 95%CL (1 toyMC)
median expected limit: r < 18.885 @ 95%CL (1 toyMC)
   68% expected band : 18.885 < r < 18.885
   95% expected band : 18.885 < r < 18.885
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1499774426
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9552 +/- 0.00541309 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9552 @ 95%CL (1 toyMC)
median expected limit: r < 17.9552 @ 95%CL (1 toyMC)
   68% expected band : 17.9552 < r < 17.9552
   95% expected band : 17.9552 < r < 17.9552
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -869544767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9829 +/- 0.004498 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9829 @ 95%CL (1 toyMC)
median expected limit: r < 17.9829 @ 95%CL (1 toyMC)
   68% expected band : 17.9829 < r < 17.9829
   95% expected band : 17.9829 < r < 17.9829
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1729204570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9605 +/- 0.00488019 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9605 @ 95%CL (1 toyMC)
median expected limit: r < 17.9605 @ 95%CL (1 toyMC)
   68% expected band : 17.9605 < r < 17.9605
   95% expected band : 17.9605 < r < 17.9605
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1349831335
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9728 +/- 0.00604218 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9728 @ 95%CL (1 toyMC)
median expected limit: r < 17.9728 @ 95%CL (1 toyMC)
   68% expected band : 17.9728 < r < 17.9728
   95% expected band : 17.9728 < r < 17.9728
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 876606868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9726 +/- 0.00686048 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9726 @ 95%CL (1 toyMC)
median expected limit: r < 17.9726 @ 95%CL (1 toyMC)
   68% expected band : 17.9726 < r < 17.9726
   95% expected band : 17.9726 < r < 17.9726
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -126358048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9833 +/- 0.00590825 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9833 @ 95%CL (1 toyMC)
median expected limit: r < 17.9833 @ 95%CL (1 toyMC)
   68% expected band : 17.9833 < r < 17.9833
   95% expected band : 17.9833 < r < 17.9833
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1375827944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9099 +/- 0.00331809 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9099 @ 95%CL (1 toyMC)
median expected limit: r < 18.9099 @ 95%CL (1 toyMC)
   68% expected band : 18.9099 < r < 18.9099
   95% expected band : 18.9099 < r < 18.9099
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -666022927
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9637 +/- 0.00582454 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9637 @ 95%CL (1 toyMC)
median expected limit: r < 17.9637 @ 95%CL (1 toyMC)
   68% expected band : 17.9637 < r < 17.9637
   95% expected band : 17.9637 < r < 17.9637
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -184193417
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9423 +/- 0.00402568 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.9423 @ 95%CL (1 toyMC)
median expected limit: r < 18.9423 @ 95%CL (1 toyMC)
   68% expected band : 18.9423 < r < 18.9423
   95% expected band : 18.9423 < r < 18.9423
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1979898342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.953 +/- 0.00307707 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.953 @ 95%CL (1 toyMC)
median expected limit: r < 18.953 @ 95%CL (1 toyMC)
   68% expected band : 18.953 < r < 18.953
   95% expected band : 18.953 < r < 18.953
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1196112020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9524 +/- 0.0055728 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9524 @ 95%CL (1 toyMC)
median expected limit: r < 17.9524 @ 95%CL (1 toyMC)
   68% expected band : 17.9524 < r < 17.9524
   95% expected band : 17.9524 < r < 17.9524
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 503391131
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8484 +/- 0.00323087 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8484 @ 95%CL (1 toyMC)
median expected limit: r < 18.8484 @ 95%CL (1 toyMC)
   68% expected band : 18.8484 < r < 18.8484
   95% expected band : 18.8484 < r < 18.8484
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1433663769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9512 +/- 0.00370533 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.9512 @ 95%CL (1 toyMC)
median expected limit: r < 18.9512 @ 95%CL (1 toyMC)
   68% expected band : 18.9512 < r < 18.9512
   95% expected band : 18.9512 < r < 18.9512
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2101395059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9745 +/- 0.0050861 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9745 @ 95%CL (1 toyMC)
median expected limit: r < 17.9745 @ 95%CL (1 toyMC)
   68% expected band : 17.9745 < r < 17.9745
   95% expected band : 17.9745 < r < 17.9745
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1588293642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9706 +/- 0.00627371 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9706 @ 95%CL (1 toyMC)
median expected limit: r < 17.9706 @ 95%CL (1 toyMC)
   68% expected band : 17.9706 < r < 17.9706
   95% expected band : 17.9706 < r < 17.9706
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1260715963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9632 +/- 0.00673238 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9632 @ 95%CL (1 toyMC)
median expected limit: r < 17.9632 @ 95%CL (1 toyMC)
   68% expected band : 17.9632 < r < 17.9632
   95% expected band : 17.9632 < r < 17.9632
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1475562415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9485 +/- 0.00688746 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9485 @ 95%CL (1 toyMC)
median expected limit: r < 17.9485 @ 95%CL (1 toyMC)
   68% expected band : 17.9485 < r < 17.9485
   95% expected band : 17.9485 < r < 17.9485
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1968643537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.7997 +/- 0.00388087 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 18.7997 @ 95%CL (1 toyMC)
median expected limit: r < 18.7997 @ 95%CL (1 toyMC)
   68% expected band : 18.7997 < r < 18.7997
   95% expected band : 18.7997 < r < 18.7997
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -422881852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9542 +/- 0.00619993 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9542 @ 95%CL (1 toyMC)
median expected limit: r < 17.9542 @ 95%CL (1 toyMC)
   68% expected band : 17.9542 < r < 17.9542
   95% expected band : 17.9542 < r < 17.9542
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1123474601
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9469 +/- 0.00543342 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9469 @ 95%CL (1 toyMC)
median expected limit: r < 17.9469 @ 95%CL (1 toyMC)
   68% expected band : 17.9469 < r < 17.9469
   95% expected band : 17.9469 < r < 17.9469
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1584223218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9462 +/- 0.00606939 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 17.9462 @ 95%CL (1 toyMC)
median expected limit: r < 17.9462 @ 95%CL (1 toyMC)
   68% expected band : 17.9462 < r < 17.9462
   95% expected band : 17.9462 < r < 17.9462
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 104219827
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9682 +/- 0.00679541 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9682 @ 95%CL (1 toyMC)
median expected limit: r < 17.9682 @ 95%CL (1 toyMC)
   68% expected band : 17.9682 < r < 17.9682
   95% expected band : 17.9682 < r < 17.9682
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1420632943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9897 +/- 0.00705428 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9897 @ 95%CL (1 toyMC)
median expected limit: r < 17.9897 @ 95%CL (1 toyMC)
   68% expected band : 17.9897 < r < 17.9897
   95% expected band : 17.9897 < r < 17.9897
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1929631493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9838 +/- 0.00594459 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9838 @ 95%CL (1 toyMC)
median expected limit: r < 17.9838 @ 95%CL (1 toyMC)
   68% expected band : 17.9838 < r < 17.9838
   95% expected band : 17.9838 < r < 17.9838
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1465460077
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.981 +/- 0.00609274 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.981 @ 95%CL (1 toyMC)
median expected limit: r < 17.981 @ 95%CL (1 toyMC)
   68% expected band : 17.981 < r < 17.981
   95% expected band : 17.981 < r < 17.981
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1344979526
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.3457 +/- 0.00266099 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.3457 @ 95%CL (1 toyMC)
median expected limit: r < 19.3457 @ 95%CL (1 toyMC)
   68% expected band : 19.3457 < r < 19.3457
   95% expected band : 19.3457 < r < 19.3457
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 253143603
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9082 +/- 0.00364082 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9082 @ 95%CL (1 toyMC)
median expected limit: r < 18.9082 @ 95%CL (1 toyMC)
   68% expected band : 18.9082 < r < 18.9082
   95% expected band : 18.9082 < r < 18.9082
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 70100560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9584 +/- 0.00598152 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9584 @ 95%CL (1 toyMC)
median expected limit: r < 17.9584 @ 95%CL (1 toyMC)
   68% expected band : 17.9584 < r < 17.9584
   95% expected band : 17.9584 < r < 17.9584
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1832448125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9506 +/- 0.00624192 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9506 @ 95%CL (1 toyMC)
median expected limit: r < 17.9506 @ 95%CL (1 toyMC)
   68% expected band : 17.9506 < r < 17.9506
   95% expected band : 17.9506 < r < 17.9506
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -696771161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9559 +/- 0.00624442 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9559 @ 95%CL (1 toyMC)
median expected limit: r < 17.9559 @ 95%CL (1 toyMC)
   68% expected band : 17.9559 < r < 17.9559
   95% expected band : 17.9559 < r < 17.9559
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 288181370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9621 +/- 0.00518703 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9621 @ 95%CL (1 toyMC)
median expected limit: r < 17.9621 @ 95%CL (1 toyMC)
   68% expected band : 17.9621 < r < 17.9621
   95% expected band : 17.9621 < r < 17.9621
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 979754749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9694 +/- 0.00681597 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9694 @ 95%CL (1 toyMC)
median expected limit: r < 17.9694 @ 95%CL (1 toyMC)
   68% expected band : 17.9694 < r < 17.9694
   95% expected band : 17.9694 < r < 17.9694
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1464831266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9498 +/- 0.00316883 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9498 @ 95%CL (1 toyMC)
median expected limit: r < 18.9498 @ 95%CL (1 toyMC)
   68% expected band : 18.9498 < r < 18.9498
   95% expected band : 18.9498 < r < 18.9498
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2011690279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9298 +/- 0.00334562 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9298 @ 95%CL (1 toyMC)
median expected limit: r < 18.9298 @ 95%CL (1 toyMC)
   68% expected band : 18.9298 < r < 18.9298
   95% expected band : 18.9298 < r < 18.9298
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -877928237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9698 +/- 0.00645842 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9698 @ 95%CL (1 toyMC)
median expected limit: r < 17.9698 @ 95%CL (1 toyMC)
   68% expected band : 17.9698 < r < 17.9698
   95% expected band : 17.9698 < r < 17.9698
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 933550134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9465 +/- 0.004922 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9465 @ 95%CL (1 toyMC)
median expected limit: r < 17.9465 @ 95%CL (1 toyMC)
   68% expected band : 17.9465 < r < 17.9465
   95% expected band : 17.9465 < r < 17.9465
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1929155618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8768 +/- 0.00415863 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8768 @ 95%CL (1 toyMC)
median expected limit: r < 18.8768 @ 95%CL (1 toyMC)
   68% expected band : 18.8768 < r < 18.8768
   95% expected band : 18.8768 < r < 18.8768
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1327918895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9765 +/- 0.00600456 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 17.9765 @ 95%CL (1 toyMC)
median expected limit: r < 17.9765 @ 95%CL (1 toyMC)
   68% expected band : 17.9765 < r < 17.9765
   95% expected band : 17.9765 < r < 17.9765
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -102282534
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.988 +/- 0.00624119 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.988 @ 95%CL (1 toyMC)
median expected limit: r < 17.988 @ 95%CL (1 toyMC)
   68% expected band : 17.988 < r < 17.988
   95% expected band : 17.988 < r < 17.988
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1606620114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 17.9816 +/- 0.00587385 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 17.9816 @ 95%CL (1 toyMC)
median expected limit: r < 17.9816 @ 95%CL (1 toyMC)
   68% expected band : 17.9816 < r < 17.9816
   95% expected band : 17.9816 < r < 17.9816
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-102282534.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-10612571.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1130456918.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1141621475.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1169680612.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1196112020.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-126358048.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-128297717.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1295117208.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1298883676.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1327918895.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1344979526.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1349831335.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1464831266.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1465460077.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1584223218.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1588293642.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1609823427.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1620803806.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1644358533.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1665379327.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1785165000.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1817029004.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-184193417.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1920121308.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1929631493.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-2010572017.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-236771486.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-237578055.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-326187179.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-343442844.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-383928354.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-387251581.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-406504537.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-422881852.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-445085515.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-4852438.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-60078018.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-666022927.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-696771161.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-869544767.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-877928237.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-933941987.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-972138070.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.1027513908.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.1033305001.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.104219827.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1110030524.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1123474601.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1156904781.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1218474094.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.123157510.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1238207816.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1260715963.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1358727595.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1369315588.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1375827944.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1420632943.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1433663769.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1475562415.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.148602313.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1499774426.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1504336197.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1606620114.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1727318451.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1729204570.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1734782313.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1752895195.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1832448125.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1929155618.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1936311650.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1968643537.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1979898342.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.2011690279.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.2052822459.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.2055814375.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2101395059.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.2117080171.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.240352843.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.253143603.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.288181370.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.350778425.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.410389987.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.420936508.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.430805332.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.444926453.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.503391131.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.593366674.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.624739158.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.683807260.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.70100560.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.766807070.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.776688124.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.8103821.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.840534266.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.874922722.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.876606868.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.933550134.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.979754749.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.991743043.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -822403171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1414 +/- 0.0046267 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1414 @ 95%CL (1 toyMC)
median expected limit: r < 18.1414 @ 95%CL (1 toyMC)
   68% expected band : 18.1414 < r < 18.1414
   95% expected band : 18.1414 < r < 18.1414
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -749330234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1396 +/- 0.00460225 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1396 @ 95%CL (1 toyMC)
median expected limit: r < 18.1396 @ 95%CL (1 toyMC)
   68% expected band : 18.1396 < r < 18.1396
   95% expected band : 18.1396 < r < 18.1396
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1154758032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9022 +/- 0.00349042 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9022 @ 95%CL (1 toyMC)
median expected limit: r < 18.9022 @ 95%CL (1 toyMC)
   68% expected band : 18.9022 < r < 18.9022
   95% expected band : 18.9022 < r < 18.9022
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -694508344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1325 +/- 0.00562681 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1325 @ 95%CL (1 toyMC)
median expected limit: r < 18.1325 @ 95%CL (1 toyMC)
   68% expected band : 18.1325 < r < 18.1325
   95% expected band : 18.1325 < r < 18.1325
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -315293842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8964 +/- 0.00285805 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.8964 @ 95%CL (1 toyMC)
median expected limit: r < 18.8964 @ 95%CL (1 toyMC)
   68% expected band : 18.8964 < r < 18.8964
   95% expected band : 18.8964 < r < 18.8964
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2029108911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1449 +/- 0.00598157 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1449 @ 95%CL (1 toyMC)
median expected limit: r < 18.1449 @ 95%CL (1 toyMC)
   68% expected band : 18.1449 < r < 18.1449
   95% expected band : 18.1449 < r < 18.1449
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2118234800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.162 +/- 0.00622063 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.162 @ 95%CL (1 toyMC)
median expected limit: r < 18.162 @ 95%CL (1 toyMC)
   68% expected band : 18.162 < r < 18.162
   95% expected band : 18.162 < r < 18.162
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1479767098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1464 +/- 0.00520883 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1464 @ 95%CL (1 toyMC)
median expected limit: r < 18.1464 @ 95%CL (1 toyMC)
   68% expected band : 18.1464 < r < 18.1464
   95% expected band : 18.1464 < r < 18.1464
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1976360647
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1448 +/- 0.00568798 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1448 @ 95%CL (1 toyMC)
median expected limit: r < 18.1448 @ 95%CL (1 toyMC)
   68% expected band : 18.1448 < r < 18.1448
   95% expected band : 18.1448 < r < 18.1448
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1021512609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1317 +/- 0.00313584 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.1317 @ 95%CL (1 toyMC)
median expected limit: r < 19.1317 @ 95%CL (1 toyMC)
   68% expected band : 19.1317 < r < 19.1317
   95% expected band : 19.1317 < r < 19.1317
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1313048400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1406 +/- 0.00560897 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 18.1406 @ 95%CL (1 toyMC)
median expected limit: r < 18.1406 @ 95%CL (1 toyMC)
   68% expected band : 18.1406 < r < 18.1406
   95% expected band : 18.1406 < r < 18.1406
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2075908762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1506 +/- 0.00638721 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1506 @ 95%CL (1 toyMC)
median expected limit: r < 18.1506 @ 95%CL (1 toyMC)
   68% expected band : 18.1506 < r < 18.1506
   95% expected band : 18.1506 < r < 18.1506
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 192972198
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1152 +/- 0.00500338 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1152 @ 95%CL (1 toyMC)
median expected limit: r < 18.1152 @ 95%CL (1 toyMC)
   68% expected band : 18.1152 < r < 18.1152
   95% expected band : 18.1152 < r < 18.1152
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2095895409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1462 +/- 0.00596376 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1462 @ 95%CL (1 toyMC)
median expected limit: r < 18.1462 @ 95%CL (1 toyMC)
   68% expected band : 18.1462 < r < 18.1462
   95% expected band : 18.1462 < r < 18.1462
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 223000273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1336 +/- 0.00571526 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1336 @ 95%CL (1 toyMC)
median expected limit: r < 18.1336 @ 95%CL (1 toyMC)
   68% expected band : 18.1336 < r < 18.1336
   95% expected band : 18.1336 < r < 18.1336
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1720900086
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1374 +/- 0.0050226 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1374 @ 95%CL (1 toyMC)
median expected limit: r < 18.1374 @ 95%CL (1 toyMC)
   68% expected band : 18.1374 < r < 18.1374
   95% expected band : 18.1374 < r < 18.1374
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -810272219
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1433 +/- 0.00558413 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1433 @ 95%CL (1 toyMC)
median expected limit: r < 18.1433 @ 95%CL (1 toyMC)
   68% expected band : 18.1433 < r < 18.1433
   95% expected band : 18.1433 < r < 18.1433
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 288262938
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1499 +/- 0.00570712 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1499 @ 95%CL (1 toyMC)
median expected limit: r < 18.1499 @ 95%CL (1 toyMC)
   68% expected band : 18.1499 < r < 18.1499
   95% expected band : 18.1499 < r < 18.1499
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1334452420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1398 +/- 0.00550298 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1398 @ 95%CL (1 toyMC)
median expected limit: r < 18.1398 @ 95%CL (1 toyMC)
   68% expected band : 18.1398 < r < 18.1398
   95% expected band : 18.1398 < r < 18.1398
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1849497681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.156 +/- 0.00573794 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.156 @ 95%CL (1 toyMC)
median expected limit: r < 18.156 @ 95%CL (1 toyMC)
   68% expected band : 18.156 < r < 18.156
   95% expected band : 18.156 < r < 18.156
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -95194832
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1398 +/- 0.00519977 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1398 @ 95%CL (1 toyMC)
median expected limit: r < 18.1398 @ 95%CL (1 toyMC)
   68% expected band : 18.1398 < r < 18.1398
   95% expected band : 18.1398 < r < 18.1398
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1975616854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0249 +/- 0.00359594 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0249 @ 95%CL (1 toyMC)
median expected limit: r < 19.0249 @ 95%CL (1 toyMC)
   68% expected band : 19.0249 < r < 19.0249
   95% expected band : 19.0249 < r < 19.0249
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1966045085
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1452 +/- 0.00499226 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1452 @ 95%CL (1 toyMC)
median expected limit: r < 18.1452 @ 95%CL (1 toyMC)
   68% expected band : 18.1452 < r < 18.1452
   95% expected band : 18.1452 < r < 18.1452
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 598639865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1294 +/- 0.00633469 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1294 @ 95%CL (1 toyMC)
median expected limit: r < 18.1294 @ 95%CL (1 toyMC)
   68% expected band : 18.1294 < r < 18.1294
   95% expected band : 18.1294 < r < 18.1294
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1187753583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.002 +/- 0.00384384 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.002 @ 95%CL (1 toyMC)
median expected limit: r < 19.002 @ 95%CL (1 toyMC)
   68% expected band : 19.002 < r < 19.002
   95% expected band : 19.002 < r < 19.002
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1989207313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1606 +/- 0.00536334 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1606 @ 95%CL (1 toyMC)
median expected limit: r < 18.1606 @ 95%CL (1 toyMC)
   68% expected band : 18.1606 < r < 18.1606
   95% expected band : 18.1606 < r < 18.1606
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1106709202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.139 +/- 0.00530801 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.139 @ 95%CL (1 toyMC)
median expected limit: r < 18.139 @ 95%CL (1 toyMC)
   68% expected band : 18.139 < r < 18.139
   95% expected band : 18.139 < r < 18.139
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -248940407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1496 +/- 0.00560887 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1496 @ 95%CL (1 toyMC)
median expected limit: r < 18.1496 @ 95%CL (1 toyMC)
   68% expected band : 18.1496 < r < 18.1496
   95% expected band : 18.1496 < r < 18.1496
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 355424026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1249 +/- 0.00633931 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1249 @ 95%CL (1 toyMC)
median expected limit: r < 18.1249 @ 95%CL (1 toyMC)
   68% expected band : 18.1249 < r < 18.1249
   95% expected band : 18.1249 < r < 18.1249
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -606041455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1451 +/- 0.00593264 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1451 @ 95%CL (1 toyMC)
median expected limit: r < 18.1451 @ 95%CL (1 toyMC)
   68% expected band : 18.1451 < r < 18.1451
   95% expected band : 18.1451 < r < 18.1451
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1349019724
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1321 +/- 0.00572805 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1321 @ 95%CL (1 toyMC)
median expected limit: r < 18.1321 @ 95%CL (1 toyMC)
   68% expected band : 18.1321 < r < 18.1321
   95% expected band : 18.1321 < r < 18.1321
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1694077430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1511 +/- 0.00563929 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1511 @ 95%CL (1 toyMC)
median expected limit: r < 18.1511 @ 95%CL (1 toyMC)
   68% expected band : 18.1511 < r < 18.1511
   95% expected band : 18.1511 < r < 18.1511
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -143753565
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1461 +/- 0.00581249 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1461 @ 95%CL (1 toyMC)
median expected limit: r < 18.1461 @ 95%CL (1 toyMC)
   68% expected band : 18.1461 < r < 18.1461
   95% expected band : 18.1461 < r < 18.1461
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1668762416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1376 +/- 0.00528622 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1376 @ 95%CL (1 toyMC)
median expected limit: r < 18.1376 @ 95%CL (1 toyMC)
   68% expected band : 18.1376 < r < 18.1376
   95% expected band : 18.1376 < r < 18.1376
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2045483831
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0265 +/- 0.00331648 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0265 @ 95%CL (1 toyMC)
median expected limit: r < 19.0265 @ 95%CL (1 toyMC)
   68% expected band : 19.0265 < r < 19.0265
   95% expected band : 19.0265 < r < 19.0265
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1614633136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1355 +/- 0.00603811 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1355 @ 95%CL (1 toyMC)
median expected limit: r < 18.1355 @ 95%CL (1 toyMC)
   68% expected band : 18.1355 < r < 18.1355
   95% expected band : 18.1355 < r < 18.1355
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2132469862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0147 +/- 0.0033696 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0147 @ 95%CL (1 toyMC)
median expected limit: r < 19.0147 @ 95%CL (1 toyMC)
   68% expected band : 19.0147 < r < 19.0147
   95% expected band : 19.0147 < r < 19.0147
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1269189505
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1283 +/- 0.00559393 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1283 @ 95%CL (1 toyMC)
median expected limit: r < 18.1283 @ 95%CL (1 toyMC)
   68% expected band : 18.1283 < r < 18.1283
   95% expected band : 18.1283 < r < 18.1283
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 199000691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.016 +/- 0.00318483 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.016 @ 95%CL (1 toyMC)
median expected limit: r < 19.016 @ 95%CL (1 toyMC)
   68% expected band : 19.016 < r < 19.016
   95% expected band : 19.016 < r < 19.016
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2084624745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1525 +/- 0.00600048 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1525 @ 95%CL (1 toyMC)
median expected limit: r < 18.1525 @ 95%CL (1 toyMC)
   68% expected band : 18.1525 < r < 18.1525
   95% expected band : 18.1525 < r < 18.1525
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1251334018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1451 +/- 0.00583875 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1451 @ 95%CL (1 toyMC)
median expected limit: r < 18.1451 @ 95%CL (1 toyMC)
   68% expected band : 18.1451 < r < 18.1451
   95% expected band : 18.1451 < r < 18.1451
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -924903193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8603 +/- 0.00322452 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.8603 @ 95%CL (1 toyMC)
median expected limit: r < 18.8603 @ 95%CL (1 toyMC)
   68% expected band : 18.8603 < r < 18.8603
   95% expected band : 18.8603 < r < 18.8603
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1274414452
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1553 +/- 0.00540904 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1553 @ 95%CL (1 toyMC)
median expected limit: r < 18.1553 @ 95%CL (1 toyMC)
   68% expected band : 18.1553 < r < 18.1553
   95% expected band : 18.1553 < r < 18.1553
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -126469175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1432 +/- 0.0058203 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1432 @ 95%CL (1 toyMC)
median expected limit: r < 18.1432 @ 95%CL (1 toyMC)
   68% expected band : 18.1432 < r < 18.1432
   95% expected band : 18.1432 < r < 18.1432
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 487931303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.151 +/- 0.00517162 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.151 @ 95%CL (1 toyMC)
median expected limit: r < 18.151 @ 95%CL (1 toyMC)
   68% expected band : 18.151 < r < 18.151
   95% expected band : 18.151 < r < 18.151
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1243105644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1508 +/- 0.00543215 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1508 @ 95%CL (1 toyMC)
median expected limit: r < 18.1508 @ 95%CL (1 toyMC)
   68% expected band : 18.1508 < r < 18.1508
   95% expected band : 18.1508 < r < 18.1508
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 442254046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1415 +/- 0.00659169 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1415 @ 95%CL (1 toyMC)
median expected limit: r < 18.1415 @ 95%CL (1 toyMC)
   68% expected band : 18.1415 < r < 18.1415
   95% expected band : 18.1415 < r < 18.1415
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2145820824
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9704 +/- 0.00292697 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9704 @ 95%CL (1 toyMC)
median expected limit: r < 18.9704 @ 95%CL (1 toyMC)
   68% expected band : 18.9704 < r < 18.9704
   95% expected band : 18.9704 < r < 18.9704
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1095350438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1509 +/- 0.00605955 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1509 @ 95%CL (1 toyMC)
median expected limit: r < 18.1509 @ 95%CL (1 toyMC)
   68% expected band : 18.1509 < r < 18.1509
   95% expected band : 18.1509 < r < 18.1509
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1147097637
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0562 +/- 0.00288507 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0562 @ 95%CL (1 toyMC)
median expected limit: r < 19.0562 @ 95%CL (1 toyMC)
   68% expected band : 19.0562 < r < 19.0562
   95% expected band : 19.0562 < r < 19.0562
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -218527971
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1442 +/- 0.00630365 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1442 @ 95%CL (1 toyMC)
median expected limit: r < 18.1442 @ 95%CL (1 toyMC)
   68% expected band : 18.1442 < r < 18.1442
   95% expected band : 18.1442 < r < 18.1442
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1685985273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.143 +/- 0.00489282 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.143 @ 95%CL (1 toyMC)
median expected limit: r < 18.143 @ 95%CL (1 toyMC)
   68% expected band : 18.143 < r < 18.143
   95% expected band : 18.143 < r < 18.143
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1553438706
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.06 +/- 0.00298669 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.06 @ 95%CL (1 toyMC)
median expected limit: r < 19.06 @ 95%CL (1 toyMC)
   68% expected band : 19.06 < r < 19.06
   95% expected band : 19.06 < r < 19.06
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1485981157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1516 +/- 0.00471726 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1516 @ 95%CL (1 toyMC)
median expected limit: r < 18.1516 @ 95%CL (1 toyMC)
   68% expected band : 18.1516 < r < 18.1516
   95% expected band : 18.1516 < r < 18.1516
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -391289704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1455 +/- 0.004119 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1455 @ 95%CL (1 toyMC)
median expected limit: r < 18.1455 @ 95%CL (1 toyMC)
   68% expected band : 18.1455 < r < 18.1455
   95% expected band : 18.1455 < r < 18.1455
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -569854361
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1252 +/- 0.00542755 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1252 @ 95%CL (1 toyMC)
median expected limit: r < 18.1252 @ 95%CL (1 toyMC)
   68% expected band : 18.1252 < r < 18.1252
   95% expected band : 18.1252 < r < 18.1252
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1029840836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0292 +/- 0.00310943 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0292 @ 95%CL (1 toyMC)
median expected limit: r < 19.0292 @ 95%CL (1 toyMC)
   68% expected band : 19.0292 < r < 19.0292
   95% expected band : 19.0292 < r < 19.0292
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1980458099
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1371 +/- 0.00583801 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1371 @ 95%CL (1 toyMC)
median expected limit: r < 18.1371 @ 95%CL (1 toyMC)
   68% expected band : 18.1371 < r < 18.1371
   95% expected band : 18.1371 < r < 18.1371
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1104896606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.14 +/- 0.00656302 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.14 @ 95%CL (1 toyMC)
median expected limit: r < 18.14 @ 95%CL (1 toyMC)
   68% expected band : 18.14 < r < 18.14
   95% expected band : 18.14 < r < 18.14
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2070061857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1358 +/- 0.00541729 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1358 @ 95%CL (1 toyMC)
median expected limit: r < 18.1358 @ 95%CL (1 toyMC)
   68% expected band : 18.1358 < r < 18.1358
   95% expected band : 18.1358 < r < 18.1358
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -617436298
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1214 +/- 0.00629206 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1214 @ 95%CL (1 toyMC)
median expected limit: r < 18.1214 @ 95%CL (1 toyMC)
   68% expected band : 18.1214 < r < 18.1214
   95% expected band : 18.1214 < r < 18.1214
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -890559969
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1411 +/- 0.00446878 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1411 @ 95%CL (1 toyMC)
median expected limit: r < 18.1411 @ 95%CL (1 toyMC)
   68% expected band : 18.1411 < r < 18.1411
   95% expected band : 18.1411 < r < 18.1411
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1230279715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1395 +/- 0.0046626 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1395 @ 95%CL (1 toyMC)
median expected limit: r < 18.1395 @ 95%CL (1 toyMC)
   68% expected band : 18.1395 < r < 18.1395
   95% expected band : 18.1395 < r < 18.1395
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1933813243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9915 +/- 0.00390487 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9915 @ 95%CL (1 toyMC)
median expected limit: r < 18.9915 @ 95%CL (1 toyMC)
   68% expected band : 18.9915 < r < 18.9915
   95% expected band : 18.9915 < r < 18.9915
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -302496192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1392 +/- 0.0047325 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1392 @ 95%CL (1 toyMC)
median expected limit: r < 18.1392 @ 95%CL (1 toyMC)
   68% expected band : 18.1392 < r < 18.1392
   95% expected band : 18.1392 < r < 18.1392
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -468452028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1369 +/- 0.0042519 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.1369 @ 95%CL (1 toyMC)
median expected limit: r < 18.1369 @ 95%CL (1 toyMC)
   68% expected band : 18.1369 < r < 18.1369
   95% expected band : 18.1369 < r < 18.1369
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2046364775
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1328 +/- 0.00708007 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1328 @ 95%CL (1 toyMC)
median expected limit: r < 18.1328 @ 95%CL (1 toyMC)
   68% expected band : 18.1328 < r < 18.1328
   95% expected band : 18.1328 < r < 18.1328
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1542354503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1292 +/- 0.00604016 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1292 @ 95%CL (1 toyMC)
median expected limit: r < 18.1292 @ 95%CL (1 toyMC)
   68% expected band : 18.1292 < r < 18.1292
   95% expected band : 18.1292 < r < 18.1292
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 141003133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1291 +/- 0.00538798 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1291 @ 95%CL (1 toyMC)
median expected limit: r < 18.1291 @ 95%CL (1 toyMC)
   68% expected band : 18.1291 < r < 18.1291
   95% expected band : 18.1291 < r < 18.1291
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1303322207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1519 +/- 0.00581738 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1519 @ 95%CL (1 toyMC)
median expected limit: r < 18.1519 @ 95%CL (1 toyMC)
   68% expected band : 18.1519 < r < 18.1519
   95% expected band : 18.1519 < r < 18.1519
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -860372124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1495 +/- 0.00434167 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1495 @ 95%CL (1 toyMC)
median expected limit: r < 18.1495 @ 95%CL (1 toyMC)
   68% expected band : 18.1495 < r < 18.1495
   95% expected band : 18.1495 < r < 18.1495
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1860993135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1406 +/- 0.00566002 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1406 @ 95%CL (1 toyMC)
median expected limit: r < 18.1406 @ 95%CL (1 toyMC)
   68% expected band : 18.1406 < r < 18.1406
   95% expected band : 18.1406 < r < 18.1406
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1428135847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1187 +/- 0.0058216 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1187 @ 95%CL (1 toyMC)
median expected limit: r < 18.1187 @ 95%CL (1 toyMC)
   68% expected band : 18.1187 < r < 18.1187
   95% expected band : 18.1187 < r < 18.1187
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -451761496
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1429 +/- 0.00537112 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1429 @ 95%CL (1 toyMC)
median expected limit: r < 18.1429 @ 95%CL (1 toyMC)
   68% expected band : 18.1429 < r < 18.1429
   95% expected band : 18.1429 < r < 18.1429
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -436997024
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1639 +/- 0.00532531 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 18.1639 @ 95%CL (1 toyMC)
median expected limit: r < 18.1639 @ 95%CL (1 toyMC)
   68% expected band : 18.1639 < r < 18.1639
   95% expected band : 18.1639 < r < 18.1639
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 665500514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1438 +/- 0.00645749 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1438 @ 95%CL (1 toyMC)
median expected limit: r < 18.1438 @ 95%CL (1 toyMC)
   68% expected band : 18.1438 < r < 18.1438
   95% expected band : 18.1438 < r < 18.1438
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2026573972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1431 +/- 0.00534664 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1431 @ 95%CL (1 toyMC)
median expected limit: r < 18.1431 @ 95%CL (1 toyMC)
   68% expected band : 18.1431 < r < 18.1431
   95% expected band : 18.1431 < r < 18.1431
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -525135484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.145 +/- 0.00406064 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.145 @ 95%CL (1 toyMC)
median expected limit: r < 18.145 @ 95%CL (1 toyMC)
   68% expected band : 18.145 < r < 18.145
   95% expected band : 18.145 < r < 18.145
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 873796151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1404 +/- 0.00599691 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1404 @ 95%CL (1 toyMC)
median expected limit: r < 18.1404 @ 95%CL (1 toyMC)
   68% expected band : 18.1404 < r < 18.1404
   95% expected band : 18.1404 < r < 18.1404
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1901338778
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1342 +/- 0.00501785 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1342 @ 95%CL (1 toyMC)
median expected limit: r < 18.1342 @ 95%CL (1 toyMC)
   68% expected band : 18.1342 < r < 18.1342
   95% expected band : 18.1342 < r < 18.1342
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -19545144
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1497 +/- 0.00612845 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1497 @ 95%CL (1 toyMC)
median expected limit: r < 18.1497 @ 95%CL (1 toyMC)
   68% expected band : 18.1497 < r < 18.1497
   95% expected band : 18.1497 < r < 18.1497
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -31146559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1539 +/- 0.0054723 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1539 @ 95%CL (1 toyMC)
median expected limit: r < 18.1539 @ 95%CL (1 toyMC)
   68% expected band : 18.1539 < r < 18.1539
   95% expected band : 18.1539 < r < 18.1539
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1355176382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.8581 +/- 0.00329939 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 18.8581 @ 95%CL (1 toyMC)
median expected limit: r < 18.8581 @ 95%CL (1 toyMC)
   68% expected band : 18.8581 < r < 18.8581
   95% expected band : 18.8581 < r < 18.8581
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1819311860
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1356 +/- 0.00604045 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1356 @ 95%CL (1 toyMC)
median expected limit: r < 18.1356 @ 95%CL (1 toyMC)
   68% expected band : 18.1356 < r < 18.1356
   95% expected band : 18.1356 < r < 18.1356
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 115135984
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1402 +/- 0.00578041 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 18.1402 @ 95%CL (1 toyMC)
median expected limit: r < 18.1402 @ 95%CL (1 toyMC)
   68% expected band : 18.1402 < r < 18.1402
   95% expected band : 18.1402 < r < 18.1402
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1934776573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0009 +/- 0.00367194 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0009 @ 95%CL (1 toyMC)
median expected limit: r < 19.0009 @ 95%CL (1 toyMC)
   68% expected band : 19.0009 < r < 19.0009
   95% expected band : 19.0009 < r < 19.0009
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1959219033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1351 +/- 0.00557774 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1351 @ 95%CL (1 toyMC)
median expected limit: r < 18.1351 @ 95%CL (1 toyMC)
   68% expected band : 18.1351 < r < 18.1351
   95% expected band : 18.1351 < r < 18.1351
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -868582722
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1289 +/- 0.00622015 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1289 @ 95%CL (1 toyMC)
median expected limit: r < 18.1289 @ 95%CL (1 toyMC)
   68% expected band : 18.1289 < r < 18.1289
   95% expected band : 18.1289 < r < 18.1289
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 932796966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1591 +/- 0.00527013 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1591 @ 95%CL (1 toyMC)
median expected limit: r < 18.1591 @ 95%CL (1 toyMC)
   68% expected band : 18.1591 < r < 18.1591
   95% expected band : 18.1591 < r < 18.1591
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1957913406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.139 +/- 0.00516413 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.139 @ 95%CL (1 toyMC)
median expected limit: r < 18.139 @ 95%CL (1 toyMC)
   68% expected band : 18.139 < r < 18.139
   95% expected band : 18.139 < r < 18.139
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1324324041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1323 +/- 0.00523893 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1323 @ 95%CL (1 toyMC)
median expected limit: r < 18.1323 @ 95%CL (1 toyMC)
   68% expected band : 18.1323 < r < 18.1323
   95% expected band : 18.1323 < r < 18.1323
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 344501430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1399 +/- 0.0050474 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1399 @ 95%CL (1 toyMC)
median expected limit: r < 18.1399 @ 95%CL (1 toyMC)
   68% expected band : 18.1399 < r < 18.1399
   95% expected band : 18.1399 < r < 18.1399
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2003663600
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0005 +/- 0.00356408 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0005 @ 95%CL (1 toyMC)
median expected limit: r < 19.0005 @ 95%CL (1 toyMC)
   68% expected band : 19.0005 < r < 19.0005
   95% expected band : 19.0005 < r < 19.0005
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -589310279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1411 +/- 0.00455572 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1411 @ 95%CL (1 toyMC)
median expected limit: r < 18.1411 @ 95%CL (1 toyMC)
   68% expected band : 18.1411 < r < 18.1411
   95% expected band : 18.1411 < r < 18.1411
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 185967188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0022 +/- 0.00398228 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0022 @ 95%CL (1 toyMC)
median expected limit: r < 19.0022 @ 95%CL (1 toyMC)
   68% expected band : 19.0022 < r < 19.0022
   95% expected band : 19.0022 < r < 19.0022
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1038246091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1305 +/- 0.00503498 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1305 @ 95%CL (1 toyMC)
median expected limit: r < 18.1305 @ 95%CL (1 toyMC)
   68% expected band : 18.1305 < r < 18.1305
   95% expected band : 18.1305 < r < 18.1305
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1220014460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1513 +/- 0.00490102 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1513 @ 95%CL (1 toyMC)
median expected limit: r < 18.1513 @ 95%CL (1 toyMC)
   68% expected band : 18.1513 < r < 18.1513
   95% expected band : 18.1513 < r < 18.1513
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1829769241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1176 +/- 0.00711523 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1176 @ 95%CL (1 toyMC)
median expected limit: r < 18.1176 @ 95%CL (1 toyMC)
   68% expected band : 18.1176 < r < 18.1176
   95% expected band : 18.1176 < r < 18.1176
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 284962740
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1354 +/- 0.00561851 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.1354 @ 95%CL (1 toyMC)
median expected limit: r < 18.1354 @ 95%CL (1 toyMC)
   68% expected band : 18.1354 < r < 18.1354
   95% expected band : 18.1354 < r < 18.1354
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 637991714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.1514 +/- 0.00523491 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 18.1514 @ 95%CL (1 toyMC)
median expected limit: r < 18.1514 @ 95%CL (1 toyMC)
   68% expected band : 18.1514 < r < 18.1514
   95% expected band : 18.1514 < r < 18.1514
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1021512609.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1038246091.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1095350438.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1104896606.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1106709202.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1147097637.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1187753583.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1220014460.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1243105644.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1251334018.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-126469175.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1269189505.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1274414452.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1313048400.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1324324041.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1349019724.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1428135847.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-143753565.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1542354503.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1553438706.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-1668762416.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-1694077430.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-1829769241.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-1849497681.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-1860993135.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-1901338778.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-1933813243.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-1934776573.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-19545144.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-1959219033.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-1975616854.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-1976360647.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-2003663600.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-2026573972.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-2029108911.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-2046364775.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-2070061857.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-2118234800.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-2132469862.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-218527971.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-248940407.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-302496192.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-31146559.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.-315293842.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.-391289704.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.-436997024.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.-451761496.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.-468452028.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.-525135484.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.-569854361.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.-589310279.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.-606041455.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.-617436298.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.-694508344.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.-749330234.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.-810272219.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.-822403171.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.-860372124.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.-868582722.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.-890559969.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.-924903193.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.-95194832.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1029840836.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.115135984.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1154758032.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1230279715.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.1303322207.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.1334452420.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1355176382.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.141003133.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1479767098.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1485981157.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1614633136.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.1685985273.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1720900086.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1819311860.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.185967188.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.192972198.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.1957913406.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.1966045085.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.1980458099.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.1989207313.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.199000691.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.2045483831.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.2075908762.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.2084624745.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.2095895409.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.2145820824.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.223000273.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.284962740.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.288262938.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.344501430.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.355424026.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.442254046.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.487931303.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.598639865.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.637991714.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.665500514.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.873796151.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.932796966.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -739204767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3272 +/- 0.00492488 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3272 @ 95%CL (1 toyMC)
median expected limit: r < 18.3272 @ 95%CL (1 toyMC)
   68% expected band : 18.3272 < r < 18.3272
   95% expected band : 18.3272 < r < 18.3272
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1492072754
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3244 +/- 0.00544886 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3244 @ 95%CL (1 toyMC)
median expected limit: r < 18.3244 @ 95%CL (1 toyMC)
   68% expected band : 18.3244 < r < 18.3244
   95% expected band : 18.3244 < r < 18.3244
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -309371967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0111 +/- 0.00406961 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 19.0111 @ 95%CL (1 toyMC)
median expected limit: r < 19.0111 @ 95%CL (1 toyMC)
   68% expected band : 19.0111 < r < 19.0111
   95% expected band : 19.0111 < r < 19.0111
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2145426425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3429 +/- 0.00430729 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3429 @ 95%CL (1 toyMC)
median expected limit: r < 18.3429 @ 95%CL (1 toyMC)
   68% expected band : 18.3429 < r < 18.3429
   95% expected band : 18.3429 < r < 18.3429
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1087411769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3262 +/- 0.00527754 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3262 @ 95%CL (1 toyMC)
median expected limit: r < 18.3262 @ 95%CL (1 toyMC)
   68% expected band : 18.3262 < r < 18.3262
   95% expected band : 18.3262 < r < 18.3262
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1081934239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3378 +/- 0.00602937 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3378 @ 95%CL (1 toyMC)
median expected limit: r < 18.3378 @ 95%CL (1 toyMC)
   68% expected band : 18.3378 < r < 18.3378
   95% expected band : 18.3378 < r < 18.3378
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1126604560
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3239 +/- 0.00601768 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3239 @ 95%CL (1 toyMC)
median expected limit: r < 18.3239 @ 95%CL (1 toyMC)
   68% expected band : 18.3239 < r < 18.3239
   95% expected band : 18.3239 < r < 18.3239
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1638562721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3258 +/- 0.00593012 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3258 @ 95%CL (1 toyMC)
median expected limit: r < 18.3258 @ 95%CL (1 toyMC)
   68% expected band : 18.3258 < r < 18.3258
   95% expected band : 18.3258 < r < 18.3258
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1744068669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3337 +/- 0.00400656 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3337 @ 95%CL (1 toyMC)
median expected limit: r < 18.3337 @ 95%CL (1 toyMC)
   68% expected band : 18.3337 < r < 18.3337
   95% expected band : 18.3337 < r < 18.3337
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -496831199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3388 +/- 0.00436658 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3388 @ 95%CL (1 toyMC)
median expected limit: r < 18.3388 @ 95%CL (1 toyMC)
   68% expected band : 18.3388 < r < 18.3388
   95% expected band : 18.3388 < r < 18.3388
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1333422238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3421 +/- 0.00556271 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3421 @ 95%CL (1 toyMC)
median expected limit: r < 18.3421 @ 95%CL (1 toyMC)
   68% expected band : 18.3421 < r < 18.3421
   95% expected band : 18.3421 < r < 18.3421
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -666520438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3469 +/- 0.00552927 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3469 @ 95%CL (1 toyMC)
median expected limit: r < 18.3469 @ 95%CL (1 toyMC)
   68% expected band : 18.3469 < r < 18.3469
   95% expected band : 18.3469 < r < 18.3469
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1378517512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3373 +/- 0.00506803 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3373 @ 95%CL (1 toyMC)
median expected limit: r < 18.3373 @ 95%CL (1 toyMC)
   68% expected band : 18.3373 < r < 18.3373
   95% expected band : 18.3373 < r < 18.3373
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -611416087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2165 +/- 0.00318048 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.2165 @ 95%CL (1 toyMC)
median expected limit: r < 19.2165 @ 95%CL (1 toyMC)
   68% expected band : 19.2165 < r < 19.2165
   95% expected band : 19.2165 < r < 19.2165
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 577192063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3372 +/- 0.00553874 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3372 @ 95%CL (1 toyMC)
median expected limit: r < 18.3372 @ 95%CL (1 toyMC)
   68% expected band : 18.3372 < r < 18.3372
   95% expected band : 18.3372 < r < 18.3372
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1863531044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0875 +/- 0.00365569 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0875 @ 95%CL (1 toyMC)
median expected limit: r < 19.0875 @ 95%CL (1 toyMC)
   68% expected band : 19.0875 < r < 19.0875
   95% expected band : 19.0875 < r < 19.0875
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1148509987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3183 +/- 0.00466466 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3183 @ 95%CL (1 toyMC)
median expected limit: r < 18.3183 @ 95%CL (1 toyMC)
   68% expected band : 18.3183 < r < 18.3183
   95% expected band : 18.3183 < r < 18.3183
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 246297222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.9571 +/- 0.00391395 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.9571 @ 95%CL (1 toyMC)
median expected limit: r < 18.9571 @ 95%CL (1 toyMC)
   68% expected band : 18.9571 < r < 18.9571
   95% expected band : 18.9571 < r < 18.9571
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1374447092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1573 +/- 0.00334902 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.1573 @ 95%CL (1 toyMC)
median expected limit: r < 19.1573 @ 95%CL (1 toyMC)
   68% expected band : 19.1573 < r < 19.1573
   95% expected band : 19.1573 < r < 19.1573
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 171636887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3486 +/- 0.00411559 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3486 @ 95%CL (1 toyMC)
median expected limit: r < 18.3486 @ 95%CL (1 toyMC)
   68% expected band : 18.3486 < r < 18.3486
   95% expected band : 18.3486 < r < 18.3486
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1825659901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.318 +/- 0.00513894 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.318 @ 95%CL (1 toyMC)
median expected limit: r < 18.318 @ 95%CL (1 toyMC)
   68% expected band : 18.318 < r < 18.318
   95% expected band : 18.318 < r < 18.318
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 830007811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.317 +/- 0.00515724 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.317 @ 95%CL (1 toyMC)
median expected limit: r < 18.317 @ 95%CL (1 toyMC)
   68% expected band : 18.317 < r < 18.317
   95% expected band : 18.317 < r < 18.317
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 918573569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3277 +/- 0.00457825 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3277 @ 95%CL (1 toyMC)
median expected limit: r < 18.3277 @ 95%CL (1 toyMC)
   68% expected band : 18.3277 < r < 18.3277
   95% expected band : 18.3277 < r < 18.3277
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1964334054
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3399 +/- 0.00520378 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3399 @ 95%CL (1 toyMC)
median expected limit: r < 18.3399 @ 95%CL (1 toyMC)
   68% expected band : 18.3399 < r < 18.3399
   95% expected band : 18.3399 < r < 18.3399
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1085945691
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3258 +/- 0.00529151 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3258 @ 95%CL (1 toyMC)
median expected limit: r < 18.3258 @ 95%CL (1 toyMC)
   68% expected band : 18.3258 < r < 18.3258
   95% expected band : 18.3258 < r < 18.3258
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1891601688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.328 +/- 0.00471765 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.328 @ 95%CL (1 toyMC)
median expected limit: r < 18.328 @ 95%CL (1 toyMC)
   68% expected band : 18.328 < r < 18.328
   95% expected band : 18.328 < r < 18.328
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -254901730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3336 +/- 0.00539782 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3336 @ 95%CL (1 toyMC)
median expected limit: r < 18.3336 @ 95%CL (1 toyMC)
   68% expected band : 18.3336 < r < 18.3336
   95% expected band : 18.3336 < r < 18.3336
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 665757031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3226 +/- 0.00414618 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3226 @ 95%CL (1 toyMC)
median expected limit: r < 18.3226 @ 95%CL (1 toyMC)
   68% expected band : 18.3226 < r < 18.3226
   95% expected band : 18.3226 < r < 18.3226
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2043343554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3352 +/- 0.00488029 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3352 @ 95%CL (1 toyMC)
median expected limit: r < 18.3352 @ 95%CL (1 toyMC)
   68% expected band : 18.3352 < r < 18.3352
   95% expected band : 18.3352 < r < 18.3352
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1457223181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3263 +/- 0.00536267 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3263 @ 95%CL (1 toyMC)
median expected limit: r < 18.3263 @ 95%CL (1 toyMC)
   68% expected band : 18.3263 < r < 18.3263
   95% expected band : 18.3263 < r < 18.3263
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 345842840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3366 +/- 0.00559534 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3366 @ 95%CL (1 toyMC)
median expected limit: r < 18.3366 @ 95%CL (1 toyMC)
   68% expected band : 18.3366 < r < 18.3366
   95% expected band : 18.3366 < r < 18.3366
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 407348013
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3285 +/- 0.00504671 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3285 @ 95%CL (1 toyMC)
median expected limit: r < 18.3285 @ 95%CL (1 toyMC)
   68% expected band : 18.3285 < r < 18.3285
   95% expected band : 18.3285 < r < 18.3285
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1954689909
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2417 +/- 0.00262117 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 19.2417 @ 95%CL (1 toyMC)
median expected limit: r < 19.2417 @ 95%CL (1 toyMC)
   68% expected band : 19.2417 < r < 19.2417
   95% expected band : 19.2417 < r < 19.2417
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2104494992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3289 +/- 0.00487173 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3289 @ 95%CL (1 toyMC)
median expected limit: r < 18.3289 @ 95%CL (1 toyMC)
   68% expected band : 18.3289 < r < 18.3289
   95% expected band : 18.3289 < r < 18.3289
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -81890704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3235 +/- 0.00493438 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3235 @ 95%CL (1 toyMC)
median expected limit: r < 18.3235 @ 95%CL (1 toyMC)
   68% expected band : 18.3235 < r < 18.3235
   95% expected band : 18.3235 < r < 18.3235
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 488213128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3379 +/- 0.0047122 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3379 @ 95%CL (1 toyMC)
median expected limit: r < 18.3379 @ 95%CL (1 toyMC)
   68% expected band : 18.3379 < r < 18.3379
   95% expected band : 18.3379 < r < 18.3379
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 412995116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3274 +/- 0.00483599 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3274 @ 95%CL (1 toyMC)
median expected limit: r < 18.3274 @ 95%CL (1 toyMC)
   68% expected band : 18.3274 < r < 18.3274
   95% expected band : 18.3274 < r < 18.3274
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -535893465
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3357 +/- 0.00518194 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3357 @ 95%CL (1 toyMC)
median expected limit: r < 18.3357 @ 95%CL (1 toyMC)
   68% expected band : 18.3357 < r < 18.3357
   95% expected band : 18.3357 < r < 18.3357
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 985986113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3184 +/- 0.00508305 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3184 @ 95%CL (1 toyMC)
median expected limit: r < 18.3184 @ 95%CL (1 toyMC)
   68% expected band : 18.3184 < r < 18.3184
   95% expected band : 18.3184 < r < 18.3184
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1753620949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3256 +/- 0.00482373 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3256 @ 95%CL (1 toyMC)
median expected limit: r < 18.3256 @ 95%CL (1 toyMC)
   68% expected band : 18.3256 < r < 18.3256
   95% expected band : 18.3256 < r < 18.3256
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1342699151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3401 +/- 0.0054094 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3401 @ 95%CL (1 toyMC)
median expected limit: r < 18.3401 @ 95%CL (1 toyMC)
   68% expected band : 18.3401 < r < 18.3401
   95% expected band : 18.3401 < r < 18.3401
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 836864239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1029 +/- 0.00272418 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.1029 @ 95%CL (1 toyMC)
median expected limit: r < 19.1029 @ 95%CL (1 toyMC)
   68% expected band : 19.1029 < r < 19.1029
   95% expected band : 19.1029 < r < 19.1029
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1302289909
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.4209 +/- 0.0029099 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 19.4209 @ 95%CL (1 toyMC)
median expected limit: r < 19.4209 @ 95%CL (1 toyMC)
   68% expected band : 19.4209 < r < 19.4209
   95% expected band : 19.4209 < r < 19.4209
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1149769375
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3291 +/- 0.0040926 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3291 @ 95%CL (1 toyMC)
median expected limit: r < 18.3291 @ 95%CL (1 toyMC)
   68% expected band : 18.3291 < r < 18.3291
   95% expected band : 18.3291 < r < 18.3291
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 951385159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3485 +/- 0.00509001 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3485 @ 95%CL (1 toyMC)
median expected limit: r < 18.3485 @ 95%CL (1 toyMC)
   68% expected band : 18.3485 < r < 18.3485
   95% expected band : 18.3485 < r < 18.3485
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1706096368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1444 +/- 0.00247005 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.1444 @ 95%CL (1 toyMC)
median expected limit: r < 19.1444 @ 95%CL (1 toyMC)
   68% expected band : 19.1444 < r < 19.1444
   95% expected band : 19.1444 < r < 19.1444
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1763687334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3186 +/- 0.00392863 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3186 @ 95%CL (1 toyMC)
median expected limit: r < 18.3186 @ 95%CL (1 toyMC)
   68% expected band : 18.3186 < r < 18.3186
   95% expected band : 18.3186 < r < 18.3186
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 764091874
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3331 +/- 0.0060737 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3331 @ 95%CL (1 toyMC)
median expected limit: r < 18.3331 @ 95%CL (1 toyMC)
   68% expected band : 18.3331 < r < 18.3331
   95% expected band : 18.3331 < r < 18.3331
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1895142235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3387 +/- 0.0048969 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3387 @ 95%CL (1 toyMC)
median expected limit: r < 18.3387 @ 95%CL (1 toyMC)
   68% expected band : 18.3387 < r < 18.3387
   95% expected band : 18.3387 < r < 18.3387
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 900703682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3488 +/- 0.00542906 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3488 @ 95%CL (1 toyMC)
median expected limit: r < 18.3488 @ 95%CL (1 toyMC)
   68% expected band : 18.3488 < r < 18.3488
   95% expected band : 18.3488 < r < 18.3488
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2075751494
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3241 +/- 0.00469265 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3241 @ 95%CL (1 toyMC)
median expected limit: r < 18.3241 @ 95%CL (1 toyMC)
   68% expected band : 18.3241 < r < 18.3241
   95% expected band : 18.3241 < r < 18.3241
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1837328234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1417 +/- 0.00283232 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.1417 @ 95%CL (1 toyMC)
median expected limit: r < 19.1417 @ 95%CL (1 toyMC)
   68% expected band : 19.1417 < r < 19.1417
   95% expected band : 19.1417 < r < 19.1417
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1559546537
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3196 +/- 0.00522955 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3196 @ 95%CL (1 toyMC)
median expected limit: r < 18.3196 @ 95%CL (1 toyMC)
   68% expected band : 18.3196 < r < 18.3196
   95% expected band : 18.3196 < r < 18.3196
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -862843429
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3155 +/- 0.00520602 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3155 @ 95%CL (1 toyMC)
median expected limit: r < 18.3155 @ 95%CL (1 toyMC)
   68% expected band : 18.3155 < r < 18.3155
   95% expected band : 18.3155 < r < 18.3155
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1007824141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3205 +/- 0.00536339 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3205 @ 95%CL (1 toyMC)
median expected limit: r < 18.3205 @ 95%CL (1 toyMC)
   68% expected band : 18.3205 < r < 18.3205
   95% expected band : 18.3205 < r < 18.3205
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 652165303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3344 +/- 0.00501228 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3344 @ 95%CL (1 toyMC)
median expected limit: r < 18.3344 @ 95%CL (1 toyMC)
   68% expected band : 18.3344 < r < 18.3344
   95% expected band : 18.3344 < r < 18.3344
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1853010908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3308 +/- 0.00538995 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 18.3308 @ 95%CL (1 toyMC)
median expected limit: r < 18.3308 @ 95%CL (1 toyMC)
   68% expected band : 18.3308 < r < 18.3308
   95% expected band : 18.3308 < r < 18.3308
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1087742721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3283 +/- 0.00520574 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3283 @ 95%CL (1 toyMC)
median expected limit: r < 18.3283 @ 95%CL (1 toyMC)
   68% expected band : 18.3283 < r < 18.3283
   95% expected band : 18.3283 < r < 18.3283
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -253309292
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3204 +/- 0.00522748 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3204 @ 95%CL (1 toyMC)
median expected limit: r < 18.3204 @ 95%CL (1 toyMC)
   68% expected band : 18.3204 < r < 18.3204
   95% expected band : 18.3204 < r < 18.3204
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1701959344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.337 +/- 0.00534921 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.337 @ 95%CL (1 toyMC)
median expected limit: r < 18.337 @ 95%CL (1 toyMC)
   68% expected band : 18.337 < r < 18.337
   95% expected band : 18.337 < r < 18.337
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 194750559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.2091 +/- 0.00320725 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 19.2091 @ 95%CL (1 toyMC)
median expected limit: r < 19.2091 @ 95%CL (1 toyMC)
   68% expected band : 19.2091 < r < 19.2091
   95% expected band : 19.2091 < r < 19.2091
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 976885968
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.335 +/- 0.00534044 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.335 @ 95%CL (1 toyMC)
median expected limit: r < 18.335 @ 95%CL (1 toyMC)
   68% expected band : 18.335 < r < 18.335
   95% expected band : 18.335 < r < 18.335
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1459486983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3328 +/- 0.00482155 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3328 @ 95%CL (1 toyMC)
median expected limit: r < 18.3328 @ 95%CL (1 toyMC)
   68% expected band : 18.3328 < r < 18.3328
   95% expected band : 18.3328 < r < 18.3328
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 994511962
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3135 +/- 0.00598515 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3135 @ 95%CL (1 toyMC)
median expected limit: r < 18.3135 @ 95%CL (1 toyMC)
   68% expected band : 18.3135 < r < 18.3135
   95% expected band : 18.3135 < r < 18.3135
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -85214545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.333 +/- 0.00522571 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.333 @ 95%CL (1 toyMC)
median expected limit: r < 18.333 @ 95%CL (1 toyMC)
   68% expected band : 18.333 < r < 18.333
   95% expected band : 18.333 < r < 18.333
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -274899616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3247 +/- 0.00455111 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3247 @ 95%CL (1 toyMC)
median expected limit: r < 18.3247 @ 95%CL (1 toyMC)
   68% expected band : 18.3247 < r < 18.3247
   95% expected band : 18.3247 < r < 18.3247
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1247446350
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3198 +/- 0.00575325 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3198 @ 95%CL (1 toyMC)
median expected limit: r < 18.3198 @ 95%CL (1 toyMC)
   68% expected band : 18.3198 < r < 18.3198
   95% expected band : 18.3198 < r < 18.3198
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1919767920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3149 +/- 0.00568224 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3149 @ 95%CL (1 toyMC)
median expected limit: r < 18.3149 @ 95%CL (1 toyMC)
   68% expected band : 18.3149 < r < 18.3149
   95% expected band : 18.3149 < r < 18.3149
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1366118953
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3236 +/- 0.00551624 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3236 @ 95%CL (1 toyMC)
median expected limit: r < 18.3236 @ 95%CL (1 toyMC)
   68% expected band : 18.3236 < r < 18.3236
   95% expected band : 18.3236 < r < 18.3236
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 629657445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3123 +/- 0.00504519 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3123 @ 95%CL (1 toyMC)
median expected limit: r < 18.3123 @ 95%CL (1 toyMC)
   68% expected band : 18.3123 < r < 18.3123
   95% expected band : 18.3123 < r < 18.3123
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1011318038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.325 +/- 0.00431614 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.325 @ 95%CL (1 toyMC)
median expected limit: r < 18.325 @ 95%CL (1 toyMC)
   68% expected band : 18.325 < r < 18.325
   95% expected band : 18.325 < r < 18.325
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1143138243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.331 +/- 0.00527635 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.331 @ 95%CL (1 toyMC)
median expected limit: r < 18.331 @ 95%CL (1 toyMC)
   68% expected band : 18.331 < r < 18.331
   95% expected band : 18.331 < r < 18.331
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1357877207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3483 +/- 0.00527944 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3483 @ 95%CL (1 toyMC)
median expected limit: r < 18.3483 @ 95%CL (1 toyMC)
   68% expected band : 18.3483 < r < 18.3483
   95% expected band : 18.3483 < r < 18.3483
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2002096236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.1759 +/- 0.00263127 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 19.1759 @ 95%CL (1 toyMC)
median expected limit: r < 19.1759 @ 95%CL (1 toyMC)
   68% expected band : 19.1759 < r < 19.1759
   95% expected band : 19.1759 < r < 19.1759
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1836452751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3373 +/- 0.00504672 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3373 @ 95%CL (1 toyMC)
median expected limit: r < 18.3373 @ 95%CL (1 toyMC)
   68% expected band : 18.3373 < r < 18.3373
   95% expected band : 18.3373 < r < 18.3373
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1151732075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3341 +/- 0.00560174 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3341 @ 95%CL (1 toyMC)
median expected limit: r < 18.3341 @ 95%CL (1 toyMC)
   68% expected band : 18.3341 < r < 18.3341
   95% expected band : 18.3341 < r < 18.3341
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -777310220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3331 +/- 0.00363724 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3331 @ 95%CL (1 toyMC)
median expected limit: r < 18.3331 @ 95%CL (1 toyMC)
   68% expected band : 18.3331 < r < 18.3331
   95% expected band : 18.3331 < r < 18.3331
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 695754917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3213 +/- 0.00474427 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3213 @ 95%CL (1 toyMC)
median expected limit: r < 18.3213 @ 95%CL (1 toyMC)
   68% expected band : 18.3213 < r < 18.3213
   95% expected band : 18.3213 < r < 18.3213
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1882899430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0449 +/- 0.00323465 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0449 @ 95%CL (1 toyMC)
median expected limit: r < 19.0449 @ 95%CL (1 toyMC)
   68% expected band : 19.0449 < r < 19.0449
   95% expected band : 19.0449 < r < 19.0449
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -651779214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3236 +/- 0.00493153 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3236 @ 95%CL (1 toyMC)
median expected limit: r < 18.3236 @ 95%CL (1 toyMC)
   68% expected band : 18.3236 < r < 18.3236
   95% expected band : 18.3236 < r < 18.3236
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1471325696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3406 +/- 0.00564424 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3406 @ 95%CL (1 toyMC)
median expected limit: r < 18.3406 @ 95%CL (1 toyMC)
   68% expected band : 18.3406 < r < 18.3406
   95% expected band : 18.3406 < r < 18.3406
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1837597931
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3281 +/- 0.00507043 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3281 @ 95%CL (1 toyMC)
median expected limit: r < 18.3281 @ 95%CL (1 toyMC)
   68% expected band : 18.3281 < r < 18.3281
   95% expected band : 18.3281 < r < 18.3281
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1330839935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 19.0023 +/- 0.00304851 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 19.0023 @ 95%CL (1 toyMC)
median expected limit: r < 19.0023 @ 95%CL (1 toyMC)
   68% expected band : 19.0023 < r < 19.0023
   95% expected band : 19.0023 < r < 19.0023
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 425295593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3386 +/- 0.0041515 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3386 @ 95%CL (1 toyMC)
median expected limit: r < 18.3386 @ 95%CL (1 toyMC)
   68% expected band : 18.3386 < r < 18.3386
   95% expected band : 18.3386 < r < 18.3386
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 593703598
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3349 +/- 0.00574757 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3349 @ 95%CL (1 toyMC)
median expected limit: r < 18.3349 @ 95%CL (1 toyMC)
   68% expected band : 18.3349 < r < 18.3349
   95% expected band : 18.3349 < r < 18.3349
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1007144336
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3382 +/- 0.00583056 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3382 @ 95%CL (1 toyMC)
median expected limit: r < 18.3382 @ 95%CL (1 toyMC)
   68% expected band : 18.3382 < r < 18.3382
   95% expected band : 18.3382 < r < 18.3382
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2046915853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.328 +/- 0.00605265 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.328 @ 95%CL (1 toyMC)
median expected limit: r < 18.328 @ 95%CL (1 toyMC)
   68% expected band : 18.328 < r < 18.328
   95% expected band : 18.328 < r < 18.328
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -409081394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.345 +/- 0.00495223 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.345 @ 95%CL (1 toyMC)
median expected limit: r < 18.345 @ 95%CL (1 toyMC)
   68% expected band : 18.345 < r < 18.345
   95% expected band : 18.345 < r < 18.345
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 173533215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3379 +/- 0.00636747 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3379 @ 95%CL (1 toyMC)
median expected limit: r < 18.3379 @ 95%CL (1 toyMC)
   68% expected band : 18.3379 < r < 18.3379
   95% expected band : 18.3379 < r < 18.3379
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1168943191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3144 +/- 0.0041955 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3144 @ 95%CL (1 toyMC)
median expected limit: r < 18.3144 @ 95%CL (1 toyMC)
   68% expected band : 18.3144 < r < 18.3144
   95% expected band : 18.3144 < r < 18.3144
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -427701948
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3415 +/- 0.00465728 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3415 @ 95%CL (1 toyMC)
median expected limit: r < 18.3415 @ 95%CL (1 toyMC)
   68% expected band : 18.3415 < r < 18.3415
   95% expected band : 18.3415 < r < 18.3415
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1379449659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3232 +/- 0.00429874 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3232 @ 95%CL (1 toyMC)
median expected limit: r < 18.3232 @ 95%CL (1 toyMC)
   68% expected band : 18.3232 < r < 18.3232
   95% expected band : 18.3232 < r < 18.3232
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 793074545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3187 +/- 0.00541967 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3187 @ 95%CL (1 toyMC)
median expected limit: r < 18.3187 @ 95%CL (1 toyMC)
   68% expected band : 18.3187 < r < 18.3187
   95% expected band : 18.3187 < r < 18.3187
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1257773043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3414 +/- 0.00533312 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3414 @ 95%CL (1 toyMC)
median expected limit: r < 18.3414 @ 95%CL (1 toyMC)
   68% expected band : 18.3414 < r < 18.3414
   95% expected band : 18.3414 < r < 18.3414
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2073584094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3381 +/- 0.00510777 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3381 @ 95%CL (1 toyMC)
median expected limit: r < 18.3381 @ 95%CL (1 toyMC)
   68% expected band : 18.3381 < r < 18.3381
   95% expected band : 18.3381 < r < 18.3381
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 233707706
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3351 +/- 0.00562564 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 18.3351 @ 95%CL (1 toyMC)
median expected limit: r < 18.3351 @ 95%CL (1 toyMC)
   68% expected band : 18.3351 < r < 18.3351
   95% expected band : 18.3351 < r < 18.3351
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -326066039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3237 +/- 0.00461133 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3237 @ 95%CL (1 toyMC)
median expected limit: r < 18.3237 @ 95%CL (1 toyMC)
   68% expected band : 18.3237 < r < 18.3237
   95% expected band : 18.3237 < r < 18.3237
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1193808275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3193 +/- 0.00468056 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3193 @ 95%CL (1 toyMC)
median expected limit: r < 18.3193 @ 95%CL (1 toyMC)
   68% expected band : 18.3193 < r < 18.3193
   95% expected band : 18.3193 < r < 18.3193
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1610475630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3121 +/- 0.00508261 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3121 @ 95%CL (1 toyMC)
median expected limit: r < 18.3121 @ 95%CL (1 toyMC)
   68% expected band : 18.3121 < r < 18.3121
   95% expected band : 18.3121 < r < 18.3121
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1026475522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.3276 +/- 0.00502981 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 18.3276 @ 95%CL (1 toyMC)
median expected limit: r < 18.3276 @ 95%CL (1 toyMC)
   68% expected band : 18.3276 < r < 18.3276
   95% expected band : 18.3276 < r < 18.3276
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine10000.MarkovChainMC.mH10000.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH10000.-1007144336.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH10000.-1026475522.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH10000.-1081934239.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH10000.-1126604560.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH10000.-1148509987.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH10000.-1149769375.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH10000.-1357877207.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH10000.-1457223181.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH10000.-1459486983.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH10000.-1559546537.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH10000.-1701959344.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH10000.-1706096368.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH10000.-1744068669.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH10000.-1825659901.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH10000.-1836452751.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH10000.-1837328234.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH10000.-1853010908.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH10000.-1863531044.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH10000.-1882899430.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH10000.-1895142235.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH10000.-2043343554.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH10000.-2046915853.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH10000.-2073584094.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH10000.-2075751494.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH10000.-2104494992.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH10000.-2145426425.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH10000.-253309292.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH10000.-254901730.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH10000.-274899616.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH10000.-309371967.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH10000.-326066039.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH10000.-409081394.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH10000.-427701948.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH10000.-496831199.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH10000.-535893465.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH10000.-611416087.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH10000.-651779214.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH10000.-666520438.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH10000.-739204767.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH10000.-777310220.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH10000.-81890704.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH10000.-85214545.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH10000.-862843429.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH10000.1007824141.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH10000.1011318038.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH10000.1085945691.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH10000.1087411769.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH10000.1087742721.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH10000.1143138243.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH10000.1151732075.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH10000.1168943191.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH10000.1193808275.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH10000.1247446350.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH10000.1257773043.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH10000.1302289909.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH10000.1330839935.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH10000.1333422238.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH10000.1342699151.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH10000.1366118953.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH10000.1374447092.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH10000.1378517512.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH10000.1379449659.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH10000.1471325696.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH10000.1492072754.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH10000.1610475630.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH10000.1638562721.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH10000.171636887.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH10000.173533215.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH10000.1753620949.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH10000.1763687334.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH10000.1837597931.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH10000.1891601688.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH10000.1919767920.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH10000.194750559.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH10000.1954689909.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH10000.1964334054.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH10000.2002096236.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH10000.233707706.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH10000.246297222.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH10000.345842840.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH10000.407348013.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH10000.412995116.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH10000.425295593.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH10000.488213128.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH10000.577192063.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH10000.593703598.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH10000.629657445.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH10000.652165303.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH10000.665757031.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH10000.695754917.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH10000.764091874.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH10000.793074545.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH10000.830007811.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH10000.836864239.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH10000.900703682.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH10000.918573569.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH10000.951385159.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH10000.976885968.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH10000.985986113.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH10000.994511962.root
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/
hadd Target path: higgsCombine10000.MarkovChainMC.mH10000.root:/toys
