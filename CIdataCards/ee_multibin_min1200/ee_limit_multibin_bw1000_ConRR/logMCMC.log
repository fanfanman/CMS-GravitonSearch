 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1899805711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.196829 +/- 0.00234757 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.196829 @ 95%CL (1 toyMC)
median expected limit: r < 0.196829 @ 95%CL (1 toyMC)
   68% expected band : 0.196829 < r < 0.196829
   95% expected band : 0.196829 < r < 0.196829
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1098281274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.510672 +/- 0.00280541 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.510672 @ 95%CL (1 toyMC)
median expected limit: r < 0.510672 @ 95%CL (1 toyMC)
   68% expected band : 0.510672 < r < 0.510672
   95% expected band : 0.510672 < r < 0.510672
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -494518806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.62705 +/- 1.06302 @ 95% CL (64 tries)
Done in 1.92 min (cpu), 1.93 min (real)
mean   expected limit: r < 4.62705 @ 95%CL (1 toyMC)
median expected limit: r < 4.62705 @ 95%CL (1 toyMC)
   68% expected band : 4.62705 < r < 4.62705
   95% expected band : 4.62705 < r < 4.62705
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2093667210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.212256 +/- 0.00266017 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.212256 @ 95%CL (1 toyMC)
median expected limit: r < 0.212256 @ 95%CL (1 toyMC)
   68% expected band : 0.212256 < r < 0.212256
   95% expected band : 0.212256 < r < 0.212256
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -272300381
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.304225 +/- 0.00275369 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.304225 @ 95%CL (1 toyMC)
median expected limit: r < 0.304225 @ 95%CL (1 toyMC)
   68% expected band : 0.304225 < r < 0.304225
   95% expected band : 0.304225 < r < 0.304225
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -949879252
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.156801 +/- 0.00343301 @ 95% CL (73 tries)
Done in 1.35 min (cpu), 1.35 min (real)
mean   expected limit: r < 0.156801 @ 95%CL (1 toyMC)
median expected limit: r < 0.156801 @ 95%CL (1 toyMC)
   68% expected band : 0.156801 < r < 0.156801
   95% expected band : 0.156801 < r < 0.156801
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2054803613
Generate toy 1/1
Done in 8.91 min (cpu), 8.96 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 976013173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.48757 +/- 1.03418 @ 95% CL (69 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 4.48757 @ 95%CL (1 toyMC)
median expected limit: r < 4.48757 @ 95%CL (1 toyMC)
   68% expected band : 4.48757 < r < 4.48757
   95% expected band : 4.48757 < r < 4.48757
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1469027083
Generate toy 1/1
Done in 8.99 min (cpu), 9.04 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 699483351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.37658 +/- 3.01758 @ 95% CL (12 tries)
Done in 7.55 min (cpu), 7.59 min (real)
mean   expected limit: r < 7.37658 @ 95%CL (1 toyMC)
median expected limit: r < 7.37658 @ 95%CL (1 toyMC)
   68% expected band : 7.37658 < r < 7.37658
   95% expected band : 7.37658 < r < 7.37658
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -887435681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.228909 +/- 0.00220742 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.228909 @ 95%CL (1 toyMC)
median expected limit: r < 0.228909 @ 95%CL (1 toyMC)
   68% expected band : 0.228909 < r < 0.228909
   95% expected band : 0.228909 < r < 0.228909
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -679042418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.145116 +/- 0.00784139 @ 95% CL (51 tries)
Done in 3.73 min (cpu), 3.75 min (real)
mean   expected limit: r < 0.145116 @ 95%CL (1 toyMC)
median expected limit: r < 0.145116 @ 95%CL (1 toyMC)
   68% expected band : 0.145116 < r < 0.145116
   95% expected band : 0.145116 < r < 0.145116
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2087863865
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.173183 +/- 0.00242363 @ 95% CL (99 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.173183 @ 95%CL (1 toyMC)
median expected limit: r < 0.173183 @ 95%CL (1 toyMC)
   68% expected band : 0.173183 < r < 0.173183
   95% expected band : 0.173183 < r < 0.173183
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1199261626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.17409 +/- 0.00252527 @ 95% CL (99 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.17409 @ 95%CL (1 toyMC)
median expected limit: r < 0.17409 @ 95%CL (1 toyMC)
   68% expected band : 0.17409 < r < 0.17409
   95% expected band : 0.17409 < r < 0.17409
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 494952165
Generate toy 1/1
Done in 8.95 min (cpu), 8.99 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1227321559
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.12763 +/- 0.00823877 @ 95% CL (43 tries)
Done in 4.88 min (cpu), 4.91 min (real)
mean   expected limit: r < 0.12763 @ 95%CL (1 toyMC)
median expected limit: r < 0.12763 @ 95%CL (1 toyMC)
   68% expected band : 0.12763 < r < 0.12763
   95% expected band : 0.12763 < r < 0.12763
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1143070599
Generate toy 1/1
Done in 9.00 min (cpu), 9.06 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1327610887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.157654 +/- 0.0040628 @ 95% CL (87 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 0.157654 @ 95%CL (1 toyMC)
median expected limit: r < 0.157654 @ 95%CL (1 toyMC)
   68% expected band : 0.157654 < r < 0.157654
   95% expected band : 0.157654 < r < 0.157654
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -294936529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.1992 +/- 0.00280777 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.1992 @ 95%CL (1 toyMC)
median expected limit: r < 0.1992 @ 95%CL (1 toyMC)
   68% expected band : 0.1992 < r < 0.1992
   95% expected band : 0.1992 < r < 0.1992
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 499977889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203962 +/- 0.00341189 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.203962 @ 95%CL (1 toyMC)
median expected limit: r < 0.203962 @ 95%CL (1 toyMC)
   68% expected band : 0.203962 < r < 0.203962
   95% expected band : 0.203962 < r < 0.203962
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1412767468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203446 +/- 0.00191961 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.203446 @ 95%CL (1 toyMC)
median expected limit: r < 0.203446 @ 95%CL (1 toyMC)
   68% expected band : 0.203446 < r < 0.203446
   95% expected band : 0.203446 < r < 0.203446
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1041248267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.186063 +/- 0.00261286 @ 95% CL (99 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.186063 @ 95%CL (1 toyMC)
median expected limit: r < 0.186063 @ 95%CL (1 toyMC)
   68% expected band : 0.186063 < r < 0.186063
   95% expected band : 0.186063 < r < 0.186063
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1341432478
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.180109 +/- 0.00279564 @ 95% CL (99 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.180109 @ 95%CL (1 toyMC)
median expected limit: r < 0.180109 @ 95%CL (1 toyMC)
   68% expected band : 0.180109 < r < 0.180109
   95% expected band : 0.180109 < r < 0.180109
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -24550758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.190113 +/- 0.00195548 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.190113 @ 95%CL (1 toyMC)
median expected limit: r < 0.190113 @ 95%CL (1 toyMC)
   68% expected band : 0.190113 < r < 0.190113
   95% expected band : 0.190113 < r < 0.190113
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 160862774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.200124 +/- 0.00210189 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.200124 @ 95%CL (1 toyMC)
median expected limit: r < 0.200124 @ 95%CL (1 toyMC)
   68% expected band : 0.200124 < r < 0.200124
   95% expected band : 0.200124 < r < 0.200124
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1699753357
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.07196 +/- 3.24646 @ 95% CL (11 tries)
Done in 7.96 min (cpu), 8.00 min (real)
mean   expected limit: r < 8.07196 @ 95%CL (1 toyMC)
median expected limit: r < 8.07196 @ 95%CL (1 toyMC)
   68% expected band : 8.07196 < r < 8.07196
   95% expected band : 8.07196 < r < 8.07196
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1060907900
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.193928 +/- 0.00266437 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.193928 @ 95%CL (1 toyMC)
median expected limit: r < 0.193928 @ 95%CL (1 toyMC)
   68% expected band : 0.193928 < r < 0.193928
   95% expected band : 0.193928 < r < 0.193928
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1945375140
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.199848 +/- 0.00225489 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.199848 @ 95%CL (1 toyMC)
median expected limit: r < 0.199848 @ 95%CL (1 toyMC)
   68% expected band : 0.199848 < r < 0.199848
   95% expected band : 0.199848 < r < 0.199848
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2109337684
Generate toy 1/1
Done in 9.09 min (cpu), 9.15 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1967231651
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.150207 +/- 0.00288664 @ 95% CL (97 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.150207 @ 95%CL (1 toyMC)
median expected limit: r < 0.150207 @ 95%CL (1 toyMC)
   68% expected band : 0.150207 < r < 0.150207
   95% expected band : 0.150207 < r < 0.150207
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -714459963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.14006 +/- 0.00620923 @ 95% CL (53 tries)
Done in 3.67 min (cpu), 3.70 min (real)
mean   expected limit: r < 0.14006 @ 95%CL (1 toyMC)
median expected limit: r < 0.14006 @ 95%CL (1 toyMC)
   68% expected band : 0.14006 < r < 0.14006
   95% expected band : 0.14006 < r < 0.14006
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 17088398
Generate toy 1/1
Done in 9.08 min (cpu), 9.14 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1985615124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.04154 +/- 1.51321 @ 95% CL (39 tries)
Done in 5.47 min (cpu), 5.50 min (real)
mean   expected limit: r < 6.04154 @ 95%CL (1 toyMC)
median expected limit: r < 6.04154 @ 95%CL (1 toyMC)
   68% expected band : 6.04154 < r < 6.04154
   95% expected band : 6.04154 < r < 6.04154
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1547750023
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.176961 +/- 0.00277281 @ 95% CL (99 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.176961 @ 95%CL (1 toyMC)
median expected limit: r < 0.176961 @ 95%CL (1 toyMC)
   68% expected band : 0.176961 < r < 0.176961
   95% expected band : 0.176961 < r < 0.176961
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1345481039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.96294 +/- 1.19722 @ 95% CL (58 tries)
Done in 3.10 min (cpu), 3.12 min (real)
mean   expected limit: r < 5.96294 @ 95%CL (1 toyMC)
median expected limit: r < 5.96294 @ 95%CL (1 toyMC)
   68% expected band : 5.96294 < r < 5.96294
   95% expected band : 5.96294 < r < 5.96294
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1597111142
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.129031 +/- 0.00671062 @ 95% CL (45 tries)
Done in 3.97 min (cpu), 4.00 min (real)
mean   expected limit: r < 0.129031 @ 95%CL (1 toyMC)
median expected limit: r < 0.129031 @ 95%CL (1 toyMC)
   68% expected band : 0.129031 < r < 0.129031
   95% expected band : 0.129031 < r < 0.129031
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -583559092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.146883 +/- 0.00802501 @ 95% CL (56 tries)
Done in 3.30 min (cpu), 3.33 min (real)
mean   expected limit: r < 0.146883 @ 95%CL (1 toyMC)
median expected limit: r < 0.146883 @ 95%CL (1 toyMC)
   68% expected band : 0.146883 < r < 0.146883
   95% expected band : 0.146883 < r < 0.146883
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 772012598
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.209045 +/- 0.00246023 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.209045 @ 95%CL (1 toyMC)
median expected limit: r < 0.209045 @ 95%CL (1 toyMC)
   68% expected band : 0.209045 < r < 0.209045
   95% expected band : 0.209045 < r < 0.209045
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1017180109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.158092 +/- 0.00358116 @ 95% CL (84 tries)
Done in 0.78 min (cpu), 0.78 min (real)
mean   expected limit: r < 0.158092 @ 95%CL (1 toyMC)
median expected limit: r < 0.158092 @ 95%CL (1 toyMC)
   68% expected band : 0.158092 < r < 0.158092
   95% expected band : 0.158092 < r < 0.158092
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1598176769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.23042 +/- 1.40696 @ 95% CL (42 tries)
Done in 4.73 min (cpu), 4.77 min (real)
mean   expected limit: r < 5.23042 @ 95%CL (1 toyMC)
median expected limit: r < 5.23042 @ 95%CL (1 toyMC)
   68% expected band : 5.23042 < r < 5.23042
   95% expected band : 5.23042 < r < 5.23042
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2046366263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.72875 +/- 6.63564 @ 95% CL (3 tries)
Done in 8.99 min (cpu), 9.06 min (real)
mean   expected limit: r < 6.72875 @ 95%CL (1 toyMC)
median expected limit: r < 6.72875 @ 95%CL (1 toyMC)
   68% expected band : 6.72875 < r < 6.72875
   95% expected band : 6.72875 < r < 6.72875
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1592219279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.12922 +/- 0.00778507 @ 95% CL (40 tries)
Done in 5.38 min (cpu), 5.41 min (real)
mean   expected limit: r < 0.12922 @ 95%CL (1 toyMC)
median expected limit: r < 0.12922 @ 95%CL (1 toyMC)
   68% expected band : 0.12922 < r < 0.12922
   95% expected band : 0.12922 < r < 0.12922
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1052884532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 9.40466 +/- 2.64884 @ 95% CL (15 tries)
Done in 7.65 min (cpu), 7.70 min (real)
mean   expected limit: r < 9.40466 @ 95%CL (1 toyMC)
median expected limit: r < 9.40466 @ 95%CL (1 toyMC)
   68% expected band : 9.40466 < r < 9.40466
   95% expected band : 9.40466 < r < 9.40466
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1077607455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.268702 +/- 0.00190092 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.268702 @ 95%CL (1 toyMC)
median expected limit: r < 0.268702 @ 95%CL (1 toyMC)
   68% expected band : 0.268702 < r < 0.268702
   95% expected band : 0.268702 < r < 0.268702
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1784351342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.140717 +/- 0.00554602 @ 95% CL (73 tries)
Done in 1.45 min (cpu), 1.46 min (real)
mean   expected limit: r < 0.140717 @ 95%CL (1 toyMC)
median expected limit: r < 0.140717 @ 95%CL (1 toyMC)
   68% expected band : 0.140717 < r < 0.140717
   95% expected band : 0.140717 < r < 0.140717
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1315938873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.11061 +/- 0.014569 @ 95% CL (13 tries)
Done in 7.87 min (cpu), 7.93 min (real)
mean   expected limit: r < 0.11061 @ 95%CL (1 toyMC)
median expected limit: r < 0.11061 @ 95%CL (1 toyMC)
   68% expected band : 0.11061 < r < 0.11061
   95% expected band : 0.11061 < r < 0.11061
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1788607372
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.156656 +/- 0.00450493 @ 95% CL (86 tries)
Done in 0.71 min (cpu), 0.71 min (real)
mean   expected limit: r < 0.156656 @ 95%CL (1 toyMC)
median expected limit: r < 0.156656 @ 95%CL (1 toyMC)
   68% expected band : 0.156656 < r < 0.156656
   95% expected band : 0.156656 < r < 0.156656
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1186488422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42857e+29 +/- 1.42857e+29 @ 95% CL (7 tries)
Done in 8.61 min (cpu), 8.68 min (real)
mean   expected limit: r < 1.42857e+29 @ 95%CL (1 toyMC)
median expected limit: r < 1.42857e+29 @ 95%CL (1 toyMC)
   68% expected band : 1.42857e+29 < r < 1.42857e+29
   95% expected band : 1.42857e+29 < r < 1.42857e+29
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 9837803
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.136833 +/- 0.00784746 @ 95% CL (44 tries)
Done in 4.59 min (cpu), 4.62 min (real)
mean   expected limit: r < 0.136833 @ 95%CL (1 toyMC)
median expected limit: r < 0.136833 @ 95%CL (1 toyMC)
   68% expected band : 0.136833 < r < 0.136833
   95% expected band : 0.136833 < r < 0.136833
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -934185206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.218645 +/- 0.00236847 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.218645 @ 95%CL (1 toyMC)
median expected limit: r < 0.218645 @ 95%CL (1 toyMC)
   68% expected band : 0.218645 < r < 0.218645
   95% expected band : 0.218645 < r < 0.218645
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1402288685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.183117 +/- 0.00211499 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.183117 @ 95%CL (1 toyMC)
median expected limit: r < 0.183117 @ 95%CL (1 toyMC)
   68% expected band : 0.183117 < r < 0.183117
   95% expected band : 0.183117 < r < 0.183117
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 126472618
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.146278 +/- 0.00416605 @ 95% CL (79 tries)
Done in 0.94 min (cpu), 0.95 min (real)
mean   expected limit: r < 0.146278 @ 95%CL (1 toyMC)
median expected limit: r < 0.146278 @ 95%CL (1 toyMC)
   68% expected band : 0.146278 < r < 0.146278
   95% expected band : 0.146278 < r < 0.146278
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1273811955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.173015 +/- 0.00254976 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.173015 @ 95%CL (1 toyMC)
median expected limit: r < 0.173015 @ 95%CL (1 toyMC)
   68% expected band : 0.173015 < r < 0.173015
   95% expected band : 0.173015 < r < 0.173015
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1461864723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.143248 +/- 0.00631625 @ 95% CL (50 tries)
Done in 4.01 min (cpu), 4.04 min (real)
mean   expected limit: r < 0.143248 @ 95%CL (1 toyMC)
median expected limit: r < 0.143248 @ 95%CL (1 toyMC)
   68% expected band : 0.143248 < r < 0.143248
   95% expected band : 0.143248 < r < 0.143248
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1791671288
Generate toy 1/1
Done in 9.27 min (cpu), 9.33 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1458207902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.5e+29 +/- 1.63663e+29 @ 95% CL (8 tries)
Done in 8.34 min (cpu), 8.39 min (real)
mean   expected limit: r < 2.5e+29 @ 95%CL (1 toyMC)
median expected limit: r < 2.5e+29 @ 95%CL (1 toyMC)
   68% expected band : 2.5e+29 < r < 2.5e+29
   95% expected band : 2.5e+29 < r < 2.5e+29
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1077024445
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.08456 +/- 3.25484 @ 95% CL (8 tries)
Done in 8.40 min (cpu), 8.46 min (real)
mean   expected limit: r < 5.08456 @ 95%CL (1 toyMC)
median expected limit: r < 5.08456 @ 95%CL (1 toyMC)
   68% expected band : 5.08456 < r < 5.08456
   95% expected band : 5.08456 < r < 5.08456
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1758499593
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.152766 +/- 0.0042332 @ 95% CL (92 tries)
Done in 0.49 min (cpu), 0.50 min (real)
mean   expected limit: r < 0.152766 @ 95%CL (1 toyMC)
median expected limit: r < 0.152766 @ 95%CL (1 toyMC)
   68% expected band : 0.152766 < r < 0.152766
   95% expected band : 0.152766 < r < 0.152766
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 252632045
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.7481 +/- 2.82533 @ 95% CL (15 tries)
Done in 7.62 min (cpu), 7.68 min (real)
mean   expected limit: r < 6.7481 @ 95%CL (1 toyMC)
median expected limit: r < 6.7481 @ 95%CL (1 toyMC)
   68% expected band : 6.7481 < r < 6.7481
   95% expected band : 6.7481 < r < 6.7481
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -952383246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.240883 +/- 0.00246987 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.240883 @ 95%CL (1 toyMC)
median expected limit: r < 0.240883 @ 95%CL (1 toyMC)
   68% expected band : 0.240883 < r < 0.240883
   95% expected band : 0.240883 < r < 0.240883
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1684615846
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.277511 +/- 0.00204701 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.277511 @ 95%CL (1 toyMC)
median expected limit: r < 0.277511 @ 95%CL (1 toyMC)
   68% expected band : 0.277511 < r < 0.277511
   95% expected band : 0.277511 < r < 0.277511
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1394346058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.169345 +/- 0.0032167 @ 95% CL (95 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 0.169345 @ 95%CL (1 toyMC)
median expected limit: r < 0.169345 @ 95%CL (1 toyMC)
   68% expected band : 0.169345 < r < 0.169345
   95% expected band : 0.169345 < r < 0.169345
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1592288346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.78357 +/- 2.78803 @ 95% CL (15 tries)
Done in 7.48 min (cpu), 7.53 min (real)
mean   expected limit: r < 7.78357 @ 95%CL (1 toyMC)
median expected limit: r < 7.78357 @ 95%CL (1 toyMC)
   68% expected band : 7.78357 < r < 7.78357
   95% expected band : 7.78357 < r < 7.78357
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -399156740
Generate toy 1/1
Done in 9.12 min (cpu), 9.17 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2008386820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.157031 +/- 0.00396132 @ 95% CL (95 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.157031 @ 95%CL (1 toyMC)
median expected limit: r < 0.157031 @ 95%CL (1 toyMC)
   68% expected band : 0.157031 < r < 0.157031
   95% expected band : 0.157031 < r < 0.157031
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1150283578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.31137 +/- 1.94257 @ 95% CL (28 tries)
Done in 6.28 min (cpu), 6.31 min (real)
mean   expected limit: r < 7.31137 @ 95%CL (1 toyMC)
median expected limit: r < 7.31137 @ 95%CL (1 toyMC)
   68% expected band : 7.31137 < r < 7.31137
   95% expected band : 7.31137 < r < 7.31137
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1424757115
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.77222 +/- 2.49982 @ 95% CL (17 tries)
Done in 7.61 min (cpu), 7.64 min (real)
mean   expected limit: r < 6.77222 @ 95%CL (1 toyMC)
median expected limit: r < 6.77222 @ 95%CL (1 toyMC)
   68% expected band : 6.77222 < r < 6.77222
   95% expected band : 6.77222 < r < 6.77222
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1024089704
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.164093 +/- 0.00288623 @ 95% CL (99 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.164093 @ 95%CL (1 toyMC)
median expected limit: r < 0.164093 @ 95%CL (1 toyMC)
   68% expected band : 0.164093 < r < 0.164093
   95% expected band : 0.164093 < r < 0.164093
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 694188096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.14867 +/- 0.00735687 @ 95% CL (53 tries)
Done in 3.45 min (cpu), 3.47 min (real)
mean   expected limit: r < 0.14867 @ 95%CL (1 toyMC)
median expected limit: r < 0.14867 @ 95%CL (1 toyMC)
   68% expected band : 0.14867 < r < 0.14867
   95% expected band : 0.14867 < r < 0.14867
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 59684389
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.252155 +/- 0.00171972 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.252155 @ 95%CL (1 toyMC)
median expected limit: r < 0.252155 @ 95%CL (1 toyMC)
   68% expected band : 0.252155 < r < 0.252155
   95% expected band : 0.252155 < r < 0.252155
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 706490684
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.184716 +/- 0.0026713 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.184716 @ 95%CL (1 toyMC)
median expected limit: r < 0.184716 @ 95%CL (1 toyMC)
   68% expected band : 0.184716 < r < 0.184716
   95% expected band : 0.184716 < r < 0.184716
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2010544732
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.32529 +/- 1.90788 @ 95% CL (21 tries)
Done in 6.65 min (cpu), 6.68 min (real)
mean   expected limit: r < 4.32529 @ 95%CL (1 toyMC)
median expected limit: r < 4.32529 @ 95%CL (1 toyMC)
   68% expected band : 4.32529 < r < 4.32529
   95% expected band : 4.32529 < r < 4.32529
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 73083545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.150476 +/- 0.00434987 @ 95% CL (88 tries)
Done in 0.49 min (cpu), 0.49 min (real)
mean   expected limit: r < 0.150476 @ 95%CL (1 toyMC)
median expected limit: r < 0.150476 @ 95%CL (1 toyMC)
   68% expected band : 0.150476 < r < 0.150476
   95% expected band : 0.150476 < r < 0.150476
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1479324783
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.159792 +/- 0.00214138 @ 95% CL (97 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.159792 @ 95%CL (1 toyMC)
median expected limit: r < 0.159792 @ 95%CL (1 toyMC)
   68% expected band : 0.159792 < r < 0.159792
   95% expected band : 0.159792 < r < 0.159792
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 194584266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.0707269 @ 95% CL
Done in 8.97 min (cpu), 9.01 min (real)
mean   expected limit: r < 0.0707269 @ 95%CL (1 toyMC)
median expected limit: r < 0.0707269 @ 95%CL (1 toyMC)
   68% expected band : 0.0707269 < r < 0.0707269
   95% expected band : 0.0707269 < r < 0.0707269
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -406754091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.108669 @ 95% CL
Done in 9.05 min (cpu), 9.09 min (real)
mean   expected limit: r < 0.108669 @ 95%CL (1 toyMC)
median expected limit: r < 0.108669 @ 95%CL (1 toyMC)
   68% expected band : 0.108669 < r < 0.108669
   95% expected band : 0.108669 < r < 0.108669
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2141165703
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.154476 +/- 0.00346985 @ 95% CL (95 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.154476 @ 95%CL (1 toyMC)
median expected limit: r < 0.154476 @ 95%CL (1 toyMC)
   68% expected band : 0.154476 < r < 0.154476
   95% expected band : 0.154476 < r < 0.154476
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -574383955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.33333e+29 +/- 3.33333e+29 @ 95% CL (3 tries)
Done in 8.89 min (cpu), 8.93 min (real)
mean   expected limit: r < 3.33333e+29 @ 95%CL (1 toyMC)
median expected limit: r < 3.33333e+29 @ 95%CL (1 toyMC)
   68% expected band : 3.33333e+29 < r < 3.33333e+29
   95% expected band : 3.33333e+29 < r < 3.33333e+29
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 79663988
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.243068 +/- 0.00264257 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.243068 @ 95%CL (1 toyMC)
median expected limit: r < 0.243068 @ 95%CL (1 toyMC)
   68% expected band : 0.243068 < r < 0.243068
   95% expected band : 0.243068 < r < 0.243068
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 290510774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.234335 +/- 0.00226876 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.234335 @ 95%CL (1 toyMC)
median expected limit: r < 0.234335 @ 95%CL (1 toyMC)
   68% expected band : 0.234335 < r < 0.234335
   95% expected band : 0.234335 < r < 0.234335
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 388319214
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.192189 +/- 0.00285226 @ 95% CL (99 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.192189 @ 95%CL (1 toyMC)
median expected limit: r < 0.192189 @ 95%CL (1 toyMC)
   68% expected band : 0.192189 < r < 0.192189
   95% expected band : 0.192189 < r < 0.192189
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2029712344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.160912 +/- 0.00350943 @ 95% CL (97 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.160912 @ 95%CL (1 toyMC)
median expected limit: r < 0.160912 @ 95%CL (1 toyMC)
   68% expected band : 0.160912 < r < 0.160912
   95% expected band : 0.160912 < r < 0.160912
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1102940035
Generate toy 1/1
Done in 9.04 min (cpu), 9.07 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 735758273
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.167695 +/- 0.00255929 @ 95% CL (99 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.167695 @ 95%CL (1 toyMC)
median expected limit: r < 0.167695 @ 95%CL (1 toyMC)
   68% expected band : 0.167695 < r < 0.167695
   95% expected band : 0.167695 < r < 0.167695
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1840117977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.286312 +/- 0.00235199 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.286312 @ 95%CL (1 toyMC)
median expected limit: r < 0.286312 @ 95%CL (1 toyMC)
   68% expected band : 0.286312 < r < 0.286312
   95% expected band : 0.286312 < r < 0.286312
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1562137703
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.161265 +/- 0.0023599 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.161265 @ 95%CL (1 toyMC)
median expected limit: r < 0.161265 @ 95%CL (1 toyMC)
   68% expected band : 0.161265 < r < 0.161265
   95% expected band : 0.161265 < r < 0.161265
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1656525309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.217841 +/- 0.00244962 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.217841 @ 95%CL (1 toyMC)
median expected limit: r < 0.217841 @ 95%CL (1 toyMC)
   68% expected band : 0.217841 < r < 0.217841
   95% expected band : 0.217841 < r < 0.217841
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1846858966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.149539 +/- 0.00213357 @ 95% CL (99 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 0.149539 @ 95%CL (1 toyMC)
median expected limit: r < 0.149539 @ 95%CL (1 toyMC)
   68% expected band : 0.149539 < r < 0.149539
   95% expected band : 0.149539 < r < 0.149539
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1620666712
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66667e+29 +/- 1.66667e+29 @ 95% CL (6 tries)
Done in 8.39 min (cpu), 8.42 min (real)
mean   expected limit: r < 1.66667e+29 @ 95%CL (1 toyMC)
median expected limit: r < 1.66667e+29 @ 95%CL (1 toyMC)
   68% expected band : 1.66667e+29 < r < 1.66667e+29
   95% expected band : 1.66667e+29 < r < 1.66667e+29
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -286733200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.210093 +/- 0.00194469 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.210093 @ 95%CL (1 toyMC)
median expected limit: r < 0.210093 @ 95%CL (1 toyMC)
   68% expected band : 0.210093 < r < 0.210093
   95% expected band : 0.210093 < r < 0.210093
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -346545558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.74907 +/- 2.5042 @ 95% CL (16 tries)
Done in 7.33 min (cpu), 7.35 min (real)
mean   expected limit: r < 6.74907 @ 95%CL (1 toyMC)
median expected limit: r < 6.74907 @ 95%CL (1 toyMC)
   68% expected band : 6.74907 < r < 6.74907
   95% expected band : 6.74907 < r < 6.74907
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1677299907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.202159 +/- 0.00203345 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.202159 @ 95%CL (1 toyMC)
median expected limit: r < 0.202159 @ 95%CL (1 toyMC)
   68% expected band : 0.202159 < r < 0.202159
   95% expected band : 0.202159 < r < 0.202159
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1174885222
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.212202 +/- 0.00247962 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.212202 @ 95%CL (1 toyMC)
median expected limit: r < 0.212202 @ 95%CL (1 toyMC)
   68% expected band : 0.212202 < r < 0.212202
   95% expected band : 0.212202 < r < 0.212202
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1266494575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.213829 +/- 0.00250576 @ 95% CL (100 tries)
Done in 0.25 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.213829 @ 95%CL (1 toyMC)
median expected limit: r < 0.213829 @ 95%CL (1 toyMC)
   68% expected band : 0.213829 < r < 0.213829
   95% expected band : 0.213829 < r < 0.213829
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -153307825
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.221307 +/- 0.00202616 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.221307 @ 95%CL (1 toyMC)
median expected limit: r < 0.221307 @ 95%CL (1 toyMC)
   68% expected band : 0.221307 < r < 0.221307
   95% expected band : 0.221307 < r < 0.221307
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 824879014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.226953 +/- 0.00178642 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.226953 @ 95%CL (1 toyMC)
median expected limit: r < 0.226953 @ 95%CL (1 toyMC)
   68% expected band : 0.226953 < r < 0.226953
   95% expected band : 0.226953 < r < 0.226953
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1965555687
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.20642 +/- 0.0028282 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 0.20642 @ 95%CL (1 toyMC)
median expected limit: r < 0.20642 @ 95%CL (1 toyMC)
   68% expected band : 0.20642 < r < 0.20642
   95% expected band : 0.20642 < r < 0.20642
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1505125864
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.216102 +/- 0.0025552 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.24 min (real)
mean   expected limit: r < 0.216102 @ 95%CL (1 toyMC)
median expected limit: r < 0.216102 @ 95%CL (1 toyMC)
   68% expected band : 0.216102 < r < 0.216102
   95% expected band : 0.216102 < r < 0.216102
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1823249315
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.144311 +/- 0.00250186 @ 95% CL (91 tries)
Done in 0.50 min (cpu), 0.50 min (real)
mean   expected limit: r < 0.144311 @ 95%CL (1 toyMC)
median expected limit: r < 0.144311 @ 95%CL (1 toyMC)
   68% expected band : 0.144311 < r < 0.144311
   95% expected band : 0.144311 < r < 0.144311
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 59477723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.184801 +/- 0.0023117 @ 95% CL (100 tries)
Done in 0.24 min (cpu), 0.25 min (real)
mean   expected limit: r < 0.184801 @ 95%CL (1 toyMC)
median expected limit: r < 0.184801 @ 95%CL (1 toyMC)
   68% expected band : 0.184801 < r < 0.184801
   95% expected band : 0.184801 < r < 0.184801
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine16.MarkovChainMC.mH16.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH16.-1024089704.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH16.-1041248267.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH16.-1077024445.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH16.-1098281274.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH16.-1143070599.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH16.-1186488422.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH16.-1266494575.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH16.-1341432478.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH16.-1412767468.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH16.-1424757115.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH16.-1458207902.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH16.-1461864723.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH16.-1479324783.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH16.-1505125864.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH16.-153307825.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH16.-1547750023.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH16.-1592219279.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH16.-1598176769.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH16.-1656525309.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH16.-1684615846.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH16.-1699753357.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH16.-1758499593.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH16.-1784351342.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH16.-1899805711.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH16.-1945375140.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH16.-1965555687.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH16.-1967231651.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH16.-2010544732.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH16.-2029712344.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH16.-2046366263.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH16.-2054803613.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH16.-2087863865.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH16.-2093667210.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH16.-2109337684.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH16.-2141165703.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH16.-24550758.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH16.-272300381.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH16.-286733200.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH16.-294936529.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH16.-346545558.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH16.-399156740.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH16.-406754091.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH16.-494518806.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH16.-574383955.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH16.-583559092.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH16.-679042418.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH16.-714459963.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH16.-887435681.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH16.-934185206.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH16.-949879252.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH16.-952383246.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH16.1017180109.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH16.1052884532.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH16.1060907900.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH16.1077607455.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH16.1102940035.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH16.1150283578.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH16.1174885222.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH16.1199261626.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH16.1227321559.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH16.126472618.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH16.1273811955.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH16.1315938873.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH16.1327610887.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH16.1345481039.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH16.1394346058.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH16.1402288685.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH16.1469027083.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH16.1562137703.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH16.1592288346.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH16.1597111142.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH16.160862774.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH16.1620666712.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH16.1677299907.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH16.17088398.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH16.1788607372.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH16.1791671288.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH16.1823249315.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH16.1840117977.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH16.1846858966.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH16.194584266.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH16.1985615124.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH16.2008386820.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH16.252632045.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH16.290510774.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH16.388319214.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH16.494952165.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH16.499977889.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH16.59477723.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH16.59684389.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH16.694188096.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH16.699483351.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH16.706490684.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH16.73083545.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH16.735758273.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH16.772012598.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH16.79663988.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH16.824879014.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH16.976013173.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH16.9837803.root
hadd Target path: higgsCombine16.MarkovChainMC.mH16.root:/
hadd Target path: higgsCombine16.MarkovChainMC.mH16.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -871325158
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.370872 +/- 0.00268298 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.370872 @ 95%CL (1 toyMC)
median expected limit: r < 0.370872 @ 95%CL (1 toyMC)
   68% expected band : 0.370872 < r < 0.370872
   95% expected band : 0.370872 < r < 0.370872
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1838690729
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.820353 +/- 0.00250934 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.820353 @ 95%CL (1 toyMC)
median expected limit: r < 0.820353 @ 95%CL (1 toyMC)
   68% expected band : 0.820353 < r < 0.820353
   95% expected band : 0.820353 < r < 0.820353
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1761239226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.466244 +/- 0.00238108 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.466244 @ 95%CL (1 toyMC)
median expected limit: r < 0.466244 @ 95%CL (1 toyMC)
   68% expected band : 0.466244 < r < 0.466244
   95% expected band : 0.466244 < r < 0.466244
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1695531053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.611558 +/- 0.00305179 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.611558 @ 95%CL (1 toyMC)
median expected limit: r < 0.611558 @ 95%CL (1 toyMC)
   68% expected band : 0.611558 < r < 0.611558
   95% expected band : 0.611558 < r < 0.611558
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1631153131
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.473374 +/- 0.00229371 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.473374 @ 95%CL (1 toyMC)
median expected limit: r < 0.473374 @ 95%CL (1 toyMC)
   68% expected band : 0.473374 < r < 0.473374
   95% expected band : 0.473374 < r < 0.473374
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1163747985
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.856492 +/- 0.00299623 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.856492 @ 95%CL (1 toyMC)
median expected limit: r < 0.856492 @ 95%CL (1 toyMC)
   68% expected band : 0.856492 < r < 0.856492
   95% expected band : 0.856492 < r < 0.856492
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 877390225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.72305 +/- 0.00311415 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.72305 @ 95%CL (1 toyMC)
median expected limit: r < 0.72305 @ 95%CL (1 toyMC)
   68% expected band : 0.72305 < r < 0.72305
   95% expected band : 0.72305 < r < 0.72305
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -958229973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.584506 +/- 0.0027796 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 0.584506 @ 95%CL (1 toyMC)
median expected limit: r < 0.584506 @ 95%CL (1 toyMC)
   68% expected band : 0.584506 < r < 0.584506
   95% expected band : 0.584506 < r < 0.584506
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 870342282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.248811 +/- 0.00319435 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.248811 @ 95%CL (1 toyMC)
median expected limit: r < 0.248811 @ 95%CL (1 toyMC)
   68% expected band : 0.248811 < r < 0.248811
   95% expected band : 0.248811 < r < 0.248811
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -507442433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.352384 +/- 0.0021671 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.352384 @ 95%CL (1 toyMC)
median expected limit: r < 0.352384 @ 95%CL (1 toyMC)
   68% expected band : 0.352384 < r < 0.352384
   95% expected band : 0.352384 < r < 0.352384
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1977517147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.463684 +/- 0.00270571 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.463684 @ 95%CL (1 toyMC)
median expected limit: r < 0.463684 @ 95%CL (1 toyMC)
   68% expected band : 0.463684 < r < 0.463684
   95% expected band : 0.463684 < r < 0.463684
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1043577447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.346635 +/- 0.00284072 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.346635 @ 95%CL (1 toyMC)
median expected limit: r < 0.346635 @ 95%CL (1 toyMC)
   68% expected band : 0.346635 < r < 0.346635
   95% expected band : 0.346635 < r < 0.346635
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1305952108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.442964 +/- 0.00270859 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.442964 @ 95%CL (1 toyMC)
median expected limit: r < 0.442964 @ 95%CL (1 toyMC)
   68% expected band : 0.442964 < r < 0.442964
   95% expected band : 0.442964 < r < 0.442964
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 288963854
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.856773 +/- 0.00268986 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.856773 @ 95%CL (1 toyMC)
median expected limit: r < 0.856773 @ 95%CL (1 toyMC)
   68% expected band : 0.856773 < r < 0.856773
   95% expected band : 0.856773 < r < 0.856773
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 506451917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.569112 +/- 0.0029538 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.569112 @ 95%CL (1 toyMC)
median expected limit: r < 0.569112 @ 95%CL (1 toyMC)
   68% expected band : 0.569112 < r < 0.569112
   95% expected band : 0.569112 < r < 0.569112
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 724762695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.319434 +/- 0.00278364 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.319434 @ 95%CL (1 toyMC)
median expected limit: r < 0.319434 @ 95%CL (1 toyMC)
   68% expected band : 0.319434 < r < 0.319434
   95% expected band : 0.319434 < r < 0.319434
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -685529458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.309945 +/- 0.00256175 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.309945 @ 95%CL (1 toyMC)
median expected limit: r < 0.309945 @ 95%CL (1 toyMC)
   68% expected band : 0.309945 < r < 0.309945
   95% expected band : 0.309945 < r < 0.309945
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1647035137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.383407 +/- 0.00235453 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.383407 @ 95%CL (1 toyMC)
median expected limit: r < 0.383407 @ 95%CL (1 toyMC)
   68% expected band : 0.383407 < r < 0.383407
   95% expected band : 0.383407 < r < 0.383407
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1239981450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.328008 +/- 0.0025082 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.328008 @ 95%CL (1 toyMC)
median expected limit: r < 0.328008 @ 95%CL (1 toyMC)
   68% expected band : 0.328008 < r < 0.328008
   95% expected band : 0.328008 < r < 0.328008
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -731976646
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.577078 +/- 0.00220341 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.577078 @ 95%CL (1 toyMC)
median expected limit: r < 0.577078 @ 95%CL (1 toyMC)
   68% expected band : 0.577078 < r < 0.577078
   95% expected band : 0.577078 < r < 0.577078
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 689987993
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.573649 +/- 0.00263716 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.573649 @ 95%CL (1 toyMC)
median expected limit: r < 0.573649 @ 95%CL (1 toyMC)
   68% expected band : 0.573649 < r < 0.573649
   95% expected band : 0.573649 < r < 0.573649
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -51440745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.884893 +/- 0.0023592 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.884893 @ 95%CL (1 toyMC)
median expected limit: r < 0.884893 @ 95%CL (1 toyMC)
   68% expected band : 0.884893 < r < 0.884893
   95% expected band : 0.884893 < r < 0.884893
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -223547822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.353308 +/- 0.00274371 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.353308 @ 95%CL (1 toyMC)
median expected limit: r < 0.353308 @ 95%CL (1 toyMC)
   68% expected band : 0.353308 < r < 0.353308
   95% expected band : 0.353308 < r < 0.353308
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1760735846
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.678936 +/- 0.00276155 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.678936 @ 95%CL (1 toyMC)
median expected limit: r < 0.678936 @ 95%CL (1 toyMC)
   68% expected band : 0.678936 < r < 0.678936
   95% expected band : 0.678936 < r < 0.678936
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1707076753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.53743 +/- 0.00345237 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.53743 @ 95%CL (1 toyMC)
median expected limit: r < 0.53743 @ 95%CL (1 toyMC)
   68% expected band : 0.53743 < r < 0.53743
   95% expected band : 0.53743 < r < 0.53743
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 501775290
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.476057 +/- 0.00269928 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.476057 @ 95%CL (1 toyMC)
median expected limit: r < 0.476057 @ 95%CL (1 toyMC)
   68% expected band : 0.476057 < r < 0.476057
   95% expected band : 0.476057 < r < 0.476057
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1078542014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.319118 +/- 0.00292535 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.319118 @ 95%CL (1 toyMC)
median expected limit: r < 0.319118 @ 95%CL (1 toyMC)
   68% expected band : 0.319118 < r < 0.319118
   95% expected band : 0.319118 < r < 0.319118
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -552167800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.426689 +/- 0.00275315 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.426689 @ 95%CL (1 toyMC)
median expected limit: r < 0.426689 @ 95%CL (1 toyMC)
   68% expected band : 0.426689 < r < 0.426689
   95% expected band : 0.426689 < r < 0.426689
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 34898591
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.578998 +/- 0.00237748 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.578998 @ 95%CL (1 toyMC)
median expected limit: r < 0.578998 @ 95%CL (1 toyMC)
   68% expected band : 0.578998 < r < 0.578998
   95% expected band : 0.578998 < r < 0.578998
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 219409947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.479607 +/- 0.00284825 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.479607 @ 95%CL (1 toyMC)
median expected limit: r < 0.479607 @ 95%CL (1 toyMC)
   68% expected band : 0.479607 < r < 0.479607
   95% expected band : 0.479607 < r < 0.479607
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 829880018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.501731 +/- 0.00357661 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.501731 @ 95%CL (1 toyMC)
median expected limit: r < 0.501731 @ 95%CL (1 toyMC)
   68% expected band : 0.501731 < r < 0.501731
   95% expected band : 0.501731 < r < 0.501731
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1199969502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.468686 +/- 0.00313522 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.468686 @ 95%CL (1 toyMC)
median expected limit: r < 0.468686 @ 95%CL (1 toyMC)
   68% expected band : 0.468686 < r < 0.468686
   95% expected band : 0.468686 < r < 0.468686
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 793146377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.357285 +/- 0.00293288 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.357285 @ 95%CL (1 toyMC)
median expected limit: r < 0.357285 @ 95%CL (1 toyMC)
   68% expected band : 0.357285 < r < 0.357285
   95% expected band : 0.357285 < r < 0.357285
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 815263075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.365296 +/- 0.00272152 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.365296 @ 95%CL (1 toyMC)
median expected limit: r < 0.365296 @ 95%CL (1 toyMC)
   68% expected band : 0.365296 < r < 0.365296
   95% expected band : 0.365296 < r < 0.365296
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1524124762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.422841 +/- 0.00240588 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.422841 @ 95%CL (1 toyMC)
median expected limit: r < 0.422841 @ 95%CL (1 toyMC)
   68% expected band : 0.422841 < r < 0.422841
   95% expected band : 0.422841 < r < 0.422841
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1204477626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.392757 +/- 0.00299388 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.392757 @ 95%CL (1 toyMC)
median expected limit: r < 0.392757 @ 95%CL (1 toyMC)
   68% expected band : 0.392757 < r < 0.392757
   95% expected band : 0.392757 < r < 0.392757
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -397969032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.356258 +/- 0.0024965 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.356258 @ 95%CL (1 toyMC)
median expected limit: r < 0.356258 @ 95%CL (1 toyMC)
   68% expected band : 0.356258 < r < 0.356258
   95% expected band : 0.356258 < r < 0.356258
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1229706111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.285409 +/- 0.00281453 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.285409 @ 95%CL (1 toyMC)
median expected limit: r < 0.285409 @ 95%CL (1 toyMC)
   68% expected band : 0.285409 < r < 0.285409
   95% expected band : 0.285409 < r < 0.285409
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1626557081
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.369056 +/- 0.00265228 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.369056 @ 95%CL (1 toyMC)
median expected limit: r < 0.369056 @ 95%CL (1 toyMC)
   68% expected band : 0.369056 < r < 0.369056
   95% expected band : 0.369056 < r < 0.369056
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1952040996
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.422388 +/- 0.0029508 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.422388 @ 95%CL (1 toyMC)
median expected limit: r < 0.422388 @ 95%CL (1 toyMC)
   68% expected band : 0.422388 < r < 0.422388
   95% expected band : 0.422388 < r < 0.422388
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1409741993
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.303001 +/- 0.00317337 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.303001 @ 95%CL (1 toyMC)
median expected limit: r < 0.303001 @ 95%CL (1 toyMC)
   68% expected band : 0.303001 < r < 0.303001
   95% expected band : 0.303001 < r < 0.303001
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -629765365
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.637385 +/- 0.00322049 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.637385 @ 95%CL (1 toyMC)
median expected limit: r < 0.637385 @ 95%CL (1 toyMC)
   68% expected band : 0.637385 < r < 0.637385
   95% expected band : 0.637385 < r < 0.637385
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -683886211
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.94864 +/- 0.00280695 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.94864 @ 95%CL (1 toyMC)
median expected limit: r < 0.94864 @ 95%CL (1 toyMC)
   68% expected band : 0.94864 < r < 0.94864
   95% expected band : 0.94864 < r < 0.94864
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -372162248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.565698 +/- 0.00281652 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.565698 @ 95%CL (1 toyMC)
median expected limit: r < 0.565698 @ 95%CL (1 toyMC)
   68% expected band : 0.565698 < r < 0.565698
   95% expected band : 0.565698 < r < 0.565698
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 349492370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.476128 +/- 0.00298215 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.476128 @ 95%CL (1 toyMC)
median expected limit: r < 0.476128 @ 95%CL (1 toyMC)
   68% expected band : 0.476128 < r < 0.476128
   95% expected band : 0.476128 < r < 0.476128
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2074358304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.37395 +/- 0.00281643 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.37395 @ 95%CL (1 toyMC)
median expected limit: r < 0.37395 @ 95%CL (1 toyMC)
   68% expected band : 0.37395 < r < 0.37395
   95% expected band : 0.37395 < r < 0.37395
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 363044522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.673947 +/- 0.00368843 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.673947 @ 95%CL (1 toyMC)
median expected limit: r < 0.673947 @ 95%CL (1 toyMC)
   68% expected band : 0.673947 < r < 0.673947
   95% expected band : 0.673947 < r < 0.673947
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -948281608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.453043 +/- 0.0028363 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.453043 @ 95%CL (1 toyMC)
median expected limit: r < 0.453043 @ 95%CL (1 toyMC)
   68% expected band : 0.453043 < r < 0.453043
   95% expected band : 0.453043 < r < 0.453043
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1239788089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.505416 +/- 0.002807 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.505416 @ 95%CL (1 toyMC)
median expected limit: r < 0.505416 @ 95%CL (1 toyMC)
   68% expected band : 0.505416 < r < 0.505416
   95% expected band : 0.505416 < r < 0.505416
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -933420018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.347942 +/- 0.00347976 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.347942 @ 95%CL (1 toyMC)
median expected limit: r < 0.347942 @ 95%CL (1 toyMC)
   68% expected band : 0.347942 < r < 0.347942
   95% expected band : 0.347942 < r < 0.347942
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -450733108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.398465 +/- 0.00262794 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.398465 @ 95%CL (1 toyMC)
median expected limit: r < 0.398465 @ 95%CL (1 toyMC)
   68% expected band : 0.398465 < r < 0.398465
   95% expected band : 0.398465 < r < 0.398465
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -211066035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.295741 +/- 0.00308029 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.295741 @ 95%CL (1 toyMC)
median expected limit: r < 0.295741 @ 95%CL (1 toyMC)
   68% expected band : 0.295741 < r < 0.295741
   95% expected band : 0.295741 < r < 0.295741
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -672136188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.46294 +/- 0.00211274 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.46294 @ 95%CL (1 toyMC)
median expected limit: r < 0.46294 @ 95%CL (1 toyMC)
   68% expected band : 0.46294 < r < 0.46294
   95% expected band : 0.46294 < r < 0.46294
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 378702981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.392874 +/- 0.00283534 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.392874 @ 95%CL (1 toyMC)
median expected limit: r < 0.392874 @ 95%CL (1 toyMC)
   68% expected band : 0.392874 < r < 0.392874
   95% expected band : 0.392874 < r < 0.392874
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -970756191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.872474 +/- 0.00346609 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.872474 @ 95%CL (1 toyMC)
median expected limit: r < 0.872474 @ 95%CL (1 toyMC)
   68% expected band : 0.872474 < r < 0.872474
   95% expected band : 0.872474 < r < 0.872474
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 606749905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.756949 +/- 0.00251804 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.756949 @ 95%CL (1 toyMC)
median expected limit: r < 0.756949 @ 95%CL (1 toyMC)
   68% expected band : 0.756949 < r < 0.756949
   95% expected band : 0.756949 < r < 0.756949
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2130667612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.394775 +/- 0.00334852 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.394775 @ 95%CL (1 toyMC)
median expected limit: r < 0.394775 @ 95%CL (1 toyMC)
   68% expected band : 0.394775 < r < 0.394775
   95% expected band : 0.394775 < r < 0.394775
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 764877790
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.711092 +/- 0.00269571 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.711092 @ 95%CL (1 toyMC)
median expected limit: r < 0.711092 @ 95%CL (1 toyMC)
   68% expected band : 0.711092 < r < 0.711092
   95% expected band : 0.711092 < r < 0.711092
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1690265587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.722062 +/- 0.00256757 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.722062 @ 95%CL (1 toyMC)
median expected limit: r < 0.722062 @ 95%CL (1 toyMC)
   68% expected band : 0.722062 < r < 0.722062
   95% expected band : 0.722062 < r < 0.722062
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2080041365
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.480246 +/- 0.00289245 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.480246 @ 95%CL (1 toyMC)
median expected limit: r < 0.480246 @ 95%CL (1 toyMC)
   68% expected band : 0.480246 < r < 0.480246
   95% expected band : 0.480246 < r < 0.480246
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1365705711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.627225 +/- 0.00278413 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.627225 @ 95%CL (1 toyMC)
median expected limit: r < 0.627225 @ 95%CL (1 toyMC)
   68% expected band : 0.627225 < r < 0.627225
   95% expected band : 0.627225 < r < 0.627225
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 309720110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.641317 +/- 0.00305798 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.641317 @ 95%CL (1 toyMC)
median expected limit: r < 0.641317 @ 95%CL (1 toyMC)
   68% expected band : 0.641317 < r < 0.641317
   95% expected band : 0.641317 < r < 0.641317
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 104850039
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01011 +/- 0.00293251 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.01011 @ 95%CL (1 toyMC)
median expected limit: r < 1.01011 @ 95%CL (1 toyMC)
   68% expected band : 1.01011 < r < 1.01011
   95% expected band : 1.01011 < r < 1.01011
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1762012217
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.552779 +/- 0.00199039 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.552779 @ 95%CL (1 toyMC)
median expected limit: r < 0.552779 @ 95%CL (1 toyMC)
   68% expected band : 0.552779 < r < 0.552779
   95% expected band : 0.552779 < r < 0.552779
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1555080406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.285593 +/- 0.00266893 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.285593 @ 95%CL (1 toyMC)
median expected limit: r < 0.285593 @ 95%CL (1 toyMC)
   68% expected band : 0.285593 < r < 0.285593
   95% expected band : 0.285593 < r < 0.285593
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1511968862
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.461402 +/- 0.00256765 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.461402 @ 95%CL (1 toyMC)
median expected limit: r < 0.461402 @ 95%CL (1 toyMC)
   68% expected band : 0.461402 < r < 0.461402
   95% expected band : 0.461402 < r < 0.461402
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -388923305
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.556227 +/- 0.00286002 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.556227 @ 95%CL (1 toyMC)
median expected limit: r < 0.556227 @ 95%CL (1 toyMC)
   68% expected band : 0.556227 < r < 0.556227
   95% expected band : 0.556227 < r < 0.556227
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -941343673
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.419471 +/- 0.00252951 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 0.419471 @ 95%CL (1 toyMC)
median expected limit: r < 0.419471 @ 95%CL (1 toyMC)
   68% expected band : 0.419471 < r < 0.419471
   95% expected band : 0.419471 < r < 0.419471
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1742635935
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.7278 +/- 0.00262206 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.7278 @ 95%CL (1 toyMC)
median expected limit: r < 0.7278 @ 95%CL (1 toyMC)
   68% expected band : 0.7278 < r < 0.7278
   95% expected band : 0.7278 < r < 0.7278
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1516507281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.338707 +/- 0.002534 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.338707 @ 95%CL (1 toyMC)
median expected limit: r < 0.338707 @ 95%CL (1 toyMC)
   68% expected band : 0.338707 < r < 0.338707
   95% expected band : 0.338707 < r < 0.338707
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1590630575
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.321677 +/- 0.00251716 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.321677 @ 95%CL (1 toyMC)
median expected limit: r < 0.321677 @ 95%CL (1 toyMC)
   68% expected band : 0.321677 < r < 0.321677
   95% expected band : 0.321677 < r < 0.321677
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1264159946
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.634906 +/- 0.00338856 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.634906 @ 95%CL (1 toyMC)
median expected limit: r < 0.634906 @ 95%CL (1 toyMC)
   68% expected band : 0.634906 < r < 0.634906
   95% expected band : 0.634906 < r < 0.634906
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -163803267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.529553 +/- 0.00272206 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.529553 @ 95%CL (1 toyMC)
median expected limit: r < 0.529553 @ 95%CL (1 toyMC)
   68% expected band : 0.529553 < r < 0.529553
   95% expected band : 0.529553 < r < 0.529553
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2110911374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.400639 +/- 0.00264903 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.400639 @ 95%CL (1 toyMC)
median expected limit: r < 0.400639 @ 95%CL (1 toyMC)
   68% expected band : 0.400639 < r < 0.400639
   95% expected band : 0.400639 < r < 0.400639
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1975464570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.431449 +/- 0.00266531 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.431449 @ 95%CL (1 toyMC)
median expected limit: r < 0.431449 @ 95%CL (1 toyMC)
   68% expected band : 0.431449 < r < 0.431449
   95% expected band : 0.431449 < r < 0.431449
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1224202412
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0419 +/- 0.00356426 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.0419 @ 95%CL (1 toyMC)
median expected limit: r < 1.0419 @ 95%CL (1 toyMC)
   68% expected band : 1.0419 < r < 1.0419
   95% expected band : 1.0419 < r < 1.0419
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 555714307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.456127 +/- 0.00205758 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.456127 @ 95%CL (1 toyMC)
median expected limit: r < 0.456127 @ 95%CL (1 toyMC)
   68% expected band : 0.456127 < r < 0.456127
   95% expected band : 0.456127 < r < 0.456127
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1223533012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.677251 +/- 0.00287922 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.677251 @ 95%CL (1 toyMC)
median expected limit: r < 0.677251 @ 95%CL (1 toyMC)
   68% expected band : 0.677251 < r < 0.677251
   95% expected band : 0.677251 < r < 0.677251
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1934669906
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.23899 +/- 0.00245661 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.26 min (real)
mean   expected limit: r < 0.23899 @ 95%CL (1 toyMC)
median expected limit: r < 0.23899 @ 95%CL (1 toyMC)
   68% expected band : 0.23899 < r < 0.23899
   95% expected band : 0.23899 < r < 0.23899
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -343501503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.470099 +/- 0.00305296 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.470099 @ 95%CL (1 toyMC)
median expected limit: r < 0.470099 @ 95%CL (1 toyMC)
   68% expected band : 0.470099 < r < 0.470099
   95% expected band : 0.470099 < r < 0.470099
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 337225274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.362635 +/- 0.00271178 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.362635 @ 95%CL (1 toyMC)
median expected limit: r < 0.362635 @ 95%CL (1 toyMC)
   68% expected band : 0.362635 < r < 0.362635
   95% expected band : 0.362635 < r < 0.362635
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 6458946
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.426461 +/- 0.00261569 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.426461 @ 95%CL (1 toyMC)
median expected limit: r < 0.426461 @ 95%CL (1 toyMC)
   68% expected band : 0.426461 < r < 0.426461
   95% expected band : 0.426461 < r < 0.426461
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2037546488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.383326 +/- 0.00302827 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.383326 @ 95%CL (1 toyMC)
median expected limit: r < 0.383326 @ 95%CL (1 toyMC)
   68% expected band : 0.383326 < r < 0.383326
   95% expected band : 0.383326 < r < 0.383326
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1447105870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.711372 +/- 0.00309507 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.711372 @ 95%CL (1 toyMC)
median expected limit: r < 0.711372 @ 95%CL (1 toyMC)
   68% expected band : 0.711372 < r < 0.711372
   95% expected band : 0.711372 < r < 0.711372
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1093944020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.589101 +/- 0.00292778 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.589101 @ 95%CL (1 toyMC)
median expected limit: r < 0.589101 @ 95%CL (1 toyMC)
   68% expected band : 0.589101 < r < 0.589101
   95% expected band : 0.589101 < r < 0.589101
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -586939586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.371768 +/- 0.0031061 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.371768 @ 95%CL (1 toyMC)
median expected limit: r < 0.371768 @ 95%CL (1 toyMC)
   68% expected band : 0.371768 < r < 0.371768
   95% expected band : 0.371768 < r < 0.371768
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -707098369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.577792 +/- 0.00292866 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.577792 @ 95%CL (1 toyMC)
median expected limit: r < 0.577792 @ 95%CL (1 toyMC)
   68% expected band : 0.577792 < r < 0.577792
   95% expected band : 0.577792 < r < 0.577792
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -570612632
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.497244 +/- 0.00227481 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.497244 @ 95%CL (1 toyMC)
median expected limit: r < 0.497244 @ 95%CL (1 toyMC)
   68% expected band : 0.497244 < r < 0.497244
   95% expected band : 0.497244 < r < 0.497244
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 679077430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.305723 +/- 0.00240444 @ 95% CL (100 tries)
Done in 0.26 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.305723 @ 95%CL (1 toyMC)
median expected limit: r < 0.305723 @ 95%CL (1 toyMC)
   68% expected band : 0.305723 < r < 0.305723
   95% expected band : 0.305723 < r < 0.305723
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1673008083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.587199 +/- 0.00276436 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.587199 @ 95%CL (1 toyMC)
median expected limit: r < 0.587199 @ 95%CL (1 toyMC)
   68% expected band : 0.587199 < r < 0.587199
   95% expected band : 0.587199 < r < 0.587199
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -248269619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.26116 +/- 0.00263314 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.26116 @ 95%CL (1 toyMC)
median expected limit: r < 0.26116 @ 95%CL (1 toyMC)
   68% expected band : 0.26116 < r < 0.26116
   95% expected band : 0.26116 < r < 0.26116
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 835900176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.425948 +/- 0.00271514 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.425948 @ 95%CL (1 toyMC)
median expected limit: r < 0.425948 @ 95%CL (1 toyMC)
   68% expected band : 0.425948 < r < 0.425948
   95% expected band : 0.425948 < r < 0.425948
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1146948482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.939376 +/- 0.00380917 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.939376 @ 95%CL (1 toyMC)
median expected limit: r < 0.939376 @ 95%CL (1 toyMC)
   68% expected band : 0.939376 < r < 0.939376
   95% expected band : 0.939376 < r < 0.939376
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -474980514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.263432 +/- 0.00303106 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.263432 @ 95%CL (1 toyMC)
median expected limit: r < 0.263432 @ 95%CL (1 toyMC)
   68% expected band : 0.263432 < r < 0.263432
   95% expected band : 0.263432 < r < 0.263432
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1018754669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.259285 +/- 0.00252722 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.259285 @ 95%CL (1 toyMC)
median expected limit: r < 0.259285 @ 95%CL (1 toyMC)
   68% expected band : 0.259285 < r < 0.259285
   95% expected band : 0.259285 < r < 0.259285
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 593395788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.504164 +/- 0.00307245 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.504164 @ 95%CL (1 toyMC)
median expected limit: r < 0.504164 @ 95%CL (1 toyMC)
   68% expected band : 0.504164 < r < 0.504164
   95% expected band : 0.504164 < r < 0.504164
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1653487153
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.449809 +/- 0.00300368 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.449809 @ 95%CL (1 toyMC)
median expected limit: r < 0.449809 @ 95%CL (1 toyMC)
   68% expected band : 0.449809 < r < 0.449809
   95% expected band : 0.449809 < r < 0.449809
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 384779286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.363277 +/- 0.00237792 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.363277 @ 95%CL (1 toyMC)
median expected limit: r < 0.363277 @ 95%CL (1 toyMC)
   68% expected band : 0.363277 < r < 0.363277
   95% expected band : 0.363277 < r < 0.363277
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1664924418
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.267463 +/- 0.00263312 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.267463 @ 95%CL (1 toyMC)
median expected limit: r < 0.267463 @ 95%CL (1 toyMC)
   68% expected band : 0.267463 < r < 0.267463
   95% expected band : 0.267463 < r < 0.267463
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -350960383
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32349 +/- 0.00362958 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.32349 @ 95%CL (1 toyMC)
median expected limit: r < 1.32349 @ 95%CL (1 toyMC)
   68% expected band : 1.32349 < r < 1.32349
   95% expected band : 1.32349 < r < 1.32349
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine22.MarkovChainMC.mH22.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH22.-1018754669.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH22.-1043577447.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH22.-1093944020.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH22.-1239788089.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH22.-1239981450.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH22.-1305952108.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH22.-1365705711.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH22.-1409741993.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH22.-1511968862.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH22.-1524124762.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH22.-1555080406.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH22.-1626557081.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH22.-1631153131.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH22.-163803267.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH22.-1647035137.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH22.-1653487153.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH22.-1664924418.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH22.-1695531053.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH22.-1707076753.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH22.-1742635935.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH22.-1762012217.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH22.-1934669906.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH22.-1952040996.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH22.-1975464570.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH22.-1977517147.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH22.-2037546488.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH22.-2074358304.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH22.-2080041365.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH22.-211066035.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH22.-223547822.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH22.-248269619.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH22.-343501503.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH22.-350960383.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH22.-372162248.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH22.-388923305.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH22.-397969032.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH22.-450733108.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH22.-474980514.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH22.-507442433.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH22.-51440745.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH22.-552167800.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH22.-570612632.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH22.-586939586.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH22.-629765365.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH22.-672136188.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH22.-683886211.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH22.-685529458.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH22.-707098369.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH22.-731976646.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH22.-871325158.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH22.-933420018.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH22.-941343673.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH22.-948281608.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH22.-958229973.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH22.-970756191.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH22.104850039.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH22.1078542014.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH22.1146948482.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH22.1163747985.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH22.1199969502.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH22.1204477626.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH22.1223533012.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH22.1224202412.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH22.1229706111.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH22.1264159946.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH22.1447105870.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH22.1516507281.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH22.1590630575.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH22.1673008083.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH22.1690265587.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH22.1760735846.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH22.1761239226.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH22.1838690729.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH22.2110911374.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH22.2130667612.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH22.219409947.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH22.288963854.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH22.309720110.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH22.337225274.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH22.34898591.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH22.349492370.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH22.363044522.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH22.378702981.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH22.384779286.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH22.501775290.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH22.506451917.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH22.555714307.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH22.593395788.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH22.606749905.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH22.6458946.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH22.679077430.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH22.689987993.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH22.724762695.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH22.764877790.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH22.793146377.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH22.815263075.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH22.829880018.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH22.835900176.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH22.870342282.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH22.877390225.root
hadd Target path: higgsCombine22.MarkovChainMC.mH22.root:/
hadd Target path: higgsCombine22.MarkovChainMC.mH22.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 492502520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3603 +/- 0.00371089 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.3603 @ 95%CL (1 toyMC)
median expected limit: r < 1.3603 @ 95%CL (1 toyMC)
   68% expected band : 1.3603 < r < 1.3603
   95% expected band : 1.3603 < r < 1.3603
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2097878670
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42124 +/- 0.00360142 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.42124 @ 95%CL (1 toyMC)
median expected limit: r < 1.42124 @ 95%CL (1 toyMC)
   68% expected band : 1.42124 < r < 1.42124
   95% expected band : 1.42124 < r < 1.42124
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1784434352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.760904 +/- 0.00336063 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.760904 @ 95%CL (1 toyMC)
median expected limit: r < 0.760904 @ 95%CL (1 toyMC)
   68% expected band : 0.760904 < r < 0.760904
   95% expected band : 0.760904 < r < 0.760904
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 559991073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.60177 +/- 0.00394466 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.60177 @ 95%CL (1 toyMC)
median expected limit: r < 2.60177 @ 95%CL (1 toyMC)
   68% expected band : 2.60177 < r < 2.60177
   95% expected band : 2.60177 < r < 2.60177
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1497931433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02188 +/- 0.00342796 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.02188 @ 95%CL (1 toyMC)
median expected limit: r < 1.02188 @ 95%CL (1 toyMC)
   68% expected band : 1.02188 < r < 1.02188
   95% expected band : 1.02188 < r < 1.02188
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 184377817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39427 +/- 0.00380138 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.39427 @ 95%CL (1 toyMC)
median expected limit: r < 1.39427 @ 95%CL (1 toyMC)
   68% expected band : 1.39427 < r < 1.39427
   95% expected band : 1.39427 < r < 1.39427
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1030206508
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15309 +/- 0.00418079 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.15309 @ 95%CL (1 toyMC)
median expected limit: r < 1.15309 @ 95%CL (1 toyMC)
   68% expected band : 1.15309 < r < 1.15309
   95% expected band : 1.15309 < r < 1.15309
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2066027117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98359 +/- 0.0040049 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 1.98359 @ 95%CL (1 toyMC)
median expected limit: r < 1.98359 @ 95%CL (1 toyMC)
   68% expected band : 1.98359 < r < 1.98359
   95% expected band : 1.98359 < r < 1.98359
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -837132136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05835 +/- 0.00393775 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.05835 @ 95%CL (1 toyMC)
median expected limit: r < 1.05835 @ 95%CL (1 toyMC)
   68% expected band : 1.05835 < r < 1.05835
   95% expected band : 1.05835 < r < 1.05835
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -12185069
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.647458 +/- 0.00344547 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.647458 @ 95%CL (1 toyMC)
median expected limit: r < 0.647458 @ 95%CL (1 toyMC)
   68% expected band : 0.647458 < r < 0.647458
   95% expected band : 0.647458 < r < 0.647458
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1884118566
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20813 +/- 0.003956 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.20813 @ 95%CL (1 toyMC)
median expected limit: r < 1.20813 @ 95%CL (1 toyMC)
   68% expected band : 1.20813 < r < 1.20813
   95% expected band : 1.20813 < r < 1.20813
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2128788868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.918927 +/- 0.00336506 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.918927 @ 95%CL (1 toyMC)
median expected limit: r < 0.918927 @ 95%CL (1 toyMC)
   68% expected band : 0.918927 < r < 0.918927
   95% expected band : 0.918927 < r < 0.918927
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1058671615
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.775653 +/- 0.00302123 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.775653 @ 95%CL (1 toyMC)
median expected limit: r < 0.775653 @ 95%CL (1 toyMC)
   68% expected band : 0.775653 < r < 0.775653
   95% expected band : 0.775653 < r < 0.775653
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1076336788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95294 +/- 0.00386913 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.95294 @ 95%CL (1 toyMC)
median expected limit: r < 1.95294 @ 95%CL (1 toyMC)
   68% expected band : 1.95294 < r < 1.95294
   95% expected band : 1.95294 < r < 1.95294
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1709962978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.842953 +/- 0.00270328 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.842953 @ 95%CL (1 toyMC)
median expected limit: r < 0.842953 @ 95%CL (1 toyMC)
   68% expected band : 0.842953 < r < 0.842953
   95% expected band : 0.842953 < r < 0.842953
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1855232969
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10071 +/- 0.00329647 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.10071 @ 95%CL (1 toyMC)
median expected limit: r < 1.10071 @ 95%CL (1 toyMC)
   68% expected band : 1.10071 < r < 1.10071
   95% expected band : 1.10071 < r < 1.10071
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 825306411
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28582 +/- 0.00401939 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.28582 @ 95%CL (1 toyMC)
median expected limit: r < 1.28582 @ 95%CL (1 toyMC)
   68% expected band : 1.28582 < r < 1.28582
   95% expected band : 1.28582 < r < 1.28582
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1901613113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.714057 +/- 0.00316402 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.714057 @ 95%CL (1 toyMC)
median expected limit: r < 0.714057 @ 95%CL (1 toyMC)
   68% expected band : 0.714057 < r < 0.714057
   95% expected band : 0.714057 < r < 0.714057
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1930908519
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.77338 +/- 0.00281972 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.77338 @ 95%CL (1 toyMC)
median expected limit: r < 0.77338 @ 95%CL (1 toyMC)
   68% expected band : 0.77338 < r < 0.77338
   95% expected band : 0.77338 < r < 0.77338
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -86757002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05954 +/- 0.00375249 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.05954 @ 95%CL (1 toyMC)
median expected limit: r < 1.05954 @ 95%CL (1 toyMC)
   68% expected band : 1.05954 < r < 1.05954
   95% expected band : 1.05954 < r < 1.05954
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 568225820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17893 +/- 0.00357726 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.17893 @ 95%CL (1 toyMC)
median expected limit: r < 1.17893 @ 95%CL (1 toyMC)
   68% expected band : 1.17893 < r < 1.17893
   95% expected band : 1.17893 < r < 1.17893
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1716888188
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24991 +/- 0.00334673 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.24991 @ 95%CL (1 toyMC)
median expected limit: r < 1.24991 @ 95%CL (1 toyMC)
   68% expected band : 1.24991 < r < 1.24991
   95% expected band : 1.24991 < r < 1.24991
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1368945689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35986 +/- 0.00355306 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.35986 @ 95%CL (1 toyMC)
median expected limit: r < 1.35986 @ 95%CL (1 toyMC)
   68% expected band : 1.35986 < r < 1.35986
   95% expected band : 1.35986 < r < 1.35986
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 802383112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.932762 +/- 0.00389507 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.932762 @ 95%CL (1 toyMC)
median expected limit: r < 0.932762 @ 95%CL (1 toyMC)
   68% expected band : 0.932762 < r < 0.932762
   95% expected band : 0.932762 < r < 0.932762
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -840249570
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06563 +/- 0.0032273 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.06563 @ 95%CL (1 toyMC)
median expected limit: r < 1.06563 @ 95%CL (1 toyMC)
   68% expected band : 1.06563 < r < 1.06563
   95% expected band : 1.06563 < r < 1.06563
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1682113879
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34584 +/- 0.00262486 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.34584 @ 95%CL (1 toyMC)
median expected limit: r < 1.34584 @ 95%CL (1 toyMC)
   68% expected band : 1.34584 < r < 1.34584
   95% expected band : 1.34584 < r < 1.34584
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1120301522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1756 +/- 0.00389112 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.1756 @ 95%CL (1 toyMC)
median expected limit: r < 1.1756 @ 95%CL (1 toyMC)
   68% expected band : 1.1756 < r < 1.1756
   95% expected band : 1.1756 < r < 1.1756
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1447897049
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50511 +/- 0.00421153 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.50511 @ 95%CL (1 toyMC)
median expected limit: r < 1.50511 @ 95%CL (1 toyMC)
   68% expected band : 1.50511 < r < 1.50511
   95% expected band : 1.50511 < r < 1.50511
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 296826249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79795 +/- 0.00378006 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.79795 @ 95%CL (1 toyMC)
median expected limit: r < 1.79795 @ 95%CL (1 toyMC)
   68% expected band : 1.79795 < r < 1.79795
   95% expected band : 1.79795 < r < 1.79795
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2038007223
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63711 +/- 0.00461676 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.63711 @ 95%CL (1 toyMC)
median expected limit: r < 1.63711 @ 95%CL (1 toyMC)
   68% expected band : 1.63711 < r < 1.63711
   95% expected band : 1.63711 < r < 1.63711
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2023534564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30738 +/- 0.00464839 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.30738 @ 95%CL (1 toyMC)
median expected limit: r < 1.30738 @ 95%CL (1 toyMC)
   68% expected band : 1.30738 < r < 1.30738
   95% expected band : 1.30738 < r < 1.30738
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2128238364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43936 +/- 0.00388628 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.43936 @ 95%CL (1 toyMC)
median expected limit: r < 1.43936 @ 95%CL (1 toyMC)
   68% expected band : 1.43936 < r < 1.43936
   95% expected band : 1.43936 < r < 1.43936
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 723000424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.982735 +/- 0.00420796 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.982735 @ 95%CL (1 toyMC)
median expected limit: r < 0.982735 @ 95%CL (1 toyMC)
   68% expected band : 0.982735 < r < 0.982735
   95% expected band : 0.982735 < r < 0.982735
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 858707159
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11028 +/- 0.00446701 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.11028 @ 95%CL (1 toyMC)
median expected limit: r < 1.11028 @ 95%CL (1 toyMC)
   68% expected band : 1.11028 < r < 1.11028
   95% expected band : 1.11028 < r < 1.11028
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -127152947
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.907204 +/- 0.00432789 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.907204 @ 95%CL (1 toyMC)
median expected limit: r < 0.907204 @ 95%CL (1 toyMC)
   68% expected band : 0.907204 < r < 0.907204
   95% expected band : 0.907204 < r < 0.907204
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1690510583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.959007 +/- 0.00338708 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.959007 @ 95%CL (1 toyMC)
median expected limit: r < 0.959007 @ 95%CL (1 toyMC)
   68% expected band : 0.959007 < r < 0.959007
   95% expected band : 0.959007 < r < 0.959007
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 896048696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56509 +/- 0.00370588 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.56509 @ 95%CL (1 toyMC)
median expected limit: r < 2.56509 @ 95%CL (1 toyMC)
   68% expected band : 2.56509 < r < 2.56509
   95% expected band : 2.56509 < r < 2.56509
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1503267275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68085 +/- 0.00427348 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.68085 @ 95%CL (1 toyMC)
median expected limit: r < 2.68085 @ 95%CL (1 toyMC)
   68% expected band : 2.68085 < r < 2.68085
   95% expected band : 2.68085 < r < 2.68085
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1973086253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02441 +/- 0.00314289 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.02441 @ 95%CL (1 toyMC)
median expected limit: r < 1.02441 @ 95%CL (1 toyMC)
   68% expected band : 1.02441 < r < 1.02441
   95% expected band : 1.02441 < r < 1.02441
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1712110205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.899848 +/- 0.00389933 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.899848 @ 95%CL (1 toyMC)
median expected limit: r < 0.899848 @ 95%CL (1 toyMC)
   68% expected band : 0.899848 < r < 0.899848
   95% expected band : 0.899848 < r < 0.899848
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -640739633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.723926 +/- 0.0035759 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.723926 @ 95%CL (1 toyMC)
median expected limit: r < 0.723926 @ 95%CL (1 toyMC)
   68% expected band : 0.723926 < r < 0.723926
   95% expected band : 0.723926 < r < 0.723926
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -61026995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13237 +/- 0.00301295 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.13237 @ 95%CL (1 toyMC)
median expected limit: r < 1.13237 @ 95%CL (1 toyMC)
   68% expected band : 1.13237 < r < 1.13237
   95% expected band : 1.13237 < r < 1.13237
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1438047688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.689132 +/- 0.00365733 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.689132 @ 95%CL (1 toyMC)
median expected limit: r < 0.689132 @ 95%CL (1 toyMC)
   68% expected band : 0.689132 < r < 0.689132
   95% expected band : 0.689132 < r < 0.689132
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -349455917
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.919034 +/- 0.00330913 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.919034 @ 95%CL (1 toyMC)
median expected limit: r < 0.919034 @ 95%CL (1 toyMC)
   68% expected band : 0.919034 < r < 0.919034
   95% expected band : 0.919034 < r < 0.919034
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2126440410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08319 +/- 0.00328959 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.08319 @ 95%CL (1 toyMC)
median expected limit: r < 1.08319 @ 95%CL (1 toyMC)
   68% expected band : 1.08319 < r < 1.08319
   95% expected band : 1.08319 < r < 1.08319
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1163606538
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.21662 +/- 0.00418783 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.21662 @ 95%CL (1 toyMC)
median expected limit: r < 2.21662 @ 95%CL (1 toyMC)
   68% expected band : 2.21662 < r < 2.21662
   95% expected band : 2.21662 < r < 2.21662
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 517738096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41095 +/- 0.00392644 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.41095 @ 95%CL (1 toyMC)
median expected limit: r < 1.41095 @ 95%CL (1 toyMC)
   68% expected band : 1.41095 < r < 1.41095
   95% expected band : 1.41095 < r < 1.41095
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -668902843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.787949 +/- 0.0029344 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.787949 @ 95%CL (1 toyMC)
median expected limit: r < 0.787949 @ 95%CL (1 toyMC)
   68% expected band : 0.787949 < r < 0.787949
   95% expected band : 0.787949 < r < 0.787949
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 340196373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.993 +/- 0.0038651 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.993 @ 95%CL (1 toyMC)
median expected limit: r < 0.993 @ 95%CL (1 toyMC)
   68% expected band : 0.993 < r < 0.993
   95% expected band : 0.993 < r < 0.993
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -390656051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18971 +/- 0.00387257 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.18971 @ 95%CL (1 toyMC)
median expected limit: r < 1.18971 @ 95%CL (1 toyMC)
   68% expected band : 1.18971 < r < 1.18971
   95% expected band : 1.18971 < r < 1.18971
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 611952978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34935 +/- 0.00356823 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.34935 @ 95%CL (1 toyMC)
median expected limit: r < 1.34935 @ 95%CL (1 toyMC)
   68% expected band : 1.34935 < r < 1.34935
   95% expected band : 1.34935 < r < 1.34935
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1820400235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37146 +/- 0.00358378 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.37146 @ 95%CL (1 toyMC)
median expected limit: r < 1.37146 @ 95%CL (1 toyMC)
   68% expected band : 1.37146 < r < 1.37146
   95% expected band : 1.37146 < r < 1.37146
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -966546340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23482 +/- 0.00367912 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.23482 @ 95%CL (1 toyMC)
median expected limit: r < 1.23482 @ 95%CL (1 toyMC)
   68% expected band : 1.23482 < r < 1.23482
   95% expected band : 1.23482 < r < 1.23482
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -924866850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18561 +/- 0.00329189 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.18561 @ 95%CL (1 toyMC)
median expected limit: r < 1.18561 @ 95%CL (1 toyMC)
   68% expected band : 1.18561 < r < 1.18561
   95% expected band : 1.18561 < r < 1.18561
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2103429199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.721716 +/- 0.00280646 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.721716 @ 95%CL (1 toyMC)
median expected limit: r < 0.721716 @ 95%CL (1 toyMC)
   68% expected band : 0.721716 < r < 0.721716
   95% expected band : 0.721716 < r < 0.721716
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -929965669
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.813692 +/- 0.00287945 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.813692 @ 95%CL (1 toyMC)
median expected limit: r < 0.813692 @ 95%CL (1 toyMC)
   68% expected band : 0.813692 < r < 0.813692
   95% expected band : 0.813692 < r < 0.813692
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1812350640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2601 +/- 0.00412466 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.2601 @ 95%CL (1 toyMC)
median expected limit: r < 1.2601 @ 95%CL (1 toyMC)
   68% expected band : 1.2601 < r < 1.2601
   95% expected band : 1.2601 < r < 1.2601
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1400689136
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31505 +/- 0.00319479 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.31505 @ 95%CL (1 toyMC)
median expected limit: r < 1.31505 @ 95%CL (1 toyMC)
   68% expected band : 1.31505 < r < 1.31505
   95% expected band : 1.31505 < r < 1.31505
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 784877291
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.55322 +/- 0.00306294 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.55322 @ 95%CL (1 toyMC)
median expected limit: r < 0.55322 @ 95%CL (1 toyMC)
   68% expected band : 0.55322 < r < 0.55322
   95% expected band : 0.55322 < r < 0.55322
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -625011423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04313 +/- 0.0027455 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.04313 @ 95%CL (1 toyMC)
median expected limit: r < 1.04313 @ 95%CL (1 toyMC)
   68% expected band : 1.04313 < r < 1.04313
   95% expected band : 1.04313 < r < 1.04313
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1787370689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.91707 +/- 0.00315656 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.91707 @ 95%CL (1 toyMC)
median expected limit: r < 0.91707 @ 95%CL (1 toyMC)
   68% expected band : 0.91707 < r < 0.91707
   95% expected band : 0.91707 < r < 0.91707
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -875146046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68226 +/- 0.00349671 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.68226 @ 95%CL (1 toyMC)
median expected limit: r < 1.68226 @ 95%CL (1 toyMC)
   68% expected band : 1.68226 < r < 1.68226
   95% expected band : 1.68226 < r < 1.68226
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1938616498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.713193 +/- 0.00379481 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.713193 @ 95%CL (1 toyMC)
median expected limit: r < 0.713193 @ 95%CL (1 toyMC)
   68% expected band : 0.713193 < r < 0.713193
   95% expected band : 0.713193 < r < 0.713193
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -167542945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34926 +/- 0.00420069 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.34926 @ 95%CL (1 toyMC)
median expected limit: r < 1.34926 @ 95%CL (1 toyMC)
   68% expected band : 1.34926 < r < 1.34926
   95% expected band : 1.34926 < r < 1.34926
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -665682399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.915846 +/- 0.00304268 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.915846 @ 95%CL (1 toyMC)
median expected limit: r < 0.915846 @ 95%CL (1 toyMC)
   68% expected band : 0.915846 < r < 0.915846
   95% expected band : 0.915846 < r < 0.915846
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 582647017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33186 +/- 0.00371166 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.33186 @ 95%CL (1 toyMC)
median expected limit: r < 1.33186 @ 95%CL (1 toyMC)
   68% expected band : 1.33186 < r < 1.33186
   95% expected band : 1.33186 < r < 1.33186
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 145046258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38625 +/- 0.00405612 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.38625 @ 95%CL (1 toyMC)
median expected limit: r < 1.38625 @ 95%CL (1 toyMC)
   68% expected band : 1.38625 < r < 1.38625
   95% expected band : 1.38625 < r < 1.38625
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 427531369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12451 +/- 0.0037711 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.12451 @ 95%CL (1 toyMC)
median expected limit: r < 1.12451 @ 95%CL (1 toyMC)
   68% expected band : 1.12451 < r < 1.12451
   95% expected band : 1.12451 < r < 1.12451
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -34416060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.869855 +/- 0.00363098 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.869855 @ 95%CL (1 toyMC)
median expected limit: r < 0.869855 @ 95%CL (1 toyMC)
   68% expected band : 0.869855 < r < 0.869855
   95% expected band : 0.869855 < r < 0.869855
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1911998225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25145 +/- 0.00322043 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.25145 @ 95%CL (1 toyMC)
median expected limit: r < 1.25145 @ 95%CL (1 toyMC)
   68% expected band : 1.25145 < r < 1.25145
   95% expected band : 1.25145 < r < 1.25145
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1295718121
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10845 +/- 0.00367672 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.10845 @ 95%CL (1 toyMC)
median expected limit: r < 1.10845 @ 95%CL (1 toyMC)
   68% expected band : 1.10845 < r < 1.10845
   95% expected band : 1.10845 < r < 1.10845
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1772277754
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66014 +/- 0.00473276 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.66014 @ 95%CL (1 toyMC)
median expected limit: r < 1.66014 @ 95%CL (1 toyMC)
   68% expected band : 1.66014 < r < 1.66014
   95% expected band : 1.66014 < r < 1.66014
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 868051270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42884 +/- 0.00339848 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.42884 @ 95%CL (1 toyMC)
median expected limit: r < 1.42884 @ 95%CL (1 toyMC)
   68% expected band : 1.42884 < r < 1.42884
   95% expected band : 1.42884 < r < 1.42884
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 289513047
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13895 +/- 0.00321083 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.13895 @ 95%CL (1 toyMC)
median expected limit: r < 1.13895 @ 95%CL (1 toyMC)
   68% expected band : 1.13895 < r < 1.13895
   95% expected band : 1.13895 < r < 1.13895
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -448523576
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07638 +/- 0.0027687 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.07638 @ 95%CL (1 toyMC)
median expected limit: r < 1.07638 @ 95%CL (1 toyMC)
   68% expected band : 1.07638 < r < 1.07638
   95% expected band : 1.07638 < r < 1.07638
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1043012194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45633 +/- 0.00343999 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.45633 @ 95%CL (1 toyMC)
median expected limit: r < 1.45633 @ 95%CL (1 toyMC)
   68% expected band : 1.45633 < r < 1.45633
   95% expected band : 1.45633 < r < 1.45633
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1988529084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20585 +/- 0.0038131 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.20585 @ 95%CL (1 toyMC)
median expected limit: r < 1.20585 @ 95%CL (1 toyMC)
   68% expected band : 1.20585 < r < 1.20585
   95% expected band : 1.20585 < r < 1.20585
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -703201424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.777157 +/- 0.00399436 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 0.777157 @ 95%CL (1 toyMC)
median expected limit: r < 0.777157 @ 95%CL (1 toyMC)
   68% expected band : 0.777157 < r < 0.777157
   95% expected band : 0.777157 < r < 0.777157
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -57574311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29752 +/- 0.00432556 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.29752 @ 95%CL (1 toyMC)
median expected limit: r < 1.29752 @ 95%CL (1 toyMC)
   68% expected band : 1.29752 < r < 1.29752
   95% expected band : 1.29752 < r < 1.29752
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1633907424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11743 +/- 0.00341947 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.11743 @ 95%CL (1 toyMC)
median expected limit: r < 1.11743 @ 95%CL (1 toyMC)
   68% expected band : 1.11743 < r < 1.11743
   95% expected band : 1.11743 < r < 1.11743
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -355432255
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.72534 +/- 0.00346622 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.72534 @ 95%CL (1 toyMC)
median expected limit: r < 0.72534 @ 95%CL (1 toyMC)
   68% expected band : 0.72534 < r < 0.72534
   95% expected band : 0.72534 < r < 0.72534
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -809358971
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79413 +/- 0.00376047 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.79413 @ 95%CL (1 toyMC)
median expected limit: r < 1.79413 @ 95%CL (1 toyMC)
   68% expected band : 1.79413 < r < 1.79413
   95% expected band : 1.79413 < r < 1.79413
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1977554355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.958787 +/- 0.00379124 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 0.958787 @ 95%CL (1 toyMC)
median expected limit: r < 0.958787 @ 95%CL (1 toyMC)
   68% expected band : 0.958787 < r < 0.958787
   95% expected band : 0.958787 < r < 0.958787
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -925533785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26224 +/- 0.00306426 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.26224 @ 95%CL (1 toyMC)
median expected limit: r < 1.26224 @ 95%CL (1 toyMC)
   68% expected band : 1.26224 < r < 1.26224
   95% expected band : 1.26224 < r < 1.26224
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -701667377
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.927251 +/- 0.00345574 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.927251 @ 95%CL (1 toyMC)
median expected limit: r < 0.927251 @ 95%CL (1 toyMC)
   68% expected band : 0.927251 < r < 0.927251
   95% expected band : 0.927251 < r < 0.927251
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1651420125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.715234 +/- 0.00393213 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.715234 @ 95%CL (1 toyMC)
median expected limit: r < 0.715234 @ 95%CL (1 toyMC)
   68% expected band : 0.715234 < r < 0.715234
   95% expected band : 0.715234 < r < 0.715234
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -8802711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.27736 +/- 0.00351819 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.27736 @ 95%CL (1 toyMC)
median expected limit: r < 1.27736 @ 95%CL (1 toyMC)
   68% expected band : 1.27736 < r < 1.27736
   95% expected band : 1.27736 < r < 1.27736
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -793869492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35948 +/- 0.00435873 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.35948 @ 95%CL (1 toyMC)
median expected limit: r < 1.35948 @ 95%CL (1 toyMC)
   68% expected band : 1.35948 < r < 1.35948
   95% expected band : 1.35948 < r < 1.35948
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -584546173
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07272 +/- 0.0034312 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.07272 @ 95%CL (1 toyMC)
median expected limit: r < 1.07272 @ 95%CL (1 toyMC)
   68% expected band : 1.07272 < r < 1.07272
   95% expected band : 1.07272 < r < 1.07272
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1378268631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.824722 +/- 0.00376953 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.824722 @ 95%CL (1 toyMC)
median expected limit: r < 0.824722 @ 95%CL (1 toyMC)
   68% expected band : 0.824722 < r < 0.824722
   95% expected band : 0.824722 < r < 0.824722
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -450353621
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37964 +/- 0.00393755 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.37964 @ 95%CL (1 toyMC)
median expected limit: r < 1.37964 @ 95%CL (1 toyMC)
   68% expected band : 1.37964 < r < 1.37964
   95% expected band : 1.37964 < r < 1.37964
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -899666499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33117 +/- 0.00358594 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.33117 @ 95%CL (1 toyMC)
median expected limit: r < 1.33117 @ 95%CL (1 toyMC)
   68% expected band : 1.33117 < r < 1.33117
   95% expected band : 1.33117 < r < 1.33117
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 152778441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05043 +/- 0.00392428 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.05043 @ 95%CL (1 toyMC)
median expected limit: r < 1.05043 @ 95%CL (1 toyMC)
   68% expected band : 1.05043 < r < 1.05043
   95% expected band : 1.05043 < r < 1.05043
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 129039855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28101 +/- 0.00345969 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.28101 @ 95%CL (1 toyMC)
median expected limit: r < 1.28101 @ 95%CL (1 toyMC)
   68% expected band : 1.28101 < r < 1.28101
   95% expected band : 1.28101 < r < 1.28101
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1103435362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06686 +/- 0.00338977 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.06686 @ 95%CL (1 toyMC)
median expected limit: r < 1.06686 @ 95%CL (1 toyMC)
   68% expected band : 1.06686 < r < 1.06686
   95% expected band : 1.06686 < r < 1.06686
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -468233758
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67873 +/- 0.00351761 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.67873 @ 95%CL (1 toyMC)
median expected limit: r < 1.67873 @ 95%CL (1 toyMC)
   68% expected band : 1.67873 < r < 1.67873
   95% expected band : 1.67873 < r < 1.67873
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2027525208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71061 +/- 0.0033955 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.71061 @ 95%CL (1 toyMC)
median expected limit: r < 1.71061 @ 95%CL (1 toyMC)
   68% expected band : 1.71061 < r < 1.71061
   95% expected band : 1.71061 < r < 1.71061
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1867581597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.75908 +/- 0.002617 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.75908 @ 95%CL (1 toyMC)
median expected limit: r < 1.75908 @ 95%CL (1 toyMC)
   68% expected band : 1.75908 < r < 1.75908
   95% expected band : 1.75908 < r < 1.75908
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 451532661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11416 +/- 0.00306822 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.11416 @ 95%CL (1 toyMC)
median expected limit: r < 1.11416 @ 95%CL (1 toyMC)
   68% expected band : 1.11416 < r < 1.11416
   95% expected band : 1.11416 < r < 1.11416
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -774653963
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.72447 +/- 0.00408995 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.72447 @ 95%CL (1 toyMC)
median expected limit: r < 1.72447 @ 95%CL (1 toyMC)
   68% expected band : 1.72447 < r < 1.72447
   95% expected band : 1.72447 < r < 1.72447
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine28.MarkovChainMC.mH28.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH28.-1030206508.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH28.-1043012194.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH28.-1163606538.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH28.-12185069.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH28.-127152947.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH28.-1295718121.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH28.-1378268631.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH28.-1400689136.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH28.-1497931433.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH28.-1503267275.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH28.-1633907424.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH28.-1651420125.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH28.-167542945.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH28.-1682113879.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH28.-1690510583.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH28.-1812350640.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH28.-1820400235.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH28.-1930908519.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH28.-1988529084.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH28.-2038007223.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH28.-2066027117.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH28.-2103429199.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH28.-2128788868.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH28.-34416060.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH28.-349455917.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH28.-355432255.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH28.-390656051.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH28.-448523576.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH28.-450353621.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH28.-468233758.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH28.-57574311.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH28.-584546173.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH28.-61026995.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH28.-625011423.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH28.-640739633.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH28.-665682399.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH28.-668902843.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH28.-701667377.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH28.-703201424.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH28.-774653963.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH28.-793869492.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH28.-809358971.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH28.-837132136.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH28.-840249570.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH28.-86757002.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH28.-875146046.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH28.-8802711.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH28.-899666499.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH28.-924866850.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH28.-925533785.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH28.-929965669.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH28.-966546340.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH28.1058671615.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH28.1076336788.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH28.1103435362.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH28.1120301522.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH28.129039855.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH28.1368945689.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH28.1438047688.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH28.1447897049.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH28.145046258.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH28.152778441.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH28.1709962978.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH28.1712110205.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH28.1716888188.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH28.1772277754.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH28.1784434352.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH28.1787370689.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH28.184377817.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH28.1855232969.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH28.1867581597.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH28.1884118566.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH28.1901613113.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH28.1911998225.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH28.1938616498.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH28.1973086253.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH28.1977554355.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH28.2023534564.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH28.2027525208.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH28.2097878670.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH28.2126440410.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH28.2128238364.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH28.289513047.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH28.296826249.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH28.340196373.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH28.427531369.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH28.451532661.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH28.492502520.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH28.517738096.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH28.559991073.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH28.568225820.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH28.582647017.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH28.611952978.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH28.723000424.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH28.784877291.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH28.802383112.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH28.825306411.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH28.858707159.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH28.868051270.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH28.896048696.root
hadd Target path: higgsCombine28.MarkovChainMC.mH28.root:/
hadd Target path: higgsCombine28.MarkovChainMC.mH28.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2124817715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.791141 +/- 0.00367656 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.791141 @ 95%CL (1 toyMC)
median expected limit: r < 0.791141 @ 95%CL (1 toyMC)
   68% expected band : 0.791141 < r < 0.791141
   95% expected band : 0.791141 < r < 0.791141
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1986364414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.28129 +/- 0.00381761 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.28129 @ 95%CL (1 toyMC)
median expected limit: r < 2.28129 @ 95%CL (1 toyMC)
   68% expected band : 2.28129 < r < 2.28129
   95% expected band : 2.28129 < r < 2.28129
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -319303263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43062 +/- 0.00334752 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.43062 @ 95%CL (1 toyMC)
median expected limit: r < 1.43062 @ 95%CL (1 toyMC)
   68% expected band : 1.43062 < r < 1.43062
   95% expected band : 1.43062 < r < 1.43062
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -666819563
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26955 +/- 0.00383461 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.26955 @ 95%CL (1 toyMC)
median expected limit: r < 1.26955 @ 95%CL (1 toyMC)
   68% expected band : 1.26955 < r < 1.26955
   95% expected band : 1.26955 < r < 1.26955
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -155353868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.929865 +/- 0.00322523 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.929865 @ 95%CL (1 toyMC)
median expected limit: r < 0.929865 @ 95%CL (1 toyMC)
   68% expected band : 0.929865 < r < 0.929865
   95% expected band : 0.929865 < r < 0.929865
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1994274363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.65791 +/- 0.00460145 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.65791 @ 95%CL (1 toyMC)
median expected limit: r < 3.65791 @ 95%CL (1 toyMC)
   68% expected band : 3.65791 < r < 3.65791
   95% expected band : 3.65791 < r < 3.65791
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1914933258
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44565 +/- 0.00393405 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.44565 @ 95%CL (1 toyMC)
median expected limit: r < 2.44565 @ 95%CL (1 toyMC)
   68% expected band : 2.44565 < r < 2.44565
   95% expected band : 2.44565 < r < 2.44565
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -825165836
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25522 +/- 0.0040645 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.25522 @ 95%CL (1 toyMC)
median expected limit: r < 1.25522 @ 95%CL (1 toyMC)
   68% expected band : 1.25522 < r < 1.25522
   95% expected band : 1.25522 < r < 1.25522
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 355366386
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71986 +/- 0.00360676 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.71986 @ 95%CL (1 toyMC)
median expected limit: r < 1.71986 @ 95%CL (1 toyMC)
   68% expected band : 1.71986 < r < 1.71986
   95% expected band : 1.71986 < r < 1.71986
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 171436397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91263 +/- 0.00353828 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.91263 @ 95%CL (1 toyMC)
median expected limit: r < 1.91263 @ 95%CL (1 toyMC)
   68% expected band : 1.91263 < r < 1.91263
   95% expected band : 1.91263 < r < 1.91263
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1596467304
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10508 +/- 0.00453442 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.10508 @ 95%CL (1 toyMC)
median expected limit: r < 1.10508 @ 95%CL (1 toyMC)
   68% expected band : 1.10508 < r < 1.10508
   95% expected band : 1.10508 < r < 1.10508
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -432367167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.83656 +/- 0.00371144 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.83656 @ 95%CL (1 toyMC)
median expected limit: r < 0.83656 @ 95%CL (1 toyMC)
   68% expected band : 0.83656 < r < 0.83656
   95% expected band : 0.83656 < r < 0.83656
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1052958855
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09966 +/- 0.00372975 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.09966 @ 95%CL (1 toyMC)
median expected limit: r < 1.09966 @ 95%CL (1 toyMC)
   68% expected band : 1.09966 < r < 1.09966
   95% expected band : 1.09966 < r < 1.09966
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1164423782
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89616 +/- 0.00457082 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.89616 @ 95%CL (1 toyMC)
median expected limit: r < 1.89616 @ 95%CL (1 toyMC)
   68% expected band : 1.89616 < r < 1.89616
   95% expected band : 1.89616 < r < 1.89616
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1683655436
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68276 +/- 0.00351784 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.68276 @ 95%CL (1 toyMC)
median expected limit: r < 1.68276 @ 95%CL (1 toyMC)
   68% expected band : 1.68276 < r < 1.68276
   95% expected band : 1.68276 < r < 1.68276
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -636826374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83082 +/- 0.00539376 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.83082 @ 95%CL (1 toyMC)
median expected limit: r < 1.83082 @ 95%CL (1 toyMC)
   68% expected band : 1.83082 < r < 1.83082
   95% expected band : 1.83082 < r < 1.83082
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1703053781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07411 +/- 0.00358359 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.07411 @ 95%CL (1 toyMC)
median expected limit: r < 1.07411 @ 95%CL (1 toyMC)
   68% expected band : 1.07411 < r < 1.07411
   95% expected band : 1.07411 < r < 1.07411
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -642681394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15615 +/- 0.00428975 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.15615 @ 95%CL (1 toyMC)
median expected limit: r < 1.15615 @ 95%CL (1 toyMC)
   68% expected band : 1.15615 < r < 1.15615
   95% expected band : 1.15615 < r < 1.15615
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 169699675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46588 +/- 0.00340252 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.46588 @ 95%CL (1 toyMC)
median expected limit: r < 1.46588 @ 95%CL (1 toyMC)
   68% expected band : 1.46588 < r < 1.46588
   95% expected band : 1.46588 < r < 1.46588
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2098859060
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46657 +/- 0.00436219 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.46657 @ 95%CL (1 toyMC)
median expected limit: r < 1.46657 @ 95%CL (1 toyMC)
   68% expected band : 1.46657 < r < 1.46657
   95% expected band : 1.46657 < r < 1.46657
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 288842271
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.29262 +/- 0.00368145 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.29262 @ 95%CL (1 toyMC)
median expected limit: r < 1.29262 @ 95%CL (1 toyMC)
   68% expected band : 1.29262 < r < 1.29262
   95% expected band : 1.29262 < r < 1.29262
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -845484240
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18336 +/- 0.00407927 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.18336 @ 95%CL (1 toyMC)
median expected limit: r < 2.18336 @ 95%CL (1 toyMC)
   68% expected band : 2.18336 < r < 2.18336
   95% expected band : 2.18336 < r < 2.18336
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2106251157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65658 +/- 0.00436137 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.65658 @ 95%CL (1 toyMC)
median expected limit: r < 1.65658 @ 95%CL (1 toyMC)
   68% expected band : 1.65658 < r < 1.65658
   95% expected band : 1.65658 < r < 1.65658
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1033944840
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.779141 +/- 0.00354749 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.779141 @ 95%CL (1 toyMC)
median expected limit: r < 0.779141 @ 95%CL (1 toyMC)
   68% expected band : 0.779141 < r < 0.779141
   95% expected band : 0.779141 < r < 0.779141
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1006037973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0761 +/- 0.00340464 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.0761 @ 95%CL (1 toyMC)
median expected limit: r < 1.0761 @ 95%CL (1 toyMC)
   68% expected band : 1.0761 < r < 1.0761
   95% expected band : 1.0761 < r < 1.0761
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 346939434
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.38348 +/- 0.0033845 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.38348 @ 95%CL (1 toyMC)
median expected limit: r < 1.38348 @ 95%CL (1 toyMC)
   68% expected band : 1.38348 < r < 1.38348
   95% expected band : 1.38348 < r < 1.38348
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2007806868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02183 +/- 0.00352652 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.02183 @ 95%CL (1 toyMC)
median expected limit: r < 1.02183 @ 95%CL (1 toyMC)
   68% expected band : 1.02183 < r < 1.02183
   95% expected band : 1.02183 < r < 1.02183
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1138428267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80614 +/- 0.00469362 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.80614 @ 95%CL (1 toyMC)
median expected limit: r < 1.80614 @ 95%CL (1 toyMC)
   68% expected band : 1.80614 < r < 1.80614
   95% expected band : 1.80614 < r < 1.80614
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -193847175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0229 +/- 0.00386153 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.0229 @ 95%CL (1 toyMC)
median expected limit: r < 2.0229 @ 95%CL (1 toyMC)
   68% expected band : 2.0229 < r < 2.0229
   95% expected band : 2.0229 < r < 2.0229
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1248497205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0564 +/- 0.00297789 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.0564 @ 95%CL (1 toyMC)
median expected limit: r < 1.0564 @ 95%CL (1 toyMC)
   68% expected band : 1.0564 < r < 1.0564
   95% expected band : 1.0564 < r < 1.0564
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1380052716
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58527 +/- 0.00426053 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.58527 @ 95%CL (1 toyMC)
median expected limit: r < 1.58527 @ 95%CL (1 toyMC)
   68% expected band : 1.58527 < r < 1.58527
   95% expected band : 1.58527 < r < 1.58527
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -300596808
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60397 +/- 0.00481078 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.60397 @ 95%CL (1 toyMC)
median expected limit: r < 1.60397 @ 95%CL (1 toyMC)
   68% expected band : 1.60397 < r < 1.60397
   95% expected band : 1.60397 < r < 1.60397
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2135425236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.57465 +/- 0.0050168 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.57465 @ 95%CL (1 toyMC)
median expected limit: r < 2.57465 @ 95%CL (1 toyMC)
   68% expected band : 2.57465 < r < 2.57465
   95% expected band : 2.57465 < r < 2.57465
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1804072331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10945 +/- 0.00400081 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.10945 @ 95%CL (1 toyMC)
median expected limit: r < 1.10945 @ 95%CL (1 toyMC)
   68% expected band : 1.10945 < r < 1.10945
   95% expected band : 1.10945 < r < 1.10945
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -516904226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.87534 +/- 0.00342454 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.87534 @ 95%CL (1 toyMC)
median expected limit: r < 0.87534 @ 95%CL (1 toyMC)
   68% expected band : 0.87534 < r < 0.87534
   95% expected band : 0.87534 < r < 0.87534
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -626201406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22653 +/- 0.00452785 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.22653 @ 95%CL (1 toyMC)
median expected limit: r < 1.22653 @ 95%CL (1 toyMC)
   68% expected band : 1.22653 < r < 1.22653
   95% expected band : 1.22653 < r < 1.22653
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1642158402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33553 +/- 0.0035596 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.33553 @ 95%CL (1 toyMC)
median expected limit: r < 1.33553 @ 95%CL (1 toyMC)
   68% expected band : 1.33553 < r < 1.33553
   95% expected band : 1.33553 < r < 1.33553
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -812509562
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20425 +/- 0.00453591 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.20425 @ 95%CL (1 toyMC)
median expected limit: r < 1.20425 @ 95%CL (1 toyMC)
   68% expected band : 1.20425 < r < 1.20425
   95% expected band : 1.20425 < r < 1.20425
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 770358991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.782317 +/- 0.00364008 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.782317 @ 95%CL (1 toyMC)
median expected limit: r < 0.782317 @ 95%CL (1 toyMC)
   68% expected band : 0.782317 < r < 0.782317
   95% expected band : 0.782317 < r < 0.782317
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -314139225
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09477 +/- 0.00406578 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.09477 @ 95%CL (1 toyMC)
median expected limit: r < 1.09477 @ 95%CL (1 toyMC)
   68% expected band : 1.09477 < r < 1.09477
   95% expected band : 1.09477 < r < 1.09477
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1709515804
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34531 +/- 0.00301463 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.34531 @ 95%CL (1 toyMC)
median expected limit: r < 1.34531 @ 95%CL (1 toyMC)
   68% expected band : 1.34531 < r < 1.34531
   95% expected band : 1.34531 < r < 1.34531
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2126317196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33727 +/- 0.00368036 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.33727 @ 95%CL (1 toyMC)
median expected limit: r < 1.33727 @ 95%CL (1 toyMC)
   68% expected band : 1.33727 < r < 1.33727
   95% expected band : 1.33727 < r < 1.33727
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -437746695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.77304 +/- 0.00349012 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.77304 @ 95%CL (1 toyMC)
median expected limit: r < 0.77304 @ 95%CL (1 toyMC)
   68% expected band : 0.77304 < r < 0.77304
   95% expected band : 0.77304 < r < 0.77304
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1773054414
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12412 +/- 0.00413055 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.12412 @ 95%CL (1 toyMC)
median expected limit: r < 1.12412 @ 95%CL (1 toyMC)
   68% expected band : 1.12412 < r < 1.12412
   95% expected band : 1.12412 < r < 1.12412
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 229710749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.923036 +/- 0.00312044 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.923036 @ 95%CL (1 toyMC)
median expected limit: r < 0.923036 @ 95%CL (1 toyMC)
   68% expected band : 0.923036 < r < 0.923036
   95% expected band : 0.923036 < r < 0.923036
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1617187321
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16689 +/- 0.00335624 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.16689 @ 95%CL (1 toyMC)
median expected limit: r < 1.16689 @ 95%CL (1 toyMC)
   68% expected band : 1.16689 < r < 1.16689
   95% expected band : 1.16689 < r < 1.16689
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 488479790
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52196 +/- 0.00427711 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.52196 @ 95%CL (1 toyMC)
median expected limit: r < 2.52196 @ 95%CL (1 toyMC)
   68% expected band : 2.52196 < r < 2.52196
   95% expected band : 2.52196 < r < 2.52196
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 748786212
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57232 +/- 0.00341521 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.57232 @ 95%CL (1 toyMC)
median expected limit: r < 1.57232 @ 95%CL (1 toyMC)
   68% expected band : 1.57232 < r < 1.57232
   95% expected band : 1.57232 < r < 1.57232
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 944766834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96744 +/- 0.00443077 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.96744 @ 95%CL (1 toyMC)
median expected limit: r < 1.96744 @ 95%CL (1 toyMC)
   68% expected band : 1.96744 < r < 1.96744
   95% expected band : 1.96744 < r < 1.96744
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1353081200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.431 +/- 0.00473126 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.431 @ 95%CL (1 toyMC)
median expected limit: r < 1.431 @ 95%CL (1 toyMC)
   68% expected band : 1.431 < r < 1.431
   95% expected band : 1.431 < r < 1.431
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1485027450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37941 +/- 0.00375338 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.37941 @ 95%CL (1 toyMC)
median expected limit: r < 1.37941 @ 95%CL (1 toyMC)
   68% expected band : 1.37941 < r < 1.37941
   95% expected band : 1.37941 < r < 1.37941
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 268436823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14515 +/- 0.00377043 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.14515 @ 95%CL (1 toyMC)
median expected limit: r < 1.14515 @ 95%CL (1 toyMC)
   68% expected band : 1.14515 < r < 1.14515
   95% expected band : 1.14515 < r < 1.14515
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2092923347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.895202 +/- 0.00356599 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.895202 @ 95%CL (1 toyMC)
median expected limit: r < 0.895202 @ 95%CL (1 toyMC)
   68% expected band : 0.895202 < r < 0.895202
   95% expected band : 0.895202 < r < 0.895202
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1911223160
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.924186 +/- 0.00342187 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.924186 @ 95%CL (1 toyMC)
median expected limit: r < 0.924186 @ 95%CL (1 toyMC)
   68% expected band : 0.924186 < r < 0.924186
   95% expected band : 0.924186 < r < 0.924186
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2131267727
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2325 +/- 0.00352189 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.2325 @ 95%CL (1 toyMC)
median expected limit: r < 1.2325 @ 95%CL (1 toyMC)
   68% expected band : 1.2325 < r < 1.2325
   95% expected band : 1.2325 < r < 1.2325
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 390843933
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12489 +/- 0.00375641 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.12489 @ 95%CL (1 toyMC)
median expected limit: r < 1.12489 @ 95%CL (1 toyMC)
   68% expected band : 1.12489 < r < 1.12489
   95% expected band : 1.12489 < r < 1.12489
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 734682284
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.772121 +/- 0.0033079 @ 95% CL (100 tries)
Done in 0.27 min (cpu), 0.27 min (real)
mean   expected limit: r < 0.772121 @ 95%CL (1 toyMC)
median expected limit: r < 0.772121 @ 95%CL (1 toyMC)
   68% expected band : 0.772121 < r < 0.772121
   95% expected band : 0.772121 < r < 0.772121
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 92948332
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.987657 +/- 0.00338391 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.987657 @ 95%CL (1 toyMC)
median expected limit: r < 0.987657 @ 95%CL (1 toyMC)
   68% expected band : 0.987657 < r < 0.987657
   95% expected band : 0.987657 < r < 0.987657
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1789625062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34227 +/- 0.00578726 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.34227 @ 95%CL (1 toyMC)
median expected limit: r < 2.34227 @ 95%CL (1 toyMC)
   68% expected band : 2.34227 < r < 2.34227
   95% expected band : 2.34227 < r < 2.34227
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 178382839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12701 +/- 0.00420908 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.12701 @ 95%CL (1 toyMC)
median expected limit: r < 1.12701 @ 95%CL (1 toyMC)
   68% expected band : 1.12701 < r < 1.12701
   95% expected band : 1.12701 < r < 1.12701
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1890509503
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39613 +/- 0.00425735 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.39613 @ 95%CL (1 toyMC)
median expected limit: r < 1.39613 @ 95%CL (1 toyMC)
   68% expected band : 1.39613 < r < 1.39613
   95% expected band : 1.39613 < r < 1.39613
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1732598238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68287 +/- 0.00415734 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.68287 @ 95%CL (1 toyMC)
median expected limit: r < 1.68287 @ 95%CL (1 toyMC)
   68% expected band : 1.68287 < r < 1.68287
   95% expected band : 1.68287 < r < 1.68287
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1845987703
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47643 +/- 0.00380685 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.47643 @ 95%CL (1 toyMC)
median expected limit: r < 1.47643 @ 95%CL (1 toyMC)
   68% expected band : 1.47643 < r < 1.47643
   95% expected band : 1.47643 < r < 1.47643
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 124998026
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19784 +/- 0.00428432 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.19784 @ 95%CL (1 toyMC)
median expected limit: r < 1.19784 @ 95%CL (1 toyMC)
   68% expected band : 1.19784 < r < 1.19784
   95% expected band : 1.19784 < r < 1.19784
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1465048485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86113 +/- 0.00459598 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.86113 @ 95%CL (1 toyMC)
median expected limit: r < 1.86113 @ 95%CL (1 toyMC)
   68% expected band : 1.86113 < r < 1.86113
   95% expected band : 1.86113 < r < 1.86113
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1329516869
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.801783 +/- 0.0031497 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.801783 @ 95%CL (1 toyMC)
median expected limit: r < 0.801783 @ 95%CL (1 toyMC)
   68% expected band : 0.801783 < r < 0.801783
   95% expected band : 0.801783 < r < 0.801783
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 688671163
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.792482 +/- 0.00274089 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.792482 @ 95%CL (1 toyMC)
median expected limit: r < 0.792482 @ 95%CL (1 toyMC)
   68% expected band : 0.792482 < r < 0.792482
   95% expected band : 0.792482 < r < 0.792482
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1385579185
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.992096 +/- 0.00401109 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.992096 @ 95%CL (1 toyMC)
median expected limit: r < 0.992096 @ 95%CL (1 toyMC)
   68% expected band : 0.992096 < r < 0.992096
   95% expected band : 0.992096 < r < 0.992096
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1764953438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11155 +/- 0.00398351 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.11155 @ 95%CL (1 toyMC)
median expected limit: r < 1.11155 @ 95%CL (1 toyMC)
   68% expected band : 1.11155 < r < 1.11155
   95% expected band : 1.11155 < r < 1.11155
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1386520907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08403 +/- 0.00371137 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.08403 @ 95%CL (1 toyMC)
median expected limit: r < 1.08403 @ 95%CL (1 toyMC)
   68% expected band : 1.08403 < r < 1.08403
   95% expected band : 1.08403 < r < 1.08403
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 65821166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83074 +/- 0.0039465 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.83074 @ 95%CL (1 toyMC)
median expected limit: r < 1.83074 @ 95%CL (1 toyMC)
   68% expected band : 1.83074 < r < 1.83074
   95% expected band : 1.83074 < r < 1.83074
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 838934707
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0423 +/- 0.00349712 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.0423 @ 95%CL (1 toyMC)
median expected limit: r < 1.0423 @ 95%CL (1 toyMC)
   68% expected band : 1.0423 < r < 1.0423
   95% expected band : 1.0423 < r < 1.0423
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 706510933
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21578 +/- 0.00381561 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.21578 @ 95%CL (1 toyMC)
median expected limit: r < 1.21578 @ 95%CL (1 toyMC)
   68% expected band : 1.21578 < r < 1.21578
   95% expected band : 1.21578 < r < 1.21578
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1972326231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.940778 +/- 0.00410892 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 0.940778 @ 95%CL (1 toyMC)
median expected limit: r < 0.940778 @ 95%CL (1 toyMC)
   68% expected band : 0.940778 < r < 0.940778
   95% expected band : 0.940778 < r < 0.940778
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2039638662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.791294 +/- 0.00324792 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.791294 @ 95%CL (1 toyMC)
median expected limit: r < 0.791294 @ 95%CL (1 toyMC)
   68% expected band : 0.791294 < r < 0.791294
   95% expected band : 0.791294 < r < 0.791294
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1062097955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16037 +/- 0.00409481 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.16037 @ 95%CL (1 toyMC)
median expected limit: r < 1.16037 @ 95%CL (1 toyMC)
   68% expected band : 1.16037 < r < 1.16037
   95% expected band : 1.16037 < r < 1.16037
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -781772625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11687 +/- 0.00482251 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.11687 @ 95%CL (1 toyMC)
median expected limit: r < 1.11687 @ 95%CL (1 toyMC)
   68% expected band : 1.11687 < r < 1.11687
   95% expected band : 1.11687 < r < 1.11687
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -816673183
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71764 +/- 0.00454978 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.71764 @ 95%CL (1 toyMC)
median expected limit: r < 1.71764 @ 95%CL (1 toyMC)
   68% expected band : 1.71764 < r < 1.71764
   95% expected band : 1.71764 < r < 1.71764
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1954588745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4349 +/- 0.00368183 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.4349 @ 95%CL (1 toyMC)
median expected limit: r < 1.4349 @ 95%CL (1 toyMC)
   68% expected band : 1.4349 < r < 1.4349
   95% expected band : 1.4349 < r < 1.4349
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1831590294
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33373 +/- 0.00403646 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.33373 @ 95%CL (1 toyMC)
median expected limit: r < 1.33373 @ 95%CL (1 toyMC)
   68% expected band : 1.33373 < r < 1.33373
   95% expected band : 1.33373 < r < 1.33373
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2003728892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59138 +/- 0.00483567 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.59138 @ 95%CL (1 toyMC)
median expected limit: r < 1.59138 @ 95%CL (1 toyMC)
   68% expected band : 1.59138 < r < 1.59138
   95% expected band : 1.59138 < r < 1.59138
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -303581573
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37911 +/- 0.00428583 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.37911 @ 95%CL (1 toyMC)
median expected limit: r < 1.37911 @ 95%CL (1 toyMC)
   68% expected band : 1.37911 < r < 1.37911
   95% expected band : 1.37911 < r < 1.37911
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1058097895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58277 +/- 0.00455256 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.58277 @ 95%CL (1 toyMC)
median expected limit: r < 1.58277 @ 95%CL (1 toyMC)
   68% expected band : 1.58277 < r < 1.58277
   95% expected band : 1.58277 < r < 1.58277
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -424846482
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.97252 +/- 0.00487002 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.97252 @ 95%CL (1 toyMC)
median expected limit: r < 2.97252 @ 95%CL (1 toyMC)
   68% expected band : 2.97252 < r < 2.97252
   95% expected band : 2.97252 < r < 2.97252
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1654025897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89251 +/- 0.00472864 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.89251 @ 95%CL (1 toyMC)
median expected limit: r < 2.89251 @ 95%CL (1 toyMC)
   68% expected band : 2.89251 < r < 2.89251
   95% expected band : 2.89251 < r < 2.89251
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1818140695
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03979 +/- 0.00438665 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 1.03979 @ 95%CL (1 toyMC)
median expected limit: r < 1.03979 @ 95%CL (1 toyMC)
   68% expected band : 1.03979 < r < 1.03979
   95% expected band : 1.03979 < r < 1.03979
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -6577034
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.965532 +/- 0.00402252 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.965532 @ 95%CL (1 toyMC)
median expected limit: r < 0.965532 @ 95%CL (1 toyMC)
   68% expected band : 0.965532 < r < 0.965532
   95% expected band : 0.965532 < r < 0.965532
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1925209324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.21742 +/- 0.00544923 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.21742 @ 95%CL (1 toyMC)
median expected limit: r < 2.21742 @ 95%CL (1 toyMC)
   68% expected band : 2.21742 < r < 2.21742
   95% expected band : 2.21742 < r < 2.21742
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1607904972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42552 +/- 0.00427641 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.42552 @ 95%CL (1 toyMC)
median expected limit: r < 1.42552 @ 95%CL (1 toyMC)
   68% expected band : 1.42552 < r < 1.42552
   95% expected band : 1.42552 < r < 1.42552
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1159851775
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00599 +/- 0.00394827 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.00599 @ 95%CL (1 toyMC)
median expected limit: r < 2.00599 @ 95%CL (1 toyMC)
   68% expected band : 2.00599 < r < 2.00599
   95% expected band : 2.00599 < r < 2.00599
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -827441229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2883 +/- 0.00358502 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.2883 @ 95%CL (1 toyMC)
median expected limit: r < 1.2883 @ 95%CL (1 toyMC)
   68% expected band : 1.2883 < r < 1.2883
   95% expected band : 1.2883 < r < 1.2883
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2131779213
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89561 +/- 0.00420564 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.89561 @ 95%CL (1 toyMC)
median expected limit: r < 1.89561 @ 95%CL (1 toyMC)
   68% expected band : 1.89561 < r < 1.89561
   95% expected band : 1.89561 < r < 1.89561
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1110183084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04411 +/- 0.00323651 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.04411 @ 95%CL (1 toyMC)
median expected limit: r < 1.04411 @ 95%CL (1 toyMC)
   68% expected band : 1.04411 < r < 1.04411
   95% expected band : 1.04411 < r < 1.04411
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1706220075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34036 +/- 0.00339225 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.34036 @ 95%CL (1 toyMC)
median expected limit: r < 1.34036 @ 95%CL (1 toyMC)
   68% expected band : 1.34036 < r < 1.34036
   95% expected band : 1.34036 < r < 1.34036
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1522015458
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22647 +/- 0.00349836 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.22647 @ 95%CL (1 toyMC)
median expected limit: r < 1.22647 @ 95%CL (1 toyMC)
   68% expected band : 1.22647 < r < 1.22647
   95% expected band : 1.22647 < r < 1.22647
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 358336873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57808 +/- 0.00375438 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.57808 @ 95%CL (1 toyMC)
median expected limit: r < 1.57808 @ 95%CL (1 toyMC)
   68% expected band : 1.57808 < r < 1.57808
   95% expected band : 1.57808 < r < 1.57808
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1082108667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10668 +/- 0.00338558 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.10668 @ 95%CL (1 toyMC)
median expected limit: r < 1.10668 @ 95%CL (1 toyMC)
   68% expected band : 1.10668 < r < 1.10668
   95% expected band : 1.10668 < r < 1.10668
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -172122755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.776581 +/- 0.00321477 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.776581 @ 95%CL (1 toyMC)
median expected limit: r < 0.776581 @ 95%CL (1 toyMC)
   68% expected band : 0.776581 < r < 0.776581
   95% expected band : 0.776581 < r < 0.776581
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1424045845
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.772705 +/- 0.00316027 @ 95% CL (100 tries)
Done in 0.28 min (cpu), 0.28 min (real)
mean   expected limit: r < 0.772705 @ 95%CL (1 toyMC)
median expected limit: r < 0.772705 @ 95%CL (1 toyMC)
   68% expected band : 0.772705 < r < 0.772705
   95% expected band : 0.772705 < r < 0.772705
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1994011970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73292 +/- 0.00344028 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.73292 @ 95%CL (1 toyMC)
median expected limit: r < 1.73292 @ 95%CL (1 toyMC)
   68% expected band : 1.73292 < r < 1.73292
   95% expected band : 1.73292 < r < 1.73292
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine32.MarkovChainMC.mH32.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH32.-1052958855.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH32.-1082108667.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH32.-1110183084.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH32.-1159851775.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH32.-1164423782.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH32.-1353081200.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH32.-1380052716.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH32.-1424045845.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH32.-1465048485.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH32.-155353868.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH32.-1596467304.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH32.-1607904972.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH32.-1617187321.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH32.-1642158402.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH32.-1654025897.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH32.-1709515804.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH32.-172122755.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH32.-1764953438.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH32.-1773054414.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH32.-1789625062.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH32.-1804072331.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH32.-1831590294.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH32.-1845987703.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH32.-1890509503.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH32.-193847175.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH32.-1954588745.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH32.-1986364414.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH32.-2007806868.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH32.-2092923347.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH32.-2126317196.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH32.-2131779213.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH32.-300596808.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH32.-303581573.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH32.-314139225.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH32.-319303263.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH32.-424846482.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH32.-432367167.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH32.-437746695.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH32.-516904226.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH32.-626201406.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH32.-636826374.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH32.-642681394.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH32.-6577034.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH32.-666819563.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH32.-781772625.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH32.-812509562.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH32.-816673183.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH32.-825165836.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH32.-827441229.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH32.-845484240.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH32.1006037973.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH32.1033944840.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH32.1058097895.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH32.1062097955.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH32.1138428267.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH32.1248497205.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH32.124998026.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH32.1329516869.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH32.1385579185.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH32.1386520907.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH32.1485027450.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH32.1522015458.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH32.1683655436.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH32.169699675.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH32.1703053781.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH32.1706220075.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH32.171436397.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH32.1732598238.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH32.178382839.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH32.1818140695.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH32.1911223160.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH32.1914933258.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH32.1925209324.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH32.1972326231.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH32.1994011970.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH32.1994274363.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH32.2003728892.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH32.2039638662.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH32.2098859060.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH32.2106251157.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH32.2124817715.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH32.2131267727.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH32.2135425236.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH32.229710749.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH32.268436823.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH32.288842271.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH32.346939434.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH32.355366386.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH32.358336873.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH32.390843933.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH32.488479790.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH32.65821166.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH32.688671163.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH32.706510933.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH32.734682284.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH32.748786212.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH32.770358991.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH32.838934707.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH32.92948332.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH32.944766834.root
hadd Target path: higgsCombine32.MarkovChainMC.mH32.root:/
hadd Target path: higgsCombine32.MarkovChainMC.mH32.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1674391348
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.70854 +/- 0.00496842 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.70854 @ 95%CL (1 toyMC)
median expected limit: r < 2.70854 @ 95%CL (1 toyMC)
   68% expected band : 2.70854 < r < 2.70854
   95% expected band : 2.70854 < r < 2.70854
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1286580642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34153 +/- 0.00661268 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.34153 @ 95%CL (1 toyMC)
median expected limit: r < 2.34153 @ 95%CL (1 toyMC)
   68% expected band : 2.34153 < r < 2.34153
   95% expected band : 2.34153 < r < 2.34153
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367715314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.65759 +/- 0.00762721 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.65759 @ 95%CL (1 toyMC)
median expected limit: r < 4.65759 @ 95%CL (1 toyMC)
   68% expected band : 4.65759 < r < 4.65759
   95% expected band : 4.65759 < r < 4.65759
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1134328664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.95851 +/- 0.00867112 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 3.95851 @ 95%CL (1 toyMC)
median expected limit: r < 3.95851 @ 95%CL (1 toyMC)
   68% expected band : 3.95851 < r < 3.95851
   95% expected band : 3.95851 < r < 3.95851
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 453960696
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56725 +/- 0.00542058 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.56725 @ 95%CL (1 toyMC)
median expected limit: r < 2.56725 @ 95%CL (1 toyMC)
   68% expected band : 2.56725 < r < 2.56725
   95% expected band : 2.56725 < r < 2.56725
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1962520870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.96946 +/- 0.00663786 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.96946 @ 95%CL (1 toyMC)
median expected limit: r < 2.96946 @ 95%CL (1 toyMC)
   68% expected band : 2.96946 < r < 2.96946
   95% expected band : 2.96946 < r < 2.96946
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2017617606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.51184 +/- 0.00858082 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.51184 @ 95%CL (1 toyMC)
median expected limit: r < 4.51184 @ 95%CL (1 toyMC)
   68% expected band : 4.51184 < r < 4.51184
   95% expected band : 4.51184 < r < 4.51184
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2023187613
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.44111 +/- 0.00653341 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.44111 @ 95%CL (1 toyMC)
median expected limit: r < 4.44111 @ 95%CL (1 toyMC)
   68% expected band : 4.44111 < r < 4.44111
   95% expected band : 4.44111 < r < 4.44111
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1371596993
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62999 +/- 0.00712426 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.62999 @ 95%CL (1 toyMC)
median expected limit: r < 2.62999 @ 95%CL (1 toyMC)
   68% expected band : 2.62999 < r < 2.62999
   95% expected band : 2.62999 < r < 2.62999
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 673956265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.49187 +/- 0.00698296 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.49187 @ 95%CL (1 toyMC)
median expected limit: r < 3.49187 @ 95%CL (1 toyMC)
   68% expected band : 3.49187 < r < 3.49187
   95% expected band : 3.49187 < r < 3.49187
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 841666960
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.79056 +/- 0.00500965 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.79056 @ 95%CL (1 toyMC)
median expected limit: r < 2.79056 @ 95%CL (1 toyMC)
   68% expected band : 2.79056 < r < 2.79056
   95% expected band : 2.79056 < r < 2.79056
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 620807143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.93428 +/- 0.00793099 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.93428 @ 95%CL (1 toyMC)
median expected limit: r < 5.93428 @ 95%CL (1 toyMC)
   68% expected band : 5.93428 < r < 5.93428
   95% expected band : 5.93428 < r < 5.93428
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2112869705
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.92592 +/- 0.00751312 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.92592 @ 95%CL (1 toyMC)
median expected limit: r < 2.92592 @ 95%CL (1 toyMC)
   68% expected band : 2.92592 < r < 2.92592
   95% expected band : 2.92592 < r < 2.92592
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1753734767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.15472 +/- 0.00703215 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.15472 @ 95%CL (1 toyMC)
median expected limit: r < 2.15472 @ 95%CL (1 toyMC)
   68% expected band : 2.15472 < r < 2.15472
   95% expected band : 2.15472 < r < 2.15472
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 785429910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51232 +/- 0.00846111 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.51232 @ 95%CL (1 toyMC)
median expected limit: r < 5.51232 @ 95%CL (1 toyMC)
   68% expected band : 5.51232 < r < 5.51232
   95% expected band : 5.51232 < r < 5.51232
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -907652401
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.80357 +/- 0.00462327 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.80357 @ 95%CL (1 toyMC)
median expected limit: r < 3.80357 @ 95%CL (1 toyMC)
   68% expected band : 3.80357 < r < 3.80357
   95% expected band : 3.80357 < r < 3.80357
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1974366530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.27745 +/- 0.00670122 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.27745 @ 95%CL (1 toyMC)
median expected limit: r < 3.27745 @ 95%CL (1 toyMC)
   68% expected band : 3.27745 < r < 3.27745
   95% expected band : 3.27745 < r < 3.27745
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1539380662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.18245 +/- 0.0050371 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.18245 @ 95%CL (1 toyMC)
median expected limit: r < 3.18245 @ 95%CL (1 toyMC)
   68% expected band : 3.18245 < r < 3.18245
   95% expected band : 3.18245 < r < 3.18245
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1342371281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12026 +/- 0.00547244 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.12026 @ 95%CL (1 toyMC)
median expected limit: r < 2.12026 @ 95%CL (1 toyMC)
   68% expected band : 2.12026 < r < 2.12026
   95% expected band : 2.12026 < r < 2.12026
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1995088951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68569 +/- 0.00469304 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.29 min (real)
mean   expected limit: r < 1.68569 @ 95%CL (1 toyMC)
median expected limit: r < 1.68569 @ 95%CL (1 toyMC)
   68% expected band : 1.68569 < r < 1.68569
   95% expected band : 1.68569 < r < 1.68569
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1117576932
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.36164 +/- 0.00650463 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.36164 @ 95%CL (1 toyMC)
median expected limit: r < 3.36164 @ 95%CL (1 toyMC)
   68% expected band : 3.36164 < r < 3.36164
   95% expected band : 3.36164 < r < 3.36164
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -889066075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.76189 +/- 0.00602849 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 3.76189 @ 95%CL (1 toyMC)
median expected limit: r < 3.76189 @ 95%CL (1 toyMC)
   68% expected band : 3.76189 < r < 3.76189
   95% expected band : 3.76189 < r < 3.76189
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 889261532
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.34289 +/- 0.00635684 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.34289 @ 95%CL (1 toyMC)
median expected limit: r < 2.34289 @ 95%CL (1 toyMC)
   68% expected band : 2.34289 < r < 2.34289
   95% expected band : 2.34289 < r < 2.34289
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1526309151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.13727 +/- 0.00757717 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.13727 @ 95%CL (1 toyMC)
median expected limit: r < 4.13727 @ 95%CL (1 toyMC)
   68% expected band : 4.13727 < r < 4.13727
   95% expected band : 4.13727 < r < 4.13727
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1632018750
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.74337 +/- 0.0078855 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 5.74337 @ 95%CL (1 toyMC)
median expected limit: r < 5.74337 @ 95%CL (1 toyMC)
   68% expected band : 5.74337 < r < 5.74337
   95% expected band : 5.74337 < r < 5.74337
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1548804169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.66643 +/- 0.00602803 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 5.66643 @ 95%CL (1 toyMC)
median expected limit: r < 5.66643 @ 95%CL (1 toyMC)
   68% expected band : 5.66643 < r < 5.66643
   95% expected band : 5.66643 < r < 5.66643
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1270900224
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.08578 +/- 0.00610139 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.08578 @ 95%CL (1 toyMC)
median expected limit: r < 4.08578 @ 95%CL (1 toyMC)
   68% expected band : 4.08578 < r < 4.08578
   95% expected band : 4.08578 < r < 4.08578
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -611388333
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.38389 +/- 0.00765848 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.38389 @ 95%CL (1 toyMC)
median expected limit: r < 4.38389 @ 95%CL (1 toyMC)
   68% expected band : 4.38389 < r < 4.38389
   95% expected band : 4.38389 < r < 4.38389
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -56732972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.38579 +/- 0.00719495 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.38579 @ 95%CL (1 toyMC)
median expected limit: r < 3.38579 @ 95%CL (1 toyMC)
   68% expected band : 3.38579 < r < 3.38579
   95% expected band : 3.38579 < r < 3.38579
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1070671689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56818 +/- 0.00576586 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.56818 @ 95%CL (1 toyMC)
median expected limit: r < 2.56818 @ 95%CL (1 toyMC)
   68% expected band : 2.56818 < r < 2.56818
   95% expected band : 2.56818 < r < 2.56818
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1883243238
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.40083 +/- 0.00835677 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 5.40083 @ 95%CL (1 toyMC)
median expected limit: r < 5.40083 @ 95%CL (1 toyMC)
   68% expected band : 5.40083 < r < 5.40083
   95% expected band : 5.40083 < r < 5.40083
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1157199561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3072 +/- 0.00727884 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.3072 @ 95%CL (1 toyMC)
median expected limit: r < 3.3072 @ 95%CL (1 toyMC)
   68% expected band : 3.3072 < r < 3.3072
   95% expected band : 3.3072 < r < 3.3072
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 792400399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56721 +/- 0.00596818 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.56721 @ 95%CL (1 toyMC)
median expected limit: r < 2.56721 @ 95%CL (1 toyMC)
   68% expected band : 2.56721 < r < 2.56721
   95% expected band : 2.56721 < r < 2.56721
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -748896911
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53138 +/- 0.00584557 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.53138 @ 95%CL (1 toyMC)
median expected limit: r < 2.53138 @ 95%CL (1 toyMC)
   68% expected band : 2.53138 < r < 2.53138
   95% expected band : 2.53138 < r < 2.53138
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -907758640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.28562 +/- 0.00573039 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.28562 @ 95%CL (1 toyMC)
median expected limit: r < 3.28562 @ 95%CL (1 toyMC)
   68% expected band : 3.28562 < r < 3.28562
   95% expected band : 3.28562 < r < 3.28562
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 24450408
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.13379 +/- 0.00529352 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.13379 @ 95%CL (1 toyMC)
median expected limit: r < 2.13379 @ 95%CL (1 toyMC)
   68% expected band : 2.13379 < r < 2.13379
   95% expected band : 2.13379 < r < 2.13379
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1469408286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.79421 +/- 0.00667686 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.79421 @ 95%CL (1 toyMC)
median expected limit: r < 3.79421 @ 95%CL (1 toyMC)
   68% expected band : 3.79421 < r < 3.79421
   95% expected band : 3.79421 < r < 3.79421
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1484946344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87674 +/- 0.00634864 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.87674 @ 95%CL (1 toyMC)
median expected limit: r < 2.87674 @ 95%CL (1 toyMC)
   68% expected band : 2.87674 < r < 2.87674
   95% expected band : 2.87674 < r < 2.87674
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1940027715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.96477 +/- 0.00967232 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 5.96477 @ 95%CL (1 toyMC)
median expected limit: r < 5.96477 @ 95%CL (1 toyMC)
   68% expected band : 5.96477 < r < 5.96477
   95% expected band : 5.96477 < r < 5.96477
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1175496148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.31345 +/- 0.00640603 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.31345 @ 95%CL (1 toyMC)
median expected limit: r < 6.31345 @ 95%CL (1 toyMC)
   68% expected band : 6.31345 < r < 6.31345
   95% expected band : 6.31345 < r < 6.31345
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1844989512
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.21293 +/- 0.00759747 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 5.21293 @ 95%CL (1 toyMC)
median expected limit: r < 5.21293 @ 95%CL (1 toyMC)
   68% expected band : 5.21293 < r < 5.21293
   95% expected band : 5.21293 < r < 5.21293
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 659236235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.23046 +/- 0.00624403 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.23046 @ 95%CL (1 toyMC)
median expected limit: r < 4.23046 @ 95%CL (1 toyMC)
   68% expected band : 4.23046 < r < 4.23046
   95% expected band : 4.23046 < r < 4.23046
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -56089916
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.26105 +/- 0.00772053 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.26105 @ 95%CL (1 toyMC)
median expected limit: r < 2.26105 @ 95%CL (1 toyMC)
   68% expected band : 2.26105 < r < 2.26105
   95% expected band : 2.26105 < r < 2.26105
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -443897042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.2957 +/- 0.00666081 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.2957 @ 95%CL (1 toyMC)
median expected limit: r < 3.2957 @ 95%CL (1 toyMC)
   68% expected band : 3.2957 < r < 3.2957
   95% expected band : 3.2957 < r < 3.2957
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1873872100
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.80242 +/- 0.00678995 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 3.80242 @ 95%CL (1 toyMC)
median expected limit: r < 3.80242 @ 95%CL (1 toyMC)
   68% expected band : 3.80242 < r < 3.80242
   95% expected band : 3.80242 < r < 3.80242
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 307799934
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46428 +/- 0.00680897 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.46428 @ 95%CL (1 toyMC)
median expected limit: r < 2.46428 @ 95%CL (1 toyMC)
   68% expected band : 2.46428 < r < 2.46428
   95% expected band : 2.46428 < r < 2.46428
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 814465356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86229 +/- 0.00447169 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.86229 @ 95%CL (1 toyMC)
median expected limit: r < 2.86229 @ 95%CL (1 toyMC)
   68% expected band : 2.86229 < r < 2.86229
   95% expected band : 2.86229 < r < 2.86229
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1414157088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.93457 +/- 0.00663505 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.93457 @ 95%CL (1 toyMC)
median expected limit: r < 2.93457 @ 95%CL (1 toyMC)
   68% expected band : 2.93457 < r < 2.93457
   95% expected band : 2.93457 < r < 2.93457
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2090945829
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.44773 +/- 0.00833095 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 5.44773 @ 95%CL (1 toyMC)
median expected limit: r < 5.44773 @ 95%CL (1 toyMC)
   68% expected band : 5.44773 < r < 5.44773
   95% expected band : 5.44773 < r < 5.44773
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1809849689
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.3266 +/- 0.0107441 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.3266 @ 95%CL (1 toyMC)
median expected limit: r < 4.3266 @ 95%CL (1 toyMC)
   68% expected band : 4.3266 < r < 4.3266
   95% expected band : 4.3266 < r < 4.3266
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 878576125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.80574 +/- 0.00545013 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.80574 @ 95%CL (1 toyMC)
median expected limit: r < 2.80574 @ 95%CL (1 toyMC)
   68% expected band : 2.80574 < r < 2.80574
   95% expected band : 2.80574 < r < 2.80574
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 648178102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.79348 +/- 0.00549723 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.79348 @ 95%CL (1 toyMC)
median expected limit: r < 2.79348 @ 95%CL (1 toyMC)
   68% expected band : 2.79348 < r < 2.79348
   95% expected band : 2.79348 < r < 2.79348
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 267862413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77154 +/- 0.00410319 @ 95% CL (100 tries)
Done in 0.29 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.77154 @ 95%CL (1 toyMC)
median expected limit: r < 1.77154 @ 95%CL (1 toyMC)
   68% expected band : 1.77154 < r < 1.77154
   95% expected band : 1.77154 < r < 1.77154
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 561785330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.78175 +/- 0.00745327 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.78175 @ 95%CL (1 toyMC)
median expected limit: r < 4.78175 @ 95%CL (1 toyMC)
   68% expected band : 4.78175 < r < 4.78175
   95% expected band : 4.78175 < r < 4.78175
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -373995990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.56321 +/- 0.00710106 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.56321 @ 95%CL (1 toyMC)
median expected limit: r < 2.56321 @ 95%CL (1 toyMC)
   68% expected band : 2.56321 < r < 2.56321
   95% expected band : 2.56321 < r < 2.56321
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 652119242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.01791 +/- 0.00792063 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 3.01791 @ 95%CL (1 toyMC)
median expected limit: r < 3.01791 @ 95%CL (1 toyMC)
   68% expected band : 3.01791 < r < 3.01791
   95% expected band : 3.01791 < r < 3.01791
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 778569745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.83504 +/- 0.00789414 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.83504 @ 95%CL (1 toyMC)
median expected limit: r < 3.83504 @ 95%CL (1 toyMC)
   68% expected band : 3.83504 < r < 3.83504
   95% expected band : 3.83504 < r < 3.83504
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2124472388
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53457 +/- 0.00607993 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.53457 @ 95%CL (1 toyMC)
median expected limit: r < 2.53457 @ 95%CL (1 toyMC)
   68% expected band : 2.53457 < r < 2.53457
   95% expected band : 2.53457 < r < 2.53457
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1227070509
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42442 +/- 0.00700551 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.42442 @ 95%CL (1 toyMC)
median expected limit: r < 2.42442 @ 95%CL (1 toyMC)
   68% expected band : 2.42442 < r < 2.42442
   95% expected band : 2.42442 < r < 2.42442
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1722141063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.04941 +/- 0.00580744 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.04941 @ 95%CL (1 toyMC)
median expected limit: r < 3.04941 @ 95%CL (1 toyMC)
   68% expected band : 3.04941 < r < 3.04941
   95% expected band : 3.04941 < r < 3.04941
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1897536215
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.77001 +/- 0.00811 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.77001 @ 95%CL (1 toyMC)
median expected limit: r < 4.77001 @ 95%CL (1 toyMC)
   68% expected band : 4.77001 < r < 4.77001
   95% expected band : 4.77001 < r < 4.77001
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2110981940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.79075 +/- 0.00623937 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.79075 @ 95%CL (1 toyMC)
median expected limit: r < 3.79075 @ 95%CL (1 toyMC)
   68% expected band : 3.79075 < r < 3.79075
   95% expected band : 3.79075 < r < 3.79075
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1240116977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.75483 +/- 0.00773723 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.75483 @ 95%CL (1 toyMC)
median expected limit: r < 6.75483 @ 95%CL (1 toyMC)
   68% expected band : 6.75483 < r < 6.75483
   95% expected band : 6.75483 < r < 6.75483
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 507932174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.26202 +/- 0.00980886 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 7.26202 @ 95%CL (1 toyMC)
median expected limit: r < 7.26202 @ 95%CL (1 toyMC)
   68% expected band : 7.26202 < r < 7.26202
   95% expected band : 7.26202 < r < 7.26202
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -402057440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94693 +/- 0.00588496 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.94693 @ 95%CL (1 toyMC)
median expected limit: r < 1.94693 @ 95%CL (1 toyMC)
   68% expected band : 1.94693 < r < 1.94693
   95% expected band : 1.94693 < r < 1.94693
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1444246775
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.69712 +/- 0.00672626 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.69712 @ 95%CL (1 toyMC)
median expected limit: r < 3.69712 @ 95%CL (1 toyMC)
   68% expected band : 3.69712 < r < 3.69712
   95% expected band : 3.69712 < r < 3.69712
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1978807111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99242 +/- 0.00568144 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 1.99242 @ 95%CL (1 toyMC)
median expected limit: r < 1.99242 @ 95%CL (1 toyMC)
   68% expected band : 1.99242 < r < 1.99242
   95% expected band : 1.99242 < r < 1.99242
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1007678658
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.38961 +/- 0.00820413 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 6.38961 @ 95%CL (1 toyMC)
median expected limit: r < 6.38961 @ 95%CL (1 toyMC)
   68% expected band : 6.38961 < r < 6.38961
   95% expected band : 6.38961 < r < 6.38961
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1719631635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.0301 +/- 0.00761191 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.0301 @ 95%CL (1 toyMC)
median expected limit: r < 3.0301 @ 95%CL (1 toyMC)
   68% expected band : 3.0301 < r < 3.0301
   95% expected band : 3.0301 < r < 3.0301
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1542394734
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.36338 +/- 0.0061694 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.36338 @ 95%CL (1 toyMC)
median expected limit: r < 2.36338 @ 95%CL (1 toyMC)
   68% expected band : 2.36338 < r < 2.36338
   95% expected band : 2.36338 < r < 2.36338
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -269673973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52873 +/- 0.00596888 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.52873 @ 95%CL (1 toyMC)
median expected limit: r < 2.52873 @ 95%CL (1 toyMC)
   68% expected band : 2.52873 < r < 2.52873
   95% expected band : 2.52873 < r < 2.52873
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 499228095
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.0325 +/- 0.00626799 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.0325 @ 95%CL (1 toyMC)
median expected limit: r < 3.0325 @ 95%CL (1 toyMC)
   68% expected band : 3.0325 < r < 3.0325
   95% expected band : 3.0325 < r < 3.0325
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 930498175
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41315 +/- 0.00641656 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.41315 @ 95%CL (1 toyMC)
median expected limit: r < 2.41315 @ 95%CL (1 toyMC)
   68% expected band : 2.41315 < r < 2.41315
   95% expected band : 2.41315 < r < 2.41315
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1226911735
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.61403 +/- 0.00532133 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.61403 @ 95%CL (1 toyMC)
median expected limit: r < 2.61403 @ 95%CL (1 toyMC)
   68% expected band : 2.61403 < r < 2.61403
   95% expected band : 2.61403 < r < 2.61403
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -600178038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98648 +/- 0.00558709 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 1.98648 @ 95%CL (1 toyMC)
median expected limit: r < 1.98648 @ 95%CL (1 toyMC)
   68% expected band : 1.98648 < r < 1.98648
   95% expected band : 1.98648 < r < 1.98648
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -717608661
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.68088 +/- 0.0065347 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.68088 @ 95%CL (1 toyMC)
median expected limit: r < 2.68088 @ 95%CL (1 toyMC)
   68% expected band : 2.68088 < r < 2.68088
   95% expected band : 2.68088 < r < 2.68088
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 717316848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.73554 +/- 0.0085876 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 6.73554 @ 95%CL (1 toyMC)
median expected limit: r < 6.73554 @ 95%CL (1 toyMC)
   68% expected band : 6.73554 < r < 6.73554
   95% expected band : 6.73554 < r < 6.73554
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2068452107
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.03581 +/- 0.00694273 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 4.03581 @ 95%CL (1 toyMC)
median expected limit: r < 4.03581 @ 95%CL (1 toyMC)
   68% expected band : 4.03581 < r < 4.03581
   95% expected band : 4.03581 < r < 4.03581
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2093732920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41493 +/- 0.00519101 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.41493 @ 95%CL (1 toyMC)
median expected limit: r < 2.41493 @ 95%CL (1 toyMC)
   68% expected band : 2.41493 < r < 2.41493
   95% expected band : 2.41493 < r < 2.41493
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1924563924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.89004 +/- 0.0052273 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.89004 @ 95%CL (1 toyMC)
median expected limit: r < 3.89004 @ 95%CL (1 toyMC)
   68% expected band : 3.89004 < r < 3.89004
   95% expected band : 3.89004 < r < 3.89004
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1517805753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.66941 +/- 0.00759554 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.66941 @ 95%CL (1 toyMC)
median expected limit: r < 3.66941 @ 95%CL (1 toyMC)
   68% expected band : 3.66941 < r < 3.66941
   95% expected band : 3.66941 < r < 3.66941
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2060505885
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.66861 +/- 0.00619628 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.66861 @ 95%CL (1 toyMC)
median expected limit: r < 4.66861 @ 95%CL (1 toyMC)
   68% expected band : 4.66861 < r < 4.66861
   95% expected band : 4.66861 < r < 4.66861
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1893703177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.16865 +/- 0.00368542 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.16865 @ 95%CL (1 toyMC)
median expected limit: r < 3.16865 @ 95%CL (1 toyMC)
   68% expected band : 3.16865 < r < 3.16865
   95% expected band : 3.16865 < r < 3.16865
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1997716978
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.64444 +/- 0.00705357 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.64444 @ 95%CL (1 toyMC)
median expected limit: r < 3.64444 @ 95%CL (1 toyMC)
   68% expected band : 3.64444 < r < 3.64444
   95% expected band : 3.64444 < r < 3.64444
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -945059752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.95717 +/- 0.00531968 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.95717 @ 95%CL (1 toyMC)
median expected limit: r < 2.95717 @ 95%CL (1 toyMC)
   68% expected band : 2.95717 < r < 2.95717
   95% expected band : 2.95717 < r < 2.95717
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -398530460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.6579 +/- 0.00708353 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.6579 @ 95%CL (1 toyMC)
median expected limit: r < 3.6579 @ 95%CL (1 toyMC)
   68% expected band : 3.6579 < r < 3.6579
   95% expected band : 3.6579 < r < 3.6579
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -951488259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.47779 +/- 0.00921592 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.47779 @ 95%CL (1 toyMC)
median expected limit: r < 4.47779 @ 95%CL (1 toyMC)
   68% expected band : 4.47779 < r < 4.47779
   95% expected band : 4.47779 < r < 4.47779
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1737872580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52331 +/- 0.00648957 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.52331 @ 95%CL (1 toyMC)
median expected limit: r < 2.52331 @ 95%CL (1 toyMC)
   68% expected band : 2.52331 < r < 2.52331
   95% expected band : 2.52331 < r < 2.52331
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1526429459
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.33191 +/- 0.0057439 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.33191 @ 95%CL (1 toyMC)
median expected limit: r < 2.33191 @ 95%CL (1 toyMC)
   68% expected band : 2.33191 < r < 2.33191
   95% expected band : 2.33191 < r < 2.33191
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 972716194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86992 +/- 0.00498543 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.86992 @ 95%CL (1 toyMC)
median expected limit: r < 2.86992 @ 95%CL (1 toyMC)
   68% expected band : 2.86992 < r < 2.86992
   95% expected band : 2.86992 < r < 2.86992
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -834147667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.20229 +/- 0.00774252 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 4.20229 @ 95%CL (1 toyMC)
median expected limit: r < 4.20229 @ 95%CL (1 toyMC)
   68% expected band : 4.20229 < r < 4.20229
   95% expected band : 4.20229 < r < 4.20229
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1295851907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.93756 +/- 0.00772001 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 4.93756 @ 95%CL (1 toyMC)
median expected limit: r < 4.93756 @ 95%CL (1 toyMC)
   68% expected band : 4.93756 < r < 4.93756
   95% expected band : 4.93756 < r < 4.93756
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1275763461
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.22711 +/- 0.00776037 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 5.22711 @ 95%CL (1 toyMC)
median expected limit: r < 5.22711 @ 95%CL (1 toyMC)
   68% expected band : 5.22711 < r < 5.22711
   95% expected band : 5.22711 < r < 5.22711
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1974517681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.78848 +/- 0.00589177 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.78848 @ 95%CL (1 toyMC)
median expected limit: r < 2.78848 @ 95%CL (1 toyMC)
   68% expected band : 2.78848 < r < 2.78848
   95% expected band : 2.78848 < r < 2.78848
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -443026784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.66804 +/- 0.00651631 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 3.66804 @ 95%CL (1 toyMC)
median expected limit: r < 3.66804 @ 95%CL (1 toyMC)
   68% expected band : 3.66804 < r < 3.66804
   95% expected band : 3.66804 < r < 3.66804
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 969984200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.39506 +/- 0.0083017 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.39506 @ 95%CL (1 toyMC)
median expected limit: r < 3.39506 @ 95%CL (1 toyMC)
   68% expected band : 3.39506 < r < 3.39506
   95% expected band : 3.39506 < r < 3.39506
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 422696746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.05067 +/- 0.00486623 @ 95% CL (100 tries)
Done in 0.30 min (cpu), 0.30 min (real)
mean   expected limit: r < 2.05067 @ 95%CL (1 toyMC)
median expected limit: r < 2.05067 @ 95%CL (1 toyMC)
   68% expected band : 2.05067 < r < 2.05067
   95% expected band : 2.05067 < r < 2.05067
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2047827155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.28635 +/- 0.00741254 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 3.28635 @ 95%CL (1 toyMC)
median expected limit: r < 3.28635 @ 95%CL (1 toyMC)
   68% expected band : 3.28635 < r < 3.28635
   95% expected band : 3.28635 < r < 3.28635
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1035679117
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.24331 +/- 0.00519143 @ 95% CL (100 tries)
Done in 0.31 min (cpu), 0.31 min (real)
mean   expected limit: r < 2.24331 @ 95%CL (1 toyMC)
median expected limit: r < 2.24331 @ 95%CL (1 toyMC)
   68% expected band : 2.24331 < r < 2.24331
   95% expected band : 2.24331 < r < 2.24331
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 489777743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.47192 +/- 0.0065918 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 2.47192 @ 95%CL (1 toyMC)
median expected limit: r < 2.47192 @ 95%CL (1 toyMC)
   68% expected band : 2.47192 < r < 2.47192
   95% expected band : 2.47192 < r < 2.47192
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine40.MarkovChainMC.mH40.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH40.-1035679117.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH40.-1070671689.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH40.-1157199561.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH40.-1175496148.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH40.-1270900224.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH40.-1342371281.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH40.-1414157088.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH40.-1444246775.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH40.-1484946344.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH40.-1526429459.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH40.-1548804169.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH40.-1674391348.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH40.-1719631635.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH40.-1737872580.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH40.-1809849689.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH40.-1873872100.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH40.-1897536215.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH40.-1940027715.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH40.-1962520870.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH40.-1974366530.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH40.-1974517681.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH40.-1995088951.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH40.-2017617606.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH40.-2023187613.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH40.-2047827155.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH40.-2060505885.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH40.-2090945829.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH40.-2093732920.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH40.-269673973.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH40.-373995990.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH40.-398530460.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH40.-402057440.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH40.-443026784.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH40.-443897042.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH40.-56089916.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH40.-56732972.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH40.-600178038.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH40.-611388333.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH40.-717608661.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH40.-748896911.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH40.-834147667.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH40.-889066075.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH40.-907652401.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH40.-907758640.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH40.-945059752.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH40.-951488259.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH40.1007678658.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH40.1117576932.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH40.1134328664.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH40.1226911735.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH40.1227070509.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH40.1240116977.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH40.1275763461.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH40.1286580642.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH40.1295851907.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH40.1367715314.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH40.1371596993.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH40.1469408286.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH40.1517805753.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH40.1526309151.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH40.1539380662.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH40.1542394734.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH40.1632018750.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH40.1722141063.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH40.1753734767.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH40.1844989512.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH40.1883243238.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH40.1893703177.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH40.1924563924.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH40.1978807111.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH40.1997716978.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH40.2068452107.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH40.2110981940.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH40.2112869705.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH40.2124472388.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH40.24450408.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH40.267862413.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH40.307799934.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH40.422696746.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH40.453960696.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH40.489777743.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH40.499228095.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH40.507932174.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH40.561785330.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH40.620807143.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH40.648178102.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH40.652119242.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH40.659236235.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH40.673956265.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH40.717316848.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH40.778569745.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH40.785429910.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH40.792400399.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH40.814465356.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH40.841666960.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH40.878576125.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH40.889261532.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH40.930498175.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH40.969984200.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH40.972716194.root
hadd Target path: higgsCombine40.MarkovChainMC.mH40.root:/
hadd Target path: higgsCombine40.MarkovChainMC.mH40.root:/toys
