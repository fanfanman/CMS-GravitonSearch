 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1354677124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.138701 +/- 0.00517277 @ 95% CL (75 tries)
Done in 1.88 min (cpu), 1.89 min (real)
mean   expected limit: r < 0.138701 @ 95%CL (1 toyMC)
median expected limit: r < 0.138701 @ 95%CL (1 toyMC)
   68% expected band : 0.138701 < r < 0.138701
   95% expected band : 0.138701 < r < 0.138701
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -65507118
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.192143 +/- 0.00247463 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.192143 @ 95%CL (1 toyMC)
median expected limit: r < 0.192143 @ 95%CL (1 toyMC)
   68% expected band : 0.192143 < r < 0.192143
   95% expected band : 0.192143 < r < 0.192143
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 713601914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.148449 +/- 0.00650783 @ 95% CL (62 tries)
Done in 4.09 min (cpu), 4.11 min (real)
mean   expected limit: r < 0.148449 @ 95%CL (1 toyMC)
median expected limit: r < 0.148449 @ 95%CL (1 toyMC)
   68% expected band : 0.148449 < r < 0.148449
   95% expected band : 0.148449 < r < 0.148449
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1920018023
Generate toy 1/1
Done in 13.21 min (cpu), 13.27 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1769483135
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.173392 +/- 0.00259199 @ 95% CL (99 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.173392 @ 95%CL (1 toyMC)
median expected limit: r < 0.173392 @ 95%CL (1 toyMC)
   68% expected band : 0.173392 < r < 0.173392
   95% expected band : 0.173392 < r < 0.173392
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1114147141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.143126 +/- 0.00316511 @ 95% CL (96 tries)
Done in 0.59 min (cpu), 0.59 min (real)
mean   expected limit: r < 0.143126 @ 95%CL (1 toyMC)
median expected limit: r < 0.143126 @ 95%CL (1 toyMC)
   68% expected band : 0.143126 < r < 0.143126
   95% expected band : 0.143126 < r < 0.143126
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 541908243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.165324 +/- 0.0024432 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.165324 @ 95%CL (1 toyMC)
median expected limit: r < 0.165324 @ 95%CL (1 toyMC)
   68% expected band : 0.165324 < r < 0.165324
   95% expected band : 0.165324 < r < 0.165324
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 290635539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.201654 +/- 0.00224748 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.201654 @ 95%CL (1 toyMC)
median expected limit: r < 0.201654 @ 95%CL (1 toyMC)
   68% expected band : 0.201654 < r < 0.201654
   95% expected band : 0.201654 < r < 0.201654
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1511630297
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.143434 +/- 0.00370507 @ 95% CL (86 tries)
Done in 0.96 min (cpu), 0.97 min (real)
mean   expected limit: r < 0.143434 @ 95%CL (1 toyMC)
median expected limit: r < 0.143434 @ 95%CL (1 toyMC)
   68% expected band : 0.143434 < r < 0.143434
   95% expected band : 0.143434 < r < 0.143434
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 312186743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.09362 +/- 2.59489 @ 95% CL (15 tries)
Done in 11.06 min (cpu), 11.12 min (real)
mean   expected limit: r < 5.09362 @ 95%CL (1 toyMC)
median expected limit: r < 5.09362 @ 95%CL (1 toyMC)
   68% expected band : 5.09362 < r < 5.09362
   95% expected band : 5.09362 < r < 5.09362
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1859014907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 7.70442 +/- 1.50637 @ 95% CL (43 tries)
Done in 7.22 min (cpu), 7.25 min (real)
mean   expected limit: r < 7.70442 @ 95%CL (1 toyMC)
median expected limit: r < 7.70442 @ 95%CL (1 toyMC)
   68% expected band : 7.70442 < r < 7.70442
   95% expected band : 7.70442 < r < 7.70442
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1971747242
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.160433 +/- 0.00349941 @ 95% CL (97 tries)
Done in 0.47 min (cpu), 0.48 min (real)
mean   expected limit: r < 0.160433 @ 95%CL (1 toyMC)
median expected limit: r < 0.160433 @ 95%CL (1 toyMC)
   68% expected band : 0.160433 < r < 0.160433
   95% expected band : 0.160433 < r < 0.160433
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 521843287
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.180806 +/- 0.00254317 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.180806 @ 95%CL (1 toyMC)
median expected limit: r < 0.180806 @ 95%CL (1 toyMC)
   68% expected band : 0.180806 < r < 0.180806
   95% expected band : 0.180806 < r < 0.180806
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1331070156
Generate toy 1/1
Done in 13.27 min (cpu), 13.34 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1176876394
Generate toy 1/1
Done in 13.19 min (cpu), 13.27 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1837438710
Generate toy 1/1
Done in 13.21 min (cpu), 13.28 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1918260723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.97513 +/- 2.26327 @ 95% CL (21 tries)
Done in 10.12 min (cpu), 10.19 min (real)
mean   expected limit: r < 5.97513 @ 95%CL (1 toyMC)
median expected limit: r < 5.97513 @ 95%CL (1 toyMC)
   68% expected band : 5.97513 < r < 5.97513
   95% expected band : 5.97513 < r < 5.97513
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 878450437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50781 +/- 1.28833 @ 95% CL (53 tries)
Done in 5.27 min (cpu), 5.30 min (real)
mean   expected limit: r < 5.50781 @ 95%CL (1 toyMC)
median expected limit: r < 5.50781 @ 95%CL (1 toyMC)
   68% expected band : 5.50781 < r < 5.50781
   95% expected band : 5.50781 < r < 5.50781
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 104334099
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.176319 +/- 0.00310542 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.176319 @ 95%CL (1 toyMC)
median expected limit: r < 0.176319 @ 95%CL (1 toyMC)
   68% expected band : 0.176319 < r < 0.176319
   95% expected band : 0.176319 < r < 0.176319
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2055800718
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.158515 +/- 0.0050345 @ 95% CL (88 tries)
Done in 0.81 min (cpu), 0.82 min (real)
mean   expected limit: r < 0.158515 @ 95%CL (1 toyMC)
median expected limit: r < 0.158515 @ 95%CL (1 toyMC)
   68% expected band : 0.158515 < r < 0.158515
   95% expected band : 0.158515 < r < 0.158515
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -874426221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.355679 +/- 0.00203397 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.355679 @ 95%CL (1 toyMC)
median expected limit: r < 0.355679 @ 95%CL (1 toyMC)
   68% expected band : 0.355679 < r < 0.355679
   95% expected band : 0.355679 < r < 0.355679
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1068477857
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.173163 +/- 0.00290695 @ 95% CL (99 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.173163 @ 95%CL (1 toyMC)
median expected limit: r < 0.173163 @ 95%CL (1 toyMC)
   68% expected band : 0.173163 < r < 0.173163
   95% expected band : 0.173163 < r < 0.173163
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -837861285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.147775 +/- 0.00884097 @ 95% CL (45 tries)
Done in 7.22 min (cpu), 7.26 min (real)
mean   expected limit: r < 0.147775 @ 95%CL (1 toyMC)
median expected limit: r < 0.147775 @ 95%CL (1 toyMC)
   68% expected band : 0.147775 < r < 0.147775
   95% expected band : 0.147775 < r < 0.147775
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 407299123
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.197016 +/- 0.0020457 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.197016 @ 95%CL (1 toyMC)
median expected limit: r < 0.197016 @ 95%CL (1 toyMC)
   68% expected band : 0.197016 < r < 0.197016
   95% expected band : 0.197016 < r < 0.197016
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 963156275
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 10.0378 +/- 9.96219 @ 95% CL (2 tries)
Done in 12.82 min (cpu), 12.90 min (real)
mean   expected limit: r < 10.0378 @ 95%CL (1 toyMC)
median expected limit: r < 10.0378 @ 95%CL (1 toyMC)
   68% expected band : 10.0378 < r < 10.0378
   95% expected band : 10.0378 < r < 10.0378
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -541388987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.234828 +/- 0.00157803 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.234828 @ 95%CL (1 toyMC)
median expected limit: r < 0.234828 @ 95%CL (1 toyMC)
   68% expected band : 0.234828 < r < 0.234828
   95% expected band : 0.234828 < r < 0.234828
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1250573284
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.277311 +/- 0.00222329 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.277311 @ 95%CL (1 toyMC)
median expected limit: r < 0.277311 @ 95%CL (1 toyMC)
   68% expected band : 0.277311 < r < 0.277311
   95% expected band : 0.277311 < r < 0.277311
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1305183018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.81846 +/- 1.1391 @ 95% CL (64 tries)
Done in 4.28 min (cpu), 4.31 min (real)
mean   expected limit: r < 5.81846 @ 95%CL (1 toyMC)
median expected limit: r < 5.81846 @ 95%CL (1 toyMC)
   68% expected band : 5.81846 < r < 5.81846
   95% expected band : 5.81846 < r < 5.81846
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1452030051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.73848 +/- 1.45009 @ 95% CL (43 tries)
Done in 6.77 min (cpu), 6.83 min (real)
mean   expected limit: r < 5.73848 @ 95%CL (1 toyMC)
median expected limit: r < 5.73848 @ 95%CL (1 toyMC)
   68% expected band : 5.73848 < r < 5.73848
   95% expected band : 5.73848 < r < 5.73848
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1900636441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.248386 +/- 0.00202849 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.248386 @ 95%CL (1 toyMC)
median expected limit: r < 0.248386 @ 95%CL (1 toyMC)
   68% expected band : 0.248386 < r < 0.248386
   95% expected band : 0.248386 < r < 0.248386
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 366004887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.149069 +/- 0.00472404 @ 95% CL (64 tries)
Done in 4.53 min (cpu), 4.57 min (real)
mean   expected limit: r < 0.149069 @ 95%CL (1 toyMC)
median expected limit: r < 0.149069 @ 95%CL (1 toyMC)
   68% expected band : 0.149069 < r < 0.149069
   95% expected band : 0.149069 < r < 0.149069
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1281202457
Generate toy 1/1
Done in 13.57 min (cpu), 13.67 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1535066609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.145942 +/- 0.00832826 @ 95% CL (38 tries)
Done in 7.56 min (cpu), 7.61 min (real)
mean   expected limit: r < 0.145942 @ 95%CL (1 toyMC)
median expected limit: r < 0.145942 @ 95%CL (1 toyMC)
   68% expected band : 0.145942 < r < 0.145942
   95% expected band : 0.145942 < r < 0.145942
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -761544324
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.35993 +/- 2.37446 @ 95% CL (16 tries)
Done in 11.79 min (cpu), 11.87 min (real)
mean   expected limit: r < 6.35993 @ 95%CL (1 toyMC)
median expected limit: r < 6.35993 @ 95%CL (1 toyMC)
   68% expected band : 6.35993 < r < 6.35993
   95% expected band : 6.35993 < r < 6.35993
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1385162979
Generate toy 1/1
Done in 13.56 min (cpu), 13.65 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1712937262
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.0823507 @ 95% CL
Done in 13.60 min (cpu), 13.69 min (real)
mean   expected limit: r < 0.0823507 @ 95%CL (1 toyMC)
median expected limit: r < 0.0823507 @ 95%CL (1 toyMC)
   68% expected band : 0.0823507 < r < 0.0823507
   95% expected band : 0.0823507 < r < 0.0823507
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1535565770
Generate toy 1/1
Done in 13.57 min (cpu), 13.66 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -243132975
Generate toy 1/1
Done in 13.57 min (cpu), 13.67 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1631412598
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.151634 +/- 0.00293261 @ 95% CL (93 tries)
Done in 0.53 min (cpu), 0.54 min (real)
mean   expected limit: r < 0.151634 @ 95%CL (1 toyMC)
median expected limit: r < 0.151634 @ 95%CL (1 toyMC)
   68% expected band : 0.151634 < r < 0.151634
   95% expected band : 0.151634 < r < 0.151634
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1363217657
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.236713 +/- 0.00229363 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.236713 @ 95%CL (1 toyMC)
median expected limit: r < 0.236713 @ 95%CL (1 toyMC)
   68% expected band : 0.236713 < r < 0.236713
   95% expected band : 0.236713 < r < 0.236713
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1364519448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.200161 +/- 0.0017986 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.200161 @ 95%CL (1 toyMC)
median expected limit: r < 0.200161 @ 95%CL (1 toyMC)
   68% expected band : 0.200161 < r < 0.200161
   95% expected band : 0.200161 < r < 0.200161
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1401187772
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.24231 +/- 1.04527 @ 95% CL (72 tries)
Done in 2.79 min (cpu), 2.81 min (real)
mean   expected limit: r < 5.24231 @ 95%CL (1 toyMC)
median expected limit: r < 5.24231 @ 95%CL (1 toyMC)
   68% expected band : 5.24231 < r < 5.24231
   95% expected band : 5.24231 < r < 5.24231
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1340545931
Generate toy 1/1
Done in 13.48 min (cpu), 13.57 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1254042271
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 20 +/- 0 @ 95% CL (14 tries)
Done in 11.40 min (cpu), 11.46 min (real)
mean   expected limit: r < 20 @ 95%CL (1 toyMC)
median expected limit: r < 20 @ 95%CL (1 toyMC)
   68% expected band : 20 < r < 20
   95% expected band : 20 < r < 20
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1007077171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.144237 +/- 0.00431087 @ 95% CL (83 tries)
Done in 1.46 min (cpu), 1.47 min (real)
mean   expected limit: r < 0.144237 @ 95%CL (1 toyMC)
median expected limit: r < 0.144237 @ 95%CL (1 toyMC)
   68% expected band : 0.144237 < r < 0.144237
   95% expected band : 0.144237 < r < 0.144237
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1639787440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.284969 +/- 0.00230194 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.284969 @ 95%CL (1 toyMC)
median expected limit: r < 0.284969 @ 95%CL (1 toyMC)
   68% expected band : 0.284969 < r < 0.284969
   95% expected band : 0.284969 < r < 0.284969
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 283817442
Generate toy 1/1
Done in 13.22 min (cpu), 13.28 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 38978730
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.142105 +/- 0.00699226 @ 95% CL (46 tries)
Done in 6.63 min (cpu), 6.65 min (real)
mean   expected limit: r < 0.142105 @ 95%CL (1 toyMC)
median expected limit: r < 0.142105 @ 95%CL (1 toyMC)
   68% expected band : 0.142105 < r < 0.142105
   95% expected band : 0.142105 < r < 0.142105
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1667861530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.10086 +/- 2.0875 @ 95% CL (21 tries)
Done in 10.14 min (cpu), 10.18 min (real)
mean   expected limit: r < 6.10086 @ 95%CL (1 toyMC)
median expected limit: r < 6.10086 @ 95%CL (1 toyMC)
   68% expected band : 6.10086 < r < 6.10086
   95% expected band : 6.10086 < r < 6.10086
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -90058664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.135636 +/- 0.00583935 @ 95% CL (62 tries)
Done in 3.90 min (cpu), 3.92 min (real)
mean   expected limit: r < 0.135636 @ 95%CL (1 toyMC)
median expected limit: r < 0.135636 @ 95%CL (1 toyMC)
   68% expected band : 0.135636 < r < 0.135636
   95% expected band : 0.135636 < r < 0.135636
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1923840552
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.50447 +/- 1.47029 @ 95% CL (37 tries)
Done in 8.01 min (cpu), 8.04 min (real)
mean   expected limit: r < 5.50447 @ 95%CL (1 toyMC)
median expected limit: r < 5.50447 @ 95%CL (1 toyMC)
   68% expected band : 5.50447 < r < 5.50447
   95% expected band : 5.50447 < r < 5.50447
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 424564853
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.156561 +/- 0.00319018 @ 95% CL (89 tries)
Done in 0.81 min (cpu), 0.81 min (real)
mean   expected limit: r < 0.156561 @ 95%CL (1 toyMC)
median expected limit: r < 0.156561 @ 95%CL (1 toyMC)
   68% expected band : 0.156561 < r < 0.156561
   95% expected band : 0.156561 < r < 0.156561
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 340631000
Generate toy 1/1
Done in 13.18 min (cpu), 13.23 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 833284499
Generate toy 1/1
Done in 13.16 min (cpu), 13.20 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 641110936
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.142085 +/- 0.00537301 @ 95% CL (70 tries)
Done in 2.94 min (cpu), 2.95 min (real)
mean   expected limit: r < 0.142085 @ 95%CL (1 toyMC)
median expected limit: r < 0.142085 @ 95%CL (1 toyMC)
   68% expected band : 0.142085 < r < 0.142085
   95% expected band : 0.142085 < r < 0.142085
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1803616444
Generate toy 1/1
Done in 13.31 min (cpu), 13.36 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1753907811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.170984 +/- 0.00283391 @ 95% CL (99 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 0.170984 @ 95%CL (1 toyMC)
median expected limit: r < 0.170984 @ 95%CL (1 toyMC)
   68% expected band : 0.170984 < r < 0.170984
   95% expected band : 0.170984 < r < 0.170984
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 190262293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.155698 +/- 0.00280288 @ 95% CL (92 tries)
Done in 0.57 min (cpu), 0.57 min (real)
mean   expected limit: r < 0.155698 @ 95%CL (1 toyMC)
median expected limit: r < 0.155698 @ 95%CL (1 toyMC)
   68% expected band : 0.155698 < r < 0.155698
   95% expected band : 0.155698 < r < 0.155698
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1907347678
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.204663 +/- 0.00178205 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.204663 @ 95%CL (1 toyMC)
median expected limit: r < 0.204663 @ 95%CL (1 toyMC)
   68% expected band : 0.204663 < r < 0.204663
   95% expected band : 0.204663 < r < 0.204663
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2073573109
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.16855 +/- 0.00300229 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.16855 @ 95%CL (1 toyMC)
median expected limit: r < 0.16855 @ 95%CL (1 toyMC)
   68% expected band : 0.16855 < r < 0.16855
   95% expected band : 0.16855 < r < 0.16855
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1894123022
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.195264 +/- 0.00192053 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.195264 @ 95%CL (1 toyMC)
median expected limit: r < 0.195264 @ 95%CL (1 toyMC)
   68% expected band : 0.195264 < r < 0.195264
   95% expected band : 0.195264 < r < 0.195264
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1144123521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.155751 +/- 0.00397166 @ 95% CL (87 tries)
Done in 0.90 min (cpu), 0.91 min (real)
mean   expected limit: r < 0.155751 @ 95%CL (1 toyMC)
median expected limit: r < 0.155751 @ 95%CL (1 toyMC)
   68% expected band : 0.155751 < r < 0.155751
   95% expected band : 0.155751 < r < 0.155751
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 988334110
Generate toy 1/1
Done in 13.19 min (cpu), 13.24 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1805690875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.225191 +/- 0.00133829 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.225191 @ 95%CL (1 toyMC)
median expected limit: r < 0.225191 @ 95%CL (1 toyMC)
   68% expected band : 0.225191 < r < 0.225191
   95% expected band : 0.225191 < r < 0.225191
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1595326009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 13.3791 +/- 6.62087 @ 95% CL (3 tries)
Done in 12.67 min (cpu), 12.72 min (real)
mean   expected limit: r < 13.3791 @ 95%CL (1 toyMC)
median expected limit: r < 13.3791 @ 95%CL (1 toyMC)
   68% expected band : 13.3791 < r < 13.3791
   95% expected band : 13.3791 < r < 13.3791
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -354757010
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.145487 +/- 0.00512777 @ 95% CL (56 tries)
Done in 5.43 min (cpu), 5.45 min (real)
mean   expected limit: r < 0.145487 @ 95%CL (1 toyMC)
median expected limit: r < 0.145487 @ 95%CL (1 toyMC)
   68% expected band : 0.145487 < r < 0.145487
   95% expected band : 0.145487 < r < 0.145487
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1381962728
Generate toy 1/1
Done in 13.29 min (cpu), 13.33 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2082056834
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.197087 +/- 0.00232337 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.197087 @ 95%CL (1 toyMC)
median expected limit: r < 0.197087 @ 95%CL (1 toyMC)
   68% expected band : 0.197087 < r < 0.197087
   95% expected band : 0.197087 < r < 0.197087
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 963286481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.171438 +/- 0.00261781 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.171438 @ 95%CL (1 toyMC)
median expected limit: r < 0.171438 @ 95%CL (1 toyMC)
   68% expected band : 0.171438 < r < 0.171438
   95% expected band : 0.171438 < r < 0.171438
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1043998521
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.2077 +/- 0.00281455 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.2077 @ 95%CL (1 toyMC)
median expected limit: r < 0.2077 @ 95%CL (1 toyMC)
   68% expected band : 0.2077 < r < 0.2077
   95% expected band : 0.2077 < r < 0.2077
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1287325670
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.0729042 @ 95% CL
Done in 13.21 min (cpu), 13.25 min (real)
mean   expected limit: r < 0.0729042 @ 95%CL (1 toyMC)
median expected limit: r < 0.0729042 @ 95%CL (1 toyMC)
   68% expected band : 0.0729042 < r < 0.0729042
   95% expected band : 0.0729042 < r < 0.0729042
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1856919829
Generate toy 1/1
Done in 13.31 min (cpu), 13.37 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1547048005
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 8.66001 +/- 1.89 @ 95% CL (29 tries)
Done in 9.56 min (cpu), 9.60 min (real)
mean   expected limit: r < 8.66001 @ 95%CL (1 toyMC)
median expected limit: r < 8.66001 @ 95%CL (1 toyMC)
   68% expected band : 8.66001 < r < 8.66001
   95% expected band : 8.66001 < r < 8.66001
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -255615608
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.45771 +/- 1.4108 @ 95% CL (47 tries)
Done in 7.20 min (cpu), 7.23 min (real)
mean   expected limit: r < 6.45771 @ 95%CL (1 toyMC)
median expected limit: r < 6.45771 @ 95%CL (1 toyMC)
   68% expected band : 6.45771 < r < 6.45771
   95% expected band : 6.45771 < r < 6.45771
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1650262331
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.09076 +/- 3.97735 @ 95% CL (5 tries)
Done in 12.80 min (cpu), 12.85 min (real)
mean   expected limit: r < 4.09076 @ 95%CL (1 toyMC)
median expected limit: r < 4.09076 @ 95%CL (1 toyMC)
   68% expected band : 4.09076 < r < 4.09076
   95% expected band : 4.09076 < r < 4.09076
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1943529719
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.47924 +/- 1.36489 @ 95% CL (47 tries)
Done in 6.22 min (cpu), 6.24 min (real)
mean   expected limit: r < 6.47924 @ 95%CL (1 toyMC)
median expected limit: r < 6.47924 @ 95%CL (1 toyMC)
   68% expected band : 6.47924 < r < 6.47924
   95% expected band : 6.47924 < r < 6.47924
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1716024744
Generate toy 1/1
Done in 13.21 min (cpu), 13.26 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -736887446
Generate toy 1/1
Done in 13.20 min (cpu), 13.25 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1715142156
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.139658 +/- 0.00665801 @ 95% CL (50 tries)
Done in 6.01 min (cpu), 6.03 min (real)
mean   expected limit: r < 0.139658 @ 95%CL (1 toyMC)
median expected limit: r < 0.139658 @ 95%CL (1 toyMC)
   68% expected band : 0.139658 < r < 0.139658
   95% expected band : 0.139658 < r < 0.139658
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -654079208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.1534 +/- 0.00484119 @ 95% CL (81 tries)
Done in 1.41 min (cpu), 1.42 min (real)
mean   expected limit: r < 0.1534 @ 95%CL (1 toyMC)
median expected limit: r < 0.1534 @ 95%CL (1 toyMC)
   68% expected band : 0.1534 < r < 0.1534
   95% expected band : 0.1534 < r < 0.1534
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 275315028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.161222 +/- 0.00254387 @ 95% CL (98 tries)
Done in 0.45 min (cpu), 0.45 min (real)
mean   expected limit: r < 0.161222 @ 95%CL (1 toyMC)
median expected limit: r < 0.161222 @ 95%CL (1 toyMC)
   68% expected band : 0.161222 < r < 0.161222
   95% expected band : 0.161222 < r < 0.161222
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1035806290
Generate toy 1/1
Done in 13.15 min (cpu), 13.19 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -496974728
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.187258 +/- 0.00236889 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.34 min (real)
mean   expected limit: r < 0.187258 @ 95%CL (1 toyMC)
median expected limit: r < 0.187258 @ 95%CL (1 toyMC)
   68% expected band : 0.187258 < r < 0.187258
   95% expected band : 0.187258 < r < 0.187258
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -319267288
Generate toy 1/1
Done in 13.20 min (cpu), 13.24 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2065474060
Generate toy 1/1
Done in 13.21 min (cpu), 13.25 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1048200216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.150529 +/- 0.0032196 @ 95% CL (93 tries)
Done in 0.59 min (cpu), 0.59 min (real)
mean   expected limit: r < 0.150529 @ 95%CL (1 toyMC)
median expected limit: r < 0.150529 @ 95%CL (1 toyMC)
   68% expected band : 0.150529 < r < 0.150529
   95% expected band : 0.150529 < r < 0.150529
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 815605094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.117726 +/- 0.00871835 @ 95% CL (10 tries)
Done in 11.58 min (cpu), 11.62 min (real)
mean   expected limit: r < 0.117726 @ 95%CL (1 toyMC)
median expected limit: r < 0.117726 @ 95%CL (1 toyMC)
   68% expected band : 0.117726 < r < 0.117726
   95% expected band : 0.117726 < r < 0.117726
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2040877462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.147411 +/- 0.00359435 @ 95% CL (84 tries)
Done in 1.02 min (cpu), 1.03 min (real)
mean   expected limit: r < 0.147411 @ 95%CL (1 toyMC)
median expected limit: r < 0.147411 @ 95%CL (1 toyMC)
   68% expected band : 0.147411 < r < 0.147411
   95% expected band : 0.147411 < r < 0.147411
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 889886609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.154678 +/- 0.00443931 @ 95% CL (79 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 0.154678 @ 95%CL (1 toyMC)
median expected limit: r < 0.154678 @ 95%CL (1 toyMC)
   68% expected band : 0.154678 < r < 0.154678
   95% expected band : 0.154678 < r < 0.154678
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -539646664
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.205763 +/- 0.0021835 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.205763 @ 95%CL (1 toyMC)
median expected limit: r < 0.205763 @ 95%CL (1 toyMC)
   68% expected band : 0.205763 < r < 0.205763
   95% expected band : 0.205763 < r < 0.205763
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -414567804
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.176279 +/- 0.00291351 @ 95% CL (100 tries)
Done in 0.32 min (cpu), 0.32 min (real)
mean   expected limit: r < 0.176279 @ 95%CL (1 toyMC)
median expected limit: r < 0.176279 @ 95%CL (1 toyMC)
   68% expected band : 0.176279 < r < 0.176279
   95% expected band : 0.176279 < r < 0.176279
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -891178286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.54412 +/- 2.92091 @ 95% CL (9 tries)
Done in 12.20 min (cpu), 12.23 min (real)
mean   expected limit: r < 4.54412 @ 95%CL (1 toyMC)
median expected limit: r < 4.54412 @ 95%CL (1 toyMC)
   68% expected band : 4.54412 < r < 4.54412
   95% expected band : 4.54412 < r < 4.54412
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 417042919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.183941 +/- 0.00196487 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.183941 @ 95%CL (1 toyMC)
median expected limit: r < 0.183941 @ 95%CL (1 toyMC)
   68% expected band : 0.183941 < r < 0.183941
   95% expected band : 0.183941 < r < 0.183941
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 29086325
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.151488 +/- 0.00339532 @ 95% CL (91 tries)
Done in 0.66 min (cpu), 0.67 min (real)
mean   expected limit: r < 0.151488 @ 95%CL (1 toyMC)
median expected limit: r < 0.151488 @ 95%CL (1 toyMC)
   68% expected band : 0.151488 < r < 0.151488
   95% expected band : 0.151488 < r < 0.151488
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1704481813
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.144686 +/- 0.00264186 @ 95% CL (90 tries)
Done in 0.92 min (cpu), 0.93 min (real)
mean   expected limit: r < 0.144686 @ 95%CL (1 toyMC)
median expected limit: r < 0.144686 @ 95%CL (1 toyMC)
   68% expected band : 0.144686 < r < 0.144686
   95% expected band : 0.144686 < r < 0.144686
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2045854041
Generate toy 1/1
Done in 13.21 min (cpu), 13.24 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 652558410
Generate toy 1/1
Done in 13.24 min (cpu), 13.27 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -420520529
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.18508 +/- 0.00189765 @ 95% CL (100 tries)
Done in 0.33 min (cpu), 0.33 min (real)
mean   expected limit: r < 0.18508 @ 95%CL (1 toyMC)
median expected limit: r < 0.18508 @ 95%CL (1 toyMC)
   68% expected band : 0.18508 < r < 0.18508
   95% expected band : 0.18508 < r < 0.18508
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1485466779
Generate toy 1/1
Done in 13.17 min (cpu), 13.20 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -757686839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.49897 +/- 1.89054 @ 95% CL (28 tries)
Done in 9.10 min (cpu), 9.12 min (real)
mean   expected limit: r < 6.49897 @ 95%CL (1 toyMC)
median expected limit: r < 6.49897 @ 95%CL (1 toyMC)
   68% expected band : 6.49897 < r < 6.49897
   95% expected band : 6.49897 < r < 6.49897
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine16.MarkovChainMC.mH16.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH16.-1007077171.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH16.-1043998521.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH16.-1068477857.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH16.-1114147141.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH16.-1250573284.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH16.-1254042271.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH16.-1281202457.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH16.-1287325670.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH16.-1305183018.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH16.-1381962728.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH16.-1452030051.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH16.-1547048005.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH16.-1650262331.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH16.-1667861530.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH16.-1712937262.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH16.-1715142156.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH16.-1753907811.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH16.-1769483135.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH16.-1803616444.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH16.-1837438710.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH16.-1859014907.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH16.-1923840552.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH16.-1943529719.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH16.-1971747242.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH16.-2073573109.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH16.-243132975.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH16.-255615608.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH16.-319267288.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH16.-354757010.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH16.-414567804.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH16.-420520529.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH16.-496974728.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH16.-539646664.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH16.-541388987.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH16.-654079208.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH16.-65507118.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH16.-736887446.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH16.-757686839.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH16.-761544324.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH16.-837861285.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH16.-874426221.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH16.-891178286.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH16.-90058664.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH16.1035806290.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH16.104334099.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH16.1048200216.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH16.1144123521.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH16.1176876394.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH16.1331070156.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH16.1340545931.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH16.1354677124.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH16.1363217657.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH16.1364519448.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH16.1385162979.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH16.1401187772.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH16.1485466779.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH16.1511630297.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH16.1535066609.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH16.1535565770.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH16.1595326009.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH16.1631412598.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH16.1639787440.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH16.1704481813.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH16.1716024744.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH16.1805690875.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH16.1856919829.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH16.1894123022.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH16.1900636441.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH16.190262293.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH16.1907347678.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH16.1918260723.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH16.1920018023.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH16.2040877462.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH16.2045854041.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH16.2055800718.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH16.2065474060.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH16.2082056834.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH16.275315028.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH16.283817442.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH16.290635539.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH16.29086325.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH16.312186743.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH16.340631000.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH16.366004887.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH16.38978730.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH16.407299123.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH16.417042919.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH16.424564853.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH16.521843287.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH16.541908243.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH16.641110936.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH16.652558410.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH16.713601914.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH16.815605094.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH16.833284499.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH16.878450437.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH16.889886609.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH16.963156275.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH16.963286481.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH16.988334110.root
hadd Target path: higgsCombine16.MarkovChainMC.mH16.root:/
hadd Target path: higgsCombine16.MarkovChainMC.mH16.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1535987833
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.374212 +/- 0.00268616 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.374212 @ 95%CL (1 toyMC)
median expected limit: r < 0.374212 @ 95%CL (1 toyMC)
   68% expected band : 0.374212 < r < 0.374212
   95% expected band : 0.374212 < r < 0.374212
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1340315342
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.181696 +/- 0.00262303 @ 95% CL (99 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 0.181696 @ 95%CL (1 toyMC)
median expected limit: r < 0.181696 @ 95%CL (1 toyMC)
   68% expected band : 0.181696 < r < 0.181696
   95% expected band : 0.181696 < r < 0.181696
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 958569543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.404191 +/- 0.00269677 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.404191 @ 95%CL (1 toyMC)
median expected limit: r < 0.404191 @ 95%CL (1 toyMC)
   68% expected band : 0.404191 < r < 0.404191
   95% expected band : 0.404191 < r < 0.404191
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1199027751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.7187 +/- 0.0026265 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.7187 @ 95%CL (1 toyMC)
median expected limit: r < 0.7187 @ 95%CL (1 toyMC)
   68% expected band : 0.7187 < r < 0.7187
   95% expected band : 0.7187 < r < 0.7187
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 559835193
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.408463 +/- 0.00302847 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.408463 @ 95%CL (1 toyMC)
median expected limit: r < 0.408463 @ 95%CL (1 toyMC)
   68% expected band : 0.408463 < r < 0.408463
   95% expected band : 0.408463 < r < 0.408463
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1368972979
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.394795 +/- 0.00314324 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.394795 @ 95%CL (1 toyMC)
median expected limit: r < 0.394795 @ 95%CL (1 toyMC)
   68% expected band : 0.394795 < r < 0.394795
   95% expected band : 0.394795 < r < 0.394795
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 378477544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.433151 +/- 0.0028757 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.433151 @ 95%CL (1 toyMC)
median expected limit: r < 0.433151 @ 95%CL (1 toyMC)
   68% expected band : 0.433151 < r < 0.433151
   95% expected band : 0.433151 < r < 0.433151
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 774552143
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19857 +/- 0.00277436 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.19857 @ 95%CL (1 toyMC)
median expected limit: r < 1.19857 @ 95%CL (1 toyMC)
   68% expected band : 1.19857 < r < 1.19857
   95% expected band : 1.19857 < r < 1.19857
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1695657548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.261718 +/- 0.00247583 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.261718 @ 95%CL (1 toyMC)
median expected limit: r < 0.261718 @ 95%CL (1 toyMC)
   68% expected band : 0.261718 < r < 0.261718
   95% expected band : 0.261718 < r < 0.261718
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -51851993
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.823312 +/- 0.00249853 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.823312 @ 95%CL (1 toyMC)
median expected limit: r < 0.823312 @ 95%CL (1 toyMC)
   68% expected band : 0.823312 < r < 0.823312
   95% expected band : 0.823312 < r < 0.823312
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -884215299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.177435 +/- 0.00347046 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.177435 @ 95%CL (1 toyMC)
median expected limit: r < 0.177435 @ 95%CL (1 toyMC)
   68% expected band : 0.177435 < r < 0.177435
   95% expected band : 0.177435 < r < 0.177435
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 862515468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.580419 +/- 0.00242207 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.580419 @ 95%CL (1 toyMC)
median expected limit: r < 0.580419 @ 95%CL (1 toyMC)
   68% expected band : 0.580419 < r < 0.580419
   95% expected band : 0.580419 < r < 0.580419
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1496652554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.260542 +/- 0.00274299 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.260542 @ 95%CL (1 toyMC)
median expected limit: r < 0.260542 @ 95%CL (1 toyMC)
   68% expected band : 0.260542 < r < 0.260542
   95% expected band : 0.260542 < r < 0.260542
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -582099893
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.357256 +/- 0.00248523 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.357256 @ 95%CL (1 toyMC)
median expected limit: r < 0.357256 @ 95%CL (1 toyMC)
   68% expected band : 0.357256 < r < 0.357256
   95% expected band : 0.357256 < r < 0.357256
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1915992009
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.628377 +/- 0.00216438 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.628377 @ 95%CL (1 toyMC)
median expected limit: r < 0.628377 @ 95%CL (1 toyMC)
   68% expected band : 0.628377 < r < 0.628377
   95% expected band : 0.628377 < r < 0.628377
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 364048282
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.850971 +/- 0.00253866 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 0.850971 @ 95%CL (1 toyMC)
median expected limit: r < 0.850971 @ 95%CL (1 toyMC)
   68% expected band : 0.850971 < r < 0.850971
   95% expected band : 0.850971 < r < 0.850971
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 145728815
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.367997 +/- 0.00205505 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.367997 @ 95%CL (1 toyMC)
median expected limit: r < 0.367997 @ 95%CL (1 toyMC)
   68% expected band : 0.367997 < r < 0.367997
   95% expected band : 0.367997 < r < 0.367997
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1076608424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.700124 +/- 0.00244813 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.700124 @ 95%CL (1 toyMC)
median expected limit: r < 0.700124 @ 95%CL (1 toyMC)
   68% expected band : 0.700124 < r < 0.700124
   95% expected band : 0.700124 < r < 0.700124
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1774315410
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.873035 +/- 0.00254217 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.873035 @ 95%CL (1 toyMC)
median expected limit: r < 0.873035 @ 95%CL (1 toyMC)
   68% expected band : 0.873035 < r < 0.873035
   95% expected band : 0.873035 < r < 0.873035
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1922762308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.306229 +/- 0.00251851 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.306229 @ 95%CL (1 toyMC)
median expected limit: r < 0.306229 @ 95%CL (1 toyMC)
   68% expected band : 0.306229 < r < 0.306229
   95% expected band : 0.306229 < r < 0.306229
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1469508527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.808641 +/- 0.00278644 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.808641 @ 95%CL (1 toyMC)
median expected limit: r < 0.808641 @ 95%CL (1 toyMC)
   68% expected band : 0.808641 < r < 0.808641
   95% expected band : 0.808641 < r < 0.808641
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1420526289
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.392559 +/- 0.00302588 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.392559 @ 95%CL (1 toyMC)
median expected limit: r < 0.392559 @ 95%CL (1 toyMC)
   68% expected band : 0.392559 < r < 0.392559
   95% expected band : 0.392559 < r < 0.392559
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1315132910
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.287718 +/- 0.00242012 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.287718 @ 95%CL (1 toyMC)
median expected limit: r < 0.287718 @ 95%CL (1 toyMC)
   68% expected band : 0.287718 < r < 0.287718
   95% expected band : 0.287718 < r < 0.287718
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1071539053
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.456814 +/- 0.00243582 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.456814 @ 95%CL (1 toyMC)
median expected limit: r < 0.456814 @ 95%CL (1 toyMC)
   68% expected band : 0.456814 < r < 0.456814
   95% expected band : 0.456814 < r < 0.456814
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1626853313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.275841 +/- 0.00265916 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.275841 @ 95%CL (1 toyMC)
median expected limit: r < 0.275841 @ 95%CL (1 toyMC)
   68% expected band : 0.275841 < r < 0.275841
   95% expected band : 0.275841 < r < 0.275841
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -142402371
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.346621 +/- 0.00244889 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.346621 @ 95%CL (1 toyMC)
median expected limit: r < 0.346621 @ 95%CL (1 toyMC)
   68% expected band : 0.346621 < r < 0.346621
   95% expected band : 0.346621 < r < 0.346621
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1307096216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.324199 +/- 0.00266179 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.324199 @ 95%CL (1 toyMC)
median expected limit: r < 0.324199 @ 95%CL (1 toyMC)
   68% expected band : 0.324199 < r < 0.324199
   95% expected band : 0.324199 < r < 0.324199
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1628845196
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.454388 +/- 0.00198767 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.454388 @ 95%CL (1 toyMC)
median expected limit: r < 0.454388 @ 95%CL (1 toyMC)
   68% expected band : 0.454388 < r < 0.454388
   95% expected band : 0.454388 < r < 0.454388
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -927352481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.641447 +/- 0.00236375 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.641447 @ 95%CL (1 toyMC)
median expected limit: r < 0.641447 @ 95%CL (1 toyMC)
   68% expected band : 0.641447 < r < 0.641447
   95% expected band : 0.641447 < r < 0.641447
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1877206890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.404371 +/- 0.00265242 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.404371 @ 95%CL (1 toyMC)
median expected limit: r < 0.404371 @ 95%CL (1 toyMC)
   68% expected band : 0.404371 < r < 0.404371
   95% expected band : 0.404371 < r < 0.404371
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1221343393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.547854 +/- 0.00219926 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.547854 @ 95%CL (1 toyMC)
median expected limit: r < 0.547854 @ 95%CL (1 toyMC)
   68% expected band : 0.547854 < r < 0.547854
   95% expected band : 0.547854 < r < 0.547854
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1828009599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.840037 +/- 0.00288859 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.840037 @ 95%CL (1 toyMC)
median expected limit: r < 0.840037 @ 95%CL (1 toyMC)
   68% expected band : 0.840037 < r < 0.840037
   95% expected band : 0.840037 < r < 0.840037
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1947644498
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.457629 +/- 0.00323653 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.457629 @ 95%CL (1 toyMC)
median expected limit: r < 0.457629 @ 95%CL (1 toyMC)
   68% expected band : 0.457629 < r < 0.457629
   95% expected band : 0.457629 < r < 0.457629
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -336002901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.478064 +/- 0.00217284 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.478064 @ 95%CL (1 toyMC)
median expected limit: r < 0.478064 @ 95%CL (1 toyMC)
   68% expected band : 0.478064 < r < 0.478064
   95% expected band : 0.478064 < r < 0.478064
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1482093340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.285019 +/- 0.00192299 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.285019 @ 95%CL (1 toyMC)
median expected limit: r < 0.285019 @ 95%CL (1 toyMC)
   68% expected band : 0.285019 < r < 0.285019
   95% expected band : 0.285019 < r < 0.285019
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 649885241
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.624311 +/- 0.00255897 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.624311 @ 95%CL (1 toyMC)
median expected limit: r < 0.624311 @ 95%CL (1 toyMC)
   68% expected band : 0.624311 < r < 0.624311
   95% expected band : 0.624311 < r < 0.624311
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -409743550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.519332 +/- 0.00282613 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.519332 @ 95%CL (1 toyMC)
median expected limit: r < 0.519332 @ 95%CL (1 toyMC)
   68% expected band : 0.519332 < r < 0.519332
   95% expected band : 0.519332 < r < 0.519332
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 676846184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.524198 +/- 0.00314824 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.524198 @ 95%CL (1 toyMC)
median expected limit: r < 0.524198 @ 95%CL (1 toyMC)
   68% expected band : 0.524198 < r < 0.524198
   95% expected band : 0.524198 < r < 0.524198
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1461326166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.293798 +/- 0.00258971 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.293798 @ 95%CL (1 toyMC)
median expected limit: r < 0.293798 @ 95%CL (1 toyMC)
   68% expected band : 0.293798 < r < 0.293798
   95% expected band : 0.293798 < r < 0.293798
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1507517236
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.331268 +/- 0.0019333 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.331268 @ 95%CL (1 toyMC)
median expected limit: r < 0.331268 @ 95%CL (1 toyMC)
   68% expected band : 0.331268 < r < 0.331268
   95% expected band : 0.331268 < r < 0.331268
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1155170110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.589333 +/- 0.00378743 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.589333 @ 95%CL (1 toyMC)
median expected limit: r < 0.589333 @ 95%CL (1 toyMC)
   68% expected band : 0.589333 < r < 0.589333
   95% expected band : 0.589333 < r < 0.589333
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -551219409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.280274 +/- 0.00233856 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.280274 @ 95%CL (1 toyMC)
median expected limit: r < 0.280274 @ 95%CL (1 toyMC)
   68% expected band : 0.280274 < r < 0.280274
   95% expected band : 0.280274 < r < 0.280274
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1382027762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.276535 +/- 0.00251301 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.276535 @ 95%CL (1 toyMC)
median expected limit: r < 0.276535 @ 95%CL (1 toyMC)
   68% expected band : 0.276535 < r < 0.276535
   95% expected band : 0.276535 < r < 0.276535
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1095137420
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.212283 +/- 0.00233439 @ 95% CL (100 tries)
Done in 0.34 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.212283 @ 95%CL (1 toyMC)
median expected limit: r < 0.212283 @ 95%CL (1 toyMC)
   68% expected band : 0.212283 < r < 0.212283
   95% expected band : 0.212283 < r < 0.212283
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1040448812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.333395 +/- 0.00222291 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.333395 @ 95%CL (1 toyMC)
median expected limit: r < 0.333395 @ 95%CL (1 toyMC)
   68% expected band : 0.333395 < r < 0.333395
   95% expected band : 0.333395 < r < 0.333395
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1085251373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.288557 +/- 0.00308917 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.288557 @ 95%CL (1 toyMC)
median expected limit: r < 0.288557 @ 95%CL (1 toyMC)
   68% expected band : 0.288557 < r < 0.288557
   95% expected band : 0.288557 < r < 0.288557
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2027765522
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.330347 +/- 0.00256944 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.330347 @ 95%CL (1 toyMC)
median expected limit: r < 0.330347 @ 95%CL (1 toyMC)
   68% expected band : 0.330347 < r < 0.330347
   95% expected band : 0.330347 < r < 0.330347
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1812718404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.634239 +/- 0.00209832 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.634239 @ 95%CL (1 toyMC)
median expected limit: r < 0.634239 @ 95%CL (1 toyMC)
   68% expected band : 0.634239 < r < 0.634239
   95% expected band : 0.634239 < r < 0.634239
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -568074227
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.55427 +/- 0.00234606 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.55427 @ 95%CL (1 toyMC)
median expected limit: r < 0.55427 @ 95%CL (1 toyMC)
   68% expected band : 0.55427 < r < 0.55427
   95% expected band : 0.55427 < r < 0.55427
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1108768382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.220431 +/- 0.0031151 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.220431 @ 95%CL (1 toyMC)
median expected limit: r < 0.220431 @ 95%CL (1 toyMC)
   68% expected band : 0.220431 < r < 0.220431
   95% expected band : 0.220431 < r < 0.220431
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -991329079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.243878 +/- 0.00227123 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.243878 @ 95%CL (1 toyMC)
median expected limit: r < 0.243878 @ 95%CL (1 toyMC)
   68% expected band : 0.243878 < r < 0.243878
   95% expected band : 0.243878 < r < 0.243878
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1898738409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.436499 +/- 0.00271103 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.436499 @ 95%CL (1 toyMC)
median expected limit: r < 0.436499 @ 95%CL (1 toyMC)
   68% expected band : 0.436499 < r < 0.436499
   95% expected band : 0.436499 < r < 0.436499
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 340246094
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.532165 +/- 0.00245141 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.532165 @ 95%CL (1 toyMC)
median expected limit: r < 0.532165 @ 95%CL (1 toyMC)
   68% expected band : 0.532165 < r < 0.532165
   95% expected band : 0.532165 < r < 0.532165
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 159860900
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.34644 +/- 0.00216717 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.34644 @ 95%CL (1 toyMC)
median expected limit: r < 0.34644 @ 95%CL (1 toyMC)
   68% expected band : 0.34644 < r < 0.34644
   95% expected band : 0.34644 < r < 0.34644
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2131054837
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.263325 +/- 0.00289766 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.263325 @ 95%CL (1 toyMC)
median expected limit: r < 0.263325 @ 95%CL (1 toyMC)
   68% expected band : 0.263325 < r < 0.263325
   95% expected band : 0.263325 < r < 0.263325
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -938259046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.597156 +/- 0.00264915 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.597156 @ 95%CL (1 toyMC)
median expected limit: r < 0.597156 @ 95%CL (1 toyMC)
   68% expected band : 0.597156 < r < 0.597156
   95% expected band : 0.597156 < r < 0.597156
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -576557382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.408233 +/- 0.00291579 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.408233 @ 95%CL (1 toyMC)
median expected limit: r < 0.408233 @ 95%CL (1 toyMC)
   68% expected band : 0.408233 < r < 0.408233
   95% expected band : 0.408233 < r < 0.408233
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1316075805
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.291432 +/- 0.00297903 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.291432 @ 95%CL (1 toyMC)
median expected limit: r < 0.291432 @ 95%CL (1 toyMC)
   68% expected band : 0.291432 < r < 0.291432
   95% expected band : 0.291432 < r < 0.291432
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -670472181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.349036 +/- 0.00251756 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.349036 @ 95%CL (1 toyMC)
median expected limit: r < 0.349036 @ 95%CL (1 toyMC)
   68% expected band : 0.349036 < r < 0.349036
   95% expected band : 0.349036 < r < 0.349036
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1801561347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.247415 +/- 0.002802 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.247415 @ 95%CL (1 toyMC)
median expected limit: r < 0.247415 @ 95%CL (1 toyMC)
   68% expected band : 0.247415 < r < 0.247415
   95% expected band : 0.247415 < r < 0.247415
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 213957819
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.314785 +/- 0.00244857 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.314785 @ 95%CL (1 toyMC)
median expected limit: r < 0.314785 @ 95%CL (1 toyMC)
   68% expected band : 0.314785 < r < 0.314785
   95% expected band : 0.314785 < r < 0.314785
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 701702064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.29922 +/- 0.00293048 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.29922 @ 95%CL (1 toyMC)
median expected limit: r < 0.29922 @ 95%CL (1 toyMC)
   68% expected band : 0.29922 < r < 0.29922
   95% expected band : 0.29922 < r < 0.29922
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 289028483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.305248 +/- 0.00283636 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.305248 @ 95%CL (1 toyMC)
median expected limit: r < 0.305248 @ 95%CL (1 toyMC)
   68% expected band : 0.305248 < r < 0.305248
   95% expected band : 0.305248 < r < 0.305248
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1786305313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.52373 +/- 0.00308906 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.52373 @ 95%CL (1 toyMC)
median expected limit: r < 0.52373 @ 95%CL (1 toyMC)
   68% expected band : 0.52373 < r < 0.52373
   95% expected band : 0.52373 < r < 0.52373
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1075735105
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.272986 +/- 0.00307247 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.272986 @ 95%CL (1 toyMC)
median expected limit: r < 0.272986 @ 95%CL (1 toyMC)
   68% expected band : 0.272986 < r < 0.272986
   95% expected band : 0.272986 < r < 0.272986
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -777846955
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.44203 +/- 0.00300962 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 0.44203 @ 95%CL (1 toyMC)
median expected limit: r < 0.44203 @ 95%CL (1 toyMC)
   68% expected band : 0.44203 < r < 0.44203
   95% expected band : 0.44203 < r < 0.44203
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1266659489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.642169 +/- 0.00276963 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.642169 @ 95%CL (1 toyMC)
median expected limit: r < 0.642169 @ 95%CL (1 toyMC)
   68% expected band : 0.642169 < r < 0.642169
   95% expected band : 0.642169 < r < 0.642169
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -475948376
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.559236 +/- 0.00275717 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.559236 @ 95%CL (1 toyMC)
median expected limit: r < 0.559236 @ 95%CL (1 toyMC)
   68% expected band : 0.559236 < r < 0.559236
   95% expected band : 0.559236 < r < 0.559236
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -316372891
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.52124 +/- 0.00223582 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.52124 @ 95%CL (1 toyMC)
median expected limit: r < 0.52124 @ 95%CL (1 toyMC)
   68% expected band : 0.52124 < r < 0.52124
   95% expected band : 0.52124 < r < 0.52124
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1106161816
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.416998 +/- 0.00295031 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.416998 @ 95%CL (1 toyMC)
median expected limit: r < 0.416998 @ 95%CL (1 toyMC)
   68% expected band : 0.416998 < r < 0.416998
   95% expected band : 0.416998 < r < 0.416998
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1296360852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.349396 +/- 0.00277878 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.349396 @ 95%CL (1 toyMC)
median expected limit: r < 0.349396 @ 95%CL (1 toyMC)
   68% expected band : 0.349396 < r < 0.349396
   95% expected band : 0.349396 < r < 0.349396
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1696088623
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.471919 +/- 0.00257696 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.471919 @ 95%CL (1 toyMC)
median expected limit: r < 0.471919 @ 95%CL (1 toyMC)
   68% expected band : 0.471919 < r < 0.471919
   95% expected band : 0.471919 < r < 0.471919
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 452331895
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.352865 +/- 0.00256893 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.352865 @ 95%CL (1 toyMC)
median expected limit: r < 0.352865 @ 95%CL (1 toyMC)
   68% expected band : 0.352865 < r < 0.352865
   95% expected band : 0.352865 < r < 0.352865
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1342056902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.234632 +/- 0.0029307 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.234632 @ 95%CL (1 toyMC)
median expected limit: r < 0.234632 @ 95%CL (1 toyMC)
   68% expected band : 0.234632 < r < 0.234632
   95% expected band : 0.234632 < r < 0.234632
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1297485684
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.435092 +/- 0.00245482 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.435092 @ 95%CL (1 toyMC)
median expected limit: r < 0.435092 @ 95%CL (1 toyMC)
   68% expected band : 0.435092 < r < 0.435092
   95% expected band : 0.435092 < r < 0.435092
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1288851391
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.547498 +/- 0.00249968 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.547498 @ 95%CL (1 toyMC)
median expected limit: r < 0.547498 @ 95%CL (1 toyMC)
   68% expected band : 0.547498 < r < 0.547498
   95% expected band : 0.547498 < r < 0.547498
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -831431147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.458484 +/- 0.00257195 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.458484 @ 95%CL (1 toyMC)
median expected limit: r < 0.458484 @ 95%CL (1 toyMC)
   68% expected band : 0.458484 < r < 0.458484
   95% expected band : 0.458484 < r < 0.458484
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -652708662
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.338274 +/- 0.00198411 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.338274 @ 95%CL (1 toyMC)
median expected limit: r < 0.338274 @ 95%CL (1 toyMC)
   68% expected band : 0.338274 < r < 0.338274
   95% expected band : 0.338274 < r < 0.338274
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 120190186
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.378692 +/- 0.00302911 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.378692 @ 95%CL (1 toyMC)
median expected limit: r < 0.378692 @ 95%CL (1 toyMC)
   68% expected band : 0.378692 < r < 0.378692
   95% expected band : 0.378692 < r < 0.378692
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 285529473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.223608 +/- 0.00334501 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.223608 @ 95%CL (1 toyMC)
median expected limit: r < 0.223608 @ 95%CL (1 toyMC)
   68% expected band : 0.223608 < r < 0.223608
   95% expected band : 0.223608 < r < 0.223608
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1223871610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.319749 +/- 0.00266035 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.319749 @ 95%CL (1 toyMC)
median expected limit: r < 0.319749 @ 95%CL (1 toyMC)
   68% expected band : 0.319749 < r < 0.319749
   95% expected band : 0.319749 < r < 0.319749
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -838665781
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.324073 +/- 0.00219465 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.324073 @ 95%CL (1 toyMC)
median expected limit: r < 0.324073 @ 95%CL (1 toyMC)
   68% expected band : 0.324073 < r < 0.324073
   95% expected band : 0.324073 < r < 0.324073
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -450155218
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.451524 +/- 0.00291497 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.451524 @ 95%CL (1 toyMC)
median expected limit: r < 0.451524 @ 95%CL (1 toyMC)
   68% expected band : 0.451524 < r < 0.451524
   95% expected band : 0.451524 < r < 0.451524
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 450645449
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.249604 +/- 0.00272214 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.249604 @ 95%CL (1 toyMC)
median expected limit: r < 0.249604 @ 95%CL (1 toyMC)
   68% expected band : 0.249604 < r < 0.249604
   95% expected band : 0.249604 < r < 0.249604
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -796573279
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.286493 +/- 0.00287197 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.286493 @ 95%CL (1 toyMC)
median expected limit: r < 0.286493 @ 95%CL (1 toyMC)
   68% expected band : 0.286493 < r < 0.286493
   95% expected band : 0.286493 < r < 0.286493
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1475569134
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.742652 +/- 0.00232612 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.742652 @ 95%CL (1 toyMC)
median expected limit: r < 0.742652 @ 95%CL (1 toyMC)
   68% expected band : 0.742652 < r < 0.742652
   95% expected band : 0.742652 < r < 0.742652
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1384867481
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.589041 +/- 0.00243436 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.589041 @ 95%CL (1 toyMC)
median expected limit: r < 0.589041 @ 95%CL (1 toyMC)
   68% expected band : 0.589041 < r < 0.589041
   95% expected band : 0.589041 < r < 0.589041
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1464254291
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.440648 +/- 0.00260415 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.440648 @ 95%CL (1 toyMC)
median expected limit: r < 0.440648 @ 95%CL (1 toyMC)
   68% expected band : 0.440648 < r < 0.440648
   95% expected band : 0.440648 < r < 0.440648
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -668054907
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.479829 +/- 0.00205612 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.479829 @ 95%CL (1 toyMC)
median expected limit: r < 0.479829 @ 95%CL (1 toyMC)
   68% expected band : 0.479829 < r < 0.479829
   95% expected band : 0.479829 < r < 0.479829
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 17743949
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.337263 +/- 0.00241883 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.337263 @ 95%CL (1 toyMC)
median expected limit: r < 0.337263 @ 95%CL (1 toyMC)
   68% expected band : 0.337263 < r < 0.337263
   95% expected band : 0.337263 < r < 0.337263
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1620316108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.568416 +/- 0.00308591 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.568416 @ 95%CL (1 toyMC)
median expected limit: r < 0.568416 @ 95%CL (1 toyMC)
   68% expected band : 0.568416 < r < 0.568416
   95% expected band : 0.568416 < r < 0.568416
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1871813828
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.31432 +/- 0.00251197 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.31432 @ 95%CL (1 toyMC)
median expected limit: r < 0.31432 @ 95%CL (1 toyMC)
   68% expected band : 0.31432 < r < 0.31432
   95% expected band : 0.31432 < r < 0.31432
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -330653074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.482379 +/- 0.00268401 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.482379 @ 95%CL (1 toyMC)
median expected limit: r < 0.482379 @ 95%CL (1 toyMC)
   68% expected band : 0.482379 < r < 0.482379
   95% expected band : 0.482379 < r < 0.482379
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2112851020
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.32454 +/- 0.00253806 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.32454 @ 95%CL (1 toyMC)
median expected limit: r < 0.32454 @ 95%CL (1 toyMC)
   68% expected band : 0.32454 < r < 0.32454
   95% expected band : 0.32454 < r < 0.32454
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1680734171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.314754 +/- 0.00272349 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.314754 @ 95%CL (1 toyMC)
median expected limit: r < 0.314754 @ 95%CL (1 toyMC)
   68% expected band : 0.314754 < r < 0.314754
   95% expected band : 0.314754 < r < 0.314754
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2002088338
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.364648 +/- 0.00231626 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.364648 @ 95%CL (1 toyMC)
median expected limit: r < 0.364648 @ 95%CL (1 toyMC)
   68% expected band : 0.364648 < r < 0.364648
   95% expected band : 0.364648 < r < 0.364648
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 638861471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.717752 +/- 0.00302141 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.717752 @ 95%CL (1 toyMC)
median expected limit: r < 0.717752 @ 95%CL (1 toyMC)
   68% expected band : 0.717752 < r < 0.717752
   95% expected band : 0.717752 < r < 0.717752
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1262730866
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.339039 +/- 0.00332661 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.339039 @ 95%CL (1 toyMC)
median expected limit: r < 0.339039 @ 95%CL (1 toyMC)
   68% expected band : 0.339039 < r < 0.339039
   95% expected band : 0.339039 < r < 0.339039
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1542898460
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.326918 +/- 0.00225647 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.326918 @ 95%CL (1 toyMC)
median expected limit: r < 0.326918 @ 95%CL (1 toyMC)
   68% expected band : 0.326918 < r < 0.326918
   95% expected band : 0.326918 < r < 0.326918
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -141512154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.409474 +/- 0.00210004 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.409474 @ 95%CL (1 toyMC)
median expected limit: r < 0.409474 @ 95%CL (1 toyMC)
   68% expected band : 0.409474 < r < 0.409474
   95% expected band : 0.409474 < r < 0.409474
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine22.MarkovChainMC.mH22.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH22.-1040448812.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH22.-1071539053.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH22.-1108768382.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH22.-1199027751.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH22.-1221343393.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH22.-1223871610.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH22.-1262730866.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH22.-1288851391.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH22.-1307096216.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH22.-1315132910.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH22.-1316075805.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH22.-1382027762.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH22.-141512154.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH22.-142402371.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH22.-1507517236.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH22.-1542898460.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH22.-1620316108.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH22.-1801561347.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH22.-1828009599.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH22.-1898738409.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH22.-1922762308.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH22.-2002088338.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH22.-2027765522.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH22.-2112851020.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH22.-316372891.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH22.-330653074.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH22.-336002901.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH22.-409743550.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH22.-450155218.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH22.-475948376.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH22.-51851993.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH22.-551219409.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH22.-568074227.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH22.-576557382.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH22.-582099893.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH22.-652708662.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH22.-668054907.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH22.-670472181.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH22.-777846955.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH22.-796573279.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH22.-831431147.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH22.-838665781.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH22.-884215299.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH22.-927352481.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH22.-938259046.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH22.-991329079.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH22.1075735105.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH22.1076608424.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH22.1085251373.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH22.1095137420.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH22.1106161816.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH22.1155170110.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH22.120190186.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH22.1266659489.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH22.1296360852.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH22.1297485684.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH22.1340315342.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH22.1342056902.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH22.1368972979.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH22.1384867481.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH22.1420526289.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH22.145728815.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH22.1461326166.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH22.1464254291.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH22.1469508527.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH22.1475569134.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH22.1482093340.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH22.1496652554.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH22.1535987833.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH22.159860900.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH22.1626853313.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH22.1628845196.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH22.1680734171.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH22.1695657548.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH22.1696088623.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH22.1774315410.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH22.17743949.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH22.1786305313.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH22.1812718404.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH22.1871813828.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH22.1877206890.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH22.1915992009.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH22.1947644498.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH22.2131054837.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH22.213957819.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH22.285529473.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH22.289028483.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH22.340246094.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH22.364048282.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH22.378477544.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH22.450645449.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH22.452331895.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH22.559835193.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH22.638861471.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH22.649885241.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH22.676846184.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH22.701702064.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH22.774552143.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH22.862515468.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH22.958569543.root
hadd Target path: higgsCombine22.MarkovChainMC.mH22.root:/
hadd Target path: higgsCombine22.MarkovChainMC.mH22.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1824492773
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.907346 +/- 0.00228563 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.907346 @ 95%CL (1 toyMC)
median expected limit: r < 0.907346 @ 95%CL (1 toyMC)
   68% expected band : 0.907346 < r < 0.907346
   95% expected band : 0.907346 < r < 0.907346
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -57573120
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.717203 +/- 0.00350183 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.717203 @ 95%CL (1 toyMC)
median expected limit: r < 0.717203 @ 95%CL (1 toyMC)
   68% expected band : 0.717203 < r < 0.717203
   95% expected band : 0.717203 < r < 0.717203
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -128756861
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19944 +/- 0.00314187 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.19944 @ 95%CL (1 toyMC)
median expected limit: r < 1.19944 @ 95%CL (1 toyMC)
   68% expected band : 1.19944 < r < 1.19944
   95% expected band : 1.19944 < r < 1.19944
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1546164346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11683 +/- 0.00329278 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 1.11683 @ 95%CL (1 toyMC)
median expected limit: r < 1.11683 @ 95%CL (1 toyMC)
   68% expected band : 1.11683 < r < 1.11683
   95% expected band : 1.11683 < r < 1.11683
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 314141484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.737963 +/- 0.0031671 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.737963 @ 95%CL (1 toyMC)
median expected limit: r < 0.737963 @ 95%CL (1 toyMC)
   68% expected band : 0.737963 < r < 0.737963
   95% expected band : 0.737963 < r < 0.737963
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 603042182
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.791799 +/- 0.00380622 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.791799 @ 95%CL (1 toyMC)
median expected limit: r < 0.791799 @ 95%CL (1 toyMC)
   68% expected band : 0.791799 < r < 0.791799
   95% expected band : 0.791799 < r < 0.791799
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -98404018
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16492 +/- 0.00297905 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.16492 @ 95%CL (1 toyMC)
median expected limit: r < 1.16492 @ 95%CL (1 toyMC)
   68% expected band : 1.16492 < r < 1.16492
   95% expected band : 1.16492 < r < 1.16492
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1416885400
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.745098 +/- 0.00353533 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.745098 @ 95%CL (1 toyMC)
median expected limit: r < 0.745098 @ 95%CL (1 toyMC)
   68% expected band : 0.745098 < r < 0.745098
   95% expected band : 0.745098 < r < 0.745098
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1526008171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.806443 +/- 0.00267589 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.806443 @ 95%CL (1 toyMC)
median expected limit: r < 0.806443 @ 95%CL (1 toyMC)
   68% expected band : 0.806443 < r < 0.806443
   95% expected band : 0.806443 < r < 0.806443
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1758655337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.789177 +/- 0.00299193 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.789177 @ 95%CL (1 toyMC)
median expected limit: r < 0.789177 @ 95%CL (1 toyMC)
   68% expected band : 0.789177 < r < 0.789177
   95% expected band : 0.789177 < r < 0.789177
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1125764373
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.809755 +/- 0.00328048 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.809755 @ 95%CL (1 toyMC)
median expected limit: r < 0.809755 @ 95%CL (1 toyMC)
   68% expected band : 0.809755 < r < 0.809755
   95% expected band : 0.809755 < r < 0.809755
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -833724111
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.852103 +/- 0.00325143 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.852103 @ 95%CL (1 toyMC)
median expected limit: r < 0.852103 @ 95%CL (1 toyMC)
   68% expected band : 0.852103 < r < 0.852103
   95% expected band : 0.852103 < r < 0.852103
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1801511334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10832 +/- 0.00373559 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.10832 @ 95%CL (1 toyMC)
median expected limit: r < 1.10832 @ 95%CL (1 toyMC)
   68% expected band : 1.10832 < r < 1.10832
   95% expected band : 1.10832 < r < 1.10832
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1134577725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.72511 +/- 0.00295353 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.72511 @ 95%CL (1 toyMC)
median expected limit: r < 0.72511 @ 95%CL (1 toyMC)
   68% expected band : 0.72511 < r < 0.72511
   95% expected band : 0.72511 < r < 0.72511
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2126370102
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.810083 +/- 0.00276186 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.810083 @ 95%CL (1 toyMC)
median expected limit: r < 0.810083 @ 95%CL (1 toyMC)
   68% expected band : 0.810083 < r < 0.810083
   95% expected band : 0.810083 < r < 0.810083
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -404837040
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.554658 +/- 0.00289174 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.554658 @ 95%CL (1 toyMC)
median expected limit: r < 0.554658 @ 95%CL (1 toyMC)
   68% expected band : 0.554658 < r < 0.554658
   95% expected band : 0.554658 < r < 0.554658
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1304222892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.945226 +/- 0.0029214 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.945226 @ 95%CL (1 toyMC)
median expected limit: r < 0.945226 @ 95%CL (1 toyMC)
   68% expected band : 0.945226 < r < 0.945226
   95% expected band : 0.945226 < r < 0.945226
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2060183951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.534407 +/- 0.00289422 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.534407 @ 95%CL (1 toyMC)
median expected limit: r < 0.534407 @ 95%CL (1 toyMC)
   68% expected band : 0.534407 < r < 0.534407
   95% expected band : 0.534407 < r < 0.534407
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 632159131
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.965453 +/- 0.00327157 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.965453 @ 95%CL (1 toyMC)
median expected limit: r < 0.965453 @ 95%CL (1 toyMC)
   68% expected band : 0.965453 < r < 0.965453
   95% expected band : 0.965453 < r < 0.965453
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -349805260
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.855517 +/- 0.00263475 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.855517 @ 95%CL (1 toyMC)
median expected limit: r < 0.855517 @ 95%CL (1 toyMC)
   68% expected band : 0.855517 < r < 0.855517
   95% expected band : 0.855517 < r < 0.855517
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 84729394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.919854 +/- 0.00265498 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.919854 @ 95%CL (1 toyMC)
median expected limit: r < 0.919854 @ 95%CL (1 toyMC)
   68% expected band : 0.919854 < r < 0.919854
   95% expected band : 0.919854 < r < 0.919854
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -376118870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.681919 +/- 0.00314862 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.681919 @ 95%CL (1 toyMC)
median expected limit: r < 0.681919 @ 95%CL (1 toyMC)
   68% expected band : 0.681919 < r < 0.681919
   95% expected band : 0.681919 < r < 0.681919
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1817954199
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.765588 +/- 0.002808 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.765588 @ 95%CL (1 toyMC)
median expected limit: r < 0.765588 @ 95%CL (1 toyMC)
   68% expected band : 0.765588 < r < 0.765588
   95% expected band : 0.765588 < r < 0.765588
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1508631107
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78179 +/- 0.00390675 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.78179 @ 95%CL (1 toyMC)
median expected limit: r < 1.78179 @ 95%CL (1 toyMC)
   68% expected band : 1.78179 < r < 1.78179
   95% expected band : 1.78179 < r < 1.78179
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1873699044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02997 +/- 0.00295718 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.02997 @ 95%CL (1 toyMC)
median expected limit: r < 1.02997 @ 95%CL (1 toyMC)
   68% expected band : 1.02997 < r < 1.02997
   95% expected band : 1.02997 < r < 1.02997
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 956760961
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.825176 +/- 0.0033066 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.825176 @ 95%CL (1 toyMC)
median expected limit: r < 0.825176 @ 95%CL (1 toyMC)
   68% expected band : 0.825176 < r < 0.825176
   95% expected band : 0.825176 < r < 0.825176
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1844910368
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.754432 +/- 0.00294366 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.754432 @ 95%CL (1 toyMC)
median expected limit: r < 0.754432 @ 95%CL (1 toyMC)
   68% expected band : 0.754432 < r < 0.754432
   95% expected band : 0.754432 < r < 0.754432
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -693622787
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13583 +/- 0.00307184 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.13583 @ 95%CL (1 toyMC)
median expected limit: r < 1.13583 @ 95%CL (1 toyMC)
   68% expected band : 1.13583 < r < 1.13583
   95% expected band : 1.13583 < r < 1.13583
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 670465408
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.860235 +/- 0.00286838 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.860235 @ 95%CL (1 toyMC)
median expected limit: r < 0.860235 @ 95%CL (1 toyMC)
   68% expected band : 0.860235 < r < 0.860235
   95% expected band : 0.860235 < r < 0.860235
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 757863630
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.844339 +/- 0.00355397 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.844339 @ 95%CL (1 toyMC)
median expected limit: r < 0.844339 @ 95%CL (1 toyMC)
   68% expected band : 0.844339 < r < 0.844339
   95% expected band : 0.844339 < r < 0.844339
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 761820357
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.914112 +/- 0.00277297 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.914112 @ 95%CL (1 toyMC)
median expected limit: r < 0.914112 @ 95%CL (1 toyMC)
   68% expected band : 0.914112 < r < 0.914112
   95% expected band : 0.914112 < r < 0.914112
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1328980899
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.596651 +/- 0.0033742 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.596651 @ 95%CL (1 toyMC)
median expected limit: r < 0.596651 @ 95%CL (1 toyMC)
   68% expected band : 0.596651 < r < 0.596651
   95% expected band : 0.596651 < r < 0.596651
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1995457814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0065 +/- 0.00338253 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.0065 @ 95%CL (1 toyMC)
median expected limit: r < 1.0065 @ 95%CL (1 toyMC)
   68% expected band : 1.0065 < r < 1.0065
   95% expected band : 1.0065 < r < 1.0065
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1946388502
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76376 +/- 0.00490068 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.76376 @ 95%CL (1 toyMC)
median expected limit: r < 1.76376 @ 95%CL (1 toyMC)
   68% expected band : 1.76376 < r < 1.76376
   95% expected band : 1.76376 < r < 1.76376
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 379123286
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.766498 +/- 0.00296893 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.766498 @ 95%CL (1 toyMC)
median expected limit: r < 0.766498 @ 95%CL (1 toyMC)
   68% expected band : 0.766498 < r < 0.766498
   95% expected band : 0.766498 < r < 0.766498
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -948203751
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.906126 +/- 0.00283192 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.906126 @ 95%CL (1 toyMC)
median expected limit: r < 0.906126 @ 95%CL (1 toyMC)
   68% expected band : 0.906126 < r < 0.906126
   95% expected band : 0.906126 < r < 0.906126
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 883848166
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.551134 +/- 0.00333475 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.551134 @ 95%CL (1 toyMC)
median expected limit: r < 0.551134 @ 95%CL (1 toyMC)
   68% expected band : 0.551134 < r < 0.551134
   95% expected band : 0.551134 < r < 0.551134
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -63357195
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21554 +/- 0.00363686 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.21554 @ 95%CL (1 toyMC)
median expected limit: r < 1.21554 @ 95%CL (1 toyMC)
   68% expected band : 1.21554 < r < 1.21554
   95% expected band : 1.21554 < r < 1.21554
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1097945280
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.94579 +/- 0.00313432 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.94579 @ 95%CL (1 toyMC)
median expected limit: r < 0.94579 @ 95%CL (1 toyMC)
   68% expected band : 0.94579 < r < 0.94579
   95% expected band : 0.94579 < r < 0.94579
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1825833492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.982979 +/- 0.00413087 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.982979 @ 95%CL (1 toyMC)
median expected limit: r < 0.982979 @ 95%CL (1 toyMC)
   68% expected band : 0.982979 < r < 0.982979
   95% expected band : 0.982979 < r < 0.982979
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1429385643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46729 +/- 0.00332403 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.46729 @ 95%CL (1 toyMC)
median expected limit: r < 1.46729 @ 95%CL (1 toyMC)
   68% expected band : 1.46729 < r < 1.46729
   95% expected band : 1.46729 < r < 1.46729
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1533393763
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10998 +/- 0.00352076 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.10998 @ 95%CL (1 toyMC)
median expected limit: r < 1.10998 @ 95%CL (1 toyMC)
   68% expected band : 1.10998 < r < 1.10998
   95% expected band : 1.10998 < r < 1.10998
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1309087457
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.727906 +/- 0.00343237 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.727906 @ 95%CL (1 toyMC)
median expected limit: r < 0.727906 @ 95%CL (1 toyMC)
   68% expected band : 0.727906 < r < 0.727906
   95% expected band : 0.727906 < r < 0.727906
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -879847646
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.791577 +/- 0.00357733 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.791577 @ 95%CL (1 toyMC)
median expected limit: r < 0.791577 @ 95%CL (1 toyMC)
   68% expected band : 0.791577 < r < 0.791577
   95% expected band : 0.791577 < r < 0.791577
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1381886397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.691909 +/- 0.00248946 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.691909 @ 95%CL (1 toyMC)
median expected limit: r < 0.691909 @ 95%CL (1 toyMC)
   68% expected band : 0.691909 < r < 0.691909
   95% expected band : 0.691909 < r < 0.691909
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1041166379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.826471 +/- 0.0034483 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.826471 @ 95%CL (1 toyMC)
median expected limit: r < 0.826471 @ 95%CL (1 toyMC)
   68% expected band : 0.826471 < r < 0.826471
   95% expected band : 0.826471 < r < 0.826471
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -601021454
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.868325 +/- 0.00273595 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.868325 @ 95%CL (1 toyMC)
median expected limit: r < 0.868325 @ 95%CL (1 toyMC)
   68% expected band : 0.868325 < r < 0.868325
   95% expected band : 0.868325 < r < 0.868325
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1998278892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.799221 +/- 0.00369577 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.799221 @ 95%CL (1 toyMC)
median expected limit: r < 0.799221 @ 95%CL (1 toyMC)
   68% expected band : 0.799221 < r < 0.799221
   95% expected band : 0.799221 < r < 0.799221
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1490433176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06913 +/- 0.00322895 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.06913 @ 95%CL (1 toyMC)
median expected limit: r < 1.06913 @ 95%CL (1 toyMC)
   68% expected band : 1.06913 < r < 1.06913
   95% expected band : 1.06913 < r < 1.06913
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -566761952
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.8793 +/- 0.00276436 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.8793 @ 95%CL (1 toyMC)
median expected limit: r < 0.8793 @ 95%CL (1 toyMC)
   68% expected band : 0.8793 < r < 0.8793
   95% expected band : 0.8793 < r < 0.8793
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -42757939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41346 +/- 0.00440235 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.41346 @ 95%CL (1 toyMC)
median expected limit: r < 1.41346 @ 95%CL (1 toyMC)
   68% expected band : 1.41346 < r < 1.41346
   95% expected band : 1.41346 < r < 1.41346
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 216715295
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.43647 +/- 0.00374857 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.43647 @ 95%CL (1 toyMC)
median expected limit: r < 1.43647 @ 95%CL (1 toyMC)
   68% expected band : 1.43647 < r < 1.43647
   95% expected band : 1.43647 < r < 1.43647
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 683222415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.770125 +/- 0.00365927 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 0.770125 @ 95%CL (1 toyMC)
median expected limit: r < 0.770125 @ 95%CL (1 toyMC)
   68% expected band : 0.770125 < r < 0.770125
   95% expected band : 0.770125 < r < 0.770125
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -895890986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23942 +/- 0.00330522 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.23942 @ 95%CL (1 toyMC)
median expected limit: r < 1.23942 @ 95%CL (1 toyMC)
   68% expected band : 1.23942 < r < 1.23942
   95% expected band : 1.23942 < r < 1.23942
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 359897126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33771 +/- 0.00367246 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.33771 @ 95%CL (1 toyMC)
median expected limit: r < 1.33771 @ 95%CL (1 toyMC)
   68% expected band : 1.33771 < r < 1.33771
   95% expected band : 1.33771 < r < 1.33771
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1912894645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.82076 +/- 0.00407912 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.82076 @ 95%CL (1 toyMC)
median expected limit: r < 0.82076 @ 95%CL (1 toyMC)
   68% expected band : 0.82076 < r < 0.82076
   95% expected band : 0.82076 < r < 0.82076
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2028676757
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.17819 +/- 0.00282708 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.17819 @ 95%CL (1 toyMC)
median expected limit: r < 1.17819 @ 95%CL (1 toyMC)
   68% expected band : 1.17819 < r < 1.17819
   95% expected band : 1.17819 < r < 1.17819
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -524604620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05241 +/- 0.00405277 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.05241 @ 95%CL (1 toyMC)
median expected limit: r < 1.05241 @ 95%CL (1 toyMC)
   68% expected band : 1.05241 < r < 1.05241
   95% expected band : 1.05241 < r < 1.05241
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1179695462
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22373 +/- 0.00340418 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.22373 @ 95%CL (1 toyMC)
median expected limit: r < 1.22373 @ 95%CL (1 toyMC)
   68% expected band : 1.22373 < r < 1.22373
   95% expected band : 1.22373 < r < 1.22373
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1985603330
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.753604 +/- 0.00243237 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.753604 @ 95%CL (1 toyMC)
median expected limit: r < 0.753604 @ 95%CL (1 toyMC)
   68% expected band : 0.753604 < r < 0.753604
   95% expected band : 0.753604 < r < 0.753604
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 856025896
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.60787 +/- 0.00315761 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.60787 @ 95%CL (1 toyMC)
median expected limit: r < 1.60787 @ 95%CL (1 toyMC)
   68% expected band : 1.60787 < r < 1.60787
   95% expected band : 1.60787 < r < 1.60787
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 521611770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.991911 +/- 0.00409515 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.991911 @ 95%CL (1 toyMC)
median expected limit: r < 0.991911 @ 95%CL (1 toyMC)
   68% expected band : 0.991911 < r < 0.991911
   95% expected band : 0.991911 < r < 0.991911
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1800369968
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11756 +/- 0.00343728 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.11756 @ 95%CL (1 toyMC)
median expected limit: r < 2.11756 @ 95%CL (1 toyMC)
   68% expected band : 2.11756 < r < 2.11756
   95% expected band : 2.11756 < r < 2.11756
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 10952694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.62562 +/- 0.00337364 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.62562 @ 95%CL (1 toyMC)
median expected limit: r < 0.62562 @ 95%CL (1 toyMC)
   68% expected band : 0.62562 < r < 0.62562
   95% expected band : 0.62562 < r < 0.62562
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1383388092
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37938 +/- 0.00388731 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.37938 @ 95%CL (1 toyMC)
median expected limit: r < 1.37938 @ 95%CL (1 toyMC)
   68% expected band : 1.37938 < r < 1.37938
   95% expected band : 1.37938 < r < 1.37938
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1116917103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28362 +/- 0.00318845 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.28362 @ 95%CL (1 toyMC)
median expected limit: r < 1.28362 @ 95%CL (1 toyMC)
   68% expected band : 1.28362 < r < 1.28362
   95% expected band : 1.28362 < r < 1.28362
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2140842606
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81737 +/- 0.00336824 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.81737 @ 95%CL (1 toyMC)
median expected limit: r < 1.81737 @ 95%CL (1 toyMC)
   68% expected band : 1.81737 < r < 1.81737
   95% expected band : 1.81737 < r < 1.81737
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -315003728
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.878036 +/- 0.00330367 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.878036 @ 95%CL (1 toyMC)
median expected limit: r < 0.878036 @ 95%CL (1 toyMC)
   68% expected band : 0.878036 < r < 0.878036
   95% expected band : 0.878036 < r < 0.878036
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 986623692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.69086 +/- 0.00317032 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.69086 @ 95%CL (1 toyMC)
median expected limit: r < 0.69086 @ 95%CL (1 toyMC)
   68% expected band : 0.69086 < r < 0.69086
   95% expected band : 0.69086 < r < 0.69086
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 692564629
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.894987 +/- 0.00343046 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.894987 @ 95%CL (1 toyMC)
median expected limit: r < 0.894987 @ 95%CL (1 toyMC)
   68% expected band : 0.894987 < r < 0.894987
   95% expected band : 0.894987 < r < 0.894987
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -664791944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25025 +/- 0.00282411 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.25025 @ 95%CL (1 toyMC)
median expected limit: r < 1.25025 @ 95%CL (1 toyMC)
   68% expected band : 1.25025 < r < 1.25025
   95% expected band : 1.25025 < r < 1.25025
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 981813171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.686641 +/- 0.00250236 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.686641 @ 95%CL (1 toyMC)
median expected limit: r < 0.686641 @ 95%CL (1 toyMC)
   68% expected band : 0.686641 < r < 0.686641
   95% expected band : 0.686641 < r < 0.686641
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -94085003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.763381 +/- 0.00289188 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.763381 @ 95%CL (1 toyMC)
median expected limit: r < 0.763381 @ 95%CL (1 toyMC)
   68% expected band : 0.763381 < r < 0.763381
   95% expected band : 0.763381 < r < 0.763381
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -662179784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.764971 +/- 0.0030031 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.764971 @ 95%CL (1 toyMC)
median expected limit: r < 0.764971 @ 95%CL (1 toyMC)
   68% expected band : 0.764971 < r < 0.764971
   95% expected band : 0.764971 < r < 0.764971
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 676565500
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05142 +/- 0.00366219 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.05142 @ 95%CL (1 toyMC)
median expected limit: r < 1.05142 @ 95%CL (1 toyMC)
   68% expected band : 1.05142 < r < 1.05142
   95% expected band : 1.05142 < r < 1.05142
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1785955830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.995336 +/- 0.00347805 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.995336 @ 95%CL (1 toyMC)
median expected limit: r < 0.995336 @ 95%CL (1 toyMC)
   68% expected band : 0.995336 < r < 0.995336
   95% expected band : 0.995336 < r < 0.995336
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -876252957
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14067 +/- 0.0038105 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.14067 @ 95%CL (1 toyMC)
median expected limit: r < 1.14067 @ 95%CL (1 toyMC)
   68% expected band : 1.14067 < r < 1.14067
   95% expected band : 1.14067 < r < 1.14067
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1865609973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45084 +/- 0.00365299 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.45084 @ 95%CL (1 toyMC)
median expected limit: r < 1.45084 @ 95%CL (1 toyMC)
   68% expected band : 1.45084 < r < 1.45084
   95% expected band : 1.45084 < r < 1.45084
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 685117826
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19972 +/- 0.00281447 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.19972 @ 95%CL (1 toyMC)
median expected limit: r < 1.19972 @ 95%CL (1 toyMC)
   68% expected band : 1.19972 < r < 1.19972
   95% expected band : 1.19972 < r < 1.19972
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2093855550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.680129 +/- 0.00302352 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.680129 @ 95%CL (1 toyMC)
median expected limit: r < 0.680129 @ 95%CL (1 toyMC)
   68% expected band : 0.680129 < r < 0.680129
   95% expected band : 0.680129 < r < 0.680129
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1997286393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.50331 +/- 0.00275944 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.50331 @ 95%CL (1 toyMC)
median expected limit: r < 0.50331 @ 95%CL (1 toyMC)
   68% expected band : 0.50331 < r < 0.50331
   95% expected band : 0.50331 < r < 0.50331
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 963196715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.676283 +/- 0.00339376 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.676283 @ 95%CL (1 toyMC)
median expected limit: r < 0.676283 @ 95%CL (1 toyMC)
   68% expected band : 0.676283 < r < 0.676283
   95% expected band : 0.676283 < r < 0.676283
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1709348738
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39039 +/- 0.00386827 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.39039 @ 95%CL (1 toyMC)
median expected limit: r < 1.39039 @ 95%CL (1 toyMC)
   68% expected band : 1.39039 < r < 1.39039
   95% expected band : 1.39039 < r < 1.39039
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 152192017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.84786 +/- 0.00263479 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.84786 @ 95%CL (1 toyMC)
median expected limit: r < 0.84786 @ 95%CL (1 toyMC)
   68% expected band : 0.84786 < r < 0.84786
   95% expected band : 0.84786 < r < 0.84786
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2135563930
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.840384 +/- 0.0032034 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.840384 @ 95%CL (1 toyMC)
median expected limit: r < 0.840384 @ 95%CL (1 toyMC)
   68% expected band : 0.840384 < r < 0.840384
   95% expected band : 0.840384 < r < 0.840384
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 835423538
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.757995 +/- 0.00335689 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.757995 @ 95%CL (1 toyMC)
median expected limit: r < 0.757995 @ 95%CL (1 toyMC)
   68% expected band : 0.757995 < r < 0.757995
   95% expected band : 0.757995 < r < 0.757995
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1701776721
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.713023 +/- 0.00323313 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.713023 @ 95%CL (1 toyMC)
median expected limit: r < 0.713023 @ 95%CL (1 toyMC)
   68% expected band : 0.713023 < r < 0.713023
   95% expected band : 0.713023 < r < 0.713023
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -563216341
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.459363 +/- 0.00295286 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.459363 @ 95%CL (1 toyMC)
median expected limit: r < 0.459363 @ 95%CL (1 toyMC)
   68% expected band : 0.459363 < r < 0.459363
   95% expected band : 0.459363 < r < 0.459363
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1768282327
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.502491 +/- 0.00261779 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.502491 @ 95%CL (1 toyMC)
median expected limit: r < 0.502491 @ 95%CL (1 toyMC)
   68% expected band : 0.502491 < r < 0.502491
   95% expected band : 0.502491 < r < 0.502491
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1571868251
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30615 +/- 0.00433462 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.30615 @ 95%CL (1 toyMC)
median expected limit: r < 1.30615 @ 95%CL (1 toyMC)
   68% expected band : 1.30615 < r < 1.30615
   95% expected band : 1.30615 < r < 1.30615
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1057372580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37028 +/- 0.00440842 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 1.37028 @ 95%CL (1 toyMC)
median expected limit: r < 1.37028 @ 95%CL (1 toyMC)
   68% expected band : 1.37028 < r < 1.37028
   95% expected band : 1.37028 < r < 1.37028
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -94198148
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.77772 +/- 0.00262795 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.77772 @ 95%CL (1 toyMC)
median expected limit: r < 0.77772 @ 95%CL (1 toyMC)
   68% expected band : 0.77772 < r < 0.77772
   95% expected band : 0.77772 < r < 0.77772
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -660505114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.635158 +/- 0.00349006 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.635158 @ 95%CL (1 toyMC)
median expected limit: r < 0.635158 @ 95%CL (1 toyMC)
   68% expected band : 0.635158 < r < 0.635158
   95% expected band : 0.635158 < r < 0.635158
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1370722524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.744145 +/- 0.00256189 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.744145 @ 95%CL (1 toyMC)
median expected limit: r < 0.744145 @ 95%CL (1 toyMC)
   68% expected band : 0.744145 < r < 0.744145
   95% expected band : 0.744145 < r < 0.744145
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 312145450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.773495 +/- 0.00271431 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.773495 @ 95%CL (1 toyMC)
median expected limit: r < 0.773495 @ 95%CL (1 toyMC)
   68% expected band : 0.773495 < r < 0.773495
   95% expected band : 0.773495 < r < 0.773495
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 709257002
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.752819 +/- 0.00370351 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.752819 @ 95%CL (1 toyMC)
median expected limit: r < 0.752819 @ 95%CL (1 toyMC)
   68% expected band : 0.752819 < r < 0.752819
   95% expected band : 0.752819 < r < 0.752819
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 900502999
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.753197 +/- 0.00319918 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.753197 @ 95%CL (1 toyMC)
median expected limit: r < 0.753197 @ 95%CL (1 toyMC)
   68% expected band : 0.753197 < r < 0.753197
   95% expected band : 0.753197 < r < 0.753197
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1988419243
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.564593 +/- 0.00313484 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.564593 @ 95%CL (1 toyMC)
median expected limit: r < 0.564593 @ 95%CL (1 toyMC)
   68% expected band : 0.564593 < r < 0.564593
   95% expected band : 0.564593 < r < 0.564593
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2048054620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02554 +/- 0.00348498 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 1.02554 @ 95%CL (1 toyMC)
median expected limit: r < 1.02554 @ 95%CL (1 toyMC)
   68% expected band : 1.02554 < r < 1.02554
   95% expected band : 1.02554 < r < 1.02554
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2118807068
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.620525 +/- 0.00362486 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.620525 @ 95%CL (1 toyMC)
median expected limit: r < 0.620525 @ 95%CL (1 toyMC)
   68% expected band : 0.620525 < r < 0.620525
   95% expected band : 0.620525 < r < 0.620525
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine28.MarkovChainMC.mH28.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH28.-1041166379.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH28.-1097945280.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH28.-1125764373.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH28.-1134577725.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH28.-1179695462.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH28.-128756861.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH28.-1328980899.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH28.-1370722524.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH28.-1383388092.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH28.-1416885400.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH28.-1429385643.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH28.-1490433176.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH28.-1526008171.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH28.-1533393763.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH28.-1546164346.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH28.-1571868251.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH28.-1701776721.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH28.-1709348738.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH28.-1768282327.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH28.-1785955830.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH28.-1817954199.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH28.-1825833492.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH28.-1873699044.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH28.-1985603330.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH28.-1997286393.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH28.-1998278892.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH28.-2028676757.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH28.-315003728.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH28.-349805260.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH28.-376118870.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH28.-404837040.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH28.-42757939.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH28.-524604620.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH28.-563216341.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH28.-566761952.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH28.-57573120.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH28.-601021454.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH28.-63357195.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH28.-660505114.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH28.-662179784.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH28.-664791944.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH28.-693622787.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH28.-833724111.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH28.-876252957.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH28.-879847646.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH28.-895890986.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH28.-94085003.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH28.-94198148.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH28.-948203751.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH28.-98404018.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH28.1057372580.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH28.10952694.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH28.1116917103.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH28.1304222892.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH28.1309087457.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH28.1381886397.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH28.1508631107.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH28.152192017.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH28.1758655337.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH28.1800369968.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH28.1801511334.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH28.1824492773.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH28.1844910368.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH28.1865609973.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH28.1912894645.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH28.1946388502.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH28.1988419243.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH28.1995457814.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH28.2048054620.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH28.2060183951.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH28.2093855550.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH28.2118807068.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH28.2126370102.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH28.2135563930.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH28.2140842606.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH28.216715295.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH28.312145450.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH28.314141484.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH28.359897126.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH28.379123286.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH28.521611770.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH28.603042182.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH28.632159131.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH28.670465408.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH28.676565500.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH28.683222415.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH28.685117826.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH28.692564629.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH28.709257002.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH28.757863630.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH28.761820357.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH28.835423538.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH28.84729394.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH28.856025896.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH28.883848166.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH28.900502999.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH28.956760961.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH28.963196715.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH28.981813171.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH28.986623692.root
hadd Target path: higgsCombine28.MarkovChainMC.mH28.root:/
hadd Target path: higgsCombine28.MarkovChainMC.mH28.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1979619450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12674 +/- 0.0031086 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.12674 @ 95%CL (1 toyMC)
median expected limit: r < 1.12674 @ 95%CL (1 toyMC)
   68% expected band : 1.12674 < r < 1.12674
   95% expected band : 1.12674 < r < 1.12674
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 609170688
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23725 +/- 0.00324555 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.23725 @ 95%CL (1 toyMC)
median expected limit: r < 1.23725 @ 95%CL (1 toyMC)
   68% expected band : 1.23725 < r < 1.23725
   95% expected band : 1.23725 < r < 1.23725
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1453277165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30263 +/- 0.00434947 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.30263 @ 95%CL (1 toyMC)
median expected limit: r < 1.30263 @ 95%CL (1 toyMC)
   68% expected band : 1.30263 < r < 1.30263
   95% expected band : 1.30263 < r < 1.30263
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -630320483
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24849 +/- 0.00397674 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.24849 @ 95%CL (1 toyMC)
median expected limit: r < 1.24849 @ 95%CL (1 toyMC)
   68% expected band : 1.24849 < r < 1.24849
   95% expected band : 1.24849 < r < 1.24849
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2065391274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25652 +/- 0.00374308 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.25652 @ 95%CL (1 toyMC)
median expected limit: r < 1.25652 @ 95%CL (1 toyMC)
   68% expected band : 1.25652 < r < 1.25652
   95% expected band : 1.25652 < r < 1.25652
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -943857394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41847 +/- 0.00345092 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.41847 @ 95%CL (1 toyMC)
median expected limit: r < 1.41847 @ 95%CL (1 toyMC)
   68% expected band : 1.41847 < r < 1.41847
   95% expected band : 1.41847 < r < 1.41847
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1827671801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.78541 +/- 0.00311607 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.78541 @ 95%CL (1 toyMC)
median expected limit: r < 0.78541 @ 95%CL (1 toyMC)
   68% expected band : 0.78541 < r < 0.78541
   95% expected band : 0.78541 < r < 0.78541
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -224354752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44875 +/- 0.00326198 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.44875 @ 95%CL (1 toyMC)
median expected limit: r < 1.44875 @ 95%CL (1 toyMC)
   68% expected band : 1.44875 < r < 1.44875
   95% expected band : 1.44875 < r < 1.44875
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1978397950
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.802243 +/- 0.00378226 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.802243 @ 95%CL (1 toyMC)
median expected limit: r < 0.802243 @ 95%CL (1 toyMC)
   68% expected band : 0.802243 < r < 0.802243
   95% expected band : 0.802243 < r < 0.802243
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1281596352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20909 +/- 0.00382226 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.20909 @ 95%CL (1 toyMC)
median expected limit: r < 1.20909 @ 95%CL (1 toyMC)
   68% expected band : 1.20909 < r < 1.20909
   95% expected band : 1.20909 < r < 1.20909
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 32386634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.31408 +/- 0.0032698 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.31408 @ 95%CL (1 toyMC)
median expected limit: r < 1.31408 @ 95%CL (1 toyMC)
   68% expected band : 1.31408 < r < 1.31408
   95% expected band : 1.31408 < r < 1.31408
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1267063943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0738 +/- 0.00384273 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.0738 @ 95%CL (1 toyMC)
median expected limit: r < 1.0738 @ 95%CL (1 toyMC)
   68% expected band : 1.0738 < r < 1.0738
   95% expected band : 1.0738 < r < 1.0738
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2087906708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8876 +/- 0.00401915 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.8876 @ 95%CL (1 toyMC)
median expected limit: r < 1.8876 @ 95%CL (1 toyMC)
   68% expected band : 1.8876 < r < 1.8876
   95% expected band : 1.8876 < r < 1.8876
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1140381424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.998961 +/- 0.00383308 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.998961 @ 95%CL (1 toyMC)
median expected limit: r < 0.998961 @ 95%CL (1 toyMC)
   68% expected band : 0.998961 < r < 0.998961
   95% expected band : 0.998961 < r < 0.998961
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 357216334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.920879 +/- 0.00334209 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.920879 @ 95%CL (1 toyMC)
median expected limit: r < 0.920879 @ 95%CL (1 toyMC)
   68% expected band : 0.920879 < r < 0.920879
   95% expected band : 0.920879 < r < 0.920879
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1492308204
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24311 +/- 0.00415983 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.24311 @ 95%CL (1 toyMC)
median expected limit: r < 1.24311 @ 95%CL (1 toyMC)
   68% expected band : 1.24311 < r < 1.24311
   95% expected band : 1.24311 < r < 1.24311
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 567724028
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.743217 +/- 0.003299 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.743217 @ 95%CL (1 toyMC)
median expected limit: r < 0.743217 @ 95%CL (1 toyMC)
   68% expected band : 0.743217 < r < 0.743217
   95% expected band : 0.743217 < r < 0.743217
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1540827032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12914 +/- 0.00288124 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.12914 @ 95%CL (1 toyMC)
median expected limit: r < 1.12914 @ 95%CL (1 toyMC)
   68% expected band : 1.12914 < r < 1.12914
   95% expected band : 1.12914 < r < 1.12914
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 380108265
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51866 +/- 0.0038062 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.51866 @ 95%CL (1 toyMC)
median expected limit: r < 1.51866 @ 95%CL (1 toyMC)
   68% expected band : 1.51866 < r < 1.51866
   95% expected band : 1.51866 < r < 1.51866
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -534728413
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91262 +/- 0.00310397 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.91262 @ 95%CL (1 toyMC)
median expected limit: r < 1.91262 @ 95%CL (1 toyMC)
   68% expected band : 1.91262 < r < 1.91262
   95% expected band : 1.91262 < r < 1.91262
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2064318513
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80292 +/- 0.00454441 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.80292 @ 95%CL (1 toyMC)
median expected limit: r < 1.80292 @ 95%CL (1 toyMC)
   68% expected band : 1.80292 < r < 1.80292
   95% expected band : 1.80292 < r < 1.80292
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -191758740
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.69362 +/- 0.00376357 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.69362 @ 95%CL (1 toyMC)
median expected limit: r < 1.69362 @ 95%CL (1 toyMC)
   68% expected band : 1.69362 < r < 1.69362
   95% expected band : 1.69362 < r < 1.69362
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2026535180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46795 +/- 0.0033715 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.46795 @ 95%CL (1 toyMC)
median expected limit: r < 1.46795 @ 95%CL (1 toyMC)
   68% expected band : 1.46795 < r < 1.46795
   95% expected band : 1.46795 < r < 1.46795
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1926866675
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00553 +/- 0.002975 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.00553 @ 95%CL (1 toyMC)
median expected limit: r < 1.00553 @ 95%CL (1 toyMC)
   68% expected band : 1.00553 < r < 1.00553
   95% expected band : 1.00553 < r < 1.00553
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2090643644
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.994556 +/- 0.00297509 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.994556 @ 95%CL (1 toyMC)
median expected limit: r < 0.994556 @ 95%CL (1 toyMC)
   68% expected band : 0.994556 < r < 0.994556
   95% expected band : 0.994556 < r < 0.994556
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -358321977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.899946 +/- 0.00382952 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.899946 @ 95%CL (1 toyMC)
median expected limit: r < 0.899946 @ 95%CL (1 toyMC)
   68% expected band : 0.899946 < r < 0.899946
   95% expected band : 0.899946 < r < 0.899946
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1968709631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41454 +/- 0.0043642 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.41454 @ 95%CL (1 toyMC)
median expected limit: r < 1.41454 @ 95%CL (1 toyMC)
   68% expected band : 1.41454 < r < 1.41454
   95% expected band : 1.41454 < r < 1.41454
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1534244472
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32288 +/- 0.00308612 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.32288 @ 95%CL (1 toyMC)
median expected limit: r < 1.32288 @ 95%CL (1 toyMC)
   68% expected band : 1.32288 < r < 1.32288
   95% expected band : 1.32288 < r < 1.32288
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1832036685
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22256 +/- 0.00280291 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.22256 @ 95%CL (1 toyMC)
median expected limit: r < 1.22256 @ 95%CL (1 toyMC)
   68% expected band : 1.22256 < r < 1.22256
   95% expected band : 1.22256 < r < 1.22256
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -643346247
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.772855 +/- 0.00323988 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.772855 @ 95%CL (1 toyMC)
median expected limit: r < 0.772855 @ 95%CL (1 toyMC)
   68% expected band : 0.772855 < r < 0.772855
   95% expected band : 0.772855 < r < 0.772855
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1032230194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.917701 +/- 0.00261678 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.917701 @ 95%CL (1 toyMC)
median expected limit: r < 0.917701 @ 95%CL (1 toyMC)
   68% expected band : 0.917701 < r < 0.917701
   95% expected band : 0.917701 < r < 0.917701
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -311152756
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01623 +/- 0.00271741 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.01623 @ 95%CL (1 toyMC)
median expected limit: r < 1.01623 @ 95%CL (1 toyMC)
   68% expected band : 1.01623 < r < 1.01623
   95% expected band : 1.01623 < r < 1.01623
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -637417806
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35795 +/- 0.00352486 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.35795 @ 95%CL (1 toyMC)
median expected limit: r < 1.35795 @ 95%CL (1 toyMC)
   68% expected band : 1.35795 < r < 1.35795
   95% expected band : 1.35795 < r < 1.35795
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 966907784
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.683524 +/- 0.00409605 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.683524 @ 95%CL (1 toyMC)
median expected limit: r < 0.683524 @ 95%CL (1 toyMC)
   68% expected band : 0.683524 < r < 0.683524
   95% expected band : 0.683524 < r < 0.683524
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1651431471
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07614 +/- 0.00445339 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.07614 @ 95%CL (1 toyMC)
median expected limit: r < 1.07614 @ 95%CL (1 toyMC)
   68% expected band : 1.07614 < r < 1.07614
   95% expected band : 1.07614 < r < 1.07614
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1063822652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73716 +/- 0.00329837 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.73716 @ 95%CL (1 toyMC)
median expected limit: r < 1.73716 @ 95%CL (1 toyMC)
   68% expected band : 1.73716 < r < 1.73716
   95% expected band : 1.73716 < r < 1.73716
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1713819073
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06601 +/- 0.00287123 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.06601 @ 95%CL (1 toyMC)
median expected limit: r < 1.06601 @ 95%CL (1 toyMC)
   68% expected band : 1.06601 < r < 1.06601
   95% expected band : 1.06601 < r < 1.06601
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1215864842
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.978401 +/- 0.00304589 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.978401 @ 95%CL (1 toyMC)
median expected limit: r < 0.978401 @ 95%CL (1 toyMC)
   68% expected band : 0.978401 < r < 0.978401
   95% expected band : 0.978401 < r < 0.978401
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 535204000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02613 +/- 0.00306323 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.02613 @ 95%CL (1 toyMC)
median expected limit: r < 1.02613 @ 95%CL (1 toyMC)
   68% expected band : 1.02613 < r < 1.02613
   95% expected band : 1.02613 < r < 1.02613
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1597730896
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02307 +/- 0.00386855 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.02307 @ 95%CL (1 toyMC)
median expected limit: r < 1.02307 @ 95%CL (1 toyMC)
   68% expected band : 1.02307 < r < 1.02307
   95% expected band : 1.02307 < r < 1.02307
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1516124612
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11681 +/- 0.0032493 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.11681 @ 95%CL (1 toyMC)
median expected limit: r < 1.11681 @ 95%CL (1 toyMC)
   68% expected band : 1.11681 < r < 1.11681
   95% expected band : 1.11681 < r < 1.11681
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1548167426
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.986127 +/- 0.00333398 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.986127 @ 95%CL (1 toyMC)
median expected limit: r < 0.986127 @ 95%CL (1 toyMC)
   68% expected band : 0.986127 < r < 0.986127
   95% expected band : 0.986127 < r < 0.986127
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 13946096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15821 +/- 0.00405204 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.15821 @ 95%CL (1 toyMC)
median expected limit: r < 1.15821 @ 95%CL (1 toyMC)
   68% expected band : 1.15821 < r < 1.15821
   95% expected band : 1.15821 < r < 1.15821
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1173994801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11559 +/- 0.00372561 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.11559 @ 95%CL (1 toyMC)
median expected limit: r < 1.11559 @ 95%CL (1 toyMC)
   68% expected band : 1.11559 < r < 1.11559
   95% expected band : 1.11559 < r < 1.11559
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2044569672
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08743 +/- 0.00402359 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.08743 @ 95%CL (1 toyMC)
median expected limit: r < 1.08743 @ 95%CL (1 toyMC)
   68% expected band : 1.08743 < r < 1.08743
   95% expected band : 1.08743 < r < 1.08743
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 292401409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.531084 +/- 0.00288602 @ 95% CL (100 tries)
Done in 0.35 min (cpu), 0.35 min (real)
mean   expected limit: r < 0.531084 @ 95%CL (1 toyMC)
median expected limit: r < 0.531084 @ 95%CL (1 toyMC)
   68% expected band : 0.531084 < r < 0.531084
   95% expected band : 0.531084 < r < 0.531084
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1997955769
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41685 +/- 0.00391095 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.41685 @ 95%CL (1 toyMC)
median expected limit: r < 1.41685 @ 95%CL (1 toyMC)
   68% expected band : 1.41685 < r < 1.41685
   95% expected band : 1.41685 < r < 1.41685
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 177813046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.64778 +/- 0.00305673 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.64778 @ 95%CL (1 toyMC)
median expected limit: r < 0.64778 @ 95%CL (1 toyMC)
   68% expected band : 0.64778 < r < 0.64778
   95% expected band : 0.64778 < r < 0.64778
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 785352063
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.708994 +/- 0.00269623 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.708994 @ 95%CL (1 toyMC)
median expected limit: r < 0.708994 @ 95%CL (1 toyMC)
   68% expected band : 0.708994 < r < 0.708994
   95% expected band : 0.708994 < r < 0.708994
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -520298850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23426 +/- 0.0043117 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.23426 @ 95%CL (1 toyMC)
median expected limit: r < 1.23426 @ 95%CL (1 toyMC)
   68% expected band : 1.23426 < r < 1.23426
   95% expected band : 1.23426 < r < 1.23426
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -291464167
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26185 +/- 0.00328368 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.26185 @ 95%CL (1 toyMC)
median expected limit: r < 1.26185 @ 95%CL (1 toyMC)
   68% expected band : 1.26185 < r < 1.26185
   95% expected band : 1.26185 < r < 1.26185
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 297261621
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36258 +/- 0.0035466 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.36258 @ 95%CL (1 toyMC)
median expected limit: r < 1.36258 @ 95%CL (1 toyMC)
   68% expected band : 1.36258 < r < 1.36258
   95% expected band : 1.36258 < r < 1.36258
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 387212616
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82204 +/- 0.00363634 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.82204 @ 95%CL (1 toyMC)
median expected limit: r < 1.82204 @ 95%CL (1 toyMC)
   68% expected band : 1.82204 < r < 1.82204
   95% expected band : 1.82204 < r < 1.82204
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 449979497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.945079 +/- 0.00363143 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.945079 @ 95%CL (1 toyMC)
median expected limit: r < 0.945079 @ 95%CL (1 toyMC)
   68% expected band : 0.945079 < r < 0.945079
   95% expected band : 0.945079 < r < 0.945079
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -846571668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16074 +/- 0.00330192 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.16074 @ 95%CL (1 toyMC)
median expected limit: r < 1.16074 @ 95%CL (1 toyMC)
   68% expected band : 1.16074 < r < 1.16074
   95% expected band : 1.16074 < r < 1.16074
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1406094973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.40718 +/- 0.00349399 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.40718 @ 95%CL (1 toyMC)
median expected limit: r < 1.40718 @ 95%CL (1 toyMC)
   68% expected band : 1.40718 < r < 1.40718
   95% expected band : 1.40718 < r < 1.40718
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1603324703
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.942772 +/- 0.0030844 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.942772 @ 95%CL (1 toyMC)
median expected limit: r < 0.942772 @ 95%CL (1 toyMC)
   68% expected band : 0.942772 < r < 0.942772
   95% expected band : 0.942772 < r < 0.942772
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1745345486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.72328 +/- 0.00446136 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.72328 @ 95%CL (1 toyMC)
median expected limit: r < 1.72328 @ 95%CL (1 toyMC)
   68% expected band : 1.72328 < r < 1.72328
   95% expected band : 1.72328 < r < 1.72328
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1655957942
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.895358 +/- 0.00296039 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.895358 @ 95%CL (1 toyMC)
median expected limit: r < 0.895358 @ 95%CL (1 toyMC)
   68% expected band : 0.895358 < r < 0.895358
   95% expected band : 0.895358 < r < 0.895358
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -291879729
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.96317 +/- 0.00348411 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.96317 @ 95%CL (1 toyMC)
median expected limit: r < 0.96317 @ 95%CL (1 toyMC)
   68% expected band : 0.96317 < r < 0.96317
   95% expected band : 0.96317 < r < 0.96317
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 601400267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.865548 +/- 0.00415133 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.865548 @ 95%CL (1 toyMC)
median expected limit: r < 0.865548 @ 95%CL (1 toyMC)
   68% expected band : 0.865548 < r < 0.865548
   95% expected band : 0.865548 < r < 0.865548
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1346283000
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.23654 +/- 0.00427243 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.23654 @ 95%CL (1 toyMC)
median expected limit: r < 1.23654 @ 95%CL (1 toyMC)
   68% expected band : 1.23654 < r < 1.23654
   95% expected band : 1.23654 < r < 1.23654
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1593110084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13275 +/- 0.00310436 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.13275 @ 95%CL (1 toyMC)
median expected limit: r < 1.13275 @ 95%CL (1 toyMC)
   68% expected band : 1.13275 < r < 1.13275
   95% expected band : 1.13275 < r < 1.13275
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1888652609
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10997 +/- 0.00321331 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.10997 @ 95%CL (1 toyMC)
median expected limit: r < 1.10997 @ 95%CL (1 toyMC)
   68% expected band : 1.10997 < r < 1.10997
   95% expected band : 1.10997 < r < 1.10997
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1642535253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.812236 +/- 0.00380759 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.812236 @ 95%CL (1 toyMC)
median expected limit: r < 0.812236 @ 95%CL (1 toyMC)
   68% expected band : 0.812236 < r < 0.812236
   95% expected band : 0.812236 < r < 0.812236
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1173865892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.718964 +/- 0.00368124 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.718964 @ 95%CL (1 toyMC)
median expected limit: r < 0.718964 @ 95%CL (1 toyMC)
   68% expected band : 0.718964 < r < 0.718964
   95% expected band : 0.718964 < r < 0.718964
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 706809441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34079 +/- 0.00410731 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.34079 @ 95%CL (1 toyMC)
median expected limit: r < 1.34079 @ 95%CL (1 toyMC)
   68% expected band : 1.34079 < r < 1.34079
   95% expected band : 1.34079 < r < 1.34079
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -537640970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.909218 +/- 0.00367881 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.909218 @ 95%CL (1 toyMC)
median expected limit: r < 0.909218 @ 95%CL (1 toyMC)
   68% expected band : 0.909218 < r < 0.909218
   95% expected band : 0.909218 < r < 0.909218
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2004217797
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.71846 +/- 0.00319571 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.71846 @ 95%CL (1 toyMC)
median expected limit: r < 1.71846 @ 95%CL (1 toyMC)
   68% expected band : 1.71846 < r < 1.71846
   95% expected band : 1.71846 < r < 1.71846
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1104458545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.861746 +/- 0.0035615 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.861746 @ 95%CL (1 toyMC)
median expected limit: r < 0.861746 @ 95%CL (1 toyMC)
   68% expected band : 0.861746 < r < 0.861746
   95% expected band : 0.861746 < r < 0.861746
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 579293038
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.948988 +/- 0.00353607 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.948988 @ 95%CL (1 toyMC)
median expected limit: r < 0.948988 @ 95%CL (1 toyMC)
   68% expected band : 0.948988 < r < 0.948988
   95% expected band : 0.948988 < r < 0.948988
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 214343266
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.984931 +/- 0.00328502 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.984931 @ 95%CL (1 toyMC)
median expected limit: r < 0.984931 @ 95%CL (1 toyMC)
   68% expected band : 0.984931 < r < 0.984931
   95% expected band : 0.984931 < r < 0.984931
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1280272402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08201 +/- 0.00332081 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.08201 @ 95%CL (1 toyMC)
median expected limit: r < 1.08201 @ 95%CL (1 toyMC)
   68% expected band : 1.08201 < r < 1.08201
   95% expected band : 1.08201 < r < 1.08201
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2023025901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20328 +/- 0.00307824 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.20328 @ 95%CL (1 toyMC)
median expected limit: r < 1.20328 @ 95%CL (1 toyMC)
   68% expected band : 1.20328 < r < 1.20328
   95% expected band : 1.20328 < r < 1.20328
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2128800515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10025 +/- 0.00332013 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.10025 @ 95%CL (1 toyMC)
median expected limit: r < 1.10025 @ 95%CL (1 toyMC)
   68% expected band : 1.10025 < r < 1.10025
   95% expected band : 1.10025 < r < 1.10025
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1217768649
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.883047 +/- 0.00306036 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.883047 @ 95%CL (1 toyMC)
median expected limit: r < 0.883047 @ 95%CL (1 toyMC)
   68% expected band : 0.883047 < r < 0.883047
   95% expected band : 0.883047 < r < 0.883047
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1871015093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.584337 +/- 0.00260289 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.584337 @ 95%CL (1 toyMC)
median expected limit: r < 0.584337 @ 95%CL (1 toyMC)
   68% expected band : 0.584337 < r < 0.584337
   95% expected band : 0.584337 < r < 0.584337
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1594417014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.723534 +/- 0.00309031 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.723534 @ 95%CL (1 toyMC)
median expected limit: r < 0.723534 @ 95%CL (1 toyMC)
   68% expected band : 0.723534 < r < 0.723534
   95% expected band : 0.723534 < r < 0.723534
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -258758748
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.469608 +/- 0.00274382 @ 95% CL (100 tries)
Done in 0.36 min (cpu), 0.36 min (real)
mean   expected limit: r < 0.469608 @ 95%CL (1 toyMC)
median expected limit: r < 0.469608 @ 95%CL (1 toyMC)
   68% expected band : 0.469608 < r < 0.469608
   95% expected band : 0.469608 < r < 0.469608
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1875752914
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.814612 +/- 0.00359418 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.814612 @ 95%CL (1 toyMC)
median expected limit: r < 0.814612 @ 95%CL (1 toyMC)
   68% expected band : 0.814612 < r < 0.814612
   95% expected band : 0.814612 < r < 0.814612
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1235705677
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05812 +/- 0.00331176 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.05812 @ 95%CL (1 toyMC)
median expected limit: r < 1.05812 @ 95%CL (1 toyMC)
   68% expected band : 1.05812 < r < 1.05812
   95% expected band : 1.05812 < r < 1.05812
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 648564863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.46846 +/- 0.00347495 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.46846 @ 95%CL (1 toyMC)
median expected limit: r < 1.46846 @ 95%CL (1 toyMC)
   68% expected band : 1.46846 < r < 1.46846
   95% expected band : 1.46846 < r < 1.46846
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1624583441
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37663 +/- 0.00390735 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.37663 @ 95%CL (1 toyMC)
median expected limit: r < 1.37663 @ 95%CL (1 toyMC)
   68% expected band : 1.37663 < r < 1.37663
   95% expected band : 1.37663 < r < 1.37663
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2061220965
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.18104 +/- 0.00364594 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.18104 @ 95%CL (1 toyMC)
median expected limit: r < 1.18104 @ 95%CL (1 toyMC)
   68% expected band : 1.18104 < r < 1.18104
   95% expected band : 1.18104 < r < 1.18104
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1050403437
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05391 +/- 0.0040264 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.05391 @ 95%CL (1 toyMC)
median expected limit: r < 1.05391 @ 95%CL (1 toyMC)
   68% expected band : 1.05391 < r < 1.05391
   95% expected band : 1.05391 < r < 1.05391
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -240562717
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67147 +/- 0.00345352 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.67147 @ 95%CL (1 toyMC)
median expected limit: r < 1.67147 @ 95%CL (1 toyMC)
   68% expected band : 1.67147 < r < 1.67147
   95% expected band : 1.67147 < r < 1.67147
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 144277886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.863172 +/- 0.00329139 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.863172 @ 95%CL (1 toyMC)
median expected limit: r < 0.863172 @ 95%CL (1 toyMC)
   68% expected band : 0.863172 < r < 0.863172
   95% expected band : 0.863172 < r < 0.863172
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -842204399
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28348 +/- 0.00377346 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.28348 @ 95%CL (1 toyMC)
median expected limit: r < 1.28348 @ 95%CL (1 toyMC)
   68% expected band : 1.28348 < r < 1.28348
   95% expected band : 1.28348 < r < 1.28348
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1609503549
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13019 +/- 0.00329192 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.13019 @ 95%CL (1 toyMC)
median expected limit: r < 1.13019 @ 95%CL (1 toyMC)
   68% expected band : 1.13019 < r < 1.13019
   95% expected band : 1.13019 < r < 1.13019
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 737026362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39571 +/- 0.00350454 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.39571 @ 95%CL (1 toyMC)
median expected limit: r < 1.39571 @ 95%CL (1 toyMC)
   68% expected band : 1.39571 < r < 1.39571
   95% expected band : 1.39571 < r < 1.39571
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1879800848
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08542 +/- 0.00354355 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.08542 @ 95%CL (1 toyMC)
median expected limit: r < 1.08542 @ 95%CL (1 toyMC)
   68% expected band : 1.08542 < r < 1.08542
   95% expected band : 1.08542 < r < 1.08542
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1608367311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.98729 +/- 0.00324035 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.98729 @ 95%CL (1 toyMC)
median expected limit: r < 0.98729 @ 95%CL (1 toyMC)
   68% expected band : 0.98729 < r < 0.98729
   95% expected band : 0.98729 < r < 0.98729
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2021852538
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.989719 +/- 0.00328546 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.989719 @ 95%CL (1 toyMC)
median expected limit: r < 0.989719 @ 95%CL (1 toyMC)
   68% expected band : 0.989719 < r < 0.989719
   95% expected band : 0.989719 < r < 0.989719
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 442363246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07478 +/- 0.00371879 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.07478 @ 95%CL (1 toyMC)
median expected limit: r < 1.07478 @ 95%CL (1 toyMC)
   68% expected band : 1.07478 < r < 1.07478
   95% expected band : 1.07478 < r < 1.07478
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -71080770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68843 +/- 0.00351469 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.68843 @ 95%CL (1 toyMC)
median expected limit: r < 1.68843 @ 95%CL (1 toyMC)
   68% expected band : 1.68843 < r < 1.68843
   95% expected band : 1.68843 < r < 1.68843
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -302685035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4246 +/- 0.00324202 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.4246 @ 95%CL (1 toyMC)
median expected limit: r < 1.4246 @ 95%CL (1 toyMC)
   68% expected band : 1.4246 < r < 1.4246
   95% expected band : 1.4246 < r < 1.4246
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1346763299
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.469156 +/- 0.00327337 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 0.469156 @ 95%CL (1 toyMC)
median expected limit: r < 0.469156 @ 95%CL (1 toyMC)
   68% expected band : 0.469156 < r < 0.469156
   95% expected band : 0.469156 < r < 0.469156
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -642110058
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2526 +/- 0.00289436 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.2526 @ 95%CL (1 toyMC)
median expected limit: r < 1.2526 @ 95%CL (1 toyMC)
   68% expected band : 1.2526 < r < 1.2526
   95% expected band : 1.2526 < r < 1.2526
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -802800501
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37428 +/- 0.00375354 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.37428 @ 95%CL (1 toyMC)
median expected limit: r < 1.37428 @ 95%CL (1 toyMC)
   68% expected band : 1.37428 < r < 1.37428
   95% expected band : 1.37428 < r < 1.37428
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 263141438
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.592985 +/- 0.00267667 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 0.592985 @ 95%CL (1 toyMC)
median expected limit: r < 0.592985 @ 95%CL (1 toyMC)
   68% expected band : 0.592985 < r < 0.592985
   95% expected band : 0.592985 < r < 0.592985
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine32.MarkovChainMC.mH32.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH32.-1050403437.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH32.-1140381424.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH32.-1173865892.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH32.-1217768649.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH32.-1280272402.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH32.-1346283000.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH32.-1346763299.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH32.-1492308204.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH32.-1534244472.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH32.-1548167426.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH32.-1597730896.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH32.-1603324703.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH32.-1655957942.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH32.-1713819073.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH32.-1875752914.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH32.-1888652609.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH32.-191758740.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH32.-1978397950.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH32.-1997955769.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH32.-2004217797.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH32.-2021852538.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH32.-2023025901.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH32.-2044569672.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH32.-2061220965.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH32.-2065391274.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH32.-2090643644.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH32.-224354752.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH32.-240562717.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH32.-258758748.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH32.-291464167.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH32.-291879729.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH32.-302685035.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH32.-311152756.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH32.-358321977.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH32.-520298850.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH32.-534728413.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH32.-537640970.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH32.-630320483.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH32.-637417806.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH32.-642110058.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH32.-643346247.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH32.-71080770.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH32.-802800501.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH32.-842204399.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH32.-846571668.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH32.-943857394.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH32.1032230194.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH32.1063822652.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH32.1104458545.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH32.1173994801.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH32.1215864842.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH32.1235705677.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH32.1267063943.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH32.1281596352.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH32.13946096.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH32.1406094973.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH32.144277886.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH32.1453277165.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH32.1516124612.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH32.1540827032.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH32.1593110084.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH32.1594417014.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH32.1608367311.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH32.1609503549.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH32.1624583441.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH32.1642535253.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH32.1651431471.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH32.1745345486.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH32.177813046.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH32.1827671801.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH32.1832036685.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH32.1871015093.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH32.1879800848.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH32.1926866675.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH32.1968709631.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH32.1979619450.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH32.2026535180.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH32.2064318513.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH32.2087906708.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH32.2128800515.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH32.214343266.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH32.263141438.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH32.292401409.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH32.297261621.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH32.32386634.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH32.357216334.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH32.380108265.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH32.387212616.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH32.442363246.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH32.449979497.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH32.535204000.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH32.567724028.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH32.579293038.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH32.601400267.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH32.609170688.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH32.648564863.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH32.706809441.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH32.737026362.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH32.785352063.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH32.966907784.root
hadd Target path: higgsCombine32.MarkovChainMC.mH32.root:/
hadd Target path: higgsCombine32.MarkovChainMC.mH32.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -9774793
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83856 +/- 0.00559539 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.83856 @ 95%CL (1 toyMC)
median expected limit: r < 1.83856 @ 95%CL (1 toyMC)
   68% expected band : 1.83856 < r < 1.83856
   95% expected band : 1.83856 < r < 1.83856
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 490509184
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62178 +/- 0.00525751 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.62178 @ 95%CL (1 toyMC)
median expected limit: r < 2.62178 @ 95%CL (1 toyMC)
   68% expected band : 2.62178 < r < 2.62178
   95% expected band : 2.62178 < r < 2.62178
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1344538760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39913 +/- 0.00389878 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.39913 @ 95%CL (1 toyMC)
median expected limit: r < 1.39913 @ 95%CL (1 toyMC)
   68% expected band : 1.39913 < r < 1.39913
   95% expected band : 1.39913 < r < 1.39913
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -190330847
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.63519 +/- 0.00619792 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.63519 @ 95%CL (1 toyMC)
median expected limit: r < 3.63519 @ 95%CL (1 toyMC)
   68% expected band : 3.63519 < r < 3.63519
   95% expected band : 3.63519 < r < 3.63519
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1471463493
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6093 +/- 0.00383842 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.6093 @ 95%CL (1 toyMC)
median expected limit: r < 1.6093 @ 95%CL (1 toyMC)
   68% expected band : 1.6093 < r < 1.6093
   95% expected band : 1.6093 < r < 1.6093
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -10409271
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.41366 +/- 0.00561124 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.41366 @ 95%CL (1 toyMC)
median expected limit: r < 2.41366 @ 95%CL (1 toyMC)
   68% expected band : 2.41366 < r < 2.41366
   95% expected band : 2.41366 < r < 2.41366
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1922754994
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.43512 +/- 0.00689518 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.44 min (real)
mean   expected limit: r < 3.43512 @ 95%CL (1 toyMC)
median expected limit: r < 3.43512 @ 95%CL (1 toyMC)
   68% expected band : 3.43512 < r < 3.43512
   95% expected band : 3.43512 < r < 3.43512
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1378808735
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37528 +/- 0.00547039 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.37528 @ 95%CL (1 toyMC)
median expected limit: r < 2.37528 @ 95%CL (1 toyMC)
   68% expected band : 2.37528 < r < 2.37528
   95% expected band : 2.37528 < r < 2.37528
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 223572486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.60693 +/- 0.00616083 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.60693 @ 95%CL (1 toyMC)
median expected limit: r < 2.60693 @ 95%CL (1 toyMC)
   68% expected band : 2.60693 < r < 2.60693
   95% expected band : 2.60693 < r < 2.60693
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 536095788
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90477 +/- 0.00509984 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.90477 @ 95%CL (1 toyMC)
median expected limit: r < 1.90477 @ 95%CL (1 toyMC)
   68% expected band : 1.90477 < r < 1.90477
   95% expected band : 1.90477 < r < 1.90477
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1025989104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02556 +/- 0.00427203 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.02556 @ 95%CL (1 toyMC)
median expected limit: r < 2.02556 @ 95%CL (1 toyMC)
   68% expected band : 2.02556 < r < 2.02556
   95% expected band : 2.02556 < r < 2.02556
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 249129922
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81287 +/- 0.00516524 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.81287 @ 95%CL (1 toyMC)
median expected limit: r < 1.81287 @ 95%CL (1 toyMC)
   68% expected band : 1.81287 < r < 1.81287
   95% expected band : 1.81287 < r < 1.81287
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1931151312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.58362 +/- 0.00517005 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.58362 @ 95%CL (1 toyMC)
median expected limit: r < 3.58362 @ 95%CL (1 toyMC)
   68% expected band : 3.58362 < r < 3.58362
   95% expected band : 3.58362 < r < 3.58362
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -319272817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11833 +/- 0.00470667 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.11833 @ 95%CL (1 toyMC)
median expected limit: r < 2.11833 @ 95%CL (1 toyMC)
   68% expected band : 2.11833 < r < 2.11833
   95% expected band : 2.11833 < r < 2.11833
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1208285254
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12954 +/- 0.00333476 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.12954 @ 95%CL (1 toyMC)
median expected limit: r < 1.12954 @ 95%CL (1 toyMC)
   68% expected band : 1.12954 < r < 1.12954
   95% expected band : 1.12954 < r < 1.12954
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1861778544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.30174 +/- 0.00617977 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.30174 @ 95%CL (1 toyMC)
median expected limit: r < 2.30174 @ 95%CL (1 toyMC)
   68% expected band : 2.30174 < r < 2.30174
   95% expected band : 2.30174 < r < 2.30174
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1031815370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.02592 +/- 0.00673393 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 3.02592 @ 95%CL (1 toyMC)
median expected limit: r < 3.02592 @ 95%CL (1 toyMC)
   68% expected band : 3.02592 < r < 3.02592
   95% expected band : 3.02592 < r < 3.02592
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1640711426
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76933 +/- 0.00379815 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.76933 @ 95%CL (1 toyMC)
median expected limit: r < 1.76933 @ 95%CL (1 toyMC)
   68% expected band : 1.76933 < r < 1.76933
   95% expected band : 1.76933 < r < 1.76933
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1041468868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71802 +/- 0.00556186 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 2.71802 @ 95%CL (1 toyMC)
median expected limit: r < 2.71802 @ 95%CL (1 toyMC)
   68% expected band : 2.71802 < r < 2.71802
   95% expected band : 2.71802 < r < 2.71802
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 686117202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11237 +/- 0.0049366 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.11237 @ 95%CL (1 toyMC)
median expected limit: r < 2.11237 @ 95%CL (1 toyMC)
   68% expected band : 2.11237 < r < 2.11237
   95% expected band : 2.11237 < r < 2.11237
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 987609694
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65866 +/- 0.00555456 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.65866 @ 95%CL (1 toyMC)
median expected limit: r < 2.65866 @ 95%CL (1 toyMC)
   68% expected band : 2.65866 < r < 2.65866
   95% expected band : 2.65866 < r < 2.65866
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -65683692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.85102 +/- 0.00390054 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.85102 @ 95%CL (1 toyMC)
median expected limit: r < 1.85102 @ 95%CL (1 toyMC)
   68% expected band : 1.85102 < r < 1.85102
   95% expected band : 1.85102 < r < 1.85102
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 70572804
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.42698 +/- 0.0045779 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.42698 @ 95%CL (1 toyMC)
median expected limit: r < 3.42698 @ 95%CL (1 toyMC)
   68% expected band : 3.42698 < r < 3.42698
   95% expected band : 3.42698 < r < 3.42698
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1276088333
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52396 +/- 0.00485272 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.52396 @ 95%CL (1 toyMC)
median expected limit: r < 2.52396 @ 95%CL (1 toyMC)
   68% expected band : 2.52396 < r < 2.52396
   95% expected band : 2.52396 < r < 2.52396
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1434570364
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.99097 +/- 0.00469425 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.99097 @ 95%CL (1 toyMC)
median expected limit: r < 2.99097 @ 95%CL (1 toyMC)
   68% expected band : 2.99097 < r < 2.99097
   95% expected band : 2.99097 < r < 2.99097
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1061267084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.52435 +/- 0.0036373 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.52435 @ 95%CL (1 toyMC)
median expected limit: r < 2.52435 @ 95%CL (1 toyMC)
   68% expected band : 2.52435 < r < 2.52435
   95% expected band : 2.52435 < r < 2.52435
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -458983339
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83024 +/- 0.00539685 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.83024 @ 95%CL (1 toyMC)
median expected limit: r < 1.83024 @ 95%CL (1 toyMC)
   68% expected band : 1.83024 < r < 1.83024
   95% expected band : 1.83024 < r < 1.83024
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1780616679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.29157 +/- 0.0038022 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.29157 @ 95%CL (1 toyMC)
median expected limit: r < 2.29157 @ 95%CL (1 toyMC)
   68% expected band : 2.29157 < r < 2.29157
   95% expected band : 2.29157 < r < 2.29157
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1267136012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80609 +/- 0.0043506 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.80609 @ 95%CL (1 toyMC)
median expected limit: r < 1.80609 @ 95%CL (1 toyMC)
   68% expected band : 1.80609 < r < 1.80609
   95% expected band : 1.80609 < r < 1.80609
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1144722202
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61345 +/- 0.00510095 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.61345 @ 95%CL (1 toyMC)
median expected limit: r < 3.61345 @ 95%CL (1 toyMC)
   68% expected band : 3.61345 < r < 3.61345
   95% expected band : 3.61345 < r < 3.61345
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1175216492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.3244 +/- 0.00422122 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.3244 @ 95%CL (1 toyMC)
median expected limit: r < 1.3244 @ 95%CL (1 toyMC)
   68% expected band : 1.3244 < r < 1.3244
   95% expected band : 1.3244 < r < 1.3244
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2000720248
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66275 +/- 0.00587945 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.66275 @ 95%CL (1 toyMC)
median expected limit: r < 1.66275 @ 95%CL (1 toyMC)
   68% expected band : 1.66275 < r < 1.66275
   95% expected band : 1.66275 < r < 1.66275
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1488864991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80455 +/- 0.00414999 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.80455 @ 95%CL (1 toyMC)
median expected limit: r < 1.80455 @ 95%CL (1 toyMC)
   68% expected band : 1.80455 < r < 1.80455
   95% expected band : 1.80455 < r < 1.80455
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -628256151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.63807 +/- 0.00557645 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.63807 @ 95%CL (1 toyMC)
median expected limit: r < 2.63807 @ 95%CL (1 toyMC)
   68% expected band : 2.63807 < r < 2.63807
   95% expected band : 2.63807 < r < 2.63807
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 420454897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01895 +/- 0.00374462 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.01895 @ 95%CL (1 toyMC)
median expected limit: r < 1.01895 @ 95%CL (1 toyMC)
   68% expected band : 1.01895 < r < 1.01895
   95% expected band : 1.01895 < r < 1.01895
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2128645050
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.44461 +/- 0.00422049 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.44461 @ 95%CL (1 toyMC)
median expected limit: r < 1.44461 @ 95%CL (1 toyMC)
   68% expected band : 1.44461 < r < 1.44461
   95% expected band : 1.44461 < r < 1.44461
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -877378544
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68018 +/- 0.00508305 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.68018 @ 95%CL (1 toyMC)
median expected limit: r < 1.68018 @ 95%CL (1 toyMC)
   68% expected band : 1.68018 < r < 1.68018
   95% expected band : 1.68018 < r < 1.68018
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 619588561
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.77403 +/- 0.00656978 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.77403 @ 95%CL (1 toyMC)
median expected limit: r < 3.77403 @ 95%CL (1 toyMC)
   68% expected band : 3.77403 < r < 3.77403
   95% expected band : 3.77403 < r < 3.77403
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1581900030
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96696 +/- 0.00628556 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.96696 @ 95%CL (1 toyMC)
median expected limit: r < 1.96696 @ 95%CL (1 toyMC)
   68% expected band : 1.96696 < r < 1.96696
   95% expected band : 1.96696 < r < 1.96696
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1256035110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.26613 +/- 0.00531529 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.26613 @ 95%CL (1 toyMC)
median expected limit: r < 2.26613 @ 95%CL (1 toyMC)
   68% expected band : 2.26613 < r < 2.26613
   95% expected band : 2.26613 < r < 2.26613
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 984068473
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.72706 +/- 0.00473516 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.72706 @ 95%CL (1 toyMC)
median expected limit: r < 3.72706 @ 95%CL (1 toyMC)
   68% expected band : 3.72706 < r < 3.72706
   95% expected band : 3.72706 < r < 3.72706
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1819287553
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.00791 +/- 0.00544182 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.00791 @ 95%CL (1 toyMC)
median expected limit: r < 2.00791 @ 95%CL (1 toyMC)
   68% expected band : 2.00791 < r < 2.00791
   95% expected band : 2.00791 < r < 2.00791
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 744759409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90499 +/- 0.00423051 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.90499 @ 95%CL (1 toyMC)
median expected limit: r < 1.90499 @ 95%CL (1 toyMC)
   68% expected band : 1.90499 < r < 1.90499
   95% expected band : 1.90499 < r < 1.90499
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -543809337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73456 +/- 0.00457776 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.73456 @ 95%CL (1 toyMC)
median expected limit: r < 1.73456 @ 95%CL (1 toyMC)
   68% expected band : 1.73456 < r < 1.73456
   95% expected band : 1.73456 < r < 1.73456
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1472524800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84409 +/- 0.00448291 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.84409 @ 95%CL (1 toyMC)
median expected limit: r < 1.84409 @ 95%CL (1 toyMC)
   68% expected band : 1.84409 < r < 1.84409
   95% expected band : 1.84409 < r < 1.84409
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1650795208
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.59857 +/- 0.00395207 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.59857 @ 95%CL (1 toyMC)
median expected limit: r < 1.59857 @ 95%CL (1 toyMC)
   68% expected band : 1.59857 < r < 1.59857
   95% expected band : 1.59857 < r < 1.59857
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 649488177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65009 +/- 0.00578725 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.65009 @ 95%CL (1 toyMC)
median expected limit: r < 2.65009 @ 95%CL (1 toyMC)
   68% expected band : 2.65009 < r < 2.65009
   95% expected band : 2.65009 < r < 2.65009
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1249214919
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.55206 +/- 0.00402962 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.55206 @ 95%CL (1 toyMC)
median expected limit: r < 2.55206 @ 95%CL (1 toyMC)
   68% expected band : 2.55206 < r < 2.55206
   95% expected band : 2.55206 < r < 2.55206
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 735669288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12729 +/- 0.00435485 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.12729 @ 95%CL (1 toyMC)
median expected limit: r < 2.12729 @ 95%CL (1 toyMC)
   68% expected band : 2.12729 < r < 2.12729
   95% expected band : 2.12729 < r < 2.12729
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -726413981
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79762 +/- 0.00462094 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.79762 @ 95%CL (1 toyMC)
median expected limit: r < 1.79762 @ 95%CL (1 toyMC)
   68% expected band : 1.79762 < r < 1.79762
   95% expected band : 1.79762 < r < 1.79762
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1493606126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.77132 +/- 0.0044739 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.77132 @ 95%CL (1 toyMC)
median expected limit: r < 1.77132 @ 95%CL (1 toyMC)
   68% expected band : 1.77132 < r < 1.77132
   95% expected band : 1.77132 < r < 1.77132
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 484197708
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.11103 +/- 0.00491754 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.11103 @ 95%CL (1 toyMC)
median expected limit: r < 2.11103 @ 95%CL (1 toyMC)
   68% expected band : 2.11103 < r < 2.11103
   95% expected band : 2.11103 < r < 2.11103
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -753415171
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65075 +/- 0.00472276 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.65075 @ 95%CL (1 toyMC)
median expected limit: r < 2.65075 @ 95%CL (1 toyMC)
   68% expected band : 2.65075 < r < 2.65075
   95% expected band : 2.65075 < r < 2.65075
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1085105832
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.8206 +/- 0.00528816 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.8206 @ 95%CL (1 toyMC)
median expected limit: r < 1.8206 @ 95%CL (1 toyMC)
   68% expected band : 1.8206 < r < 1.8206
   95% expected band : 1.8206 < r < 1.8206
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1700415636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61134 +/- 0.00447643 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.61134 @ 95%CL (1 toyMC)
median expected limit: r < 1.61134 @ 95%CL (1 toyMC)
   68% expected band : 1.61134 < r < 1.61134
   95% expected band : 1.61134 < r < 1.61134
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 122892731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.48719 +/- 0.00540353 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.48719 @ 95%CL (1 toyMC)
median expected limit: r < 2.48719 @ 95%CL (1 toyMC)
   68% expected band : 2.48719 < r < 2.48719
   95% expected band : 2.48719 < r < 2.48719
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1635354667
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.38947 +/- 0.00520144 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.38947 @ 95%CL (1 toyMC)
median expected limit: r < 2.38947 @ 95%CL (1 toyMC)
   68% expected band : 2.38947 < r < 2.38947
   95% expected band : 2.38947 < r < 2.38947
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1702743992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66895 +/- 0.00439276 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.66895 @ 95%CL (1 toyMC)
median expected limit: r < 1.66895 @ 95%CL (1 toyMC)
   68% expected band : 1.66895 < r < 1.66895
   95% expected band : 1.66895 < r < 1.66895
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2059551239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.38262 +/- 0.0046331 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.38262 @ 95%CL (1 toyMC)
median expected limit: r < 2.38262 @ 95%CL (1 toyMC)
   68% expected band : 2.38262 < r < 2.38262
   95% expected band : 2.38262 < r < 2.38262
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -623128302
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.2139 +/- 0.00540401 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.2139 @ 95%CL (1 toyMC)
median expected limit: r < 4.2139 @ 95%CL (1 toyMC)
   68% expected band : 4.2139 < r < 4.2139
   95% expected band : 4.2139 < r < 4.2139
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1571959103
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.63637 +/- 0.00434072 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.63637 @ 95%CL (1 toyMC)
median expected limit: r < 1.63637 @ 95%CL (1 toyMC)
   68% expected band : 1.63637 < r < 1.63637
   95% expected band : 1.63637 < r < 1.63637
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 256866967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.42525 +/- 0.00460693 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.42525 @ 95%CL (1 toyMC)
median expected limit: r < 1.42525 @ 95%CL (1 toyMC)
   68% expected band : 1.42525 < r < 1.42525
   95% expected band : 1.42525 < r < 1.42525
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -435924762
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07715 +/- 0.00388737 @ 95% CL (100 tries)
Done in 0.37 min (cpu), 0.37 min (real)
mean   expected limit: r < 1.07715 @ 95%CL (1 toyMC)
median expected limit: r < 1.07715 @ 95%CL (1 toyMC)
   68% expected band : 1.07715 < r < 1.07715
   95% expected band : 1.07715 < r < 1.07715
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2079189796
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45713 +/- 0.00576871 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.45713 @ 95%CL (1 toyMC)
median expected limit: r < 2.45713 @ 95%CL (1 toyMC)
   68% expected band : 2.45713 < r < 2.45713
   95% expected band : 2.45713 < r < 2.45713
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -469116207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.12525 +/- 0.00557071 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.12525 @ 95%CL (1 toyMC)
median expected limit: r < 2.12525 @ 95%CL (1 toyMC)
   68% expected band : 2.12525 < r < 2.12525
   95% expected band : 2.12525 < r < 2.12525
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 107386790
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86094 +/- 0.0057348 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.86094 @ 95%CL (1 toyMC)
median expected limit: r < 1.86094 @ 95%CL (1 toyMC)
   68% expected band : 1.86094 < r < 1.86094
   95% expected band : 1.86094 < r < 1.86094
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1243687176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76256 +/- 0.00449098 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.76256 @ 95%CL (1 toyMC)
median expected limit: r < 2.76256 @ 95%CL (1 toyMC)
   68% expected band : 2.76256 < r < 2.76256
   95% expected band : 2.76256 < r < 2.76256
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1211573897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0162 +/- 0.00519429 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.0162 @ 95%CL (1 toyMC)
median expected limit: r < 2.0162 @ 95%CL (1 toyMC)
   68% expected band : 2.0162 < r < 2.0162
   95% expected band : 2.0162 < r < 2.0162
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 301617237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.66538 +/- 0.00423668 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.66538 @ 95%CL (1 toyMC)
median expected limit: r < 1.66538 @ 95%CL (1 toyMC)
   68% expected band : 1.66538 < r < 1.66538
   95% expected band : 1.66538 < r < 1.66538
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1651719974
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71232 +/- 0.00626063 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.71232 @ 95%CL (1 toyMC)
median expected limit: r < 2.71232 @ 95%CL (1 toyMC)
   68% expected band : 2.71232 < r < 2.71232
   95% expected band : 2.71232 < r < 2.71232
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 188441415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10258 +/- 0.00432447 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.10258 @ 95%CL (1 toyMC)
median expected limit: r < 2.10258 @ 95%CL (1 toyMC)
   68% expected band : 2.10258 < r < 2.10258
   95% expected band : 2.10258 < r < 2.10258
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1626870811
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02325 +/- 0.00440211 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.02325 @ 95%CL (1 toyMC)
median expected limit: r < 2.02325 @ 95%CL (1 toyMC)
   68% expected band : 2.02325 < r < 2.02325
   95% expected band : 2.02325 < r < 2.02325
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1266295791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.79077 +/- 0.00450385 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.79077 @ 95%CL (1 toyMC)
median expected limit: r < 2.79077 @ 95%CL (1 toyMC)
   68% expected band : 2.79077 < r < 2.79077
   95% expected band : 2.79077 < r < 2.79077
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2054803133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.7991 +/- 0.00714965 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.7991 @ 95%CL (1 toyMC)
median expected limit: r < 3.7991 @ 95%CL (1 toyMC)
   68% expected band : 3.7991 < r < 3.7991
   95% expected band : 3.7991 < r < 3.7991
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -377162448
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.85207 +/- 0.00637784 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.85207 @ 95%CL (1 toyMC)
median expected limit: r < 3.85207 @ 95%CL (1 toyMC)
   68% expected band : 3.85207 < r < 3.85207
   95% expected band : 3.85207 < r < 3.85207
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1138646353
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89599 +/- 0.00485501 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.89599 @ 95%CL (1 toyMC)
median expected limit: r < 1.89599 @ 95%CL (1 toyMC)
   68% expected band : 1.89599 < r < 1.89599
   95% expected band : 1.89599 < r < 1.89599
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 962183015
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.44619 +/- 0.00432897 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.44619 @ 95%CL (1 toyMC)
median expected limit: r < 2.44619 @ 95%CL (1 toyMC)
   68% expected band : 2.44619 < r < 2.44619
   95% expected band : 2.44619 < r < 2.44619
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 240714488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.57171 +/- 0.00676003 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.57171 @ 95%CL (1 toyMC)
median expected limit: r < 4.57171 @ 95%CL (1 toyMC)
   68% expected band : 4.57171 < r < 4.57171
   95% expected band : 4.57171 < r < 4.57171
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2122855216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.97918 +/- 0.00593976 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 2.97918 @ 95%CL (1 toyMC)
median expected limit: r < 2.97918 @ 95%CL (1 toyMC)
   68% expected band : 2.97918 < r < 2.97918
   95% expected band : 2.97918 < r < 2.97918
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -520192285
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.88597 +/- 0.00485769 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.88597 @ 95%CL (1 toyMC)
median expected limit: r < 3.88597 @ 95%CL (1 toyMC)
   68% expected band : 3.88597 < r < 3.88597
   95% expected band : 3.88597 < r < 3.88597
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1078803525
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.76579 +/- 0.00425505 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 2.76579 @ 95%CL (1 toyMC)
median expected limit: r < 2.76579 @ 95%CL (1 toyMC)
   68% expected band : 2.76579 < r < 2.76579
   95% expected band : 2.76579 < r < 2.76579
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1788697263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.81684 +/- 0.00613715 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.81684 @ 95%CL (1 toyMC)
median expected limit: r < 1.81684 @ 95%CL (1 toyMC)
   68% expected band : 1.81684 < r < 1.81684
   95% expected band : 1.81684 < r < 1.81684
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 566491659
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2203 +/- 0.00440926 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.2203 @ 95%CL (1 toyMC)
median expected limit: r < 1.2203 @ 95%CL (1 toyMC)
   68% expected band : 1.2203 < r < 1.2203
   95% expected band : 1.2203 < r < 1.2203
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -760171404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7894 +/- 0.00406662 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.38 min (real)
mean   expected limit: r < 1.7894 @ 95%CL (1 toyMC)
median expected limit: r < 1.7894 @ 95%CL (1 toyMC)
   68% expected band : 1.7894 < r < 1.7894
   95% expected band : 1.7894 < r < 1.7894
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1547523830
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.87759 +/- 0.0058456 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.87759 @ 95%CL (1 toyMC)
median expected limit: r < 3.87759 @ 95%CL (1 toyMC)
   68% expected band : 3.87759 < r < 3.87759
   95% expected band : 3.87759 < r < 3.87759
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 134394303
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.41893 +/- 0.00507192 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 3.41893 @ 95%CL (1 toyMC)
median expected limit: r < 3.41893 @ 95%CL (1 toyMC)
   68% expected band : 3.41893 < r < 3.41893
   95% expected band : 3.41893 < r < 3.41893
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1444619485
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.33302 +/- 0.00480777 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 2.33302 @ 95%CL (1 toyMC)
median expected limit: r < 2.33302 @ 95%CL (1 toyMC)
   68% expected band : 2.33302 < r < 2.33302
   95% expected band : 2.33302 < r < 2.33302
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1800386191
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88028 +/- 0.00477864 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.88028 @ 95%CL (1 toyMC)
median expected limit: r < 1.88028 @ 95%CL (1 toyMC)
   68% expected band : 1.88028 < r < 1.88028
   95% expected band : 1.88028 < r < 1.88028
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -179594489
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.33609 +/- 0.00647345 @ 95% CL (100 tries)
Done in 0.40 min (cpu), 0.40 min (real)
mean   expected limit: r < 2.33609 @ 95%CL (1 toyMC)
median expected limit: r < 2.33609 @ 95%CL (1 toyMC)
   68% expected band : 2.33609 < r < 2.33609
   95% expected band : 2.33609 < r < 2.33609
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 588854432
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.1736 +/- 0.0063819 @ 95% CL (100 tries)
Done in 0.43 min (cpu), 0.43 min (real)
mean   expected limit: r < 4.1736 @ 95%CL (1 toyMC)
median expected limit: r < 4.1736 @ 95%CL (1 toyMC)
   68% expected band : 4.1736 < r < 4.1736
   95% expected band : 4.1736 < r < 4.1736
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1358692479
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.17892 +/- 0.00437776 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.17892 @ 95%CL (1 toyMC)
median expected limit: r < 2.17892 @ 95%CL (1 toyMC)
   68% expected band : 2.17892 < r < 2.17892
   95% expected band : 2.17892 < r < 2.17892
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1905288226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.7702 +/- 0.00508406 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.7702 @ 95%CL (1 toyMC)
median expected limit: r < 1.7702 @ 95%CL (1 toyMC)
   68% expected band : 1.7702 < r < 1.7702
   95% expected band : 1.7702 < r < 1.7702
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -206307075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.89808 +/- 0.00504519 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.89808 @ 95%CL (1 toyMC)
median expected limit: r < 1.89808 @ 95%CL (1 toyMC)
   68% expected band : 1.89808 < r < 1.89808
   95% expected band : 1.89808 < r < 1.89808
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1665720839
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70895 +/- 0.00527008 @ 95% CL (100 tries)
Done in 0.39 min (cpu), 0.40 min (real)
mean   expected limit: r < 1.70895 @ 95%CL (1 toyMC)
median expected limit: r < 1.70895 @ 95%CL (1 toyMC)
   68% expected band : 1.70895 < r < 1.70895
   95% expected band : 1.70895 < r < 1.70895
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1962232087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.3705 +/- 0.00477236 @ 95% CL (100 tries)
Done in 0.42 min (cpu), 0.42 min (real)
mean   expected limit: r < 3.3705 @ 95%CL (1 toyMC)
median expected limit: r < 3.3705 @ 95%CL (1 toyMC)
   68% expected band : 3.3705 < r < 3.3705
   95% expected band : 3.3705 < r < 3.3705
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 601816065
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.94857 +/- 0.00330581 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.94857 @ 95%CL (1 toyMC)
median expected limit: r < 1.94857 @ 95%CL (1 toyMC)
   68% expected band : 1.94857 < r < 1.94857
   95% expected band : 1.94857 < r < 1.94857
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1661881089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.79138 +/- 0.00482984 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.42 min (real)
mean   expected limit: r < 2.79138 @ 95%CL (1 toyMC)
median expected limit: r < 2.79138 @ 95%CL (1 toyMC)
   68% expected band : 2.79138 < r < 2.79138
   95% expected band : 2.79138 < r < 2.79138
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1919813849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6725 +/- 0.00397902 @ 95% CL (100 tries)
Done in 0.38 min (cpu), 0.39 min (real)
mean   expected limit: r < 1.6725 @ 95%CL (1 toyMC)
median expected limit: r < 1.6725 @ 95%CL (1 toyMC)
   68% expected band : 1.6725 < r < 1.6725
   95% expected band : 1.6725 < r < 1.6725
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 205658349
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.605 +/- 0.00509522 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.605 @ 95%CL (1 toyMC)
median expected limit: r < 2.605 @ 95%CL (1 toyMC)
   68% expected band : 2.605 < r < 2.605
   95% expected band : 2.605 < r < 2.605
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -104962231
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.57734 +/- 0.00509261 @ 95% CL (100 tries)
Done in 0.41 min (cpu), 0.41 min (real)
mean   expected limit: r < 2.57734 @ 95%CL (1 toyMC)
median expected limit: r < 2.57734 @ 95%CL (1 toyMC)
   68% expected band : 2.57734 < r < 2.57734
   95% expected band : 2.57734 < r < 2.57734
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine40.MarkovChainMC.mH40.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH40.-1031815370.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH40.-10409271.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH40.-1041468868.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH40.-104962231.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH40.-1138646353.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH40.-1144722202.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH40.-1243687176.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH40.-1256035110.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH40.-1267136012.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH40.-1276088333.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH40.-1358692479.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH40.-1378808735.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH40.-1434570364.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH40.-1444619485.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH40.-1581900030.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH40.-1640711426.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH40.-1650795208.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH40.-1651719974.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH40.-1665720839.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH40.-1700415636.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH40.-1702743992.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH40.-1780616679.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH40.-1788697263.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH40.-179594489.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH40.-190330847.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH40.-1919813849.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH40.-1922754994.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH40.-1962232087.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH40.-206307075.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH40.-2079189796.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH40.-2122855216.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH40.-319272817.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH40.-377162448.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH40.-435924762.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH40.-458983339.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH40.-469116207.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH40.-520192285.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH40.-543809337.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH40.-623128302.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH40.-628256151.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH40.-65683692.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH40.-726413981.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH40.-753415171.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH40.-760171404.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH40.-877378544.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH40.-9774793.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH40.1025989104.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH40.1061267084.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH40.107386790.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH40.1078803525.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH40.1085105832.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH40.1175216492.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH40.1208285254.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH40.1211573897.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH40.122892731.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH40.1249214919.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH40.1266295791.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH40.134394303.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH40.1344538760.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH40.1471463493.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH40.1472524800.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH40.1488864991.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH40.1493606126.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH40.1547523830.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH40.1571959103.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH40.1626870811.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH40.1635354667.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH40.1661881089.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH40.1800386191.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH40.1819287553.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH40.1861778544.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH40.188441415.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH40.1905288226.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH40.1931151312.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH40.2000720248.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH40.2054803133.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH40.205658349.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH40.2059551239.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH40.2128645050.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH40.223572486.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH40.240714488.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH40.249129922.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH40.256866967.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH40.301617237.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH40.420454897.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH40.484197708.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH40.490509184.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH40.536095788.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH40.566491659.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH40.588854432.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH40.601816065.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH40.619588561.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH40.649488177.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH40.686117202.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH40.70572804.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH40.735669288.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH40.744759409.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH40.962183015.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH40.984068473.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH40.987609694.root
hadd Target path: higgsCombine40.MarkovChainMC.mH40.root:/
hadd Target path: higgsCombine40.MarkovChainMC.mH40.root:/toys
