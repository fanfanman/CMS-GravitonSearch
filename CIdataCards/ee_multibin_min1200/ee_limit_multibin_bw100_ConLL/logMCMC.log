 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 537557515
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.21555 +/- 0.00224102 @ 95% CL (100 tries)
Done in 1.58 min (cpu), 1.60 min (real)
mean   expected limit: r < 0.21555 @ 95%CL (1 toyMC)
median expected limit: r < 0.21555 @ 95%CL (1 toyMC)
   68% expected band : 0.21555 < r < 0.21555
   95% expected band : 0.21555 < r < 0.21555
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -186694990
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.29 +/- 0.00240359 @ 95% CL (100 tries)
Done in 1.59 min (cpu), 1.61 min (real)
mean   expected limit: r < 0.29 @ 95%CL (1 toyMC)
median expected limit: r < 0.29 @ 95%CL (1 toyMC)
   68% expected band : 0.29 < r < 0.29
   95% expected band : 0.29 < r < 0.29
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -309651357
Generate toy 1/1
Done in 68.82 min (cpu), 69.17 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 19363369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.217495 +/- 0.00213259 @ 95% CL (100 tries)
Done in 1.58 min (cpu), 1.60 min (real)
mean   expected limit: r < 0.217495 @ 95%CL (1 toyMC)
median expected limit: r < 0.217495 @ 95%CL (1 toyMC)
   68% expected band : 0.217495 < r < 0.217495
   95% expected band : 0.217495 < r < 0.217495
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1821870929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.186895 +/- 0.00297499 @ 95% CL (99 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.186895 @ 95%CL (1 toyMC)
median expected limit: r < 0.186895 @ 95%CL (1 toyMC)
   68% expected band : 0.186895 < r < 0.186895
   95% expected band : 0.186895 < r < 0.186895
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1056657014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.241266 +/- 0.00195557 @ 95% CL (100 tries)
Done in 1.64 min (cpu), 1.65 min (real)
mean   expected limit: r < 0.241266 @ 95%CL (1 toyMC)
median expected limit: r < 0.241266 @ 95%CL (1 toyMC)
   68% expected band : 0.241266 < r < 0.241266
   95% expected band : 0.241266 < r < 0.241266
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 17513497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.75154 +/- 2.8246 @ 95% CL (13 tries)
Done in 57.10 min (cpu), 57.38 min (real)
mean   expected limit: r < 6.75154 @ 95%CL (1 toyMC)
median expected limit: r < 6.75154 @ 95%CL (1 toyMC)
   68% expected band : 6.75154 < r < 6.75154
   95% expected band : 6.75154 < r < 6.75154
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1955341078
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.368669 +/- 0.00239678 @ 95% CL (100 tries)
Done in 1.59 min (cpu), 1.60 min (real)
mean   expected limit: r < 0.368669 @ 95%CL (1 toyMC)
median expected limit: r < 0.368669 @ 95%CL (1 toyMC)
   68% expected band : 0.368669 < r < 0.368669
   95% expected band : 0.368669 < r < 0.368669
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 905740370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.229343 +/- 0.00273726 @ 95% CL (100 tries)
Done in 1.54 min (cpu), 1.55 min (real)
mean   expected limit: r < 0.229343 @ 95%CL (1 toyMC)
median expected limit: r < 0.229343 @ 95%CL (1 toyMC)
   68% expected band : 0.229343 < r < 0.229343
   95% expected band : 0.229343 < r < 0.229343
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -596618130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.304291 +/- 0.00183156 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.304291 @ 95%CL (1 toyMC)
median expected limit: r < 0.304291 @ 95%CL (1 toyMC)
   68% expected band : 0.304291 < r < 0.304291
   95% expected band : 0.304291 < r < 0.304291
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1067696506
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.5e+29 +/- 2.5e+29 @ 95% CL (4 tries)
Done in 55.78 min (cpu), 55.96 min (real)
mean   expected limit: r < 2.5e+29 @ 95%CL (1 toyMC)
median expected limit: r < 2.5e+29 @ 95%CL (1 toyMC)
   68% expected band : 2.5e+29 < r < 2.5e+29
   95% expected band : 2.5e+29 < r < 2.5e+29
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 689845380
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.179204 +/- 0.00289973 @ 95% CL (99 tries)
Done in 2.28 min (cpu), 2.29 min (real)
mean   expected limit: r < 0.179204 @ 95%CL (1 toyMC)
median expected limit: r < 0.179204 @ 95%CL (1 toyMC)
   68% expected band : 0.179204 < r < 0.179204
   95% expected band : 0.179204 < r < 0.179204
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 716464731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.177035 +/- 0.00318223 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.52 min (real)
mean   expected limit: r < 0.177035 @ 95%CL (1 toyMC)
median expected limit: r < 0.177035 @ 95%CL (1 toyMC)
   68% expected band : 0.177035 < r < 0.177035
   95% expected band : 0.177035 < r < 0.177035
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1087437520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.192449 +/- 0.00275499 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.52 min (real)
mean   expected limit: r < 0.192449 @ 95%CL (1 toyMC)
median expected limit: r < 0.192449 @ 95%CL (1 toyMC)
   68% expected band : 0.192449 < r < 0.192449
   95% expected band : 0.192449 < r < 0.192449
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1285630956
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.51189 +/- 0.00214712 @ 95% CL (100 tries)
Done in 1.55 min (cpu), 1.55 min (real)
mean   expected limit: r < 0.51189 @ 95%CL (1 toyMC)
median expected limit: r < 0.51189 @ 95%CL (1 toyMC)
   68% expected band : 0.51189 < r < 0.51189
   95% expected band : 0.51189 < r < 0.51189
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -953562192
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.23212 +/- 0.00153771 @ 95% CL (100 tries)
Done in 1.61 min (cpu), 1.62 min (real)
mean   expected limit: r < 0.23212 @ 95%CL (1 toyMC)
median expected limit: r < 0.23212 @ 95%CL (1 toyMC)
   68% expected band : 0.23212 < r < 0.23212
   95% expected band : 0.23212 < r < 0.23212
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -425965620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.166172 +/- 0.00383474 @ 95% CL (96 tries)
Done in 5.14 min (cpu), 5.17 min (real)
mean   expected limit: r < 0.166172 @ 95%CL (1 toyMC)
median expected limit: r < 0.166172 @ 95%CL (1 toyMC)
   68% expected band : 0.166172 < r < 0.166172
   95% expected band : 0.166172 < r < 0.166172
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -75626075
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.144702 +/- 0.0111043 @ 95% CL (33 tries)
Done in 37.70 min (cpu), 37.82 min (real)
mean   expected limit: r < 0.144702 @ 95%CL (1 toyMC)
median expected limit: r < 0.144702 @ 95%CL (1 toyMC)
   68% expected band : 0.144702 < r < 0.144702
   95% expected band : 0.144702 < r < 0.144702
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 273173940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 18.0241 +/- 1.9759 @ 95% CL (17 tries)
Done in 47.70 min (cpu), 47.83 min (real)
mean   expected limit: r < 18.0241 @ 95%CL (1 toyMC)
median expected limit: r < 18.0241 @ 95%CL (1 toyMC)
   68% expected band : 18.0241 < r < 18.0241
   95% expected band : 18.0241 < r < 18.0241
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -694226235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.40369 +/- 1.26593 @ 95% CL (55 tries)
Done in 27.82 min (cpu), 27.93 min (real)
mean   expected limit: r < 6.40369 @ 95%CL (1 toyMC)
median expected limit: r < 6.40369 @ 95%CL (1 toyMC)
   68% expected band : 6.40369 < r < 6.40369
   95% expected band : 6.40369 < r < 6.40369
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -115148257
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.176679 +/- 0.00347472 @ 95% CL (99 tries)
Done in 1.93 min (cpu), 1.94 min (real)
mean   expected limit: r < 0.176679 @ 95%CL (1 toyMC)
median expected limit: r < 0.176679 @ 95%CL (1 toyMC)
   68% expected band : 0.176679 < r < 0.176679
   95% expected band : 0.176679 < r < 0.176679
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1583757902
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.272076 +/- 0.0019141 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.272076 @ 95%CL (1 toyMC)
median expected limit: r < 0.272076 @ 95%CL (1 toyMC)
   68% expected band : 0.272076 < r < 0.272076
   95% expected band : 0.272076 < r < 0.272076
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1439676972
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.342842 +/- 0.00184183 @ 95% CL (100 tries)
Done in 1.56 min (cpu), 1.57 min (real)
mean   expected limit: r < 0.342842 @ 95%CL (1 toyMC)
median expected limit: r < 0.342842 @ 95%CL (1 toyMC)
   68% expected band : 0.342842 < r < 0.342842
   95% expected band : 0.342842 < r < 0.342842
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1437242352
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.277172 +/- 0.00190393 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.52 min (real)
mean   expected limit: r < 0.277172 @ 95%CL (1 toyMC)
median expected limit: r < 0.277172 @ 95%CL (1 toyMC)
   68% expected band : 0.277172 < r < 0.277172
   95% expected band : 0.277172 < r < 0.277172
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 303215402
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.471894 +/- 0.00183809 @ 95% CL (100 tries)
Done in 1.54 min (cpu), 1.55 min (real)
mean   expected limit: r < 0.471894 @ 95%CL (1 toyMC)
median expected limit: r < 0.471894 @ 95%CL (1 toyMC)
   68% expected band : 0.471894 < r < 0.471894
   95% expected band : 0.471894 < r < 0.471894
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -225987504
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.270623 +/- 0.00188668 @ 95% CL (100 tries)
Done in 1.54 min (cpu), 1.55 min (real)
mean   expected limit: r < 0.270623 @ 95%CL (1 toyMC)
median expected limit: r < 0.270623 @ 95%CL (1 toyMC)
   68% expected band : 0.270623 < r < 0.270623
   95% expected band : 0.270623 < r < 0.270623
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -555078901
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.267504 +/- 0.00234936 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.267504 @ 95%CL (1 toyMC)
median expected limit: r < 0.267504 @ 95%CL (1 toyMC)
   68% expected band : 0.267504 < r < 0.267504
   95% expected band : 0.267504 < r < 0.267504
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 367496281
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.215053 +/- 0.00256258 @ 95% CL (100 tries)
Done in 1.54 min (cpu), 1.55 min (real)
mean   expected limit: r < 0.215053 @ 95%CL (1 toyMC)
median expected limit: r < 0.215053 @ 95%CL (1 toyMC)
   68% expected band : 0.215053 < r < 0.215053
   95% expected band : 0.215053 < r < 0.215053
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -543482331
Generate toy 1/1
Done in 54.48 min (cpu), 54.62 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1500897739
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.198187 +/- 0.00286751 @ 95% CL (100 tries)
Done in 1.55 min (cpu), 1.55 min (real)
mean   expected limit: r < 0.198187 @ 95%CL (1 toyMC)
median expected limit: r < 0.198187 @ 95%CL (1 toyMC)
   68% expected band : 0.198187 < r < 0.198187
   95% expected band : 0.198187 < r < 0.198187
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 762638062
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.326482 +/- 0.00188628 @ 95% CL (100 tries)
Done in 1.52 min (cpu), 1.52 min (real)
mean   expected limit: r < 0.326482 @ 95%CL (1 toyMC)
median expected limit: r < 0.326482 @ 95%CL (1 toyMC)
   68% expected band : 0.326482 < r < 0.326482
   95% expected band : 0.326482 < r < 0.326482
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 846747868
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.177712 +/- 0.00235217 @ 95% CL (100 tries)
Done in 1.55 min (cpu), 1.56 min (real)
mean   expected limit: r < 0.177712 @ 95%CL (1 toyMC)
median expected limit: r < 0.177712 @ 95%CL (1 toyMC)
   68% expected band : 0.177712 < r < 0.177712
   95% expected band : 0.177712 < r < 0.177712
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1544654660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.176825 +/- 0.00456723 @ 95% CL (94 tries)
Done in 4.58 min (cpu), 4.60 min (real)
mean   expected limit: r < 0.176825 @ 95%CL (1 toyMC)
median expected limit: r < 0.176825 @ 95%CL (1 toyMC)
   68% expected band : 0.176825 < r < 0.176825
   95% expected band : 0.176825 < r < 0.176825
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 460241614
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.225802 +/- 0.00221056 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.51 min (real)
mean   expected limit: r < 0.225802 @ 95%CL (1 toyMC)
median expected limit: r < 0.225802 @ 95%CL (1 toyMC)
   68% expected band : 0.225802 < r < 0.225802
   95% expected band : 0.225802 < r < 0.225802
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -369170293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203628 +/- 0.0024953 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.203628 @ 95%CL (1 toyMC)
median expected limit: r < 0.203628 @ 95%CL (1 toyMC)
   68% expected band : 0.203628 < r < 0.203628
   95% expected band : 0.203628 < r < 0.203628
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1780070719
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.160686 +/- 0.00683418 @ 95% CL (56 tries)
Done in 25.19 min (cpu), 25.27 min (real)
mean   expected limit: r < 0.160686 @ 95%CL (1 toyMC)
median expected limit: r < 0.160686 @ 95%CL (1 toyMC)
   68% expected band : 0.160686 < r < 0.160686
   95% expected band : 0.160686 < r < 0.160686
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2144492527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.153884 +/- 0.00553177 @ 95% CL (63 tries)
Done in 19.12 min (cpu), 19.16 min (real)
mean   expected limit: r < 0.153884 @ 95%CL (1 toyMC)
median expected limit: r < 0.153884 @ 95%CL (1 toyMC)
   68% expected band : 0.153884 < r < 0.153884
   95% expected band : 0.153884 < r < 0.153884
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -181371495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.23499 +/- 0.0023803 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.51 min (real)
mean   expected limit: r < 0.23499 @ 95%CL (1 toyMC)
median expected limit: r < 0.23499 @ 95%CL (1 toyMC)
   68% expected band : 0.23499 < r < 0.23499
   95% expected band : 0.23499 < r < 0.23499
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1044944812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.292959 +/- 0.00217686 @ 95% CL (100 tries)
Done in 1.52 min (cpu), 1.53 min (real)
mean   expected limit: r < 0.292959 @ 95%CL (1 toyMC)
median expected limit: r < 0.292959 @ 95%CL (1 toyMC)
   68% expected band : 0.292959 < r < 0.292959
   95% expected band : 0.292959 < r < 0.292959
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1801812625
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.166477 +/- 0.00266033 @ 95% CL (99 tries)
Done in 2.09 min (cpu), 2.10 min (real)
mean   expected limit: r < 0.166477 @ 95%CL (1 toyMC)
median expected limit: r < 0.166477 @ 95%CL (1 toyMC)
   68% expected band : 0.166477 < r < 0.166477
   95% expected band : 0.166477 < r < 0.166477
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1350120450
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.185175 +/- 0.0029281 @ 95% CL (100 tries)
Done in 1.52 min (cpu), 1.52 min (real)
mean   expected limit: r < 0.185175 @ 95%CL (1 toyMC)
median expected limit: r < 0.185175 @ 95%CL (1 toyMC)
   68% expected band : 0.185175 < r < 0.185175
   95% expected band : 0.185175 < r < 0.185175
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1006407767
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.210349 +/- 0.00264942 @ 95% CL (100 tries)
Done in 1.54 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.210349 @ 95%CL (1 toyMC)
median expected limit: r < 0.210349 @ 95%CL (1 toyMC)
   68% expected band : 0.210349 < r < 0.210349
   95% expected band : 0.210349 < r < 0.210349
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1126952317
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.182438 +/- 0.00330051 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.53 min (real)
mean   expected limit: r < 0.182438 @ 95%CL (1 toyMC)
median expected limit: r < 0.182438 @ 95%CL (1 toyMC)
   68% expected band : 0.182438 < r < 0.182438
   95% expected band : 0.182438 < r < 0.182438
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -942465278
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.148043 +/- 0.00613952 @ 95% CL (70 tries)
Done in 20.06 min (cpu), 20.11 min (real)
mean   expected limit: r < 0.148043 @ 95%CL (1 toyMC)
median expected limit: r < 0.148043 @ 95%CL (1 toyMC)
   68% expected band : 0.148043 < r < 0.148043
   95% expected band : 0.148043 < r < 0.148043
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2111370118
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.268586 +/- 0.00249052 @ 95% CL (100 tries)
Done in 1.56 min (cpu), 1.56 min (real)
mean   expected limit: r < 0.268586 @ 95%CL (1 toyMC)
median expected limit: r < 0.268586 @ 95%CL (1 toyMC)
   68% expected band : 0.268586 < r < 0.268586
   95% expected band : 0.268586 < r < 0.268586
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1119262423
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.146952 +/- 0.0123317 @ 95% CL (31 tries)
Done in 35.00 min (cpu), 35.09 min (real)
mean   expected limit: r < 0.146952 @ 95%CL (1 toyMC)
median expected limit: r < 0.146952 @ 95%CL (1 toyMC)
   68% expected band : 0.146952 < r < 0.146952
   95% expected band : 0.146952 < r < 0.146952
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1853089393
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.210984 +/- 0.00248307 @ 95% CL (100 tries)
Done in 1.52 min (cpu), 1.53 min (real)
mean   expected limit: r < 0.210984 @ 95%CL (1 toyMC)
median expected limit: r < 0.210984 @ 95%CL (1 toyMC)
   68% expected band : 0.210984 < r < 0.210984
   95% expected band : 0.210984 < r < 0.210984
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1114589382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.200828 +/- 0.00271034 @ 95% CL (100 tries)
Done in 1.54 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.200828 @ 95%CL (1 toyMC)
median expected limit: r < 0.200828 @ 95%CL (1 toyMC)
   68% expected band : 0.200828 < r < 0.200828
   95% expected band : 0.200828 < r < 0.200828
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1094024316
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.78868 +/- 3.30291 @ 95% CL (9 tries)
Done in 46.45 min (cpu), 46.57 min (real)
mean   expected limit: r < 6.78868 @ 95%CL (1 toyMC)
median expected limit: r < 6.78868 @ 95%CL (1 toyMC)
   68% expected band : 6.78868 < r < 6.78868
   95% expected band : 6.78868 < r < 6.78868
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -753600316
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.217089 +/- 0.00282269 @ 95% CL (100 tries)
Done in 1.50 min (cpu), 1.51 min (real)
mean   expected limit: r < 0.217089 @ 95%CL (1 toyMC)
median expected limit: r < 0.217089 @ 95%CL (1 toyMC)
   68% expected band : 0.217089 < r < 0.217089
   95% expected band : 0.217089 < r < 0.217089
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -501858451
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.156283 +/- 0.00556267 @ 95% CL (78 tries)
Done in 15.99 min (cpu), 16.05 min (real)
mean   expected limit: r < 0.156283 @ 95%CL (1 toyMC)
median expected limit: r < 0.156283 @ 95%CL (1 toyMC)
   68% expected band : 0.156283 < r < 0.156283
   95% expected band : 0.156283 < r < 0.156283
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -411438656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.200802 +/- 0.00296689 @ 95% CL (100 tries)
Done in 1.52 min (cpu), 1.53 min (real)
mean   expected limit: r < 0.200802 @ 95%CL (1 toyMC)
median expected limit: r < 0.200802 @ 95%CL (1 toyMC)
   68% expected band : 0.200802 < r < 0.200802
   95% expected band : 0.200802 < r < 0.200802
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -474232157
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.418229 +/- 0.00264669 @ 95% CL (100 tries)
Done in 1.55 min (cpu), 1.56 min (real)
mean   expected limit: r < 0.418229 @ 95%CL (1 toyMC)
median expected limit: r < 0.418229 @ 95%CL (1 toyMC)
   68% expected band : 0.418229 < r < 0.418229
   95% expected band : 0.418229 < r < 0.418229
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1681398975
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.229159 +/- 0.00237507 @ 95% CL (100 tries)
Done in 1.54 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.229159 @ 95%CL (1 toyMC)
median expected limit: r < 0.229159 @ 95%CL (1 toyMC)
   68% expected band : 0.229159 < r < 0.229159
   95% expected band : 0.229159 < r < 0.229159
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 672156916
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.204364 +/- 0.00190436 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.51 min (real)
mean   expected limit: r < 0.204364 @ 95%CL (1 toyMC)
median expected limit: r < 0.204364 @ 95%CL (1 toyMC)
   68% expected band : 0.204364 < r < 0.204364
   95% expected band : 0.204364 < r < 0.204364
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1745592333
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5.51102 +/- 1.75899 @ 95% CL (27 tries)
Done in 36.77 min (cpu), 36.89 min (real)
mean   expected limit: r < 5.51102 @ 95%CL (1 toyMC)
median expected limit: r < 5.51102 @ 95%CL (1 toyMC)
   68% expected band : 5.51102 < r < 5.51102
   95% expected band : 5.51102 < r < 5.51102
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 687192883
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.165864 +/- 0.00491608 @ 95% CL (93 tries)
Done in 5.61 min (cpu), 5.63 min (real)
mean   expected limit: r < 0.165864 @ 95%CL (1 toyMC)
median expected limit: r < 0.165864 @ 95%CL (1 toyMC)
   68% expected band : 0.165864 < r < 0.165864
   95% expected band : 0.165864 < r < 0.165864
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1021994398
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.201865 +/- 0.00298243 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.201865 @ 95%CL (1 toyMC)
median expected limit: r < 0.201865 @ 95%CL (1 toyMC)
   68% expected band : 0.201865 < r < 0.201865
   95% expected band : 0.201865 < r < 0.201865
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 876153468
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.158806 +/- 0.0108115 @ 95% CL (46 tries)
Done in 29.07 min (cpu), 29.16 min (real)
mean   expected limit: r < 0.158806 @ 95%CL (1 toyMC)
median expected limit: r < 0.158806 @ 95%CL (1 toyMC)
   68% expected band : 0.158806 < r < 0.158806
   95% expected band : 0.158806 < r < 0.158806
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1787679168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.198837 +/- 0.00275166 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.53 min (real)
mean   expected limit: r < 0.198837 @ 95%CL (1 toyMC)
median expected limit: r < 0.198837 @ 95%CL (1 toyMC)
   68% expected band : 0.198837 < r < 0.198837
   95% expected band : 0.198837 < r < 0.198837
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 590343943
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.225355 +/- 0.00254207 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.225355 @ 95%CL (1 toyMC)
median expected limit: r < 0.225355 @ 95%CL (1 toyMC)
   68% expected band : 0.225355 < r < 0.225355
   95% expected band : 0.225355 < r < 0.225355
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 735790200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.232766 +/- 0.00243982 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.53 min (real)
mean   expected limit: r < 0.232766 @ 95%CL (1 toyMC)
median expected limit: r < 0.232766 @ 95%CL (1 toyMC)
   68% expected band : 0.232766 < r < 0.232766
   95% expected band : 0.232766 < r < 0.232766
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 480778801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.201535 +/- 0.00258076 @ 95% CL (100 tries)
Done in 1.52 min (cpu), 1.53 min (real)
mean   expected limit: r < 0.201535 @ 95%CL (1 toyMC)
median expected limit: r < 0.201535 @ 95%CL (1 toyMC)
   68% expected band : 0.201535 < r < 0.201535
   95% expected band : 0.201535 < r < 0.201535
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1686441334
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.149503 +/- 0.00416142 @ 95% CL (78 tries)
Done in 11.67 min (cpu), 11.72 min (real)
mean   expected limit: r < 0.149503 @ 95%CL (1 toyMC)
median expected limit: r < 0.149503 @ 95%CL (1 toyMC)
   68% expected band : 0.149503 < r < 0.149503
   95% expected band : 0.149503 < r < 0.149503
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -774738823
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.304297 +/- 0.0019229 @ 95% CL (100 tries)
Done in 1.52 min (cpu), 1.52 min (real)
mean   expected limit: r < 0.304297 @ 95%CL (1 toyMC)
median expected limit: r < 0.304297 @ 95%CL (1 toyMC)
   68% expected band : 0.304297 < r < 0.304297
   95% expected band : 0.304297 < r < 0.304297
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1198421355
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.174376 +/- 0.00275719 @ 95% CL (100 tries)
Done in 1.53 min (cpu), 1.54 min (real)
mean   expected limit: r < 0.174376 @ 95%CL (1 toyMC)
median expected limit: r < 0.174376 @ 95%CL (1 toyMC)
   68% expected band : 0.174376 < r < 0.174376
   95% expected band : 0.174376 < r < 0.174376
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 775337660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.176674 +/- 0.00347221 @ 95% CL (95 tries)
Done in 3.95 min (cpu), 3.97 min (real)
mean   expected limit: r < 0.176674 @ 95%CL (1 toyMC)
median expected limit: r < 0.176674 @ 95%CL (1 toyMC)
   68% expected band : 0.176674 < r < 0.176674
   95% expected band : 0.176674 < r < 0.176674
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -593913256
Generate toy 1/1
Done in 50.14 min (cpu), 50.28 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1910905714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.266557 +/- 0.0018684 @ 95% CL (100 tries)
Done in 1.49 min (cpu), 1.50 min (real)
mean   expected limit: r < 0.266557 @ 95%CL (1 toyMC)
median expected limit: r < 0.266557 @ 95%CL (1 toyMC)
   68% expected band : 0.266557 < r < 0.266557
   95% expected band : 0.266557 < r < 0.266557
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -43036129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.296814 +/- 0.00224665 @ 95% CL (100 tries)
Done in 1.49 min (cpu), 1.49 min (real)
mean   expected limit: r < 0.296814 @ 95%CL (1 toyMC)
median expected limit: r < 0.296814 @ 95%CL (1 toyMC)
   68% expected band : 0.296814 < r < 0.296814
   95% expected band : 0.296814 < r < 0.296814
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1367639032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.178894 +/- 0.0047718 @ 95% CL (93 tries)
Done in 7.09 min (cpu), 7.10 min (real)
mean   expected limit: r < 0.178894 @ 95%CL (1 toyMC)
median expected limit: r < 0.178894 @ 95%CL (1 toyMC)
   68% expected band : 0.178894 < r < 0.178894
   95% expected band : 0.178894 < r < 0.178894
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1627034479
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.158497 +/- 0.0118708 @ 95% CL (30 tries)
Done in 34.74 min (cpu), 34.82 min (real)
mean   expected limit: r < 0.158497 @ 95%CL (1 toyMC)
median expected limit: r < 0.158497 @ 95%CL (1 toyMC)
   68% expected band : 0.158497 < r < 0.158497
   95% expected band : 0.158497 < r < 0.158497
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1760320808
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.86898 +/- 1.1082 @ 95% CL (61 tries)
Done in 23.87 min (cpu), 23.93 min (real)
mean   expected limit: r < 4.86898 @ 95%CL (1 toyMC)
median expected limit: r < 4.86898 @ 95%CL (1 toyMC)
   68% expected band : 4.86898 < r < 4.86898
   95% expected band : 4.86898 < r < 4.86898
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2110690846
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.210765 +/- 0.00169973 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.51 min (real)
mean   expected limit: r < 0.210765 @ 95%CL (1 toyMC)
median expected limit: r < 0.210765 @ 95%CL (1 toyMC)
   68% expected band : 0.210765 < r < 0.210765
   95% expected band : 0.210765 < r < 0.210765
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 42123130
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.189496 +/- 0.00264222 @ 95% CL (100 tries)
Done in 1.50 min (cpu), 1.50 min (real)
mean   expected limit: r < 0.189496 @ 95%CL (1 toyMC)
median expected limit: r < 0.189496 @ 95%CL (1 toyMC)
   68% expected band : 0.189496 < r < 0.189496
   95% expected band : 0.189496 < r < 0.189496
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 116210881
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.446363 +/- 0.00266918 @ 95% CL (100 tries)
Done in 1.45 min (cpu), 1.45 min (real)
mean   expected limit: r < 0.446363 @ 95%CL (1 toyMC)
median expected limit: r < 0.446363 @ 95%CL (1 toyMC)
   68% expected band : 0.446363 < r < 0.446363
   95% expected band : 0.446363 < r < 0.446363
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1371822425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.30177 +/- 0.00177177 @ 95% CL (100 tries)
Done in 1.47 min (cpu), 1.47 min (real)
mean   expected limit: r < 0.30177 @ 95%CL (1 toyMC)
median expected limit: r < 0.30177 @ 95%CL (1 toyMC)
   68% expected band : 0.30177 < r < 0.30177
   95% expected band : 0.30177 < r < 0.30177
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 990886764
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.152828 +/- 0.00327563 @ 95% CL (89 tries)
Done in 8.22 min (cpu), 8.25 min (real)
mean   expected limit: r < 0.152828 @ 95%CL (1 toyMC)
median expected limit: r < 0.152828 @ 95%CL (1 toyMC)
   68% expected band : 0.152828 < r < 0.152828
   95% expected band : 0.152828 < r < 0.152828
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 553059033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.491093 +/- 0.00232426 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.51 min (real)
mean   expected limit: r < 0.491093 @ 95%CL (1 toyMC)
median expected limit: r < 0.491093 @ 95%CL (1 toyMC)
   68% expected band : 0.491093 < r < 0.491093
   95% expected band : 0.491093 < r < 0.491093
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1884439154
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.497922 +/- 0.00212067 @ 95% CL (100 tries)
Done in 1.49 min (cpu), 1.50 min (real)
mean   expected limit: r < 0.497922 @ 95%CL (1 toyMC)
median expected limit: r < 0.497922 @ 95%CL (1 toyMC)
   68% expected band : 0.497922 < r < 0.497922
   95% expected band : 0.497922 < r < 0.497922
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 125765416
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.365882 +/- 0.00228763 @ 95% CL (100 tries)
Done in 1.43 min (cpu), 1.43 min (real)
mean   expected limit: r < 0.365882 @ 95%CL (1 toyMC)
median expected limit: r < 0.365882 @ 95%CL (1 toyMC)
   68% expected band : 0.365882 < r < 0.365882
   95% expected band : 0.365882 < r < 0.365882
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1812463234
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.307937 +/- 0.00263026 @ 95% CL (100 tries)
Done in 1.48 min (cpu), 1.48 min (real)
mean   expected limit: r < 0.307937 @ 95%CL (1 toyMC)
median expected limit: r < 0.307937 @ 95%CL (1 toyMC)
   68% expected band : 0.307937 < r < 0.307937
   95% expected band : 0.307937 < r < 0.307937
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1635062686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.318551 +/- 0.00227418 @ 95% CL (100 tries)
Done in 1.44 min (cpu), 1.44 min (real)
mean   expected limit: r < 0.318551 @ 95%CL (1 toyMC)
median expected limit: r < 0.318551 @ 95%CL (1 toyMC)
   68% expected band : 0.318551 < r < 0.318551
   95% expected band : 0.318551 < r < 0.318551
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 810590586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.203502 +/- 0.00273036 @ 95% CL (100 tries)
Done in 1.43 min (cpu), 1.44 min (real)
mean   expected limit: r < 0.203502 @ 95%CL (1 toyMC)
median expected limit: r < 0.203502 @ 95%CL (1 toyMC)
   68% expected band : 0.203502 < r < 0.203502
   95% expected band : 0.203502 < r < 0.203502
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 469888635
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.365585 +/- 0.00219496 @ 95% CL (100 tries)
Done in 1.43 min (cpu), 1.43 min (real)
mean   expected limit: r < 0.365585 @ 95%CL (1 toyMC)
median expected limit: r < 0.365585 @ 95%CL (1 toyMC)
   68% expected band : 0.365585 < r < 0.365585
   95% expected band : 0.365585 < r < 0.365585
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 708640488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.179677 +/- 0.00307106 @ 95% CL (100 tries)
Done in 1.44 min (cpu), 1.45 min (real)
mean   expected limit: r < 0.179677 @ 95%CL (1 toyMC)
median expected limit: r < 0.179677 @ 95%CL (1 toyMC)
   68% expected band : 0.179677 < r < 0.179677
   95% expected band : 0.179677 < r < 0.179677
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2068807636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.412247 +/- 0.0022038 @ 95% CL (100 tries)
Done in 1.51 min (cpu), 1.52 min (real)
mean   expected limit: r < 0.412247 @ 95%CL (1 toyMC)
median expected limit: r < 0.412247 @ 95%CL (1 toyMC)
   68% expected band : 0.412247 < r < 0.412247
   95% expected band : 0.412247 < r < 0.412247
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -436908091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.211468 +/- 0.00298892 @ 95% CL (100 tries)
Done in 1.49 min (cpu), 1.49 min (real)
mean   expected limit: r < 0.211468 @ 95%CL (1 toyMC)
median expected limit: r < 0.211468 @ 95%CL (1 toyMC)
   68% expected band : 0.211468 < r < 0.211468
   95% expected band : 0.211468 < r < 0.211468
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1893783137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.24205 +/- 0.00216163 @ 95% CL (100 tries)
Done in 1.45 min (cpu), 1.46 min (real)
mean   expected limit: r < 0.24205 @ 95%CL (1 toyMC)
median expected limit: r < 0.24205 @ 95%CL (1 toyMC)
   68% expected band : 0.24205 < r < 0.24205
   95% expected band : 0.24205 < r < 0.24205
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1111122259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.197478 +/- 0.00258451 @ 95% CL (100 tries)
Done in 1.42 min (cpu), 1.43 min (real)
mean   expected limit: r < 0.197478 @ 95%CL (1 toyMC)
median expected limit: r < 0.197478 @ 95%CL (1 toyMC)
   68% expected band : 0.197478 < r < 0.197478
   95% expected band : 0.197478 < r < 0.197478
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1654854702
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.211196 +/- 0.00270444 @ 95% CL (100 tries)
Done in 1.42 min (cpu), 1.42 min (real)
mean   expected limit: r < 0.211196 @ 95%CL (1 toyMC)
median expected limit: r < 0.211196 @ 95%CL (1 toyMC)
   68% expected band : 0.211196 < r < 0.211196
   95% expected band : 0.211196 < r < 0.211196
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 72847499
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.169373 +/- 0.00269005 @ 95% CL (99 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.169373 @ 95%CL (1 toyMC)
median expected limit: r < 0.169373 @ 95%CL (1 toyMC)
   68% expected band : 0.169373 < r < 0.169373
   95% expected band : 0.169373 < r < 0.169373
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -299605233
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.178044 +/- 0.00422982 @ 95% CL (93 tries)
Done in 3.76 min (cpu), 3.77 min (real)
mean   expected limit: r < 0.178044 @ 95%CL (1 toyMC)
median expected limit: r < 0.178044 @ 95%CL (1 toyMC)
   68% expected band : 0.178044 < r < 0.178044
   95% expected band : 0.178044 < r < 0.178044
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1263115274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.378506 +/- 0.00265441 @ 95% CL (100 tries)
Done in 1.43 min (cpu), 1.43 min (real)
mean   expected limit: r < 0.378506 @ 95%CL (1 toyMC)
median expected limit: r < 0.378506 @ 95%CL (1 toyMC)
   68% expected band : 0.378506 < r < 0.378506
   95% expected band : 0.378506 < r < 0.378506
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1558142096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.196085 +/- 0.00268744 @ 95% CL (100 tries)
Done in 1.43 min (cpu), 1.43 min (real)
mean   expected limit: r < 0.196085 @ 95%CL (1 toyMC)
median expected limit: r < 0.196085 @ 95%CL (1 toyMC)
   68% expected band : 0.196085 < r < 0.196085
   95% expected band : 0.196085 < r < 0.196085
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1130910354
Generate toy 1/1
Done in 56.13 min (cpu), 56.21 min (real)
mean   expected limit: r < -nan @ 95%CL (0 toyMC)
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -553402012
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.363222 +/- 0.00178469 @ 95% CL (100 tries)
Done in 1.48 min (cpu), 1.48 min (real)
mean   expected limit: r < 0.363222 @ 95%CL (1 toyMC)
median expected limit: r < 0.363222 @ 95%CL (1 toyMC)
   68% expected band : 0.363222 < r < 0.363222
   95% expected band : 0.363222 < r < 0.363222
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1291717602
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.78455 +/- 1.55876 @ 95% CL (32 tries)
Done in 42.94 min (cpu), 43.00 min (real)
mean   expected limit: r < 4.78455 @ 95%CL (1 toyMC)
median expected limit: r < 4.78455 @ 95%CL (1 toyMC)
   68% expected band : 4.78455 < r < 4.78455
   95% expected band : 4.78455 < r < 4.78455
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -240733443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.317207 +/- 0.00208918 @ 95% CL (100 tries)
Done in 1.45 min (cpu), 1.45 min (real)
mean   expected limit: r < 0.317207 @ 95%CL (1 toyMC)
median expected limit: r < 0.317207 @ 95%CL (1 toyMC)
   68% expected band : 0.317207 < r < 0.317207
   95% expected band : 0.317207 < r < 0.317207
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 364958620
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 5e+29 +/- 5e+29 @ 95% CL (2 tries)
Done in 51.70 min (cpu), 51.76 min (real)
mean   expected limit: r < 5e+29 @ 95%CL (1 toyMC)
median expected limit: r < 5e+29 @ 95%CL (1 toyMC)
   68% expected band : 5e+29 < r < 5e+29
   95% expected band : 5e+29 < r < 5e+29
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine16.MarkovChainMC.mH16.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH16.-1006407767.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH16.-1021994398.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH16.-1044944812.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH16.-1111122259.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH16.-1114589382.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH16.-1119262423.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH16.-1130910354.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH16.-115148257.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH16.-1198421355.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH16.-1263115274.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH16.-1285630956.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH16.-1437242352.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH16.-1439676972.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH16.-1500897739.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH16.-1583757902.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH16.-1635062686.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH16.-1654854702.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH16.-1686441334.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH16.-1787679168.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH16.-181371495.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH16.-1821870929.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH16.-186694990.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH16.-1884439154.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH16.-2068807636.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH16.-2110690846.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH16.-2111370118.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH16.-225987504.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH16.-240733443.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH16.-299605233.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH16.-309651357.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH16.-369170293.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH16.-411438656.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH16.-425965620.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH16.-43036129.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH16.-436908091.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH16.-474232157.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH16.-501858451.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH16.-543482331.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH16.-553402012.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH16.-555078901.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH16.-593913256.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH16.-596618130.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH16.-694226235.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH16.-753600316.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH16.-75626075.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH16.-774738823.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH16.-942465278.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH16.-953562192.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH16.1056657014.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH16.1067696506.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH16.1087437520.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH16.1094024316.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH16.1126952317.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH16.116210881.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH16.125765416.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH16.1291717602.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH16.1350120450.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH16.1367639032.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH16.1371822425.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH16.1544654660.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH16.1558142096.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH16.1627034479.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH16.1681398975.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH16.1745592333.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH16.17513497.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH16.1760320808.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH16.1780070719.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH16.1801812625.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH16.1812463234.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH16.1853089393.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH16.1893783137.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH16.1910905714.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH16.19363369.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH16.1955341078.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH16.2144492527.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH16.273173940.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH16.303215402.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH16.364958620.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH16.367496281.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH16.42123130.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH16.460241614.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH16.469888635.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH16.480778801.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH16.537557515.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH16.553059033.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH16.590343943.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH16.672156916.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH16.687192883.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH16.689845380.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH16.708640488.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH16.716464731.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH16.72847499.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH16.735790200.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH16.762638062.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH16.775337660.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH16.810590586.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH16.846747868.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH16.876153468.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH16.905740370.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH16.990886764.root
hadd Target path: higgsCombine16.MarkovChainMC.mH16.root:/
hadd Target path: higgsCombine16.MarkovChainMC.mH16.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 608367443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.295872 +/- 0.00245681 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.295872 @ 95%CL (1 toyMC)
median expected limit: r < 0.295872 @ 95%CL (1 toyMC)
   68% expected band : 0.295872 < r < 0.295872
   95% expected band : 0.295872 < r < 0.295872
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1290467880
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.360163 +/- 0.00221215 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.360163 @ 95%CL (1 toyMC)
median expected limit: r < 0.360163 @ 95%CL (1 toyMC)
   68% expected band : 0.360163 < r < 0.360163
   95% expected band : 0.360163 < r < 0.360163
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -741140447
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.407657 +/- 0.00277338 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 0.407657 @ 95%CL (1 toyMC)
median expected limit: r < 0.407657 @ 95%CL (1 toyMC)
   68% expected band : 0.407657 < r < 0.407657
   95% expected band : 0.407657 < r < 0.407657
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 187670125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.808909 +/- 0.00252144 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.808909 @ 95%CL (1 toyMC)
median expected limit: r < 0.808909 @ 95%CL (1 toyMC)
   68% expected band : 0.808909 < r < 0.808909
   95% expected band : 0.808909 < r < 0.808909
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 256850897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.509866 +/- 0.00268314 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.509866 @ 95%CL (1 toyMC)
median expected limit: r < 0.509866 @ 95%CL (1 toyMC)
   68% expected band : 0.509866 < r < 0.509866
   95% expected band : 0.509866 < r < 0.509866
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2009022983
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.60116 +/- 0.00215816 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.60116 @ 95%CL (1 toyMC)
median expected limit: r < 0.60116 @ 95%CL (1 toyMC)
   68% expected band : 0.60116 < r < 0.60116
   95% expected band : 0.60116 < r < 0.60116
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1775558201
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.343426 +/- 0.00255013 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.343426 @ 95%CL (1 toyMC)
median expected limit: r < 0.343426 @ 95%CL (1 toyMC)
   68% expected band : 0.343426 < r < 0.343426
   95% expected band : 0.343426 < r < 0.343426
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1063044645
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.769391 +/- 0.00370266 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.769391 @ 95%CL (1 toyMC)
median expected limit: r < 0.769391 @ 95%CL (1 toyMC)
   68% expected band : 0.769391 < r < 0.769391
   95% expected band : 0.769391 < r < 0.769391
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1296058232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.456021 +/- 0.00303196 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.456021 @ 95%CL (1 toyMC)
median expected limit: r < 0.456021 @ 95%CL (1 toyMC)
   68% expected band : 0.456021 < r < 0.456021
   95% expected band : 0.456021 < r < 0.456021
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1270727088
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.783523 +/- 0.00301521 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.783523 @ 95%CL (1 toyMC)
median expected limit: r < 0.783523 @ 95%CL (1 toyMC)
   68% expected band : 0.783523 < r < 0.783523
   95% expected band : 0.783523 < r < 0.783523
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 372623656
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.457336 +/- 0.0032611 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.457336 @ 95%CL (1 toyMC)
median expected limit: r < 0.457336 @ 95%CL (1 toyMC)
   68% expected band : 0.457336 < r < 0.457336
   95% expected band : 0.457336 < r < 0.457336
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1501481125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.943855 +/- 0.00249128 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.943855 @ 95%CL (1 toyMC)
median expected limit: r < 0.943855 @ 95%CL (1 toyMC)
   68% expected band : 0.943855 < r < 0.943855
   95% expected band : 0.943855 < r < 0.943855
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -695965951
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.352536 +/- 0.00227948 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.352536 @ 95%CL (1 toyMC)
median expected limit: r < 0.352536 @ 95%CL (1 toyMC)
   68% expected band : 0.352536 < r < 0.352536
   95% expected band : 0.352536 < r < 0.352536
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1084245340
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.79222 +/- 0.00350985 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.79222 @ 95%CL (1 toyMC)
median expected limit: r < 0.79222 @ 95%CL (1 toyMC)
   68% expected band : 0.79222 < r < 0.79222
   95% expected band : 0.79222 < r < 0.79222
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1215494017
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.409936 +/- 0.00310486 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.409936 @ 95%CL (1 toyMC)
median expected limit: r < 0.409936 @ 95%CL (1 toyMC)
   68% expected band : 0.409936 < r < 0.409936
   95% expected band : 0.409936 < r < 0.409936
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -185916967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.315191 +/- 0.00239809 @ 95% CL (100 tries)
Done in 1.63 min (cpu), 1.64 min (real)
mean   expected limit: r < 0.315191 @ 95%CL (1 toyMC)
median expected limit: r < 0.315191 @ 95%CL (1 toyMC)
   68% expected band : 0.315191 < r < 0.315191
   95% expected band : 0.315191 < r < 0.315191
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1643119599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.355341 +/- 0.00327591 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 0.355341 @ 95%CL (1 toyMC)
median expected limit: r < 0.355341 @ 95%CL (1 toyMC)
   68% expected band : 0.355341 < r < 0.355341
   95% expected band : 0.355341 < r < 0.355341
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 171417433
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.341636 +/- 0.00257117 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 0.341636 @ 95%CL (1 toyMC)
median expected limit: r < 0.341636 @ 95%CL (1 toyMC)
   68% expected band : 0.341636 < r < 0.341636
   95% expected band : 0.341636 < r < 0.341636
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1262245116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.478117 +/- 0.00221076 @ 95% CL (100 tries)
Done in 1.60 min (cpu), 1.60 min (real)
mean   expected limit: r < 0.478117 @ 95%CL (1 toyMC)
median expected limit: r < 0.478117 @ 95%CL (1 toyMC)
   68% expected band : 0.478117 < r < 0.478117
   95% expected band : 0.478117 < r < 0.478117
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -276630959
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.248254 +/- 0.00287614 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.248254 @ 95%CL (1 toyMC)
median expected limit: r < 0.248254 @ 95%CL (1 toyMC)
   68% expected band : 0.248254 < r < 0.248254
   95% expected band : 0.248254 < r < 0.248254
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2143521746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.366041 +/- 0.00285994 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.366041 @ 95%CL (1 toyMC)
median expected limit: r < 0.366041 @ 95%CL (1 toyMC)
   68% expected band : 0.366041 < r < 0.366041
   95% expected band : 0.366041 < r < 0.366041
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1832068141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.752092 +/- 0.00306464 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.752092 @ 95%CL (1 toyMC)
median expected limit: r < 0.752092 @ 95%CL (1 toyMC)
   68% expected band : 0.752092 < r < 0.752092
   95% expected band : 0.752092 < r < 0.752092
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1041346528
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.314804 +/- 0.00261865 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.314804 @ 95%CL (1 toyMC)
median expected limit: r < 0.314804 @ 95%CL (1 toyMC)
   68% expected band : 0.314804 < r < 0.314804
   95% expected band : 0.314804 < r < 0.314804
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 332370244
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.424072 +/- 0.00288536 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.424072 @ 95%CL (1 toyMC)
median expected limit: r < 0.424072 @ 95%CL (1 toyMC)
   68% expected band : 0.424072 < r < 0.424072
   95% expected band : 0.424072 < r < 0.424072
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1812375194
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.649311 +/- 0.00295073 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.649311 @ 95%CL (1 toyMC)
median expected limit: r < 0.649311 @ 95%CL (1 toyMC)
   68% expected band : 0.649311 < r < 0.649311
   95% expected band : 0.649311 < r < 0.649311
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1774242738
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12838 +/- 0.00264797 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.12838 @ 95%CL (1 toyMC)
median expected limit: r < 1.12838 @ 95%CL (1 toyMC)
   68% expected band : 1.12838 < r < 1.12838
   95% expected band : 1.12838 < r < 1.12838
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1159956764
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.411446 +/- 0.00252581 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.411446 @ 95%CL (1 toyMC)
median expected limit: r < 0.411446 @ 95%CL (1 toyMC)
   68% expected band : 0.411446 < r < 0.411446
   95% expected band : 0.411446 < r < 0.411446
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1948969680
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.539034 +/- 0.00246835 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.539034 @ 95%CL (1 toyMC)
median expected limit: r < 0.539034 @ 95%CL (1 toyMC)
   68% expected band : 0.539034 < r < 0.539034
   95% expected band : 0.539034 < r < 0.539034
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1436702686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.705941 +/- 0.00299998 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.705941 @ 95%CL (1 toyMC)
median expected limit: r < 0.705941 @ 95%CL (1 toyMC)
   68% expected band : 0.705941 < r < 0.705941
   95% expected band : 0.705941 < r < 0.705941
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1274577894
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.502675 +/- 0.00266896 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.502675 @ 95%CL (1 toyMC)
median expected limit: r < 0.502675 @ 95%CL (1 toyMC)
   68% expected band : 0.502675 < r < 0.502675
   95% expected band : 0.502675 < r < 0.502675
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2032959967
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.345142 +/- 0.00274744 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.345142 @ 95%CL (1 toyMC)
median expected limit: r < 0.345142 @ 95%CL (1 toyMC)
   68% expected band : 0.345142 < r < 0.345142
   95% expected band : 0.345142 < r < 0.345142
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -349737033
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.805805 +/- 0.003087 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.805805 @ 95%CL (1 toyMC)
median expected limit: r < 0.805805 @ 95%CL (1 toyMC)
   68% expected band : 0.805805 < r < 0.805805
   95% expected band : 0.805805 < r < 0.805805
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 825221619
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.66803 +/- 0.00301284 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.66803 @ 95%CL (1 toyMC)
median expected limit: r < 0.66803 @ 95%CL (1 toyMC)
   68% expected band : 0.66803 < r < 0.66803
   95% expected band : 0.66803 < r < 0.66803
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -943832668
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.462559 +/- 0.00251151 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.462559 @ 95%CL (1 toyMC)
median expected limit: r < 0.462559 @ 95%CL (1 toyMC)
   68% expected band : 0.462559 < r < 0.462559
   95% expected band : 0.462559 < r < 0.462559
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -194435925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.405995 +/- 0.00269586 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.405995 @ 95%CL (1 toyMC)
median expected limit: r < 0.405995 @ 95%CL (1 toyMC)
   68% expected band : 0.405995 < r < 0.405995
   95% expected band : 0.405995 < r < 0.405995
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 203933396
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.780579 +/- 0.00291313 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.780579 @ 95%CL (1 toyMC)
median expected limit: r < 0.780579 @ 95%CL (1 toyMC)
   68% expected band : 0.780579 < r < 0.780579
   95% expected band : 0.780579 < r < 0.780579
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -540697276
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.274061 +/- 0.00239547 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.274061 @ 95%CL (1 toyMC)
median expected limit: r < 0.274061 @ 95%CL (1 toyMC)
   68% expected band : 0.274061 < r < 0.274061
   95% expected band : 0.274061 < r < 0.274061
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1591445524
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.387749 +/- 0.0025349 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.387749 @ 95%CL (1 toyMC)
median expected limit: r < 0.387749 @ 95%CL (1 toyMC)
   68% expected band : 0.387749 < r < 0.387749
   95% expected band : 0.387749 < r < 0.387749
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 426023714
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.482187 +/- 0.00215944 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.482187 @ 95%CL (1 toyMC)
median expected limit: r < 0.482187 @ 95%CL (1 toyMC)
   68% expected band : 0.482187 < r < 0.482187
   95% expected band : 0.482187 < r < 0.482187
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 449904147
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.558091 +/- 0.00268489 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.558091 @ 95%CL (1 toyMC)
median expected limit: r < 0.558091 @ 95%CL (1 toyMC)
   68% expected band : 0.558091 < r < 0.558091
   95% expected band : 0.558091 < r < 0.558091
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -968442440
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.67705 +/- 0.00224404 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.67705 @ 95%CL (1 toyMC)
median expected limit: r < 0.67705 @ 95%CL (1 toyMC)
   68% expected band : 0.67705 < r < 0.67705
   95% expected band : 0.67705 < r < 0.67705
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 467403539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.854103 +/- 0.00333751 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.854103 @ 95%CL (1 toyMC)
median expected limit: r < 0.854103 @ 95%CL (1 toyMC)
   68% expected band : 0.854103 < r < 0.854103
   95% expected band : 0.854103 < r < 0.854103
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -260148124
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.680624 +/- 0.00302676 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.680624 @ 95%CL (1 toyMC)
median expected limit: r < 0.680624 @ 95%CL (1 toyMC)
   68% expected band : 0.680624 < r < 0.680624
   95% expected band : 0.680624 < r < 0.680624
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1741078541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.358695 +/- 0.00239386 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.358695 @ 95%CL (1 toyMC)
median expected limit: r < 0.358695 @ 95%CL (1 toyMC)
   68% expected band : 0.358695 < r < 0.358695
   95% expected band : 0.358695 < r < 0.358695
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1384328760
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.309115 +/- 0.00303397 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.309115 @ 95%CL (1 toyMC)
median expected limit: r < 0.309115 @ 95%CL (1 toyMC)
   68% expected band : 0.309115 < r < 0.309115
   95% expected band : 0.309115 < r < 0.309115
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -183330311
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.381812 +/- 0.0029254 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.381812 @ 95%CL (1 toyMC)
median expected limit: r < 0.381812 @ 95%CL (1 toyMC)
   68% expected band : 0.381812 < r < 0.381812
   95% expected band : 0.381812 < r < 0.381812
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -955333520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.859174 +/- 0.00282248 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.859174 @ 95%CL (1 toyMC)
median expected limit: r < 0.859174 @ 95%CL (1 toyMC)
   68% expected band : 0.859174 < r < 0.859174
   95% expected band : 0.859174 < r < 0.859174
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1247691643
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.744108 +/- 0.00264674 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.744108 @ 95%CL (1 toyMC)
median expected limit: r < 0.744108 @ 95%CL (1 toyMC)
   68% expected band : 0.744108 < r < 0.744108
   95% expected band : 0.744108 < r < 0.744108
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -830116051
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.473273 +/- 0.00223161 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.473273 @ 95%CL (1 toyMC)
median expected limit: r < 0.473273 @ 95%CL (1 toyMC)
   68% expected band : 0.473273 < r < 0.473273
   95% expected band : 0.473273 < r < 0.473273
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 17235633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.430473 +/- 0.00302772 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.430473 @ 95%CL (1 toyMC)
median expected limit: r < 0.430473 @ 95%CL (1 toyMC)
   68% expected band : 0.430473 < r < 0.430473
   95% expected band : 0.430473 < r < 0.430473
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1012745538
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.337963 +/- 0.00290923 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.337963 @ 95%CL (1 toyMC)
median expected limit: r < 0.337963 @ 95%CL (1 toyMC)
   68% expected band : 0.337963 < r < 0.337963
   95% expected band : 0.337963 < r < 0.337963
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1811947924
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.461633 +/- 0.00244456 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.461633 @ 95%CL (1 toyMC)
median expected limit: r < 0.461633 @ 95%CL (1 toyMC)
   68% expected band : 0.461633 < r < 0.461633
   95% expected band : 0.461633 < r < 0.461633
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1870902715
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.572627 +/- 0.00262625 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.572627 @ 95%CL (1 toyMC)
median expected limit: r < 0.572627 @ 95%CL (1 toyMC)
   68% expected band : 0.572627 < r < 0.572627
   95% expected band : 0.572627 < r < 0.572627
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -429097944
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.372781 +/- 0.00342206 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.372781 @ 95%CL (1 toyMC)
median expected limit: r < 0.372781 @ 95%CL (1 toyMC)
   68% expected band : 0.372781 < r < 0.372781
   95% expected band : 0.372781 < r < 0.372781
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1450605539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.524802 +/- 0.0031308 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.524802 @ 95%CL (1 toyMC)
median expected limit: r < 0.524802 @ 95%CL (1 toyMC)
   68% expected band : 0.524802 < r < 0.524802
   95% expected band : 0.524802 < r < 0.524802
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -165207637
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.77168 +/- 0.00322587 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.77168 @ 95%CL (1 toyMC)
median expected limit: r < 0.77168 @ 95%CL (1 toyMC)
   68% expected band : 0.77168 < r < 0.77168
   95% expected band : 0.77168 < r < 0.77168
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 83858844
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.615125 +/- 0.00252751 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.615125 @ 95%CL (1 toyMC)
median expected limit: r < 0.615125 @ 95%CL (1 toyMC)
   68% expected band : 0.615125 < r < 0.615125
   95% expected band : 0.615125 < r < 0.615125
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 459961814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.350993 +/- 0.00312792 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.350993 @ 95%CL (1 toyMC)
median expected limit: r < 0.350993 @ 95%CL (1 toyMC)
   68% expected band : 0.350993 < r < 0.350993
   95% expected band : 0.350993 < r < 0.350993
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1709433882
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.604598 +/- 0.00196841 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.604598 @ 95%CL (1 toyMC)
median expected limit: r < 0.604598 @ 95%CL (1 toyMC)
   68% expected band : 0.604598 < r < 0.604598
   95% expected band : 0.604598 < r < 0.604598
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1419657259
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.389555 +/- 0.0024032 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.389555 @ 95%CL (1 toyMC)
median expected limit: r < 0.389555 @ 95%CL (1 toyMC)
   68% expected band : 0.389555 < r < 0.389555
   95% expected band : 0.389555 < r < 0.389555
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -546153892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.442859 +/- 0.00301671 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.442859 @ 95%CL (1 toyMC)
median expected limit: r < 0.442859 @ 95%CL (1 toyMC)
   68% expected band : 0.442859 < r < 0.442859
   95% expected band : 0.442859 < r < 0.442859
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1757683127
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.369624 +/- 0.00249989 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.369624 @ 95%CL (1 toyMC)
median expected limit: r < 0.369624 @ 95%CL (1 toyMC)
   68% expected band : 0.369624 < r < 0.369624
   95% expected band : 0.369624 < r < 0.369624
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1876005220
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.359361 +/- 0.00266441 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.359361 @ 95%CL (1 toyMC)
median expected limit: r < 0.359361 @ 95%CL (1 toyMC)
   68% expected band : 0.359361 < r < 0.359361
   95% expected band : 0.359361 < r < 0.359361
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -842953946
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.665373 +/- 0.00220679 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.665373 @ 95%CL (1 toyMC)
median expected limit: r < 0.665373 @ 95%CL (1 toyMC)
   68% expected band : 0.665373 < r < 0.665373
   95% expected band : 0.665373 < r < 0.665373
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1489247634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.492879 +/- 0.00287124 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.492879 @ 95%CL (1 toyMC)
median expected limit: r < 0.492879 @ 95%CL (1 toyMC)
   68% expected band : 0.492879 < r < 0.492879
   95% expected band : 0.492879 < r < 0.492879
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1372911019
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.377348 +/- 0.0028642 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.377348 @ 95%CL (1 toyMC)
median expected limit: r < 0.377348 @ 95%CL (1 toyMC)
   68% expected band : 0.377348 < r < 0.377348
   95% expected band : 0.377348 < r < 0.377348
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1257421982
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.384364 +/- 0.00258252 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.384364 @ 95%CL (1 toyMC)
median expected limit: r < 0.384364 @ 95%CL (1 toyMC)
   68% expected band : 0.384364 < r < 0.384364
   95% expected band : 0.384364 < r < 0.384364
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 57496692
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.469951 +/- 0.00254698 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.469951 @ 95%CL (1 toyMC)
median expected limit: r < 0.469951 @ 95%CL (1 toyMC)
   68% expected band : 0.469951 < r < 0.469951
   95% expected band : 0.469951 < r < 0.469951
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1520528817
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.342184 +/- 0.00205155 @ 95% CL (100 tries)
Done in 1.64 min (cpu), 1.64 min (real)
mean   expected limit: r < 0.342184 @ 95%CL (1 toyMC)
median expected limit: r < 0.342184 @ 95%CL (1 toyMC)
   68% expected band : 0.342184 < r < 0.342184
   95% expected band : 0.342184 < r < 0.342184
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1949283759
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.65967 +/- 0.0025098 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.65967 @ 95%CL (1 toyMC)
median expected limit: r < 0.65967 @ 95%CL (1 toyMC)
   68% expected band : 0.65967 < r < 0.65967
   95% expected band : 0.65967 < r < 0.65967
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2006646055
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.48517 +/- 0.00219122 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.48517 @ 95%CL (1 toyMC)
median expected limit: r < 0.48517 @ 95%CL (1 toyMC)
   68% expected band : 0.48517 < r < 0.48517
   95% expected band : 0.48517 < r < 0.48517
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 762624887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.536456 +/- 0.00277083 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.536456 @ 95%CL (1 toyMC)
median expected limit: r < 0.536456 @ 95%CL (1 toyMC)
   68% expected band : 0.536456 < r < 0.536456
   95% expected band : 0.536456 < r < 0.536456
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2080794873
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.402459 +/- 0.00280882 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.402459 @ 95%CL (1 toyMC)
median expected limit: r < 0.402459 @ 95%CL (1 toyMC)
   68% expected band : 0.402459 < r < 0.402459
   95% expected band : 0.402459 < r < 0.402459
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1358120306
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.523538 +/- 0.00227416 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.523538 @ 95%CL (1 toyMC)
median expected limit: r < 0.523538 @ 95%CL (1 toyMC)
   68% expected band : 0.523538 < r < 0.523538
   95% expected band : 0.523538 < r < 0.523538
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 58216822
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.596365 +/- 0.00243924 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.596365 @ 95%CL (1 toyMC)
median expected limit: r < 0.596365 @ 95%CL (1 toyMC)
   68% expected band : 0.596365 < r < 0.596365
   95% expected band : 0.596365 < r < 0.596365
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 772530916
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.369872 +/- 0.00280623 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.369872 @ 95%CL (1 toyMC)
median expected limit: r < 0.369872 @ 95%CL (1 toyMC)
   68% expected band : 0.369872 < r < 0.369872
   95% expected band : 0.369872 < r < 0.369872
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 939625480
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.761581 +/- 0.00271478 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.761581 @ 95%CL (1 toyMC)
median expected limit: r < 0.761581 @ 95%CL (1 toyMC)
   68% expected band : 0.761581 < r < 0.761581
   95% expected band : 0.761581 < r < 0.761581
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1341277870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.40584 +/- 0.00327243 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.40584 @ 95%CL (1 toyMC)
median expected limit: r < 0.40584 @ 95%CL (1 toyMC)
   68% expected band : 0.40584 < r < 0.40584
   95% expected band : 0.40584 < r < 0.40584
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1457487064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.488223 +/- 0.00257908 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.488223 @ 95%CL (1 toyMC)
median expected limit: r < 0.488223 @ 95%CL (1 toyMC)
   68% expected band : 0.488223 < r < 0.488223
   95% expected band : 0.488223 < r < 0.488223
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -922111021
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.430727 +/- 0.00237933 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.430727 @ 95%CL (1 toyMC)
median expected limit: r < 0.430727 @ 95%CL (1 toyMC)
   68% expected band : 0.430727 < r < 0.430727
   95% expected band : 0.430727 < r < 0.430727
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1054579753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.556969 +/- 0.0031234 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.556969 @ 95%CL (1 toyMC)
median expected limit: r < 0.556969 @ 95%CL (1 toyMC)
   68% expected band : 0.556969 < r < 0.556969
   95% expected band : 0.556969 < r < 0.556969
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1738484043
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.433936 +/- 0.00197343 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.433936 @ 95%CL (1 toyMC)
median expected limit: r < 0.433936 @ 95%CL (1 toyMC)
   68% expected band : 0.433936 < r < 0.433936
   95% expected band : 0.433936 < r < 0.433936
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 201624652
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.35952 +/- 0.00281978 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.35952 @ 95%CL (1 toyMC)
median expected limit: r < 0.35952 @ 95%CL (1 toyMC)
   68% expected band : 0.35952 < r < 0.35952
   95% expected band : 0.35952 < r < 0.35952
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -954911210
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.526189 +/- 0.00351536 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.526189 @ 95%CL (1 toyMC)
median expected limit: r < 0.526189 @ 95%CL (1 toyMC)
   68% expected band : 0.526189 < r < 0.526189
   95% expected band : 0.526189 < r < 0.526189
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 562044110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.327761 +/- 0.00224548 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.327761 @ 95%CL (1 toyMC)
median expected limit: r < 0.327761 @ 95%CL (1 toyMC)
   68% expected band : 0.327761 < r < 0.327761
   95% expected band : 0.327761 < r < 0.327761
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 78833889
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.655069 +/- 0.00274669 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.655069 @ 95%CL (1 toyMC)
median expected limit: r < 0.655069 @ 95%CL (1 toyMC)
   68% expected band : 0.655069 < r < 0.655069
   95% expected band : 0.655069 < r < 0.655069
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -537712640
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.514825 +/- 0.00312536 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.514825 @ 95%CL (1 toyMC)
median expected limit: r < 0.514825 @ 95%CL (1 toyMC)
   68% expected band : 0.514825 < r < 0.514825
   95% expected band : 0.514825 < r < 0.514825
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1912109008
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.602244 +/- 0.0025471 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.602244 @ 95%CL (1 toyMC)
median expected limit: r < 0.602244 @ 95%CL (1 toyMC)
   68% expected band : 0.602244 < r < 0.602244
   95% expected band : 0.602244 < r < 0.602244
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -13158059
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.389117 +/- 0.00263147 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.389117 @ 95%CL (1 toyMC)
median expected limit: r < 0.389117 @ 95%CL (1 toyMC)
   68% expected band : 0.389117 < r < 0.389117
   95% expected band : 0.389117 < r < 0.389117
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1504024867
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.476626 +/- 0.00271531 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.476626 @ 95%CL (1 toyMC)
median expected limit: r < 0.476626 @ 95%CL (1 toyMC)
   68% expected band : 0.476626 < r < 0.476626
   95% expected band : 0.476626 < r < 0.476626
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 426332366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.523359 +/- 0.00317564 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.523359 @ 95%CL (1 toyMC)
median expected limit: r < 0.523359 @ 95%CL (1 toyMC)
   68% expected band : 0.523359 < r < 0.523359
   95% expected band : 0.523359 < r < 0.523359
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 32764337
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.470112 +/- 0.00217902 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.470112 @ 95%CL (1 toyMC)
median expected limit: r < 0.470112 @ 95%CL (1 toyMC)
   68% expected band : 0.470112 < r < 0.470112
   95% expected band : 0.470112 < r < 0.470112
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1521111237
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.527152 +/- 0.00265661 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.527152 @ 95%CL (1 toyMC)
median expected limit: r < 0.527152 @ 95%CL (1 toyMC)
   68% expected band : 0.527152 < r < 0.527152
   95% expected band : 0.527152 < r < 0.527152
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 435808239
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.574723 +/- 0.00283396 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.574723 @ 95%CL (1 toyMC)
median expected limit: r < 0.574723 @ 95%CL (1 toyMC)
   68% expected band : 0.574723 < r < 0.574723
   95% expected band : 0.574723 < r < 0.574723
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -888837172
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.380996 +/- 0.00268323 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.380996 @ 95%CL (1 toyMC)
median expected limit: r < 0.380996 @ 95%CL (1 toyMC)
   68% expected band : 0.380996 < r < 0.380996
   95% expected band : 0.380996 < r < 0.380996
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1309479888
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.584047 +/- 0.00260459 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.584047 @ 95%CL (1 toyMC)
median expected limit: r < 0.584047 @ 95%CL (1 toyMC)
   68% expected band : 0.584047 < r < 0.584047
   95% expected band : 0.584047 < r < 0.584047
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1010411347
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.456335 +/- 0.00297098 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.456335 @ 95%CL (1 toyMC)
median expected limit: r < 0.456335 @ 95%CL (1 toyMC)
   68% expected band : 0.456335 < r < 0.456335
   95% expected band : 0.456335 < r < 0.456335
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -8935543
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.379711 +/- 0.00284622 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.379711 @ 95%CL (1 toyMC)
median expected limit: r < 0.379711 @ 95%CL (1 toyMC)
   68% expected band : 0.379711 < r < 0.379711
   95% expected band : 0.379711 < r < 0.379711
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2005200802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.98174 +/- 0.00327249 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.98174 @ 95%CL (1 toyMC)
median expected limit: r < 0.98174 @ 95%CL (1 toyMC)
   68% expected band : 0.98174 < r < 0.98174
   95% expected band : 0.98174 < r < 0.98174
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1012218484
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.57077 +/- 0.00262912 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.57077 @ 95%CL (1 toyMC)
median expected limit: r < 0.57077 @ 95%CL (1 toyMC)
   68% expected band : 0.57077 < r < 0.57077
   95% expected band : 0.57077 < r < 0.57077
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine22.MarkovChainMC.mH22.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH22.-1010411347.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH22.-1012745538.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH22.-1041346528.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH22.-1054579753.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH22.-1084245340.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH22.-1159956764.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH22.-1215494017.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH22.-1247691643.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH22.-1257421982.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH22.-1274577894.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH22.-1290467880.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH22.-13158059.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH22.-1341277870.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH22.-1358120306.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH22.-1436702686.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH22.-1457487064.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH22.-1489247634.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH22.-1520528817.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH22.-165207637.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH22.-1709433882.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH22.-1741078541.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH22.-1757683127.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH22.-183330311.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH22.-185916967.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH22.-194435925.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH22.-2006646055.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH22.-2080794873.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH22.-260148124.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH22.-276630959.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH22.-349737033.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH22.-429097944.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH22.-537712640.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH22.-540697276.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH22.-546153892.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH22.-695965951.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH22.-741140447.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH22.-830116051.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH22.-842953946.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH22.-888837172.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH22.-8935543.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH22.-922111021.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH22.-943832668.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH22.-954911210.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH22.-955333520.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH22.-968442440.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH22.1012218484.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH22.1063044645.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH22.1262245116.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH22.1270727088.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH22.1296058232.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH22.1309479888.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH22.1372911019.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH22.1384328760.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH22.1419657259.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH22.1450605539.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH22.1501481125.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH22.1504024867.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH22.1521111237.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH22.1591445524.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH22.1643119599.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH22.171417433.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH22.17235633.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH22.1738484043.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH22.1774242738.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH22.1775558201.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH22.1811947924.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH22.1812375194.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH22.1832068141.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH22.1870902715.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH22.1876005220.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH22.187670125.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH22.1912109008.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH22.1948969680.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH22.1949283759.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH22.2005200802.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH22.2009022983.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH22.201624652.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH22.2032959967.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH22.203933396.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH22.2143521746.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH22.256850897.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH22.32764337.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH22.332370244.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH22.372623656.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH22.426023714.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH22.426332366.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH22.435808239.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH22.449904147.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH22.459961814.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH22.467403539.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH22.562044110.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH22.57496692.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH22.58216822.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH22.608367443.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH22.762624887.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH22.772530916.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH22.78833889.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH22.825221619.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH22.83858844.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH22.939625480.root
hadd Target path: higgsCombine22.MarkovChainMC.mH22.root:/
hadd Target path: higgsCombine22.MarkovChainMC.mH22.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 285573939
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.62644 +/- 0.00348958 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.62644 @ 95%CL (1 toyMC)
median expected limit: r < 1.62644 @ 95%CL (1 toyMC)
   68% expected band : 1.62644 < r < 1.62644
   95% expected band : 1.62644 < r < 1.62644
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2069914422
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.986579 +/- 0.0028924 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.986579 @ 95%CL (1 toyMC)
median expected limit: r < 0.986579 @ 95%CL (1 toyMC)
   68% expected band : 0.986579 < r < 0.986579
   95% expected band : 0.986579 < r < 0.986579
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 839278556
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.966548 +/- 0.00334934 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.966548 @ 95%CL (1 toyMC)
median expected limit: r < 0.966548 @ 95%CL (1 toyMC)
   68% expected band : 0.966548 < r < 0.966548
   95% expected band : 0.966548 < r < 0.966548
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 142484048
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.942564 +/- 0.00303485 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.942564 @ 95%CL (1 toyMC)
median expected limit: r < 0.942564 @ 95%CL (1 toyMC)
   68% expected band : 0.942564 < r < 0.942564
   95% expected band : 0.942564 < r < 0.942564
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 513956820
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.30099 +/- 0.00249887 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.30099 @ 95%CL (1 toyMC)
median expected limit: r < 1.30099 @ 95%CL (1 toyMC)
   68% expected band : 1.30099 < r < 1.30099
   95% expected band : 1.30099 < r < 1.30099
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2104389288
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.553712 +/- 0.00318972 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.553712 @ 95%CL (1 toyMC)
median expected limit: r < 0.553712 @ 95%CL (1 toyMC)
   68% expected band : 0.553712 < r < 0.553712
   95% expected band : 0.553712 < r < 0.553712
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1402585802
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.799367 +/- 0.00225056 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.799367 @ 95%CL (1 toyMC)
median expected limit: r < 0.799367 @ 95%CL (1 toyMC)
   68% expected band : 0.799367 < r < 0.799367
   95% expected band : 0.799367 < r < 0.799367
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 185236681
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22528 +/- 0.0038114 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.22528 @ 95%CL (1 toyMC)
median expected limit: r < 1.22528 @ 95%CL (1 toyMC)
   68% expected band : 1.22528 < r < 1.22528
   95% expected band : 1.22528 < r < 1.22528
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1368834113
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.78721 +/- 0.00317099 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 0.78721 @ 95%CL (1 toyMC)
median expected limit: r < 0.78721 @ 95%CL (1 toyMC)
   68% expected band : 0.78721 < r < 0.78721
   95% expected band : 0.78721 < r < 0.78721
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 169520424
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.64858 +/- 0.00472345 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.64858 @ 95%CL (1 toyMC)
median expected limit: r < 1.64858 @ 95%CL (1 toyMC)
   68% expected band : 1.64858 < r < 1.64858
   95% expected band : 1.64858 < r < 1.64858
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1692041807
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.570746 +/- 0.00304271 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.570746 @ 95%CL (1 toyMC)
median expected limit: r < 0.570746 @ 95%CL (1 toyMC)
   68% expected band : 0.570746 < r < 0.570746
   95% expected band : 0.570746 < r < 0.570746
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1095127755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.790213 +/- 0.00339651 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.790213 @ 95%CL (1 toyMC)
median expected limit: r < 0.790213 @ 95%CL (1 toyMC)
   68% expected band : 0.790213 < r < 0.790213
   95% expected band : 0.790213 < r < 0.790213
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -89288306
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35987 +/- 0.00361865 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.35987 @ 95%CL (1 toyMC)
median expected limit: r < 1.35987 @ 95%CL (1 toyMC)
   68% expected band : 1.35987 < r < 1.35987
   95% expected band : 1.35987 < r < 1.35987
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -425877569
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.523327 +/- 0.00318687 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.523327 @ 95%CL (1 toyMC)
median expected limit: r < 0.523327 @ 95%CL (1 toyMC)
   68% expected band : 0.523327 < r < 0.523327
   95% expected band : 0.523327 < r < 0.523327
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1778241112
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.910082 +/- 0.00290799 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.910082 @ 95%CL (1 toyMC)
median expected limit: r < 0.910082 @ 95%CL (1 toyMC)
   68% expected band : 0.910082 < r < 0.910082
   95% expected band : 0.910082 < r < 0.910082
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -778009603
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16442 +/- 0.00465689 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.16442 @ 95%CL (1 toyMC)
median expected limit: r < 1.16442 @ 95%CL (1 toyMC)
   68% expected band : 1.16442 < r < 1.16442
   95% expected band : 1.16442 < r < 1.16442
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 461540264
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.59348 +/- 0.00311721 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.59348 @ 95%CL (1 toyMC)
median expected limit: r < 0.59348 @ 95%CL (1 toyMC)
   68% expected band : 0.59348 < r < 0.59348
   95% expected band : 0.59348 < r < 0.59348
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -978508313
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.47426 +/- 0.00349 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.47426 @ 95%CL (1 toyMC)
median expected limit: r < 1.47426 @ 95%CL (1 toyMC)
   68% expected band : 1.47426 < r < 1.47426
   95% expected band : 1.47426 < r < 1.47426
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -374575940
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04295 +/- 0.00272274 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.04295 @ 95%CL (1 toyMC)
median expected limit: r < 1.04295 @ 95%CL (1 toyMC)
   68% expected band : 1.04295 < r < 1.04295
   95% expected band : 1.04295 < r < 1.04295
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 561406723
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.433099 +/- 0.00223809 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.433099 @ 95%CL (1 toyMC)
median expected limit: r < 0.433099 @ 95%CL (1 toyMC)
   68% expected band : 0.433099 < r < 0.433099
   95% expected band : 0.433099 < r < 0.433099
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1268184165
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.754479 +/- 0.00290251 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.754479 @ 95%CL (1 toyMC)
median expected limit: r < 0.754479 @ 95%CL (1 toyMC)
   68% expected band : 0.754479 < r < 0.754479
   95% expected band : 0.754479 < r < 0.754479
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -389938520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.843161 +/- 0.00286726 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.843161 @ 95%CL (1 toyMC)
median expected limit: r < 0.843161 @ 95%CL (1 toyMC)
   68% expected band : 0.843161 < r < 0.843161
   95% expected band : 0.843161 < r < 0.843161
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 930438108
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.882708 +/- 0.00345487 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.882708 @ 95%CL (1 toyMC)
median expected limit: r < 0.882708 @ 95%CL (1 toyMC)
   68% expected band : 0.882708 < r < 0.882708
   95% expected band : 0.882708 < r < 0.882708
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1716969995
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.688305 +/- 0.00320685 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.688305 @ 95%CL (1 toyMC)
median expected limit: r < 0.688305 @ 95%CL (1 toyMC)
   68% expected band : 0.688305 < r < 0.688305
   95% expected band : 0.688305 < r < 0.688305
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -536569128
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26688 +/- 0.00343584 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.26688 @ 95%CL (1 toyMC)
median expected limit: r < 1.26688 @ 95%CL (1 toyMC)
   68% expected band : 1.26688 < r < 1.26688
   95% expected band : 1.26688 < r < 1.26688
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1723756397
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.86133 +/- 0.00328257 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.86133 @ 95%CL (1 toyMC)
median expected limit: r < 0.86133 @ 95%CL (1 toyMC)
   68% expected band : 0.86133 < r < 0.86133
   95% expected band : 0.86133 < r < 0.86133
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -811301451
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21643 +/- 0.00345826 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.21643 @ 95%CL (1 toyMC)
median expected limit: r < 1.21643 @ 95%CL (1 toyMC)
   68% expected band : 1.21643 < r < 1.21643
   95% expected band : 1.21643 < r < 1.21643
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1291537731
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67536 +/- 0.00398952 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.67536 @ 95%CL (1 toyMC)
median expected limit: r < 1.67536 @ 95%CL (1 toyMC)
   68% expected band : 1.67536 < r < 1.67536
   95% expected band : 1.67536 < r < 1.67536
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 587208006
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.700638 +/- 0.00345588 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.700638 @ 95%CL (1 toyMC)
median expected limit: r < 0.700638 @ 95%CL (1 toyMC)
   68% expected band : 0.700638 < r < 0.700638
   95% expected band : 0.700638 < r < 0.700638
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1816785419
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01819 +/- 0.00334958 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.01819 @ 95%CL (1 toyMC)
median expected limit: r < 1.01819 @ 95%CL (1 toyMC)
   68% expected band : 1.01819 < r < 1.01819
   95% expected band : 1.01819 < r < 1.01819
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -785847230
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.590351 +/- 0.0034407 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.590351 @ 95%CL (1 toyMC)
median expected limit: r < 0.590351 @ 95%CL (1 toyMC)
   68% expected band : 0.590351 < r < 0.590351
   95% expected band : 0.590351 < r < 0.590351
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1544063226
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.781208 +/- 0.00385159 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.781208 @ 95%CL (1 toyMC)
median expected limit: r < 0.781208 @ 95%CL (1 toyMC)
   68% expected band : 0.781208 < r < 0.781208
   95% expected band : 0.781208 < r < 0.781208
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1594868741
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.619026 +/- 0.00296635 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.619026 @ 95%CL (1 toyMC)
median expected limit: r < 0.619026 @ 95%CL (1 toyMC)
   68% expected band : 0.619026 < r < 0.619026
   95% expected band : 0.619026 < r < 0.619026
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 430647035
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2417 +/- 0.00372276 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.2417 @ 95%CL (1 toyMC)
median expected limit: r < 1.2417 @ 95%CL (1 toyMC)
   68% expected band : 1.2417 < r < 1.2417
   95% expected band : 1.2417 < r < 1.2417
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2039006777
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.821373 +/- 0.00320832 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.821373 @ 95%CL (1 toyMC)
median expected limit: r < 0.821373 @ 95%CL (1 toyMC)
   68% expected band : 0.821373 < r < 0.821373
   95% expected band : 0.821373 < r < 0.821373
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 57522929
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.670793 +/- 0.00294414 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.670793 @ 95%CL (1 toyMC)
median expected limit: r < 0.670793 @ 95%CL (1 toyMC)
   68% expected band : 0.670793 < r < 0.670793
   95% expected band : 0.670793 < r < 0.670793
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -74055101
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14193 +/- 0.00341345 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 1.14193 @ 95%CL (1 toyMC)
median expected limit: r < 1.14193 @ 95%CL (1 toyMC)
   68% expected band : 1.14193 < r < 1.14193
   95% expected band : 1.14193 < r < 1.14193
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -309165945
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.948128 +/- 0.00365059 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.948128 @ 95%CL (1 toyMC)
median expected limit: r < 0.948128 @ 95%CL (1 toyMC)
   68% expected band : 0.948128 < r < 0.948128
   95% expected band : 0.948128 < r < 0.948128
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1999756216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.688919 +/- 0.00283676 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.688919 @ 95%CL (1 toyMC)
median expected limit: r < 0.688919 @ 95%CL (1 toyMC)
   68% expected band : 0.688919 < r < 0.688919
   95% expected band : 0.688919 < r < 0.688919
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 682071379
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.861191 +/- 0.00336488 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.861191 @ 95%CL (1 toyMC)
median expected limit: r < 0.861191 @ 95%CL (1 toyMC)
   68% expected band : 0.861191 < r < 0.861191
   95% expected band : 0.861191 < r < 0.861191
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1539278169
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07544 +/- 0.00367129 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.07544 @ 95%CL (1 toyMC)
median expected limit: r < 1.07544 @ 95%CL (1 toyMC)
   68% expected band : 1.07544 < r < 1.07544
   95% expected band : 1.07544 < r < 1.07544
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -130797369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.943449 +/- 0.00317944 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.943449 @ 95%CL (1 toyMC)
median expected limit: r < 0.943449 @ 95%CL (1 toyMC)
   68% expected band : 0.943449 < r < 0.943449
   95% expected band : 0.943449 < r < 0.943449
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1658170343
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.757195 +/- 0.00390342 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.757195 @ 95%CL (1 toyMC)
median expected limit: r < 0.757195 @ 95%CL (1 toyMC)
   68% expected band : 0.757195 < r < 0.757195
   95% expected band : 0.757195 < r < 0.757195
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 277417162
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.886596 +/- 0.00266968 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.886596 @ 95%CL (1 toyMC)
median expected limit: r < 0.886596 @ 95%CL (1 toyMC)
   68% expected band : 0.886596 < r < 0.886596
   95% expected band : 0.886596 < r < 0.886596
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1598590877
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.839889 +/- 0.00350507 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.839889 @ 95%CL (1 toyMC)
median expected limit: r < 0.839889 @ 95%CL (1 toyMC)
   68% expected band : 0.839889 < r < 0.839889
   95% expected band : 0.839889 < r < 0.839889
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 910823587
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16717 +/- 0.00401228 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.16717 @ 95%CL (1 toyMC)
median expected limit: r < 1.16717 @ 95%CL (1 toyMC)
   68% expected band : 1.16717 < r < 1.16717
   95% expected band : 1.16717 < r < 1.16717
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1571633207
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.0545 +/- 0.00395545 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.0545 @ 95%CL (1 toyMC)
median expected limit: r < 2.0545 @ 95%CL (1 toyMC)
   68% expected band : 2.0545 < r < 2.0545
   95% expected band : 2.0545 < r < 2.0545
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2120140541
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08017 +/- 0.00343374 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.08017 @ 95%CL (1 toyMC)
median expected limit: r < 1.08017 @ 95%CL (1 toyMC)
   68% expected band : 1.08017 < r < 1.08017
   95% expected band : 1.08017 < r < 1.08017
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -793367351
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0176 +/- 0.00305271 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.0176 @ 95%CL (1 toyMC)
median expected limit: r < 1.0176 @ 95%CL (1 toyMC)
   68% expected band : 1.0176 < r < 1.0176
   95% expected band : 1.0176 < r < 1.0176
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 505784161
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07018 +/- 0.00330417 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.07018 @ 95%CL (1 toyMC)
median expected limit: r < 1.07018 @ 95%CL (1 toyMC)
   68% expected band : 1.07018 < r < 1.07018
   95% expected band : 1.07018 < r < 1.07018
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1952557310
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.482498 +/- 0.00309045 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.482498 @ 95%CL (1 toyMC)
median expected limit: r < 0.482498 @ 95%CL (1 toyMC)
   68% expected band : 0.482498 < r < 0.482498
   95% expected band : 0.482498 < r < 0.482498
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2072896642
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.58551 +/- 0.00312701 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.58551 @ 95%CL (1 toyMC)
median expected limit: r < 1.58551 @ 95%CL (1 toyMC)
   68% expected band : 1.58551 < r < 1.58551
   95% expected band : 1.58551 < r < 1.58551
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1244230578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.04049 +/- 0.00382407 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.04049 @ 95%CL (1 toyMC)
median expected limit: r < 1.04049 @ 95%CL (1 toyMC)
   68% expected band : 1.04049 < r < 1.04049
   95% expected band : 1.04049 < r < 1.04049
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1667882150
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.883709 +/- 0.00304827 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.883709 @ 95%CL (1 toyMC)
median expected limit: r < 0.883709 @ 95%CL (1 toyMC)
   68% expected band : 0.883709 < r < 0.883709
   95% expected band : 0.883709 < r < 0.883709
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1918548126
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.644897 +/- 0.00304627 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.644897 @ 95%CL (1 toyMC)
median expected limit: r < 0.644897 @ 95%CL (1 toyMC)
   68% expected band : 0.644897 < r < 0.644897
   95% expected band : 0.644897 < r < 0.644897
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 370734633
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00898 +/- 0.00434137 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.00898 @ 95%CL (1 toyMC)
median expected limit: r < 1.00898 @ 95%CL (1 toyMC)
   68% expected band : 1.00898 < r < 1.00898
   95% expected band : 1.00898 < r < 1.00898
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1115052032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36706 +/- 0.00344156 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.36706 @ 95%CL (1 toyMC)
median expected limit: r < 1.36706 @ 95%CL (1 toyMC)
   68% expected band : 1.36706 < r < 1.36706
   95% expected band : 1.36706 < r < 1.36706
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1590957800
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12053 +/- 0.00358943 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.12053 @ 95%CL (1 toyMC)
median expected limit: r < 1.12053 @ 95%CL (1 toyMC)
   68% expected band : 1.12053 < r < 1.12053
   95% expected band : 1.12053 < r < 1.12053
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2099164779
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.573361 +/- 0.00327563 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.573361 @ 95%CL (1 toyMC)
median expected limit: r < 0.573361 @ 95%CL (1 toyMC)
   68% expected band : 0.573361 < r < 0.573361
   95% expected band : 0.573361 < r < 0.573361
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1604245660
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12293 +/- 0.00314293 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.12293 @ 95%CL (1 toyMC)
median expected limit: r < 1.12293 @ 95%CL (1 toyMC)
   68% expected band : 1.12293 < r < 1.12293
   95% expected band : 1.12293 < r < 1.12293
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 754849179
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.998149 +/- 0.00328883 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.998149 @ 95%CL (1 toyMC)
median expected limit: r < 0.998149 @ 95%CL (1 toyMC)
   68% expected band : 0.998149 < r < 0.998149
   95% expected band : 0.998149 < r < 0.998149
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 236054176
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.26007 +/- 0.00426842 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.26007 @ 95%CL (1 toyMC)
median expected limit: r < 1.26007 @ 95%CL (1 toyMC)
   68% expected band : 1.26007 < r < 1.26007
   95% expected band : 1.26007 < r < 1.26007
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1527661752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15039 +/- 0.00298556 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 1.15039 @ 95%CL (1 toyMC)
median expected limit: r < 1.15039 @ 95%CL (1 toyMC)
   68% expected band : 1.15039 < r < 1.15039
   95% expected band : 1.15039 < r < 1.15039
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -415994052
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.61196 +/- 0.00320386 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.61196 @ 95%CL (1 toyMC)
median expected limit: r < 0.61196 @ 95%CL (1 toyMC)
   68% expected band : 0.61196 < r < 0.61196
   95% expected band : 0.61196 < r < 0.61196
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2086552497
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.13985 +/- 0.00300388 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.13985 @ 95%CL (1 toyMC)
median expected limit: r < 1.13985 @ 95%CL (1 toyMC)
   68% expected band : 1.13985 < r < 1.13985
   95% expected band : 1.13985 < r < 1.13985
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1093234455
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.07516 +/- 0.00302715 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.07516 @ 95%CL (1 toyMC)
median expected limit: r < 1.07516 @ 95%CL (1 toyMC)
   68% expected band : 1.07516 < r < 1.07516
   95% expected band : 1.07516 < r < 1.07516
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -755589267
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.774156 +/- 0.00357507 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.774156 @ 95%CL (1 toyMC)
median expected limit: r < 0.774156 @ 95%CL (1 toyMC)
   68% expected band : 0.774156 < r < 0.774156
   95% expected band : 0.774156 < r < 0.774156
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1610530716
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.557015 +/- 0.0030639 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.557015 @ 95%CL (1 toyMC)
median expected limit: r < 0.557015 @ 95%CL (1 toyMC)
   68% expected band : 0.557015 < r < 0.557015
   95% expected band : 0.557015 < r < 0.557015
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -951845383
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32282 +/- 0.00381958 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 1.32282 @ 95%CL (1 toyMC)
median expected limit: r < 1.32282 @ 95%CL (1 toyMC)
   68% expected band : 1.32282 < r < 1.32282
   95% expected band : 1.32282 < r < 1.32282
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -10372892
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.541013 +/- 0.00286225 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.541013 @ 95%CL (1 toyMC)
median expected limit: r < 0.541013 @ 95%CL (1 toyMC)
   68% expected band : 0.541013 < r < 0.541013
   95% expected band : 0.541013 < r < 0.541013
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -480552307
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15292 +/- 0.00343813 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.15292 @ 95%CL (1 toyMC)
median expected limit: r < 1.15292 @ 95%CL (1 toyMC)
   68% expected band : 1.15292 < r < 1.15292
   95% expected band : 1.15292 < r < 1.15292
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1267700098
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.834648 +/- 0.00388378 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.834648 @ 95%CL (1 toyMC)
median expected limit: r < 0.834648 @ 95%CL (1 toyMC)
   68% expected band : 0.834648 < r < 0.834648
   95% expected band : 0.834648 < r < 0.834648
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1055329679
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.422319 +/- 0.00322857 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.422319 @ 95%CL (1 toyMC)
median expected limit: r < 0.422319 @ 95%CL (1 toyMC)
   68% expected band : 0.422319 < r < 0.422319
   95% expected band : 0.422319 < r < 0.422319
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1975668745
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.95607 +/- 0.00371886 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.95607 @ 95%CL (1 toyMC)
median expected limit: r < 1.95607 @ 95%CL (1 toyMC)
   68% expected band : 1.95607 < r < 1.95607
   95% expected band : 1.95607 < r < 1.95607
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 926302597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.612941 +/- 0.00315217 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.612941 @ 95%CL (1 toyMC)
median expected limit: r < 0.612941 @ 95%CL (1 toyMC)
   68% expected band : 0.612941 < r < 0.612941
   95% expected band : 0.612941 < r < 0.612941
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -603831887
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2835 +/- 0.0027093 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.2835 @ 95%CL (1 toyMC)
median expected limit: r < 1.2835 @ 95%CL (1 toyMC)
   68% expected band : 1.2835 < r < 1.2835
   95% expected band : 1.2835 < r < 1.2835
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1309609439
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.828509 +/- 0.0034116 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.828509 @ 95%CL (1 toyMC)
median expected limit: r < 0.828509 @ 95%CL (1 toyMC)
   68% expected band : 0.828509 < r < 0.828509
   95% expected band : 0.828509 < r < 0.828509
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -794203356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.544766 +/- 0.00295358 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.544766 @ 95%CL (1 toyMC)
median expected limit: r < 0.544766 @ 95%CL (1 toyMC)
   68% expected band : 0.544766 < r < 0.544766
   95% expected band : 0.544766 < r < 0.544766
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1707338547
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.554186 +/- 0.00344004 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.554186 @ 95%CL (1 toyMC)
median expected limit: r < 0.554186 @ 95%CL (1 toyMC)
   68% expected band : 0.554186 < r < 0.554186
   95% expected band : 0.554186 < r < 0.554186
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1116766385
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.799146 +/- 0.0031685 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 0.799146 @ 95%CL (1 toyMC)
median expected limit: r < 0.799146 @ 95%CL (1 toyMC)
   68% expected band : 0.799146 < r < 0.799146
   95% expected band : 0.799146 < r < 0.799146
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1580829093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1523 +/- 0.00364276 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.1523 @ 95%CL (1 toyMC)
median expected limit: r < 1.1523 @ 95%CL (1 toyMC)
   68% expected band : 1.1523 < r < 1.1523
   95% expected band : 1.1523 < r < 1.1523
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -565521084
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.728501 +/- 0.00344657 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.728501 @ 95%CL (1 toyMC)
median expected limit: r < 0.728501 @ 95%CL (1 toyMC)
   68% expected band : 0.728501 < r < 0.728501
   95% expected band : 0.728501 < r < 0.728501
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 991860511
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.959271 +/- 0.00348154 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.959271 @ 95%CL (1 toyMC)
median expected limit: r < 0.959271 @ 95%CL (1 toyMC)
   68% expected band : 0.959271 < r < 0.959271
   95% expected band : 0.959271 < r < 0.959271
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -600790032
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05403 +/- 0.00324003 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.05403 @ 95%CL (1 toyMC)
median expected limit: r < 1.05403 @ 95%CL (1 toyMC)
   68% expected band : 1.05403 < r < 1.05403
   95% expected band : 1.05403 < r < 1.05403
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -973392492
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.788098 +/- 0.00269795 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.788098 @ 95%CL (1 toyMC)
median expected limit: r < 0.788098 @ 95%CL (1 toyMC)
   68% expected band : 0.788098 < r < 0.788098
   95% expected band : 0.788098 < r < 0.788098
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -641048564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.851857 +/- 0.00223816 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.851857 @ 95%CL (1 toyMC)
median expected limit: r < 0.851857 @ 95%CL (1 toyMC)
   68% expected band : 0.851857 < r < 0.851857
   95% expected band : 0.851857 < r < 0.851857
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -155312791
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.708584 +/- 0.00294732 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.708584 @ 95%CL (1 toyMC)
median expected limit: r < 0.708584 @ 95%CL (1 toyMC)
   68% expected band : 0.708584 < r < 0.708584
   95% expected band : 0.708584 < r < 0.708584
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1950748970
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.506567 +/- 0.00250463 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.506567 @ 95%CL (1 toyMC)
median expected limit: r < 0.506567 @ 95%CL (1 toyMC)
   68% expected band : 0.506567 < r < 0.506567
   95% expected band : 0.506567 < r < 0.506567
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1997465409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.891006 +/- 0.00305053 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.891006 @ 95%CL (1 toyMC)
median expected limit: r < 0.891006 @ 95%CL (1 toyMC)
   68% expected band : 0.891006 < r < 0.891006
   95% expected band : 0.891006 < r < 0.891006
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -807766409
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.61084 +/- 0.00267697 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.61084 @ 95%CL (1 toyMC)
median expected limit: r < 0.61084 @ 95%CL (1 toyMC)
   68% expected band : 0.61084 < r < 0.61084
   95% expected band : 0.61084 < r < 0.61084
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 484870229
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.14591 +/- 0.00308756 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.14591 @ 95%CL (1 toyMC)
median expected limit: r < 1.14591 @ 95%CL (1 toyMC)
   68% expected band : 1.14591 < r < 1.14591
   95% expected band : 1.14591 < r < 1.14591
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 854422986
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.777788 +/- 0.00319164 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.777788 @ 95%CL (1 toyMC)
median expected limit: r < 0.777788 @ 95%CL (1 toyMC)
   68% expected band : 0.777788 < r < 0.777788
   95% expected band : 0.777788 < r < 0.777788
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1078936363
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.689198 +/- 0.00366945 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 0.689198 @ 95%CL (1 toyMC)
median expected limit: r < 0.689198 @ 95%CL (1 toyMC)
   68% expected band : 0.689198 < r < 0.689198
   95% expected band : 0.689198 < r < 0.689198
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2098837785
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.738099 +/- 0.00342692 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.738099 @ 95%CL (1 toyMC)
median expected limit: r < 0.738099 @ 95%CL (1 toyMC)
   68% expected band : 0.738099 < r < 0.738099
   95% expected band : 0.738099 < r < 0.738099
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1952826116
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.960756 +/- 0.00424045 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.960756 @ 95%CL (1 toyMC)
median expected limit: r < 0.960756 @ 95%CL (1 toyMC)
   68% expected band : 0.960756 < r < 0.960756
   95% expected band : 0.960756 < r < 0.960756
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2057352309
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.723568 +/- 0.00360074 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 0.723568 @ 95%CL (1 toyMC)
median expected limit: r < 0.723568 @ 95%CL (1 toyMC)
   68% expected band : 0.723568 < r < 0.723568
   95% expected band : 0.723568 < r < 0.723568
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -53058890
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02198 +/- 0.00310564 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.02198 @ 95%CL (1 toyMC)
median expected limit: r < 1.02198 @ 95%CL (1 toyMC)
   68% expected band : 1.02198 < r < 1.02198
   95% expected band : 1.02198 < r < 1.02198
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -97635366
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.618044 +/- 0.00311429 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.618044 @ 95%CL (1 toyMC)
median expected limit: r < 0.618044 @ 95%CL (1 toyMC)
   68% expected band : 0.618044 < r < 0.618044
   95% expected band : 0.618044 < r < 0.618044
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 327961370
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09985 +/- 0.00335744 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.09985 @ 95%CL (1 toyMC)
median expected limit: r < 1.09985 @ 95%CL (1 toyMC)
   68% expected band : 1.09985 < r < 1.09985
   95% expected band : 1.09985 < r < 1.09985
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1254301548
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.595778 +/- 0.00286703 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 0.595778 @ 95%CL (1 toyMC)
median expected limit: r < 0.595778 @ 95%CL (1 toyMC)
   68% expected band : 0.595778 < r < 0.595778
   95% expected band : 0.595778 < r < 0.595778
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine28.MarkovChainMC.mH28.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH28.-10372892.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH28.-1078936363.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH28.-1095127755.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH28.-1115052032.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH28.-1254301548.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH28.-1267700098.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH28.-1291537731.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH28.-130797369.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH28.-1309609439.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH28.-1402585802.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH28.-1539278169.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH28.-155312791.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH28.-1571633207.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH28.-1580829093.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH28.-1594868741.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH28.-1610530716.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH28.-1658170343.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH28.-1692041807.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH28.-1707338547.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH28.-1716969995.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH28.-1723756397.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH28.-1816785419.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH28.-1918548126.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH28.-1950748970.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH28.-1952826116.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH28.-1975668745.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH28.-1997465409.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH28.-2039006777.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH28.-2069914422.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH28.-2072896642.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH28.-2098837785.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH28.-2104389288.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH28.-2120140541.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH28.-309165945.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH28.-374575940.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH28.-389938520.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH28.-415994052.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH28.-425877569.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH28.-480552307.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH28.-53058890.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH28.-536569128.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH28.-565521084.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH28.-600790032.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH28.-603831887.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH28.-641048564.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH28.-74055101.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH28.-755589267.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH28.-778009603.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH28.-785847230.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH28.-793367351.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH28.-794203356.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH28.-807766409.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH28.-811301451.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH28.-89288306.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH28.-951845383.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH28.-973392492.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH28.-97635366.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH28.-978508313.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH28.1055329679.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH28.1093234455.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH28.1116766385.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH28.1244230578.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH28.1268184165.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH28.1368834113.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH28.142484048.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH28.1527661752.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH28.1544063226.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH28.1590957800.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH28.1598590877.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH28.1604245660.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH28.1667882150.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH28.169520424.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH28.1778241112.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH28.185236681.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH28.1952557310.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH28.1999756216.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH28.2057352309.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH28.2086552497.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH28.2099164779.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH28.236054176.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH28.277417162.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH28.285573939.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH28.327961370.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH28.370734633.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH28.430647035.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH28.461540264.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH28.484870229.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH28.505784161.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH28.513956820.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH28.561406723.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH28.57522929.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH28.587208006.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH28.682071379.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH28.754849179.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH28.839278556.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH28.854422986.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH28.910823587.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH28.926302597.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH28.930438108.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH28.991860511.root
hadd Target path: higgsCombine28.MarkovChainMC.mH28.root:/
hadd Target path: higgsCombine28.MarkovChainMC.mH28.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2098702080
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96778 +/- 0.00493626 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.96778 @ 95%CL (1 toyMC)
median expected limit: r < 1.96778 @ 95%CL (1 toyMC)
   68% expected band : 1.96778 < r < 1.96778
   95% expected band : 1.96778 < r < 1.96778
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -245285639
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.949569 +/- 0.00413963 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.949569 @ 95%CL (1 toyMC)
median expected limit: r < 0.949569 @ 95%CL (1 toyMC)
   68% expected band : 0.949569 < r < 0.949569
   95% expected band : 0.949569 < r < 0.949569
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 845891407
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36795 +/- 0.00419066 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.36795 @ 95%CL (1 toyMC)
median expected limit: r < 1.36795 @ 95%CL (1 toyMC)
   68% expected band : 1.36795 < r < 1.36795
   95% expected band : 1.36795 < r < 1.36795
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -703125654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.32943 +/- 0.00354682 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.32943 @ 95%CL (1 toyMC)
median expected limit: r < 2.32943 @ 95%CL (1 toyMC)
   68% expected band : 2.32943 < r < 2.32943
   95% expected band : 2.32943 < r < 2.32943
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1489640087
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97768 +/- 0.00444574 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.97768 @ 95%CL (1 toyMC)
median expected limit: r < 1.97768 @ 95%CL (1 toyMC)
   68% expected band : 1.97768 < r < 1.97768
   95% expected band : 1.97768 < r < 1.97768
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1982795369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.994049 +/- 0.00312078 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 0.994049 @ 95%CL (1 toyMC)
median expected limit: r < 0.994049 @ 95%CL (1 toyMC)
   68% expected band : 0.994049 < r < 0.994049
   95% expected band : 0.994049 < r < 0.994049
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1111443205
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.92427 +/- 0.00521024 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.92427 @ 95%CL (1 toyMC)
median expected limit: r < 1.92427 @ 95%CL (1 toyMC)
   68% expected band : 1.92427 < r < 1.92427
   95% expected band : 1.92427 < r < 1.92427
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1132506804
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.12537 +/- 0.00452857 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.12537 @ 95%CL (1 toyMC)
median expected limit: r < 1.12537 @ 95%CL (1 toyMC)
   68% expected band : 1.12537 < r < 1.12537
   95% expected band : 1.12537 < r < 1.12537
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1437035666
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.00971 +/- 0.00363645 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.00971 @ 95%CL (1 toyMC)
median expected limit: r < 1.00971 @ 95%CL (1 toyMC)
   68% expected band : 1.00971 < r < 1.00971
   95% expected band : 1.00971 < r < 1.00971
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 475273443
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.09573 +/- 0.00402019 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 1.09573 @ 95%CL (1 toyMC)
median expected limit: r < 1.09573 @ 95%CL (1 toyMC)
   68% expected band : 1.09573 < r < 1.09573
   95% expected band : 1.09573 < r < 1.09573
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1504080079
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.902576 +/- 0.00417502 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 0.902576 @ 95%CL (1 toyMC)
median expected limit: r < 0.902576 @ 95%CL (1 toyMC)
   68% expected band : 0.902576 < r < 0.902576
   95% expected band : 0.902576 < r < 0.902576
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1628846089
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.900839 +/- 0.00385167 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.900839 @ 95%CL (1 toyMC)
median expected limit: r < 0.900839 @ 95%CL (1 toyMC)
   68% expected band : 0.900839 < r < 0.900839
   95% expected band : 0.900839 < r < 0.900839
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -438359863
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.957174 +/- 0.00315275 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.957174 @ 95%CL (1 toyMC)
median expected limit: r < 0.957174 @ 95%CL (1 toyMC)
   68% expected band : 0.957174 < r < 0.957174
   95% expected band : 0.957174 < r < 0.957174
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -733510338
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45689 +/- 0.00450982 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 2.45689 @ 95%CL (1 toyMC)
median expected limit: r < 2.45689 @ 95%CL (1 toyMC)
   68% expected band : 2.45689 < r < 2.45689
   95% expected band : 2.45689 < r < 2.45689
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 135091044
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78934 +/- 0.00389519 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.78934 @ 95%CL (1 toyMC)
median expected limit: r < 1.78934 @ 95%CL (1 toyMC)
   68% expected band : 1.78934 < r < 1.78934
   95% expected band : 1.78934 < r < 1.78934
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 22784812
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.60757 +/- 0.00395719 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.60757 @ 95%CL (1 toyMC)
median expected limit: r < 2.60757 @ 95%CL (1 toyMC)
   68% expected band : 2.60757 < r < 2.60757
   95% expected band : 2.60757 < r < 2.60757
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 78076875
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.66106 +/- 0.00327516 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 2.66106 @ 95%CL (1 toyMC)
median expected limit: r < 2.66106 @ 95%CL (1 toyMC)
   68% expected band : 2.66106 < r < 2.66106
   95% expected band : 2.66106 < r < 2.66106
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 76663639
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.35843 +/- 0.00507012 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.67 min (real)
mean   expected limit: r < 1.35843 @ 95%CL (1 toyMC)
median expected limit: r < 1.35843 @ 95%CL (1 toyMC)
   68% expected band : 1.35843 < r < 1.35843
   95% expected band : 1.35843 < r < 1.35843
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -787125639
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.936899 +/- 0.00324484 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.936899 @ 95%CL (1 toyMC)
median expected limit: r < 0.936899 @ 95%CL (1 toyMC)
   68% expected band : 0.936899 < r < 0.936899
   95% expected band : 0.936899 < r < 0.936899
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1409534178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.940319 +/- 0.00298318 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 0.940319 @ 95%CL (1 toyMC)
median expected limit: r < 0.940319 @ 95%CL (1 toyMC)
   68% expected band : 0.940319 < r < 0.940319
   95% expected band : 0.940319 < r < 0.940319
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1113017096
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82295 +/- 0.00485826 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.82295 @ 95%CL (1 toyMC)
median expected limit: r < 1.82295 @ 95%CL (1 toyMC)
   68% expected band : 1.82295 < r < 1.82295
   95% expected band : 1.82295 < r < 1.82295
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1969263141
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05162 +/- 0.00392096 @ 95% CL (100 tries)
Done in 1.62 min (cpu), 1.63 min (real)
mean   expected limit: r < 1.05162 @ 95%CL (1 toyMC)
median expected limit: r < 1.05162 @ 95%CL (1 toyMC)
   68% expected band : 1.05162 < r < 1.05162
   95% expected band : 1.05162 < r < 1.05162
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1747710686
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.59917 +/- 0.00496022 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.59917 @ 95%CL (1 toyMC)
median expected limit: r < 2.59917 @ 95%CL (1 toyMC)
   68% expected band : 2.59917 < r < 2.59917
   95% expected band : 2.59917 < r < 2.59917
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1605150977
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.897862 +/- 0.00326667 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.897862 @ 95%CL (1 toyMC)
median expected limit: r < 0.897862 @ 95%CL (1 toyMC)
   68% expected band : 0.897862 < r < 0.897862
   95% expected band : 0.897862 < r < 0.897862
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -187832369
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.925727 +/- 0.00363755 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 0.925727 @ 95%CL (1 toyMC)
median expected limit: r < 0.925727 @ 95%CL (1 toyMC)
   68% expected band : 0.925727 < r < 0.925727
   95% expected band : 0.925727 < r < 0.925727
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2013676631
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08114 +/- 0.0035582 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.08114 @ 95%CL (1 toyMC)
median expected limit: r < 1.08114 @ 95%CL (1 toyMC)
   68% expected band : 1.08114 < r < 1.08114
   95% expected band : 1.08114 < r < 1.08114
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1628453638
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.01955 +/- 0.00337527 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.01955 @ 95%CL (1 toyMC)
median expected limit: r < 1.01955 @ 95%CL (1 toyMC)
   68% expected band : 1.01955 < r < 1.01955
   95% expected band : 1.01955 < r < 1.01955
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1325450232
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.01241 +/- 0.00397659 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 2.01241 @ 95%CL (1 toyMC)
median expected limit: r < 2.01241 @ 95%CL (1 toyMC)
   68% expected band : 2.01241 < r < 2.01241
   95% expected band : 2.01241 < r < 2.01241
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 147894404
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.53464 +/- 0.00348927 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.53464 @ 95%CL (1 toyMC)
median expected limit: r < 1.53464 @ 95%CL (1 toyMC)
   68% expected band : 1.53464 < r < 1.53464
   95% expected band : 1.53464 < r < 1.53464
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1093408991
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.439 +/- 0.00382129 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.439 @ 95%CL (1 toyMC)
median expected limit: r < 1.439 @ 95%CL (1 toyMC)
   68% expected band : 1.439 < r < 1.439
   95% expected band : 1.439 < r < 1.439
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1401560386
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.39308 +/- 0.00480024 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 1.39308 @ 95%CL (1 toyMC)
median expected limit: r < 1.39308 @ 95%CL (1 toyMC)
   68% expected band : 1.39308 < r < 1.39308
   95% expected band : 1.39308 < r < 1.39308
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -670037344
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.51162 +/- 0.00397622 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.51162 @ 95%CL (1 toyMC)
median expected limit: r < 1.51162 @ 95%CL (1 toyMC)
   68% expected band : 1.51162 < r < 1.51162
   95% expected band : 1.51162 < r < 1.51162
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2062824216
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68162 +/- 0.0045901 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.68162 @ 95%CL (1 toyMC)
median expected limit: r < 1.68162 @ 95%CL (1 toyMC)
   68% expected band : 1.68162 < r < 1.68162
   95% expected band : 1.68162 < r < 1.68162
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 667818753
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.998863 +/- 0.00411479 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.70 min (real)
mean   expected limit: r < 0.998863 @ 95%CL (1 toyMC)
median expected limit: r < 0.998863 @ 95%CL (1 toyMC)
   68% expected band : 0.998863 < r < 0.998863
   95% expected band : 0.998863 < r < 0.998863
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 614909709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.80966 +/- 0.00472965 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.80966 @ 95%CL (1 toyMC)
median expected limit: r < 1.80966 @ 95%CL (1 toyMC)
   68% expected band : 1.80966 < r < 1.80966
   95% expected band : 1.80966 < r < 1.80966
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -358532178
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83338 +/- 0.00382211 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 1.83338 @ 95%CL (1 toyMC)
median expected limit: r < 1.83338 @ 95%CL (1 toyMC)
   68% expected band : 1.83338 < r < 1.83338
   95% expected band : 1.83338 < r < 1.83338
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1037994362
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.82543 +/- 0.00390355 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 1.82543 @ 95%CL (1 toyMC)
median expected limit: r < 1.82543 @ 95%CL (1 toyMC)
   68% expected band : 1.82543 < r < 1.82543
   95% expected band : 1.82543 < r < 1.82543
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1288323041
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.728321 +/- 0.00309052 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 0.728321 @ 95%CL (1 toyMC)
median expected limit: r < 0.728321 @ 95%CL (1 toyMC)
   68% expected band : 0.728321 < r < 0.728321
   95% expected band : 0.728321 < r < 0.728321
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1176505432
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.61155 +/- 0.00448336 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.61155 @ 95%CL (1 toyMC)
median expected limit: r < 1.61155 @ 95%CL (1 toyMC)
   68% expected band : 1.61155 < r < 1.61155
   95% expected band : 1.61155 < r < 1.61155
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1160793083
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.08184 +/- 0.00300513 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.08184 @ 95%CL (1 toyMC)
median expected limit: r < 1.08184 @ 95%CL (1 toyMC)
   68% expected band : 1.08184 < r < 1.08184
   95% expected band : 1.08184 < r < 1.08184
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 815202843
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10132 +/- 0.00349699 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 1.10132 @ 95%CL (1 toyMC)
median expected limit: r < 1.10132 @ 95%CL (1 toyMC)
   68% expected band : 1.10132 < r < 1.10132
   95% expected band : 1.10132 < r < 1.10132
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 859473707
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.933497 +/- 0.00319581 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.933497 @ 95%CL (1 toyMC)
median expected limit: r < 0.933497 @ 95%CL (1 toyMC)
   68% expected band : 0.933497 < r < 0.933497
   95% expected band : 0.933497 < r < 0.933497
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -469320583
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25298 +/- 0.00408307 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 1.25298 @ 95%CL (1 toyMC)
median expected limit: r < 1.25298 @ 95%CL (1 toyMC)
   68% expected band : 1.25298 < r < 1.25298
   95% expected band : 1.25298 < r < 1.25298
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1050797987
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.57159 +/- 0.00469504 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 1.57159 @ 95%CL (1 toyMC)
median expected limit: r < 1.57159 @ 95%CL (1 toyMC)
   68% expected band : 1.57159 < r < 1.57159
   95% expected band : 1.57159 < r < 1.57159
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 815750554
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.992042 +/- 0.004413 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.66 min (real)
mean   expected limit: r < 0.992042 @ 95%CL (1 toyMC)
median expected limit: r < 0.992042 @ 95%CL (1 toyMC)
   68% expected band : 0.992042 < r < 0.992042
   95% expected band : 0.992042 < r < 0.992042
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1586351711
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20083 +/- 0.00435514 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.20083 @ 95%CL (1 toyMC)
median expected limit: r < 1.20083 @ 95%CL (1 toyMC)
   68% expected band : 1.20083 < r < 1.20083
   95% expected band : 1.20083 < r < 1.20083
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2032567253
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.83089 +/- 0.0029308 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.83089 @ 95%CL (1 toyMC)
median expected limit: r < 1.83089 @ 95%CL (1 toyMC)
   68% expected band : 1.83089 < r < 1.83089
   95% expected band : 1.83089 < r < 1.83089
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 690639782
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.03833 +/- 0.00411637 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 1.03833 @ 95%CL (1 toyMC)
median expected limit: r < 1.03833 @ 95%CL (1 toyMC)
   68% expected band : 1.03833 < r < 1.03833
   95% expected band : 1.03833 < r < 1.03833
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1531288187
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.01615 +/- 0.00550879 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.68 min (real)
mean   expected limit: r < 2.01615 @ 95%CL (1 toyMC)
median expected limit: r < 2.01615 @ 95%CL (1 toyMC)
   68% expected band : 2.01615 < r < 2.01615
   95% expected band : 2.01615 < r < 2.01615
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -416452682
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.02394 +/- 0.00436492 @ 95% CL (100 tries)
Done in 1.63 min (cpu), 1.63 min (real)
mean   expected limit: r < 1.02394 @ 95%CL (1 toyMC)
median expected limit: r < 1.02394 @ 95%CL (1 toyMC)
   68% expected band : 1.02394 < r < 1.02394
   95% expected band : 1.02394 < r < 1.02394
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 480658110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.0477 +/- 0.00399345 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 1.0477 @ 95%CL (1 toyMC)
median expected limit: r < 1.0477 @ 95%CL (1 toyMC)
   68% expected band : 1.0477 < r < 1.0477
   95% expected band : 1.0477 < r < 1.0477
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2004555636
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.71684 +/- 0.00373279 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.71684 @ 95%CL (1 toyMC)
median expected limit: r < 0.71684 @ 95%CL (1 toyMC)
   68% expected band : 0.71684 < r < 0.71684
   95% expected band : 0.71684 < r < 0.71684
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1065717495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.24095 +/- 0.00341166 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.24095 @ 95%CL (1 toyMC)
median expected limit: r < 1.24095 @ 95%CL (1 toyMC)
   68% expected band : 1.24095 < r < 1.24095
   95% expected band : 1.24095 < r < 1.24095
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1396226870
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.1328 +/- 0.00319632 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.1328 @ 95%CL (1 toyMC)
median expected limit: r < 1.1328 @ 95%CL (1 toyMC)
   68% expected band : 1.1328 < r < 1.1328
   95% expected band : 1.1328 < r < 1.1328
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1178282382
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.987937 +/- 0.00384153 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.987937 @ 95%CL (1 toyMC)
median expected limit: r < 0.987937 @ 95%CL (1 toyMC)
   68% expected band : 0.987937 < r < 0.987937
   95% expected band : 0.987937 < r < 0.987937
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1819607168
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.73794 +/- 0.00471753 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.83 min (real)
mean   expected limit: r < 1.73794 @ 95%CL (1 toyMC)
median expected limit: r < 1.73794 @ 95%CL (1 toyMC)
   68% expected band : 1.73794 < r < 1.73794
   95% expected band : 1.73794 < r < 1.73794
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1616751897
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.815753 +/- 0.00331324 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 0.815753 @ 95%CL (1 toyMC)
median expected limit: r < 0.815753 @ 95%CL (1 toyMC)
   68% expected band : 0.815753 < r < 0.815753
   95% expected band : 0.815753 < r < 0.815753
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1075946115
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.11713 +/- 0.00366533 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 1.11713 @ 95%CL (1 toyMC)
median expected limit: r < 1.11713 @ 95%CL (1 toyMC)
   68% expected band : 1.11713 < r < 1.11713
   95% expected band : 1.11713 < r < 1.11713
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1561407249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.45966 +/- 0.00382963 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 1.45966 @ 95%CL (1 toyMC)
median expected limit: r < 1.45966 @ 95%CL (1 toyMC)
   68% expected band : 1.45966 < r < 1.45966
   95% expected band : 1.45966 < r < 1.45966
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1615158582
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2307 +/- 0.00401815 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 1.2307 @ 95%CL (1 toyMC)
median expected limit: r < 1.2307 @ 95%CL (1 toyMC)
   68% expected band : 1.2307 < r < 1.2307
   95% expected band : 1.2307 < r < 1.2307
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 453483539
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.680043 +/- 0.00298573 @ 95% CL (100 tries)
Done in 1.63 min (cpu), 1.63 min (real)
mean   expected limit: r < 0.680043 @ 95%CL (1 toyMC)
median expected limit: r < 0.680043 @ 95%CL (1 toyMC)
   68% expected band : 0.680043 < r < 0.680043
   95% expected band : 0.680043 < r < 0.680043
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -673158520
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10742 +/- 0.0045032 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.10742 @ 95%CL (1 toyMC)
median expected limit: r < 2.10742 @ 95%CL (1 toyMC)
   68% expected band : 2.10742 < r < 2.10742
   95% expected band : 2.10742 < r < 2.10742
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1974837530
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.37957 +/- 0.00458573 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.37957 @ 95%CL (1 toyMC)
median expected limit: r < 1.37957 @ 95%CL (1 toyMC)
   68% expected band : 1.37957 < r < 1.37957
   95% expected band : 1.37957 < r < 1.37957
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2133085155
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86881 +/- 0.00443644 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 1.86881 @ 95%CL (1 toyMC)
median expected limit: r < 1.86881 @ 95%CL (1 toyMC)
   68% expected band : 1.86881 < r < 1.86881
   95% expected band : 1.86881 < r < 1.86881
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2098567908
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.65816 +/- 0.00401019 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.65816 @ 95%CL (1 toyMC)
median expected limit: r < 1.65816 @ 95%CL (1 toyMC)
   68% expected band : 1.65816 < r < 1.65816
   95% expected band : 1.65816 < r < 1.65816
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2137652637
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.973017 +/- 0.00387553 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.973017 @ 95%CL (1 toyMC)
median expected limit: r < 0.973017 @ 95%CL (1 toyMC)
   68% expected band : 0.973017 < r < 0.973017
   95% expected band : 0.973017 < r < 0.973017
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 389073246
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.242 +/- 0.00439315 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.242 @ 95%CL (1 toyMC)
median expected limit: r < 1.242 @ 95%CL (1 toyMC)
   68% expected band : 1.242 < r < 1.242
   95% expected band : 1.242 < r < 1.242
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -324041849
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.97011 +/- 0.00615748 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 2.97011 @ 95%CL (1 toyMC)
median expected limit: r < 2.97011 @ 95%CL (1 toyMC)
   68% expected band : 2.97011 < r < 2.97011
   95% expected band : 2.97011 < r < 2.97011
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1121933600
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.02976 +/- 0.00454383 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.72 min (real)
mean   expected limit: r < 2.02976 @ 95%CL (1 toyMC)
median expected limit: r < 2.02976 @ 95%CL (1 toyMC)
   68% expected band : 2.02976 < r < 2.02976
   95% expected band : 2.02976 < r < 2.02976
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1199740046
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.92518 +/- 0.00442645 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 0.92518 @ 95%CL (1 toyMC)
median expected limit: r < 0.92518 @ 95%CL (1 toyMC)
   68% expected band : 0.92518 < r < 0.92518
   95% expected band : 0.92518 < r < 0.92518
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1239509710
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.06372 +/- 0.00351978 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.06372 @ 95%CL (1 toyMC)
median expected limit: r < 1.06372 @ 95%CL (1 toyMC)
   68% expected band : 1.06372 < r < 1.06372
   95% expected band : 1.06372 < r < 1.06372
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1311435626
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.795964 +/- 0.00294121 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.795964 @ 95%CL (1 toyMC)
median expected limit: r < 0.795964 @ 95%CL (1 toyMC)
   68% expected band : 0.795964 < r < 0.795964
   95% expected band : 0.795964 < r < 0.795964
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 807941725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.84725 +/- 0.00338071 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 0.84725 @ 95%CL (1 toyMC)
median expected limit: r < 0.84725 @ 95%CL (1 toyMC)
   68% expected band : 0.84725 < r < 0.84725
   95% expected band : 0.84725 < r < 0.84725
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1517378905
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.10061 +/- 0.00400267 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 1.10061 @ 95%CL (1 toyMC)
median expected limit: r < 1.10061 @ 95%CL (1 toyMC)
   68% expected band : 1.10061 < r < 1.10061
   95% expected band : 1.10061 < r < 1.10061
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -691290755
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56219 +/- 0.00351946 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 1.56219 @ 95%CL (1 toyMC)
median expected limit: r < 1.56219 @ 95%CL (1 toyMC)
   68% expected band : 1.56219 < r < 1.56219
   95% expected band : 1.56219 < r < 1.56219
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2078657042
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.796609 +/- 0.0031591 @ 95% CL (100 tries)
Done in 1.64 min (cpu), 1.64 min (real)
mean   expected limit: r < 0.796609 @ 95%CL (1 toyMC)
median expected limit: r < 0.796609 @ 95%CL (1 toyMC)
   68% expected band : 0.796609 < r < 0.796609
   95% expected band : 0.796609 < r < 0.796609
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2057593920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.854337 +/- 0.0039925 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.69 min (real)
mean   expected limit: r < 0.854337 @ 95%CL (1 toyMC)
median expected limit: r < 0.854337 @ 95%CL (1 toyMC)
   68% expected band : 0.854337 < r < 0.854337
   95% expected band : 0.854337 < r < 0.854337
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2104544780
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.17293 +/- 0.00453505 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.70 min (real)
mean   expected limit: r < 2.17293 @ 95%CL (1 toyMC)
median expected limit: r < 2.17293 @ 95%CL (1 toyMC)
   68% expected band : 2.17293 < r < 2.17293
   95% expected band : 2.17293 < r < 2.17293
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -369423093
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34933 +/- 0.0031525 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.34933 @ 95%CL (1 toyMC)
median expected limit: r < 1.34933 @ 95%CL (1 toyMC)
   68% expected band : 1.34933 < r < 1.34933
   95% expected band : 1.34933 < r < 1.34933
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 55857151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.954248 +/- 0.0033924 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.67 min (real)
mean   expected limit: r < 0.954248 @ 95%CL (1 toyMC)
median expected limit: r < 0.954248 @ 95%CL (1 toyMC)
   68% expected band : 0.954248 < r < 0.954248
   95% expected band : 0.954248 < r < 0.954248
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 785800514
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41283 +/- 0.00336861 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.41283 @ 95%CL (1 toyMC)
median expected limit: r < 1.41283 @ 95%CL (1 toyMC)
   68% expected band : 1.41283 < r < 1.41283
   95% expected band : 1.41283 < r < 1.41283
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 199317097
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.97818 +/- 0.0033742 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.97818 @ 95%CL (1 toyMC)
median expected limit: r < 1.97818 @ 95%CL (1 toyMC)
   68% expected band : 1.97818 < r < 1.97818
   95% expected band : 1.97818 < r < 1.97818
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -557812180
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.96857 +/- 0.00517537 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.96857 @ 95%CL (1 toyMC)
median expected limit: r < 1.96857 @ 95%CL (1 toyMC)
   68% expected band : 1.96857 < r < 1.96857
   95% expected band : 1.96857 < r < 1.96857
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1259844746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.15806 +/- 0.00346795 @ 95% CL (100 tries)
Done in 1.62 min (cpu), 1.62 min (real)
mean   expected limit: r < 1.15806 @ 95%CL (1 toyMC)
median expected limit: r < 1.15806 @ 95%CL (1 toyMC)
   68% expected band : 1.15806 < r < 1.15806
   95% expected band : 1.15806 < r < 1.15806
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1732754546
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76035 +/- 0.00400167 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.76035 @ 95%CL (1 toyMC)
median expected limit: r < 1.76035 @ 95%CL (1 toyMC)
   68% expected band : 1.76035 < r < 1.76035
   95% expected band : 1.76035 < r < 1.76035
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -673825314
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.76502 +/- 0.00424034 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.76502 @ 95%CL (1 toyMC)
median expected limit: r < 1.76502 @ 95%CL (1 toyMC)
   68% expected band : 1.76502 < r < 1.76502
   95% expected band : 1.76502 < r < 1.76502
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1482868133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.825187 +/- 0.00312609 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 0.825187 @ 95%CL (1 toyMC)
median expected limit: r < 0.825187 @ 95%CL (1 toyMC)
   68% expected band : 0.825187 < r < 0.825187
   95% expected band : 0.825187 < r < 0.825187
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -835298597
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56656 +/- 0.00444129 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 1.56656 @ 95%CL (1 toyMC)
median expected limit: r < 1.56656 @ 95%CL (1 toyMC)
   68% expected band : 1.56656 < r < 1.56656
   95% expected band : 1.56656 < r < 1.56656
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 627475926
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.62049 +/- 0.00493714 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.62049 @ 95%CL (1 toyMC)
median expected limit: r < 1.62049 @ 95%CL (1 toyMC)
   68% expected band : 1.62049 < r < 1.62049
   95% expected band : 1.62049 < r < 1.62049
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1917582966
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46993 +/- 0.00593569 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 2.46993 @ 95%CL (1 toyMC)
median expected limit: r < 2.46993 @ 95%CL (1 toyMC)
   68% expected band : 2.46993 < r < 2.46993
   95% expected band : 2.46993 < r < 2.46993
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1437110074
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10972 +/- 0.00455266 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.10972 @ 95%CL (1 toyMC)
median expected limit: r < 2.10972 @ 95%CL (1 toyMC)
   68% expected band : 2.10972 < r < 2.10972
   95% expected band : 2.10972 < r < 2.10972
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -886240190
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50521 +/- 0.00380705 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 1.50521 @ 95%CL (1 toyMC)
median expected limit: r < 1.50521 @ 95%CL (1 toyMC)
   68% expected band : 1.50521 < r < 1.50521
   95% expected band : 1.50521 < r < 1.50521
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -906485545
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.19943 +/- 0.0044725 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.19943 @ 95%CL (1 toyMC)
median expected limit: r < 1.19943 @ 95%CL (1 toyMC)
   68% expected band : 1.19943 < r < 1.19943
   95% expected band : 1.19943 < r < 1.19943
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1710061801
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 0.823115 +/- 0.00307665 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 0.823115 @ 95%CL (1 toyMC)
median expected limit: r < 0.823115 @ 95%CL (1 toyMC)
   68% expected band : 0.823115 < r < 0.823115
   95% expected band : 0.823115 < r < 0.823115
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1149704976
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.33825 +/- 0.00397926 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.33825 @ 95%CL (1 toyMC)
median expected limit: r < 1.33825 @ 95%CL (1 toyMC)
   68% expected band : 1.33825 < r < 1.33825
   95% expected band : 1.33825 < r < 1.33825
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1930364133
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.20225 +/- 0.00418679 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 1.20225 @ 95%CL (1 toyMC)
median expected limit: r < 1.20225 @ 95%CL (1 toyMC)
   68% expected band : 1.20225 < r < 1.20225
   95% expected band : 1.20225 < r < 1.20225
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1022872599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.32442 +/- 0.0041842 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.32442 @ 95%CL (1 toyMC)
median expected limit: r < 1.32442 @ 95%CL (1 toyMC)
   68% expected band : 1.32442 < r < 1.32442
   95% expected band : 1.32442 < r < 1.32442
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 847069859
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.05457 +/- 0.00363865 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.05457 @ 95%CL (1 toyMC)
median expected limit: r < 1.05457 @ 95%CL (1 toyMC)
   68% expected band : 1.05457 < r < 1.05457
   95% expected band : 1.05457 < r < 1.05457
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1794883415
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.25344 +/- 0.00359779 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.25344 @ 95%CL (1 toyMC)
median expected limit: r < 1.25344 @ 95%CL (1 toyMC)
   68% expected band : 1.25344 < r < 1.25344
   95% expected band : 1.25344 < r < 1.25344
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1426794488
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50299 +/- 0.00309009 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 1.50299 @ 95%CL (1 toyMC)
median expected limit: r < 1.50299 @ 95%CL (1 toyMC)
   68% expected band : 1.50299 < r < 1.50299
   95% expected band : 1.50299 < r < 1.50299
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine32.MarkovChainMC.mH32.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH32.-1022872599.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH32.-1050797987.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH32.-1113017096.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH32.-1121933600.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH32.-1132506804.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH32.-1239509710.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH32.-1259844746.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH32.-1288323041.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH32.-1396226870.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH32.-1426794488.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH32.-1437035666.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH32.-1489640087.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH32.-1517378905.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH32.-1531288187.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH32.-1561407249.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH32.-1586351711.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH32.-1616751897.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH32.-1732754546.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH32.-1819607168.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH32.-187832369.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH32.-1917582966.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH32.-1969263141.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH32.-1974837530.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH32.-1982795369.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH32.-2062824216.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH32.-2098567908.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH32.-2098702080.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH32.-2104544780.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH32.-2133085155.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH32.-2137652637.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH32.-245285639.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH32.-324041849.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH32.-358532178.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH32.-369423093.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH32.-416452682.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH32.-438359863.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH32.-469320583.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH32.-557812180.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH32.-670037344.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH32.-673158520.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH32.-673825314.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH32.-691290755.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH32.-703125654.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH32.-733510338.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH32.-787125639.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH32.-835298597.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH32.-886240190.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH32.-906485545.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH32.1037994362.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH32.1065717495.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH32.1075946115.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH32.1093408991.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH32.1111443205.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH32.1149704976.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH32.1160793083.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH32.1176505432.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH32.1178282382.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH32.1199740046.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH32.1311435626.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH32.1325450232.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH32.135091044.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH32.1401560386.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH32.1409534178.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH32.1437110074.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH32.147894404.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH32.1482868133.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH32.1504080079.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH32.1605150977.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH32.1615158582.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH32.1628453638.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH32.1628846089.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH32.1710061801.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH32.1747710686.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH32.1794883415.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH32.1930364133.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH32.199317097.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH32.2004555636.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH32.2013676631.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH32.2032567253.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH32.2057593920.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH32.2078657042.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH32.22784812.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH32.389073246.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH32.453483539.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH32.475273443.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH32.480658110.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH32.55857151.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH32.614909709.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH32.627475926.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH32.667818753.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH32.690639782.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH32.76663639.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH32.78076875.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH32.785800514.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH32.807941725.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH32.815202843.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH32.815750554.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH32.845891407.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH32.847069859.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH32.859473707.root
hadd Target path: higgsCombine32.MarkovChainMC.mH32.root:/
hadd Target path: higgsCombine32.MarkovChainMC.mH32.root:/toys
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1335356850
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.74681 +/- 0.00436058 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 2.74681 @ 95%CL (1 toyMC)
median expected limit: r < 2.74681 @ 95%CL (1 toyMC)
   68% expected band : 2.74681 < r < 2.74681
   95% expected band : 2.74681 < r < 2.74681
>>>> Finished computing CI MCMC with Lambda = 1
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2091391104
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.67909 +/- 0.00573528 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 1.67909 @ 95%CL (1 toyMC)
median expected limit: r < 1.67909 @ 95%CL (1 toyMC)
   68% expected band : 1.67909 < r < 1.67909
   95% expected band : 1.67909 < r < 1.67909
>>>> Finished computing CI MCMC with Lambda = 2
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -284770634
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70418 +/- 0.0040737 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.70418 @ 95%CL (1 toyMC)
median expected limit: r < 1.70418 @ 95%CL (1 toyMC)
   68% expected band : 1.70418 < r < 1.70418
   95% expected band : 1.70418 < r < 1.70418
>>>> Finished computing CI MCMC with Lambda = 3
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 785070302
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.61652 +/- 0.00684255 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 3.61652 @ 95%CL (1 toyMC)
median expected limit: r < 3.61652 @ 95%CL (1 toyMC)
   68% expected band : 3.61652 < r < 3.61652
   95% expected band : 3.61652 < r < 3.61652
>>>> Finished computing CI MCMC with Lambda = 4
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -638587312
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.3578 +/- 0.00514939 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 4.3578 @ 95%CL (1 toyMC)
median expected limit: r < 4.3578 @ 95%CL (1 toyMC)
   68% expected band : 4.3578 < r < 4.3578
   95% expected band : 4.3578 < r < 4.3578
>>>> Finished computing CI MCMC with Lambda = 5
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 976285540
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.25235 +/- 0.00607469 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 3.25235 @ 95%CL (1 toyMC)
median expected limit: r < 3.25235 @ 95%CL (1 toyMC)
   68% expected band : 3.25235 < r < 3.25235
   95% expected band : 3.25235 < r < 3.25235
>>>> Finished computing CI MCMC with Lambda = 6
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1530041263
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 6.13824 +/- 0.00714368 @ 95% CL (100 tries)
Done in 1.88 min (cpu), 1.88 min (real)
mean   expected limit: r < 6.13824 @ 95%CL (1 toyMC)
median expected limit: r < 6.13824 @ 95%CL (1 toyMC)
   68% expected band : 6.13824 < r < 6.13824
   95% expected band : 6.13824 < r < 6.13824
>>>> Finished computing CI MCMC with Lambda = 7
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 28166406
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.05454 +/- 0.00407139 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 3.05454 @ 95%CL (1 toyMC)
median expected limit: r < 3.05454 @ 95%CL (1 toyMC)
   68% expected band : 3.05454 < r < 3.05454
   95% expected band : 3.05454 < r < 3.05454
>>>> Finished computing CI MCMC with Lambda = 8
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1502521814
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.09097 +/- 0.00593512 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.09097 @ 95%CL (1 toyMC)
median expected limit: r < 2.09097 @ 95%CL (1 toyMC)
   68% expected band : 2.09097 < r < 2.09097
   95% expected band : 2.09097 < r < 2.09097
>>>> Finished computing CI MCMC with Lambda = 9
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2059858395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.37919 +/- 0.00515926 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 2.37919 @ 95%CL (1 toyMC)
median expected limit: r < 2.37919 @ 95%CL (1 toyMC)
   68% expected band : 2.37919 < r < 2.37919
   95% expected band : 2.37919 < r < 2.37919
>>>> Finished computing CI MCMC with Lambda = 10
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -825977705
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.86265 +/- 0.00473055 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 2.86265 @ 95%CL (1 toyMC)
median expected limit: r < 2.86265 @ 95%CL (1 toyMC)
   68% expected band : 2.86265 < r < 2.86265
   95% expected band : 2.86265 < r < 2.86265
>>>> Finished computing CI MCMC with Lambda = 11
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1322781789
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.16028 +/- 0.00496045 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.16028 @ 95%CL (1 toyMC)
median expected limit: r < 2.16028 @ 95%CL (1 toyMC)
   68% expected band : 2.16028 < r < 2.16028
   95% expected band : 2.16028 < r < 2.16028
>>>> Finished computing CI MCMC with Lambda = 12
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 425387091
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.65767 +/- 0.00556356 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 2.65767 @ 95%CL (1 toyMC)
median expected limit: r < 2.65767 @ 95%CL (1 toyMC)
   68% expected band : 2.65767 < r < 2.65767
   95% expected band : 2.65767 < r < 2.65767
>>>> Finished computing CI MCMC with Lambda = 13
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1602750152
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91514 +/- 0.00418886 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.91514 @ 95%CL (1 toyMC)
median expected limit: r < 1.91514 @ 95%CL (1 toyMC)
   68% expected band : 1.91514 < r < 1.91514
   95% expected band : 1.91514 < r < 1.91514
>>>> Finished computing CI MCMC with Lambda = 14
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1335344114
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.18767 +/- 0.00514256 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.18767 @ 95%CL (1 toyMC)
median expected limit: r < 2.18767 @ 95%CL (1 toyMC)
   68% expected band : 2.18767 < r < 2.18767
   95% expected band : 2.18767 < r < 2.18767
>>>> Finished computing CI MCMC with Lambda = 15
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 329706580
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.08691 +/- 0.00510315 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 2.08691 @ 95%CL (1 toyMC)
median expected limit: r < 2.08691 @ 95%CL (1 toyMC)
   68% expected band : 2.08691 < r < 2.08691
   95% expected band : 2.08691 < r < 2.08691
>>>> Finished computing CI MCMC with Lambda = 16
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1499565916
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45664 +/- 0.00425799 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.70 min (real)
mean   expected limit: r < 2.45664 @ 95%CL (1 toyMC)
median expected limit: r < 2.45664 @ 95%CL (1 toyMC)
   68% expected band : 2.45664 < r < 2.45664
   95% expected band : 2.45664 < r < 2.45664
>>>> Finished computing CI MCMC with Lambda = 17
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -450342221
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.90706 +/- 0.00551974 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 1.90706 @ 95%CL (1 toyMC)
median expected limit: r < 1.90706 @ 95%CL (1 toyMC)
   68% expected band : 1.90706 < r < 1.90706
   95% expected band : 1.90706 < r < 1.90706
>>>> Finished computing CI MCMC with Lambda = 18
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2125520799
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88476 +/- 0.00524893 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.88476 @ 95%CL (1 toyMC)
median expected limit: r < 1.88476 @ 95%CL (1 toyMC)
   68% expected band : 1.88476 < r < 1.88476
   95% expected band : 1.88476 < r < 1.88476
>>>> Finished computing CI MCMC with Lambda = 19
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1580148617
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.332 +/- 0.00422369 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.332 @ 95%CL (1 toyMC)
median expected limit: r < 1.332 @ 95%CL (1 toyMC)
   68% expected band : 1.332 < r < 1.332
   95% expected band : 1.332 < r < 1.332
>>>> Finished computing CI MCMC with Lambda = 20
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1852584749
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.49797 +/- 0.00541246 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 1.49797 @ 95%CL (1 toyMC)
median expected limit: r < 1.49797 @ 95%CL (1 toyMC)
   68% expected band : 1.49797 < r < 1.49797
   95% expected band : 1.49797 < r < 1.49797
>>>> Finished computing CI MCMC with Lambda = 21
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1227408578
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.62797 +/- 0.0037094 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.62797 @ 95%CL (1 toyMC)
median expected limit: r < 1.62797 @ 95%CL (1 toyMC)
   68% expected band : 1.62797 < r < 1.62797
   95% expected band : 1.62797 < r < 1.62797
>>>> Finished computing CI MCMC with Lambda = 22
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1204213427
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.68191 +/- 0.00475848 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.68191 @ 95%CL (1 toyMC)
median expected limit: r < 1.68191 @ 95%CL (1 toyMC)
   68% expected band : 1.68191 < r < 1.68191
   95% expected band : 1.68191 < r < 1.68191
>>>> Finished computing CI MCMC with Lambda = 23
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 434689774
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.21387 +/- 0.00405622 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.21387 @ 95%CL (1 toyMC)
median expected limit: r < 1.21387 @ 95%CL (1 toyMC)
   68% expected band : 1.21387 < r < 1.21387
   95% expected band : 1.21387 < r < 1.21387
>>>> Finished computing CI MCMC with Lambda = 24
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1427738356
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.9851 +/- 0.00617374 @ 95% CL (100 tries)
Done in 1.83 min (cpu), 1.83 min (real)
mean   expected limit: r < 2.9851 @ 95%CL (1 toyMC)
median expected limit: r < 2.9851 @ 95%CL (1 toyMC)
   68% expected band : 2.9851 < r < 2.9851
   95% expected band : 2.9851 < r < 2.9851
>>>> Finished computing CI MCMC with Lambda = 25
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 138502308
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.2787 +/- 0.00387637 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.2787 @ 95%CL (1 toyMC)
median expected limit: r < 1.2787 @ 95%CL (1 toyMC)
   68% expected band : 1.2787 < r < 1.2787
   95% expected band : 1.2787 < r < 1.2787
>>>> Finished computing CI MCMC with Lambda = 26
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1475429003
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10342 +/- 0.00567789 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.10342 @ 95%CL (1 toyMC)
median expected limit: r < 2.10342 @ 95%CL (1 toyMC)
   68% expected band : 2.10342 < r < 2.10342
   95% expected band : 2.10342 < r < 2.10342
>>>> Finished computing CI MCMC with Lambda = 27
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1017899546
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10677 +/- 0.00437605 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 2.10677 @ 95%CL (1 toyMC)
median expected limit: r < 2.10677 @ 95%CL (1 toyMC)
   68% expected band : 2.10677 < r < 2.10677
   95% expected band : 2.10677 < r < 2.10677
>>>> Finished computing CI MCMC with Lambda = 28
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1625446249
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.56883 +/- 0.00515936 @ 95% CL (100 tries)
Done in 1.85 min (cpu), 1.85 min (real)
mean   expected limit: r < 3.56883 @ 95%CL (1 toyMC)
median expected limit: r < 3.56883 @ 95%CL (1 toyMC)
   68% expected band : 3.56883 < r < 3.56883
   95% expected band : 3.56883 < r < 3.56883
>>>> Finished computing CI MCMC with Lambda = 29
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1878054654
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.2247 +/- 0.00589443 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 2.2247 @ 95%CL (1 toyMC)
median expected limit: r < 2.2247 @ 95%CL (1 toyMC)
   68% expected band : 2.2247 < r < 2.2247
   95% expected band : 2.2247 < r < 2.2247
>>>> Finished computing CI MCMC with Lambda = 30
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -905835293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.95189 +/- 0.0062473 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 2.95189 @ 95%CL (1 toyMC)
median expected limit: r < 2.95189 @ 95%CL (1 toyMC)
   68% expected band : 2.95189 < r < 2.95189
   95% expected band : 2.95189 < r < 2.95189
>>>> Finished computing CI MCMC with Lambda = 31
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 170399302
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.89379 +/- 0.00606612 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.89379 @ 95%CL (1 toyMC)
median expected limit: r < 2.89379 @ 95%CL (1 toyMC)
   68% expected band : 2.89379 < r < 2.89379
   95% expected band : 2.89379 < r < 2.89379
>>>> Finished computing CI MCMC with Lambda = 32
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1587384838
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.11516 +/- 0.00518899 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 3.11516 @ 95%CL (1 toyMC)
median expected limit: r < 3.11516 @ 95%CL (1 toyMC)
   68% expected band : 3.11516 < r < 3.11516
   95% expected band : 3.11516 < r < 3.11516
>>>> Finished computing CI MCMC with Lambda = 33
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 41905031
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.25045 +/- 0.00580862 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 2.25045 @ 95%CL (1 toyMC)
median expected limit: r < 2.25045 @ 95%CL (1 toyMC)
   68% expected band : 2.25045 < r < 2.25045
   95% expected band : 2.25045 < r < 2.25045
>>>> Finished computing CI MCMC with Lambda = 34
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 800556738
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.78778 +/- 0.00421017 @ 95% CL (100 tries)
Done in 1.65 min (cpu), 1.65 min (real)
mean   expected limit: r < 1.78778 @ 95%CL (1 toyMC)
median expected limit: r < 1.78778 @ 95%CL (1 toyMC)
   68% expected band : 1.78778 < r < 1.78778
   95% expected band : 1.78778 < r < 1.78778
>>>> Finished computing CI MCMC with Lambda = 35
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -850190182
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.39525 +/- 0.0053232 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 2.39525 @ 95%CL (1 toyMC)
median expected limit: r < 2.39525 @ 95%CL (1 toyMC)
   68% expected band : 2.39525 < r < 2.39525
   95% expected band : 2.39525 < r < 2.39525
>>>> Finished computing CI MCMC with Lambda = 36
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 969219346
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46147 +/- 0.00591857 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 2.46147 @ 95%CL (1 toyMC)
median expected limit: r < 2.46147 @ 95%CL (1 toyMC)
   68% expected band : 2.46147 < r < 2.46147
   95% expected band : 2.46147 < r < 2.46147
>>>> Finished computing CI MCMC with Lambda = 37
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1124323586
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.37552 +/- 0.00706939 @ 95% CL (100 tries)
Done in 1.84 min (cpu), 1.84 min (real)
mean   expected limit: r < 4.37552 @ 95%CL (1 toyMC)
median expected limit: r < 4.37552 @ 95%CL (1 toyMC)
   68% expected band : 4.37552 < r < 4.37552
   95% expected band : 4.37552 < r < 4.37552
>>>> Finished computing CI MCMC with Lambda = 38
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2138355564
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54738 +/- 0.00549292 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.72 min (real)
mean   expected limit: r < 2.54738 @ 95%CL (1 toyMC)
median expected limit: r < 2.54738 @ 95%CL (1 toyMC)
   68% expected band : 2.54738 < r < 2.54738
   95% expected band : 2.54738 < r < 2.54738
>>>> Finished computing CI MCMC with Lambda = 39
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1248953293
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.45151 +/- 0.00472614 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 2.45151 @ 95%CL (1 toyMC)
median expected limit: r < 2.45151 @ 95%CL (1 toyMC)
   68% expected band : 2.45151 < r < 2.45151
   95% expected band : 2.45151 < r < 2.45151
>>>> Finished computing CI MCMC with Lambda = 40
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1940743792
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99212 +/- 0.00407752 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.99212 @ 95%CL (1 toyMC)
median expected limit: r < 1.99212 @ 95%CL (1 toyMC)
   68% expected band : 1.99212 < r < 1.99212
   95% expected band : 1.99212 < r < 1.99212
>>>> Finished computing CI MCMC with Lambda = 41
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -595690725
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.50902 +/- 0.00473008 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.50902 @ 95%CL (1 toyMC)
median expected limit: r < 1.50902 @ 95%CL (1 toyMC)
   68% expected band : 1.50902 < r < 1.50902
   95% expected band : 1.50902 < r < 1.50902
>>>> Finished computing CI MCMC with Lambda = 42
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -448405374
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.39416 +/- 0.00444768 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 3.39416 @ 95%CL (1 toyMC)
median expected limit: r < 3.39416 @ 95%CL (1 toyMC)
   68% expected band : 3.39416 < r < 3.39416
   95% expected band : 3.39416 < r < 3.39416
>>>> Finished computing CI MCMC with Lambda = 43
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2100035123
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.05867 +/- 0.00517347 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 3.05867 @ 95%CL (1 toyMC)
median expected limit: r < 3.05867 @ 95%CL (1 toyMC)
   68% expected band : 3.05867 < r < 3.05867
   95% expected band : 3.05867 < r < 3.05867
>>>> Finished computing CI MCMC with Lambda = 44
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1767785551
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.46476 +/- 0.00545806 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.46476 @ 95%CL (1 toyMC)
median expected limit: r < 2.46476 @ 95%CL (1 toyMC)
   68% expected band : 2.46476 < r < 2.46476
   95% expected band : 2.46476 < r < 2.46476
>>>> Finished computing CI MCMC with Lambda = 45
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1426494200
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.19506 +/- 0.00563485 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.19506 @ 95%CL (1 toyMC)
median expected limit: r < 2.19506 @ 95%CL (1 toyMC)
   68% expected band : 2.19506 < r < 2.19506
   95% expected band : 2.19506 < r < 2.19506
>>>> Finished computing CI MCMC with Lambda = 46
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 836786600
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.22589 +/- 0.00438678 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.22589 @ 95%CL (1 toyMC)
median expected limit: r < 2.22589 @ 95%CL (1 toyMC)
   68% expected band : 2.22589 < r < 2.22589
   95% expected band : 2.22589 < r < 2.22589
>>>> Finished computing CI MCMC with Lambda = 47
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 724463235
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.35139 +/- 0.00588595 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 4.35139 @ 95%CL (1 toyMC)
median expected limit: r < 4.35139 @ 95%CL (1 toyMC)
   68% expected band : 4.35139 < r < 4.35139
   95% expected band : 4.35139 < r < 4.35139
>>>> Finished computing CI MCMC with Lambda = 48
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1579413550
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.17965 +/- 0.00548413 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 3.17965 @ 95%CL (1 toyMC)
median expected limit: r < 3.17965 @ 95%CL (1 toyMC)
   68% expected band : 3.17965 < r < 3.17965
   95% expected band : 3.17965 < r < 3.17965
>>>> Finished computing CI MCMC with Lambda = 49
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1208265973
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.10246 +/- 0.00610739 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.67 min (real)
mean   expected limit: r < 2.10246 @ 95%CL (1 toyMC)
median expected limit: r < 2.10246 @ 95%CL (1 toyMC)
   68% expected band : 2.10246 < r < 2.10246
   95% expected band : 2.10246 < r < 2.10246
>>>> Finished computing CI MCMC with Lambda = 50
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1973089610
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.23527 +/- 0.00566179 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 2.23527 @ 95%CL (1 toyMC)
median expected limit: r < 2.23527 @ 95%CL (1 toyMC)
   68% expected band : 2.23527 < r < 2.23527
   95% expected band : 2.23527 < r < 2.23527
>>>> Finished computing CI MCMC with Lambda = 51
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1266186557
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56621 +/- 0.00416118 @ 95% CL (100 tries)
Done in 1.63 min (cpu), 1.63 min (real)
mean   expected limit: r < 1.56621 @ 95%CL (1 toyMC)
median expected limit: r < 1.56621 @ 95%CL (1 toyMC)
   68% expected band : 1.56621 < r < 1.56621
   95% expected band : 1.56621 < r < 1.56621
>>>> Finished computing CI MCMC with Lambda = 52
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2033036014
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.62776 +/- 0.00680271 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 3.62776 @ 95%CL (1 toyMC)
median expected limit: r < 3.62776 @ 95%CL (1 toyMC)
   68% expected band : 3.62776 < r < 3.62776
   95% expected band : 3.62776 < r < 3.62776
>>>> Finished computing CI MCMC with Lambda = 53
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1969797129
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.56856 +/- 0.00565237 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.70 min (real)
mean   expected limit: r < 4.56856 @ 95%CL (1 toyMC)
median expected limit: r < 4.56856 @ 95%CL (1 toyMC)
   68% expected band : 4.56856 < r < 4.56856
   95% expected band : 4.56856 < r < 4.56856
>>>> Finished computing CI MCMC with Lambda = 54
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -700768181
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.42705 +/- 0.00638598 @ 95% CL (100 tries)
Done in 1.67 min (cpu), 1.68 min (real)
mean   expected limit: r < 2.42705 @ 95%CL (1 toyMC)
median expected limit: r < 2.42705 @ 95%CL (1 toyMC)
   68% expected band : 2.42705 < r < 2.42705
   95% expected band : 2.42705 < r < 2.42705
>>>> Finished computing CI MCMC with Lambda = 55
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1271907992
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.53143 +/- 0.00580187 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.79 min (real)
mean   expected limit: r < 2.53143 @ 95%CL (1 toyMC)
median expected limit: r < 2.53143 @ 95%CL (1 toyMC)
   68% expected band : 2.53143 < r < 2.53143
   95% expected band : 2.53143 < r < 2.53143
>>>> Finished computing CI MCMC with Lambda = 56
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1070701486
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.73007 +/- 0.00591688 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 4.73007 @ 95%CL (1 toyMC)
median expected limit: r < 4.73007 @ 95%CL (1 toyMC)
   68% expected band : 4.73007 < r < 4.73007
   95% expected band : 4.73007 < r < 4.73007
>>>> Finished computing CI MCMC with Lambda = 57
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1353595821
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.36795 +/- 0.00433952 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.70 min (real)
mean   expected limit: r < 1.36795 @ 95%CL (1 toyMC)
median expected limit: r < 1.36795 @ 95%CL (1 toyMC)
   68% expected band : 1.36795 < r < 1.36795
   95% expected band : 1.36795 < r < 1.36795
>>>> Finished computing CI MCMC with Lambda = 58
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -866125558
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.22678 +/- 0.00390746 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.22678 @ 95%CL (1 toyMC)
median expected limit: r < 1.22678 @ 95%CL (1 toyMC)
   68% expected band : 1.22678 < r < 1.22678
   95% expected band : 1.22678 < r < 1.22678
>>>> Finished computing CI MCMC with Lambda = 59
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 604900174
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.0051 +/- 0.00572838 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 3.0051 @ 95%CL (1 toyMC)
median expected limit: r < 3.0051 @ 95%CL (1 toyMC)
   68% expected band : 3.0051 < r < 3.0051
   95% expected band : 3.0051 < r < 3.0051
>>>> Finished computing CI MCMC with Lambda = 60
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 55055599
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.20577 +/- 0.00548373 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.67 min (real)
mean   expected limit: r < 2.20577 @ 95%CL (1 toyMC)
median expected limit: r < 2.20577 @ 95%CL (1 toyMC)
   68% expected band : 2.20577 < r < 2.20577
   95% expected band : 2.20577 < r < 2.20577
>>>> Finished computing CI MCMC with Lambda = 61
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1984804709
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62765 +/- 0.0054134 @ 95% CL (100 tries)
Done in 1.71 min (cpu), 1.71 min (real)
mean   expected limit: r < 2.62765 @ 95%CL (1 toyMC)
median expected limit: r < 2.62765 @ 95%CL (1 toyMC)
   68% expected band : 2.62765 < r < 2.62765
   95% expected band : 2.62765 < r < 2.62765
>>>> Finished computing CI MCMC with Lambda = 62
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2145138177
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.7738 +/- 0.00589796 @ 95% CL (100 tries)
Done in 1.78 min (cpu), 1.78 min (real)
mean   expected limit: r < 2.7738 @ 95%CL (1 toyMC)
median expected limit: r < 2.7738 @ 95%CL (1 toyMC)
   68% expected band : 2.7738 < r < 2.7738
   95% expected band : 2.7738 < r < 2.7738
>>>> Finished computing CI MCMC with Lambda = 63
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1841585770
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.91311 +/- 0.00507058 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 1.91311 @ 95%CL (1 toyMC)
median expected limit: r < 1.91311 @ 95%CL (1 toyMC)
   68% expected band : 1.91311 < r < 1.91311
   95% expected band : 1.91311 < r < 1.91311
>>>> Finished computing CI MCMC with Lambda = 64
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1483621761
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.1761 +/- 0.00417057 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 2.1761 @ 95%CL (1 toyMC)
median expected limit: r < 2.1761 @ 95%CL (1 toyMC)
   68% expected band : 2.1761 < r < 2.1761
   95% expected band : 2.1761 < r < 2.1761
>>>> Finished computing CI MCMC with Lambda = 65
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -422764151
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.54383 +/- 0.0050781 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 2.54383 @ 95%CL (1 toyMC)
median expected limit: r < 2.54383 @ 95%CL (1 toyMC)
   68% expected band : 2.54383 < r < 2.54383
   95% expected band : 2.54383 < r < 2.54383
>>>> Finished computing CI MCMC with Lambda = 66
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -755721137
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.28077 +/- 0.00446948 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 2.28077 @ 95%CL (1 toyMC)
median expected limit: r < 2.28077 @ 95%CL (1 toyMC)
   68% expected band : 2.28077 < r < 2.28077
   95% expected band : 2.28077 < r < 2.28077
>>>> Finished computing CI MCMC with Lambda = 67
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -71055125
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.62261 +/- 0.00558766 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.71 min (real)
mean   expected limit: r < 2.62261 @ 95%CL (1 toyMC)
median expected limit: r < 2.62261 @ 95%CL (1 toyMC)
   68% expected band : 2.62261 < r < 2.62261
   95% expected band : 2.62261 < r < 2.62261
>>>> Finished computing CI MCMC with Lambda = 68
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1021103495
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.16916 +/- 0.00372856 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 1.16916 @ 95%CL (1 toyMC)
median expected limit: r < 1.16916 @ 95%CL (1 toyMC)
   68% expected band : 1.16916 < r < 1.16916
   95% expected band : 1.16916 < r < 1.16916
>>>> Finished computing CI MCMC with Lambda = 69
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 686603838
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.99466 +/- 0.00531373 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.99466 @ 95%CL (1 toyMC)
median expected limit: r < 1.99466 @ 95%CL (1 toyMC)
   68% expected band : 1.99466 < r < 1.99466
   95% expected band : 1.99466 < r < 1.99466
>>>> Finished computing CI MCMC with Lambda = 70
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1298205206
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.88049 +/- 0.00528701 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.88049 @ 95%CL (1 toyMC)
median expected limit: r < 1.88049 @ 95%CL (1 toyMC)
   68% expected band : 1.88049 < r < 1.88049
   95% expected band : 1.88049 < r < 1.88049
>>>> Finished computing CI MCMC with Lambda = 71
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 214031650
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.87933 +/- 0.00500566 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 2.87933 @ 95%CL (1 toyMC)
median expected limit: r < 2.87933 @ 95%CL (1 toyMC)
   68% expected band : 2.87933 < r < 2.87933
   95% expected band : 2.87933 < r < 2.87933
>>>> Finished computing CI MCMC with Lambda = 72
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2094325395
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.8729 +/- 0.0061163 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.8729 @ 95%CL (1 toyMC)
median expected limit: r < 2.8729 @ 95%CL (1 toyMC)
   68% expected band : 2.8729 < r < 2.8729
   95% expected band : 2.8729 < r < 2.8729
>>>> Finished computing CI MCMC with Lambda = 73
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -400604841
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.75323 +/- 0.00523564 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.75323 @ 95%CL (1 toyMC)
median expected limit: r < 1.75323 @ 95%CL (1 toyMC)
   68% expected band : 1.75323 < r < 1.75323
   95% expected band : 1.75323 < r < 1.75323
>>>> Finished computing CI MCMC with Lambda = 74
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1618569886
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.41185 +/- 0.00453045 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.69 min (real)
mean   expected limit: r < 1.41185 @ 95%CL (1 toyMC)
median expected limit: r < 1.41185 @ 95%CL (1 toyMC)
   68% expected band : 1.41185 < r < 1.41185
   95% expected band : 1.41185 < r < 1.41185
>>>> Finished computing CI MCMC with Lambda = 75
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1818074100
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.09486 +/- 0.00319947 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.09486 @ 95%CL (1 toyMC)
median expected limit: r < 2.09486 @ 95%CL (1 toyMC)
   68% expected band : 2.09486 < r < 2.09486
   95% expected band : 2.09486 < r < 2.09486
>>>> Finished computing CI MCMC with Lambda = 76
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 2005683920
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.87775 +/- 0.00576011 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 3.87775 @ 95%CL (1 toyMC)
median expected limit: r < 3.87775 @ 95%CL (1 toyMC)
   68% expected band : 3.87775 < r < 3.87775
   95% expected band : 3.87775 < r < 3.87775
>>>> Finished computing CI MCMC with Lambda = 77
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -388064
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.91483 +/- 0.0046525 @ 95% CL (100 tries)
Done in 1.70 min (cpu), 1.70 min (real)
mean   expected limit: r < 2.91483 @ 95%CL (1 toyMC)
median expected limit: r < 2.91483 @ 95%CL (1 toyMC)
   68% expected band : 2.91483 < r < 2.91483
   95% expected band : 2.91483 < r < 2.91483
>>>> Finished computing CI MCMC with Lambda = 78
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -516876809
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.6305 +/- 0.00550033 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.6305 @ 95%CL (1 toyMC)
median expected limit: r < 1.6305 @ 95%CL (1 toyMC)
   68% expected band : 1.6305 < r < 1.6305
   95% expected band : 1.6305 < r < 1.6305
>>>> Finished computing CI MCMC with Lambda = 79
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 125790431
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.84331 +/- 0.00469723 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 1.84331 @ 95%CL (1 toyMC)
median expected limit: r < 1.84331 @ 95%CL (1 toyMC)
   68% expected band : 1.84331 < r < 1.84331
   95% expected band : 1.84331 < r < 1.84331
>>>> Finished computing CI MCMC with Lambda = 80
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1286615394
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.88549 +/- 0.00514157 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 2.88549 @ 95%CL (1 toyMC)
median expected limit: r < 2.88549 @ 95%CL (1 toyMC)
   68% expected band : 2.88549 < r < 2.88549
   95% expected band : 2.88549 < r < 2.88549
>>>> Finished computing CI MCMC with Lambda = 81
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1356713743
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 4.60301 +/- 0.00600305 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.79 min (real)
mean   expected limit: r < 4.60301 @ 95%CL (1 toyMC)
median expected limit: r < 4.60301 @ 95%CL (1 toyMC)
   68% expected band : 4.60301 < r < 4.60301
   95% expected band : 4.60301 < r < 4.60301
>>>> Finished computing CI MCMC with Lambda = 82
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1745856425
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.49312 +/- 0.00568953 @ 95% CL (100 tries)
Done in 1.80 min (cpu), 1.80 min (real)
mean   expected limit: r < 2.49312 @ 95%CL (1 toyMC)
median expected limit: r < 2.49312 @ 95%CL (1 toyMC)
   68% expected band : 2.49312 < r < 2.49312
   95% expected band : 2.49312 < r < 2.49312
>>>> Finished computing CI MCMC with Lambda = 83
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1480336421
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.76256 +/- 0.00738492 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 3.76256 @ 95%CL (1 toyMC)
median expected limit: r < 3.76256 @ 95%CL (1 toyMC)
   68% expected band : 3.76256 < r < 3.76256
   95% expected band : 3.76256 < r < 3.76256
>>>> Finished computing CI MCMC with Lambda = 84
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1466267274
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.34429 +/- 0.0040414 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 1.34429 @ 95%CL (1 toyMC)
median expected limit: r < 1.34429 @ 95%CL (1 toyMC)
   68% expected band : 1.34429 < r < 1.34429
   95% expected band : 1.34429 < r < 1.34429
>>>> Finished computing CI MCMC with Lambda = 85
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 354704335
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.98583 +/- 0.00481405 @ 95% CL (100 tries)
Done in 1.73 min (cpu), 1.73 min (real)
mean   expected limit: r < 1.98583 @ 95%CL (1 toyMC)
median expected limit: r < 1.98583 @ 95%CL (1 toyMC)
   68% expected band : 1.98583 < r < 1.98583
   95% expected band : 1.98583 < r < 1.98583
>>>> Finished computing CI MCMC with Lambda = 86
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 244081671
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.64526 +/- 0.00530379 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.74 min (real)
mean   expected limit: r < 2.64526 @ 95%CL (1 toyMC)
median expected limit: r < 2.64526 @ 95%CL (1 toyMC)
   68% expected band : 2.64526 < r < 2.64526
   95% expected band : 2.64526 < r < 2.64526
>>>> Finished computing CI MCMC with Lambda = 87
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1402751516
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.71385 +/- 0.00506419 @ 95% CL (100 tries)
Done in 1.76 min (cpu), 1.76 min (real)
mean   expected limit: r < 2.71385 @ 95%CL (1 toyMC)
median expected limit: r < 2.71385 @ 95%CL (1 toyMC)
   68% expected band : 2.71385 < r < 2.71385
   95% expected band : 2.71385 < r < 2.71385
>>>> Finished computing CI MCMC with Lambda = 88
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -378566016
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.82631 +/- 0.00499761 @ 95% CL (100 tries)
Done in 1.72 min (cpu), 1.73 min (real)
mean   expected limit: r < 2.82631 @ 95%CL (1 toyMC)
median expected limit: r < 2.82631 @ 95%CL (1 toyMC)
   68% expected band : 2.82631 < r < 2.82631
   95% expected band : 2.82631 < r < 2.82631
>>>> Finished computing CI MCMC with Lambda = 89
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1659844852
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.28994 +/- 0.00430707 @ 95% CL (100 tries)
Done in 1.66 min (cpu), 1.66 min (real)
mean   expected limit: r < 1.28994 @ 95%CL (1 toyMC)
median expected limit: r < 1.28994 @ 95%CL (1 toyMC)
   68% expected band : 1.28994 < r < 1.28994
   95% expected band : 1.28994 < r < 1.28994
>>>> Finished computing CI MCMC with Lambda = 90
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2073396270
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.15163 +/- 0.00515004 @ 95% CL (100 tries)
Done in 1.69 min (cpu), 1.69 min (real)
mean   expected limit: r < 2.15163 @ 95%CL (1 toyMC)
median expected limit: r < 2.15163 @ 95%CL (1 toyMC)
   68% expected band : 2.15163 < r < 2.15163
   95% expected band : 2.15163 < r < 2.15163
>>>> Finished computing CI MCMC with Lambda = 91
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -1120530123
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 3.35468 +/- 0.00531715 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.77 min (real)
mean   expected limit: r < 3.35468 @ 95%CL (1 toyMC)
median expected limit: r < 3.35468 @ 95%CL (1 toyMC)
   68% expected band : 3.35468 < r < 3.35468
   95% expected band : 3.35468 < r < 3.35468
>>>> Finished computing CI MCMC with Lambda = 92
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1465370527
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.56064 +/- 0.00472135 @ 95% CL (100 tries)
Done in 1.74 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.56064 @ 95%CL (1 toyMC)
median expected limit: r < 1.56064 @ 95%CL (1 toyMC)
   68% expected band : 1.56064 < r < 1.56064
   95% expected band : 1.56064 < r < 1.56064
>>>> Finished computing CI MCMC with Lambda = 93
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 133078746
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.86149 +/- 0.0057045 @ 95% CL (100 tries)
Done in 1.75 min (cpu), 1.75 min (real)
mean   expected limit: r < 1.86149 @ 95%CL (1 toyMC)
median expected limit: r < 1.86149 @ 95%CL (1 toyMC)
   68% expected band : 1.86149 < r < 1.86149
   95% expected band : 1.86149 < r < 1.86149
>>>> Finished computing CI MCMC with Lambda = 94
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -215802655
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.51142 +/- 0.0049904 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 2.51142 @ 95%CL (1 toyMC)
median expected limit: r < 2.51142 @ 95%CL (1 toyMC)
   68% expected band : 2.51142 < r < 2.51142
   95% expected band : 2.51142 < r < 2.51142
>>>> Finished computing CI MCMC with Lambda = 95
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed 1321750925
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.79146 +/- 0.00502668 @ 95% CL (100 tries)
Done in 1.79 min (cpu), 1.80 min (real)
mean   expected limit: r < 1.79146 @ 95%CL (1 toyMC)
median expected limit: r < 1.79146 @ 95%CL (1 toyMC)
   68% expected band : 1.79146 < r < 1.79146
   95% expected band : 1.79146 < r < 1.79146
>>>> Finished computing CI MCMC with Lambda = 96
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -543536430
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70878 +/- 0.00395512 @ 95% CL (100 tries)
Done in 1.77 min (cpu), 1.78 min (real)
mean   expected limit: r < 1.70878 @ 95%CL (1 toyMC)
median expected limit: r < 1.70878 @ 95%CL (1 toyMC)
   68% expected band : 1.70878 < r < 1.70878
   95% expected band : 1.70878 < r < 1.70878
>>>> Finished computing CI MCMC with Lambda = 97
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -88347110
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.4154 +/- 0.00412794 @ 95% CL (100 tries)
Done in 1.68 min (cpu), 1.68 min (real)
mean   expected limit: r < 1.4154 @ 95%CL (1 toyMC)
median expected limit: r < 1.4154 @ 95%CL (1 toyMC)
   68% expected band : 1.4154 < r < 1.4154
   95% expected band : 1.4154 < r < 1.4154
>>>> Finished computing CI MCMC with Lambda = 98
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -330325589
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 1.70333 +/- 0.00473107 @ 95% CL (100 tries)
Done in 1.81 min (cpu), 1.81 min (real)
mean   expected limit: r < 1.70333 @ 95%CL (1 toyMC)
median expected limit: r < 1.70333 @ 95%CL (1 toyMC)
   68% expected band : 1.70333 < r < 1.70333
   95% expected band : 1.70333 < r < 1.70333
>>>> Finished computing CI MCMC with Lambda = 99
 <<< Combine >>> 
>>> including systematics
>>> method used is MarkovChainMC
>>> Used OpenSSL to get a really random seed -2044545752
Generate toy 1/1

 -- MarkovChainMC -- 
Limit: r < 2.957 +/- 0.00491153 @ 95% CL (100 tries)
Done in 1.82 min (cpu), 1.82 min (real)
mean   expected limit: r < 2.957 @ 95%CL (1 toyMC)
median expected limit: r < 2.957 @ 95%CL (1 toyMC)
   68% expected band : 2.957 < r < 2.957
   95% expected band : 2.957 < r < 2.957
>>>> Finished computing CI MCMC with Lambda = 100
hadd Target file: higgsCombine40.MarkovChainMC.mH40.root
hadd compression setting for all ouput: 1
hadd Source file 1: higgsCombineTest.MarkovChainMC.mH40.-1021103495.root
hadd Source file 2: higgsCombineTest.MarkovChainMC.mH40.-1120530123.root
hadd Source file 3: higgsCombineTest.MarkovChainMC.mH40.-1227408578.root
hadd Source file 4: higgsCombineTest.MarkovChainMC.mH40.-1248953293.root
hadd Source file 5: higgsCombineTest.MarkovChainMC.mH40.-1266186557.root
hadd Source file 6: higgsCombineTest.MarkovChainMC.mH40.-1271907992.root
hadd Source file 7: higgsCombineTest.MarkovChainMC.mH40.-1353595821.root
hadd Source file 8: higgsCombineTest.MarkovChainMC.mH40.-1356713743.root
hadd Source file 9: higgsCombineTest.MarkovChainMC.mH40.-1426494200.root
hadd Source file 10: higgsCombineTest.MarkovChainMC.mH40.-1466267274.root
hadd Source file 11: higgsCombineTest.MarkovChainMC.mH40.-1475429003.root
hadd Source file 12: higgsCombineTest.MarkovChainMC.mH40.-1480336421.root
hadd Source file 13: higgsCombineTest.MarkovChainMC.mH40.-1483621761.root
hadd Source file 14: higgsCombineTest.MarkovChainMC.mH40.-1499565916.root
hadd Source file 15: higgsCombineTest.MarkovChainMC.mH40.-1530041263.root
hadd Source file 16: higgsCombineTest.MarkovChainMC.mH40.-1580148617.root
hadd Source file 17: higgsCombineTest.MarkovChainMC.mH40.-1587384838.root
hadd Source file 18: higgsCombineTest.MarkovChainMC.mH40.-1618569886.root
hadd Source file 19: higgsCombineTest.MarkovChainMC.mH40.-1625446249.root
hadd Source file 20: higgsCombineTest.MarkovChainMC.mH40.-1659844852.root
hadd Source file 21: higgsCombineTest.MarkovChainMC.mH40.-1745856425.root
hadd Source file 22: higgsCombineTest.MarkovChainMC.mH40.-1818074100.root
hadd Source file 23: higgsCombineTest.MarkovChainMC.mH40.-1841585770.root
hadd Source file 24: higgsCombineTest.MarkovChainMC.mH40.-1852584749.root
hadd Source file 25: higgsCombineTest.MarkovChainMC.mH40.-1940743792.root
hadd Source file 26: higgsCombineTest.MarkovChainMC.mH40.-1973089610.root
hadd Source file 27: higgsCombineTest.MarkovChainMC.mH40.-1984804709.root
hadd Source file 28: higgsCombineTest.MarkovChainMC.mH40.-2033036014.root
hadd Source file 29: higgsCombineTest.MarkovChainMC.mH40.-2044545752.root
hadd Source file 30: higgsCombineTest.MarkovChainMC.mH40.-2059858395.root
hadd Source file 31: higgsCombineTest.MarkovChainMC.mH40.-2073396270.root
hadd Source file 32: higgsCombineTest.MarkovChainMC.mH40.-2094325395.root
hadd Source file 33: higgsCombineTest.MarkovChainMC.mH40.-2138355564.root
hadd Source file 34: higgsCombineTest.MarkovChainMC.mH40.-215802655.root
hadd Source file 35: higgsCombineTest.MarkovChainMC.mH40.-284770634.root
hadd Source file 36: higgsCombineTest.MarkovChainMC.mH40.-330325589.root
hadd Source file 37: higgsCombineTest.MarkovChainMC.mH40.-378566016.root
hadd Source file 38: higgsCombineTest.MarkovChainMC.mH40.-388064.root
hadd Source file 39: higgsCombineTest.MarkovChainMC.mH40.-400604841.root
hadd Source file 40: higgsCombineTest.MarkovChainMC.mH40.-422764151.root
hadd Source file 41: higgsCombineTest.MarkovChainMC.mH40.-448405374.root
hadd Source file 42: higgsCombineTest.MarkovChainMC.mH40.-450342221.root
hadd Source file 43: higgsCombineTest.MarkovChainMC.mH40.-516876809.root
hadd Source file 44: higgsCombineTest.MarkovChainMC.mH40.-543536430.root
hadd Source file 45: higgsCombineTest.MarkovChainMC.mH40.-595690725.root
hadd Source file 46: higgsCombineTest.MarkovChainMC.mH40.-638587312.root
hadd Source file 47: higgsCombineTest.MarkovChainMC.mH40.-700768181.root
hadd Source file 48: higgsCombineTest.MarkovChainMC.mH40.-71055125.root
hadd Source file 49: higgsCombineTest.MarkovChainMC.mH40.-755721137.root
hadd Source file 50: higgsCombineTest.MarkovChainMC.mH40.-825977705.root
hadd Source file 51: higgsCombineTest.MarkovChainMC.mH40.-850190182.root
hadd Source file 52: higgsCombineTest.MarkovChainMC.mH40.-866125558.root
hadd Source file 53: higgsCombineTest.MarkovChainMC.mH40.-88347110.root
hadd Source file 54: higgsCombineTest.MarkovChainMC.mH40.-905835293.root
hadd Source file 55: higgsCombineTest.MarkovChainMC.mH40.1017899546.root
hadd Source file 56: higgsCombineTest.MarkovChainMC.mH40.1070701486.root
hadd Source file 57: higgsCombineTest.MarkovChainMC.mH40.1124323586.root
hadd Source file 58: higgsCombineTest.MarkovChainMC.mH40.1204213427.root
hadd Source file 59: higgsCombineTest.MarkovChainMC.mH40.1208265973.root
hadd Source file 60: higgsCombineTest.MarkovChainMC.mH40.125790431.root
hadd Source file 61: higgsCombineTest.MarkovChainMC.mH40.1286615394.root
hadd Source file 62: higgsCombineTest.MarkovChainMC.mH40.1298205206.root
hadd Source file 63: higgsCombineTest.MarkovChainMC.mH40.1321750925.root
hadd Source file 64: higgsCombineTest.MarkovChainMC.mH40.1322781789.root
hadd Source file 65: higgsCombineTest.MarkovChainMC.mH40.133078746.root
hadd Source file 66: higgsCombineTest.MarkovChainMC.mH40.1335344114.root
hadd Source file 67: higgsCombineTest.MarkovChainMC.mH40.1335356850.root
hadd Source file 68: higgsCombineTest.MarkovChainMC.mH40.138502308.root
hadd Source file 69: higgsCombineTest.MarkovChainMC.mH40.1402751516.root
hadd Source file 70: higgsCombineTest.MarkovChainMC.mH40.1427738356.root
hadd Source file 71: higgsCombineTest.MarkovChainMC.mH40.1465370527.root
hadd Source file 72: higgsCombineTest.MarkovChainMC.mH40.1502521814.root
hadd Source file 73: higgsCombineTest.MarkovChainMC.mH40.1579413550.root
hadd Source file 74: higgsCombineTest.MarkovChainMC.mH40.1602750152.root
hadd Source file 75: higgsCombineTest.MarkovChainMC.mH40.170399302.root
hadd Source file 76: higgsCombineTest.MarkovChainMC.mH40.1767785551.root
hadd Source file 77: higgsCombineTest.MarkovChainMC.mH40.1878054654.root
hadd Source file 78: higgsCombineTest.MarkovChainMC.mH40.1969797129.root
hadd Source file 79: higgsCombineTest.MarkovChainMC.mH40.2005683920.root
hadd Source file 80: higgsCombineTest.MarkovChainMC.mH40.2091391104.root
hadd Source file 81: higgsCombineTest.MarkovChainMC.mH40.2100035123.root
hadd Source file 82: higgsCombineTest.MarkovChainMC.mH40.2125520799.root
hadd Source file 83: higgsCombineTest.MarkovChainMC.mH40.214031650.root
hadd Source file 84: higgsCombineTest.MarkovChainMC.mH40.2145138177.root
hadd Source file 85: higgsCombineTest.MarkovChainMC.mH40.244081671.root
hadd Source file 86: higgsCombineTest.MarkovChainMC.mH40.28166406.root
hadd Source file 87: higgsCombineTest.MarkovChainMC.mH40.329706580.root
hadd Source file 88: higgsCombineTest.MarkovChainMC.mH40.354704335.root
hadd Source file 89: higgsCombineTest.MarkovChainMC.mH40.41905031.root
hadd Source file 90: higgsCombineTest.MarkovChainMC.mH40.425387091.root
hadd Source file 91: higgsCombineTest.MarkovChainMC.mH40.434689774.root
hadd Source file 92: higgsCombineTest.MarkovChainMC.mH40.55055599.root
hadd Source file 93: higgsCombineTest.MarkovChainMC.mH40.604900174.root
hadd Source file 94: higgsCombineTest.MarkovChainMC.mH40.686603838.root
hadd Source file 95: higgsCombineTest.MarkovChainMC.mH40.724463235.root
hadd Source file 96: higgsCombineTest.MarkovChainMC.mH40.785070302.root
hadd Source file 97: higgsCombineTest.MarkovChainMC.mH40.800556738.root
hadd Source file 98: higgsCombineTest.MarkovChainMC.mH40.836786600.root
hadd Source file 99: higgsCombineTest.MarkovChainMC.mH40.969219346.root
hadd Source file 100: higgsCombineTest.MarkovChainMC.mH40.976285540.root
hadd Target path: higgsCombine40.MarkovChainMC.mH40.root:/
hadd Target path: higgsCombine40.MarkovChainMC.mH40.root:/toys
